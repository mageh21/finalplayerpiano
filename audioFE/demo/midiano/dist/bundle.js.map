{"version":3,"file":"bundle.js","mappings":"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A,EAAO,GAAGA,OAEPA,CACX,CACA,oBAAI8O,GACA,OAAOlJ,GAAKM,wBAAwBv0C,KAAK4c,SAC7C,CACA,oBAAIwgC,GACA,OAAOnJ,GAAKC,wBAAwBl0C,KAAK4c,SAC7C,CACA,aAAI4yB,GACA,OAAOxvC,KAAK60C,SAAS3yC,KACzB,CACA,aAAIstC,CAAUttC,GACV,MAAM2yC,EAAW70C,KAAK60C,SACtB70C,KAAKy8C,QAAQ5H,EAASzG,OAAQyG,EAASxG,KAAMwG,EAASvG,OAAQpsC,EAClE,CACA,cAAIqtC,GACA,OAAOvvC,KAAK60C,SAASvG,OAAS,EAClC,CACA,cAAIiB,CAAWjB,GACX,MAAMuG,EAAW70C,KAAK60C,SACtB70C,KAAKy8C,QAAQ5H,EAASzG,OAAQyG,EAASxG,KAAMC,EAAQuG,EAAS3yC,MAClE,CACA,QAAAm7C,GACI,OAAOr9C,KAAKqH,KAChB,CACA,SAAIA,GAGA,OAFKrH,KAAK45C,cACN55C,KAAKmd,cACFnd,KAAK06C,MAChB,CACA,QAAA4C,CAASj2C,GAEL,OADArH,KAAKqH,MAAQA,EACNrH,IACX,CACA,SAAIqH,CAAMA,GACDrH,KAAK45C,cACN55C,KAAKmd,cACTnd,KAAK06C,OAASrzC,CAClB,CACA,IAAA8rC,CAAK91B,GAED,OADArd,KAAKqd,EAAIA,EACFrd,IACX,CACA,IAAA+yC,GACI,OAAO/yC,KAAKqd,CAChB,CACA,IAAA21B,GACI,OAAOhzC,KAAKud,CAChB,CACA,IAAA61B,CAAK71B,GAED,OADAvd,KAAKud,EAAIA,EACFvd,IACX,CACA,SAAAu9C,CAAU3C,GAEN,OADA56C,KAAK46C,OAASA,EACP56C,IACX,CACA,SAAAw9C,GACI,OAAOx9C,KAAK46C,MAChB,CACA,SAAA6C,CAAU9C,GAEN,OADA36C,KAAK26C,OAASA,EACP36C,IACX,CACA,SAAA09C,GACI,OAAO19C,KAAK26C,MAChB,CACA,OAAAgD,CAAQj3C,GAEJ,OADA1G,KAAK0G,KAAOA,EACL1G,IACX,CACA,QAAI0G,CAAKA,GACL1G,KAAK45C,cA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","sources":["webpack://midiano/./css/bootstrap.min.css","webpack://midiano/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://midiano/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://midiano/./css/Settings.css","webpack://midiano/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://midiano/./css/Interface.css","webpack://midiano/./css/Inputs.css","webpack://midiano/./node_modules/css-loader/dist/runtime/api.js","webpack://midiano/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://midiano/./css/nano.min.css","webpack://midiano/./node_modules/css-loader/dist/runtime/getUrl.js","webpack://midiano/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://midiano/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://midiano/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://midiano/./css/bootstrap-theme.min.css","webpack://midiano/webpack/bootstrap","webpack://midiano/webpack/runtime/compat get default export","webpack://midiano/webpack/runtime/define property getters","webpack://midiano/webpack/runtime/global","webpack://midiano/webpack/runtime/hasOwnProperty shorthand","webpack://midiano/webpack/runtime/publicPath","webpack://midiano/webpack/runtime/jsonp chunk loading","webpack://midiano/webpack/runtime/nonce","webpack://midiano/./css/bootstrap.min.css?7ce4","webpack://midiano/./css/bootstrap-theme.min.css?37f5","webpack://midiano/./css/nano.min.css?9586","webpack://midiano/./css/Interface.css?91d4","webpack://midiano/./css/Inputs.css?9649","webpack://midiano/./css/Settings.css?4ac3","webpack://midiano/./js/Util.js","webpack://midiano/./js/ui/DomHelper.js","webpack://midiano/./js/data/CONST.js","webpack://midiano/./js/settings/DefaultSettings.js","webpack://midiano/./js/ui/SettingUI.js","webpack://midiano/./js/settings/LocalStorageHandler.js","webpack://midiano/./js/settings/Settings.js","webpack://midiano/./js/Rendering/PianoRender.js","webpack://midiano/./js/Rendering/DebugRender.js","webpack://midiano/./js/Rendering/OverlayRender.js","webpack://midiano/./js/Rendering/NoteParticleRender.js","webpack://midiano/./js/Rendering/PianoParticleRender.js","webpack://midiano/./js/Rendering/NoteRender.js","webpack://midiano/./js/Rendering/SustainRenderer.js","webpack://midiano/./js/Rendering/MarkerRenderer.js","webpack://midiano/./js/Rendering/RenderDimensions.js","webpack://midiano/./js/Rendering/BackgroundRender.js","webpack://midiano/./js/Rendering/MeasureLinesRender.js","webpack://midiano/./js/Rendering/ProgressBarRender.js","webpack://midiano/./js/player/Tracks.js","webpack://midiano/./js/MidiLoader.js","webpack://midiano/./js/Song.js","webpack://midiano/./js/audio/Buffers.js","webpack://midiano/./js/ui/Loader.js","webpack://midiano/./js/SoundfontLoader.js","webpack://midiano/./js/audio/GainNodeController.js","webpack://midiano/./js/audio/AudioNote.js","webpack://midiano/./js/audio/AudioPlayer.js","webpack://midiano/./js/MidiInputHandler.js","webpack://midiano/./js/ui/Notification.js","webpack://midiano/./js/player/Player.js","webpack://midiano/./js/MicInputHandler.js","webpack://midiano/./js/Rendering/InSongTextRenderer.js","webpack://midiano/./node_modules/vexflow/build/esm/src/util.js","webpack://midiano/./node_modules/vexflow/build/esm/src/fraction.js","webpack://midiano/./node_modules/vexflow/build/esm/src/metrics.js","webpack://midiano/./node_modules/vexflow/build/esm/src/boundingbox.js","webpack://midiano/./node_modules/vexflow/build/esm/src/font.js","webpack://midiano/./node_modules/vexflow/build/esm/src/registry.js","webpack://midiano/./node_modules/vexflow/build/esm/src/element.js","webpack://midiano/./node_modules/vexflow/build/esm/src/modifier.js","webpack://midiano/./node_modules/vexflow/build/esm/src/glyphs.js","webpack://midiano/./node_modules/vexflow/build/esm/src/music.js","webpack://midiano/./node_modules/vexflow/build/esm/src/tables.js","webpack://midiano/./node_modules/vexflow/build/esm/src/typeguard.js","webpack://midiano/./node_modules/vexflow/build/esm/src/accidental.js","webpack://midiano/./node_modules/vexflow/build/esm/src/stem.js","webpack://midiano/./node_modules/vexflow/build/esm/src/annotation.js","webpack://midiano/./node_modules/vexflow/build/esm/src/articulation.js","webpack://midiano/./node_modules/vexflow/build/esm/src/rendercontext.js","webpack://midiano/./node_modules/vexflow/build/esm/src/tickable.js","webpack://midiano/./node_modules/vexflow/build/esm/src/note.js","webpack://midiano/./node_modules/vexflow/build/esm/src/stavemodifier.js","webpack://midiano/./node_modules/vexflow/build/esm/src/stavebarline.js","webpack://midiano/./node_modules/vexflow/build/esm/src/barnote.js","webpack://midiano/./node_modules/vexflow/build/esm/src/beam.js","webpack://midiano/./node_modules/vexflow/build/esm/src/bend.js","webpack://midiano/./node_modules/vexflow/build/esm/src/web.js","webpack://midiano/./node_modules/vexflow/build/esm/src/canvascontext.js","webpack://midiano/./node_modules/vexflow/build/esm/src/chordsymbol.js","webpack://midiano/./node_modules/vexflow/build/esm/src/curve.js","webpack://midiano/./node_modules/vexflow/build/esm/src/clef.js","webpack://midiano/./node_modules/vexflow/build/esm/src/clefnote.js","webpack://midiano/./node_modules/vexflow/build/esm/src/tickcontext.js","webpack://midiano/./node_modules/vexflow/build/esm/src/crescendo.js","webpack://midiano/./node_modules/vexflow/build/esm/src/dot.js","webpack://midiano/./node_modules/vexflow/build/esm/src/frethandfinger.js","webpack://midiano/./node_modules/vexflow/build/esm/src/parser.js","webpack://midiano/./node_modules/vexflow/build/esm/src/easyscore.js","webpack://midiano/./node_modules/vexflow/build/esm/src/notehead.js","webpack://midiano/./node_modules/vexflow/build/esm/src/flag.js","webpack://midiano/./node_modules/vexflow/build/esm/src/stemmablenote.js","webpack://midiano/./node_modules/vexflow/build/esm/src/stavenote.js","webpack://midiano/./node_modules/vexflow/build/esm/src/stavetie.js","webpack://midiano/./node_modules/vexflow/build/esm/src/tabtie.js","webpack://midiano/./node_modules/vexflow/build/esm/src/voice.js","webpack://midiano/./node_modules/vexflow/build/esm/src/gracenotegroup.js","webpack://midiano/./node_modules/vexflow/build/esm/src/notesubgroup.js","webpack://midiano/./node_modules/vexflow/build/esm/src/ornament.js","webpack://midiano/./node_modules/vexflow/build/esm/src/parenthesis.js","webpack://midiano/./node_modules/vexflow/build/esm/src/svgcontext.js","webpack://midiano/./node_modules/vexflow/build/esm/src/renderer.js","webpack://midiano/./node_modules/vexflow/build/esm/src/textnote.js","webpack://midiano/./node_modules/vexflow/build/esm/src/stavevolta.js","webpack://midiano/./node_modules/vexflow/build/esm/src/stringnumber.js","webpack://midiano/./node_modules/vexflow/build/esm/src/strokes.js","webpack://midiano/./node_modules/vexflow/build/esm/src/vibrato.js","webpack://midiano/./node_modules/vexflow/build/esm/src/modifiercontext.js","webpack://midiano/./node_modules/vexflow/build/esm/src/keysignature.js","webpack://midiano/./node_modules/vexflow/build/esm/src/staverepetition.js","webpack://midiano/./node_modules/vexflow/build/esm/src/stavesection.js","webpack://midiano/./node_modules/vexflow/build/esm/src/stavetempo.js","webpack://midiano/./node_modules/vexflow/build/esm/src/stavetext.js","webpack://midiano/./node_modules/vexflow/build/esm/src/timesignature.js","webpack://midiano/./node_modules/vexflow/build/esm/src/stave.js","webpack://midiano/./node_modules/vexflow/build/esm/src/staveconnector.js","webpack://midiano/./node_modules/vexflow/build/esm/src/formatter.js","webpack://midiano/./node_modules/vexflow/build/esm/src/ghostnote.js","webpack://midiano/./node_modules/vexflow/build/esm/src/glyphnote.js","webpack://midiano/./node_modules/vexflow/build/esm/src/gracenote.js","webpack://midiano/./node_modules/vexflow/build/esm/src/keysignote.js","webpack://midiano/./node_modules/vexflow/build/esm/src/multimeasurerest.js","webpack://midiano/./node_modules/vexflow/build/esm/src/pedalmarking.js","webpack://midiano/./node_modules/vexflow/build/esm/src/repeatnote.js","webpack://midiano/./node_modules/vexflow/build/esm/src/staveline.js","webpack://midiano/./node_modules/vexflow/build/esm/src/system.js","webpack://midiano/./node_modules/vexflow/build/esm/src/tabnote.js","webpack://midiano/./node_modules/vexflow/build/esm/src/tabstave.js","webpack://midiano/./node_modules/vexflow/build/esm/src/textbracket.js","webpack://midiano/./node_modules/vexflow/build/esm/src/textdynamics.js","webpack://midiano/./node_modules/vexflow/build/esm/src/timesignote.js","webpack://midiano/./node_modules/vexflow/build/esm/src/tuplet.js","webpack://midiano/./node_modules/vexflow/build/esm/src/vibratobracket.js","webpack://midiano/./node_modules/vexflow/build/esm/src/factory.js","webpack://midiano/./node_modules/vexflow/build/esm/src/stavehairpin.js","webpack://midiano/./node_modules/vexflow/build/esm/src/tabslide.js","webpack://midiano/./node_modules/vexflow/build/esm/src/tuning.js","webpack://midiano/./node_modules/vexflow/build/esm/src/vexflow.js","webpack://midiano/./node_modules/vexflow/build/esm/src/version.js","webpack://midiano/./node_modules/vexflow/build/esm/src/gracetabnote.js","webpack://midiano/./node_modules/vexflow/build/esm/src/keymanager.js","webpack://midiano/./node_modules/vexflow/build/esm/src/tremolo.js","webpack://midiano/./node_modules/vexflow/build/esm/src/fonts/academico.js","webpack://midiano/./node_modules/vexflow/build/esm/entry/vexflow.js","webpack://midiano/./node_modules/vexflow/build/esm/src/fonts/bravura.js","webpack://midiano/./node_modules/vexflow/build/esm/src/fonts/academicobold.js","webpack://midiano/./node_modules/vexflow/build/esm/src/fonts/gonville.js","webpack://midiano/./node_modules/vexflow/build/esm/src/fonts/petaluma.js","webpack://midiano/./node_modules/vexflow/build/esm/src/fonts/petalumascript.js","webpack://midiano/./js/Rendering/SheetMusicRender.js","webpack://midiano/./js/Rendering/Render.js","webpack://midiano/./js/ui/ZoomUI.js","webpack://midiano/./js/ui/ElementHighlight.js","webpack://midiano/./js/ui/TrackUI.js","webpack://midiano/./js/player/FileLoader.js","webpack://midiano/./js/ui/SongUI.js","webpack://midiano/./js/ui/UI.js","webpack://midiano/./js/InputListeners.js","webpack://midiano/./js/main.js"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_GET_URL_IMPORT___ from \"../node_modules/css-loader/dist/runtime/getUrl.js\";\nvar ___CSS_LOADER_URL_IMPORT_0___ = new URL(\"../fonts/glyphicons-halflings-regular.eot\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_1___ = new URL(\"../fonts/glyphicons-halflings-regular.woff2\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_2___ = new URL(\"../fonts/glyphicons-halflings-regular.woff\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_3___ = new URL(\"../fonts/glyphicons-halflings-regular.ttf\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_4___ = new URL(\"../fonts/glyphicons-halflings-regular.svg\", import.meta.url);\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);\nvar ___CSS_LOADER_URL_REPLACEMENT_1___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___, { hash: \"?#iefix\" });\nvar ___CSS_LOADER_URL_REPLACEMENT_2___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_1___);\nvar ___CSS_LOADER_URL_REPLACEMENT_3___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_2___);\nvar ___CSS_LOADER_URL_REPLACEMENT_4___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_3___);\nvar ___CSS_LOADER_URL_REPLACEMENT_5___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_4___, { hash: \"#glyphicons_halflingsregular\" });\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `@font-face{font-family:'Glyphicons Halflings';src:url(${___CSS_LOADER_URL_REPLACEMENT_0___});src:url(${___CSS_LOADER_URL_REPLACEMENT_1___}) format('embedded-opentype'),url(${___CSS_LOADER_URL_REPLACEMENT_2___}) format('woff2'),url(${___CSS_LOADER_URL_REPLACEMENT_3___}) format('woff'),url(${___CSS_LOADER_URL_REPLACEMENT_4___}) format('truetype'),url(${___CSS_LOADER_URL_REPLACEMENT_5___}) format('svg')}.glyphicon{position:relative;top:1px;display:inline-block;font-family:'Glyphicons Halflings';font-style:normal;font-weight:400;line-height:1;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.glyphicon-asterisk:before{content:\"\\\\002a\"}.glyphicon-plus:before{content:\"\\\\002b\"}.glyphicon-eur:before,.glyphicon-euro:before{content:\"\\\\20ac\"}.glyphicon-minus:before{content:\"\\\\2212\"}.glyphicon-cloud:before{content:\"\\\\2601\"}.glyphicon-envelope:before{content:\"\\\\2709\"}.glyphicon-pencil:before{content:\"\\\\270f\"}.glyphicon-glass:before{content:\"\\\\e001\"}.glyphicon-music:before{content:\"\\\\e002\"}.glyphicon-search:before{content:\"\\\\e003\"}.glyphicon-heart:before{content:\"\\\\e005\"}.glyphicon-star:before{content:\"\\\\e006\"}.glyphicon-star-empty:before{content:\"\\\\e007\"}.glyphicon-user:before{content:\"\\\\e008\"}.glyphicon-film:before{content:\"\\\\e009\"}.glyphicon-th-large:before{content:\"\\\\e010\"}.glyphicon-th:before{content:\"\\\\e011\"}.glyphicon-th-list:before{content:\"\\\\e012\"}.glyphicon-ok:before{content:\"\\\\e013\"}.glyphicon-remove:before{content:\"\\\\e014\"}.glyphicon-zoom-in:before{content:\"\\\\e015\"}.glyphicon-zoom-out:before{content:\"\\\\e016\"}.glyphicon-off:before{content:\"\\\\e017\"}.glyphicon-signal:before{content:\"\\\\e018\"}.glyphicon-cog:before{content:\"\\\\e019\"}.glyphicon-trash:before{content:\"\\\\e020\"}.glyphicon-home:before{content:\"\\\\e021\"}.glyphicon-file:before{content:\"\\\\e022\"}.glyphicon-time:before{content:\"\\\\e023\"}.glyphicon-road:before{content:\"\\\\e024\"}.glyphicon-download-alt:before{content:\"\\\\e025\"}.glyphicon-download:before{content:\"\\\\e026\"}.glyphicon-upload:before{content:\"\\\\e027\"}.glyphicon-inbox:before{content:\"\\\\e028\"}.glyphicon-play-circle:before{content:\"\\\\e029\"}.glyphicon-repeat:before{content:\"\\\\e030\"}.glyphicon-refresh:before{content:\"\\\\e031\"}.glyphicon-list-alt:before{content:\"\\\\e032\"}.glyphicon-lock:before{content:\"\\\\e033\"}.glyphicon-flag:before{content:\"\\\\e034\"}.glyphicon-headphones:before{content:\"\\\\e035\"}.glyphicon-volume-off:before{content:\"\\\\e036\"}.glyphicon-volume-down:before{content:\"\\\\e037\"}.glyphicon-volume-up:before{content:\"\\\\e038\"}.glyphicon-qrcode:before{content:\"\\\\e039\"}.glyphicon-barcode:before{content:\"\\\\e040\"}.glyphicon-tag:before{content:\"\\\\e041\"}.glyphicon-tags:before{content:\"\\\\e042\"}.glyphicon-book:before{content:\"\\\\e043\"}.glyphicon-bookmark:before{content:\"\\\\e044\"}.glyphicon-print:before{content:\"\\\\e045\"}.glyphicon-camera:before{content:\"\\\\e046\"}.glyphicon-font:before{content:\"\\\\e047\"}.glyphicon-bold:before{content:\"\\\\e048\"}.glyphicon-italic:before{content:\"\\\\e049\"}.glyphicon-text-height:before{content:\"\\\\e050\"}.glyphicon-text-width:before{content:\"\\\\e051\"}.glyphicon-align-left:before{content:\"\\\\e052\"}.glyphicon-align-center:before{content:\"\\\\e053\"}.glyphicon-align-right:before{content:\"\\\\e054\"}.glyphicon-align-justify:before{content:\"\\\\e055\"}.glyphicon-list:before{content:\"\\\\e056\"}.glyphicon-indent-left:before{content:\"\\\\e057\"}.glyphicon-indent-right:before{content:\"\\\\e058\"}.glyphicon-facetime-video:before{content:\"\\\\e059\"}.glyphicon-picture:before{content:\"\\\\e060\"}.glyphicon-map-marker:before{content:\"\\\\e062\"}.glyphicon-adjust:before{content:\"\\\\e063\"}.glyphicon-tint:before{content:\"\\\\e064\"}.glyphicon-edit:before{content:\"\\\\e065\"}.glyphicon-share:before{content:\"\\\\e066\"}.glyphicon-check:before{content:\"\\\\e067\"}.glyphicon-move:before{content:\"\\\\e068\"}.glyphicon-step-backward:before{content:\"\\\\e069\"}.glyphicon-fast-backward:before{content:\"\\\\e070\"}.glyphicon-backward:before{content:\"\\\\e071\"}.glyphicon-play:before{content:\"\\\\e072\"}.glyphicon-pause:before{content:\"\\\\e073\"}.glyphicon-stop:before{content:\"\\\\e074\"}.glyphicon-forward:before{content:\"\\\\e075\"}.glyphicon-fast-forward:before{content:\"\\\\e076\"}.glyphicon-step-forward:before{content:\"\\\\e077\"}.glyphicon-eject:before{content:\"\\\\e078\"}.glyphicon-chevron-left:before{content:\"\\\\e079\"}.glyphicon-chevron-right:before{content:\"\\\\e080\"}.glyphicon-plus-sign:before{content:\"\\\\e081\"}.glyphicon-minus-sign:before{content:\"\\\\e082\"}.glyphicon-remove-sign:before{content:\"\\\\e083\"}.glyphicon-ok-sign:before{content:\"\\\\e084\"}.glyphicon-question-sign:before{content:\"\\\\e085\"}.glyphicon-info-sign:before{content:\"\\\\e086\"}.glyphicon-screenshot:before{content:\"\\\\e087\"}.glyphicon-remove-circle:before{content:\"\\\\e088\"}.glyphicon-ok-circle:before{content:\"\\\\e089\"}.glyphicon-ban-circle:before{content:\"\\\\e090\"}.glyphicon-arrow-left:before{content:\"\\\\e091\"}.glyphicon-arrow-right:before{content:\"\\\\e092\"}.glyphicon-arrow-up:before{content:\"\\\\e093\"}.glyphicon-arrow-down:before{content:\"\\\\e094\"}.glyphicon-share-alt:before{content:\"\\\\e095\"}.glyphicon-resize-full:before{content:\"\\\\e096\"}.glyphicon-resize-small:before{content:\"\\\\e097\"}.glyphicon-exclamation-sign:before{content:\"\\\\e101\"}.glyphicon-gift:before{content:\"\\\\e102\"}.glyphicon-leaf:before{content:\"\\\\e103\"}.glyphicon-fire:before{content:\"\\\\e104\"}.glyphicon-eye-open:before{content:\"\\\\e105\"}.glyphicon-eye-close:before{content:\"\\\\e106\"}.glyphicon-warning-sign:before{content:\"\\\\e107\"}.glyphicon-plane:before{content:\"\\\\e108\"}.glyphicon-calendar:before{content:\"\\\\e109\"}.glyphicon-random:before{content:\"\\\\e110\"}.glyphicon-comment:before{content:\"\\\\e111\"}.glyphicon-magnet:before{content:\"\\\\e112\"}.glyphicon-chevron-up:before{content:\"\\\\e113\"}.glyphicon-chevron-down:before{content:\"\\\\e114\"}.glyphicon-retweet:before{content:\"\\\\e115\"}.glyphicon-shopping-cart:before{content:\"\\\\e116\"}.glyphicon-folder-close:before{content:\"\\\\e117\"}.glyphicon-folder-open:before{content:\"\\\\e118\"}.glyphicon-resize-vertical:before{content:\"\\\\e119\"}.glyphicon-resize-horizontal:before{content:\"\\\\e120\"}.glyphicon-hdd:before{content:\"\\\\e121\"}.glyphicon-bullhorn:before{content:\"\\\\e122\"}.glyphicon-bell:before{content:\"\\\\e123\"}.glyphicon-certificate:before{content:\"\\\\e124\"}.glyphicon-thumbs-up:before{content:\"\\\\e125\"}.glyphicon-thumbs-down:before{content:\"\\\\e126\"}.glyphicon-hand-right:before{content:\"\\\\e127\"}.glyphicon-hand-left:before{content:\"\\\\e128\"}.glyphicon-hand-up:before{content:\"\\\\e129\"}.glyphicon-hand-down:before{content:\"\\\\e130\"}.glyphicon-circle-arrow-right:before{content:\"\\\\e131\"}.glyphicon-circle-arrow-left:before{content:\"\\\\e132\"}.glyphicon-circle-arrow-up:before{content:\"\\\\e133\"}.glyphicon-circle-arrow-down:before{content:\"\\\\e134\"}.glyphicon-globe:before{content:\"\\\\e135\"}.glyphicon-wrench:before{content:\"\\\\e136\"}.glyphicon-tasks:before{content:\"\\\\e137\"}.glyphicon-filter:before{content:\"\\\\e138\"}.glyphicon-briefcase:before{content:\"\\\\e139\"}.glyphicon-fullscreen:before{content:\"\\\\e140\"}.glyphicon-dashboard:before{content:\"\\\\e141\"}.glyphicon-paperclip:before{content:\"\\\\e142\"}.glyphicon-heart-empty:before{content:\"\\\\e143\"}.glyphicon-link:before{content:\"\\\\e144\"}.glyphicon-phone:before{content:\"\\\\e145\"}.glyphicon-pushpin:before{content:\"\\\\e146\"}.glyphicon-usd:before{content:\"\\\\e148\"}.glyphicon-gbp:before{content:\"\\\\e149\"}.glyphicon-sort:before{content:\"\\\\e150\"}.glyphicon-sort-by-alphabet:before{content:\"\\\\e151\"}.glyphicon-sort-by-alphabet-alt:before{content:\"\\\\e152\"}.glyphicon-sort-by-order:before{content:\"\\\\e153\"}.glyphicon-sort-by-order-alt:before{content:\"\\\\e154\"}.glyphicon-sort-by-attributes:before{content:\"\\\\e155\"}.glyphicon-sort-by-attributes-alt:before{content:\"\\\\e156\"}.glyphicon-unchecked:before{content:\"\\\\e157\"}.glyphicon-expand:before{content:\"\\\\e158\"}.glyphicon-collapse-down:before{content:\"\\\\e159\"}.glyphicon-collapse-up:before{content:\"\\\\e160\"}.glyphicon-log-in:before{content:\"\\\\e161\"}.glyphicon-flash:before{content:\"\\\\e162\"}.glyphicon-log-out:before{content:\"\\\\e163\"}.glyphicon-new-window:before{content:\"\\\\e164\"}.glyphicon-record:before{content:\"\\\\e165\"}.glyphicon-save:before{content:\"\\\\e166\"}.glyphicon-open:before{content:\"\\\\e167\"}.glyphicon-saved:before{content:\"\\\\e168\"}.glyphicon-import:before{content:\"\\\\e169\"}.glyphicon-export:before{content:\"\\\\e170\"}.glyphicon-send:before{content:\"\\\\e171\"}.glyphicon-floppy-disk:before{content:\"\\\\e172\"}.glyphicon-floppy-saved:before{content:\"\\\\e173\"}.glyphicon-floppy-remove:before{content:\"\\\\e174\"}.glyphicon-floppy-save:before{content:\"\\\\e175\"}.glyphicon-floppy-open:before{content:\"\\\\e176\"}.glyphicon-credit-card:before{content:\"\\\\e177\"}.glyphicon-transfer:before{content:\"\\\\e178\"}.glyphicon-cutlery:before{content:\"\\\\e179\"}.glyphicon-header:before{content:\"\\\\e180\"}.glyphicon-compressed:before{content:\"\\\\e181\"}.glyphicon-earphone:before{content:\"\\\\e182\"}.glyphicon-phone-alt:before{content:\"\\\\e183\"}.glyphicon-tower:before{content:\"\\\\e184\"}.glyphicon-stats:before{content:\"\\\\e185\"}.glyphicon-sd-video:before{content:\"\\\\e186\"}.glyphicon-hd-video:before{content:\"\\\\e187\"}.glyphicon-subtitles:before{content:\"\\\\e188\"}.glyphicon-sound-stereo:before{content:\"\\\\e189\"}.glyphicon-sound-dolby:before{content:\"\\\\e190\"}.glyphicon-sound-5-1:before{content:\"\\\\e191\"}.glyphicon-sound-6-1:before{content:\"\\\\e192\"}.glyphicon-sound-7-1:before{content:\"\\\\e193\"}.glyphicon-copyright-mark:before{content:\"\\\\e194\"}.glyphicon-registration-mark:before{content:\"\\\\e195\"}.glyphicon-cloud-download:before{content:\"\\\\e197\"}.glyphicon-cloud-upload:before{content:\"\\\\e198\"}.glyphicon-tree-conifer:before{content:\"\\\\e199\"}.glyphicon-tree-deciduous:before{content:\"\\\\e200\"}.glyphicon-cd:before{content:\"\\\\e201\"}.glyphicon-save-file:before{content:\"\\\\e202\"}.glyphicon-open-file:before{content:\"\\\\e203\"}.glyphicon-level-up:before{content:\"\\\\e204\"}.glyphicon-copy:before{content:\"\\\\e205\"}.glyphicon-paste:before{content:\"\\\\e206\"}.glyphicon-alert:before{content:\"\\\\e209\"}.glyphicon-equalizer:before{content:\"\\\\e210\"}.glyphicon-king:before{content:\"\\\\e211\"}.glyphicon-queen:before{content:\"\\\\e212\"}.glyphicon-pawn:before{content:\"\\\\e213\"}.glyphicon-bishop:before{content:\"\\\\e214\"}.glyphicon-knight:before{content:\"\\\\e215\"}.glyphicon-baby-formula:before{content:\"\\\\e216\"}.glyphicon-tent:before{content:\"\\\\26fa\"}.glyphicon-blackboard:before{content:\"\\\\e218\"}.glyphicon-bed:before{content:\"\\\\e219\"}.glyphicon-apple:before{content:\"\\\\f8ff\"}.glyphicon-erase:before{content:\"\\\\e221\"}.glyphicon-hourglass:before{content:\"\\\\231b\"}.glyphicon-lamp:before{content:\"\\\\e223\"}.glyphicon-duplicate:before{content:\"\\\\e224\"}.glyphicon-piggy-bank:before{content:\"\\\\e225\"}.glyphicon-scissors:before{content:\"\\\\e226\"}.glyphicon-bitcoin:before{content:\"\\\\e227\"}.glyphicon-btc:before{content:\"\\\\e227\"}.glyphicon-xbt:before{content:\"\\\\e227\"}.glyphicon-yen:before{content:\"\\\\00a5\"}.glyphicon-jpy:before{content:\"\\\\00a5\"}.glyphicon-ruble:before{content:\"\\\\20bd\"}.glyphicon-rub:before{content:\"\\\\20bd\"}.glyphicon-scale:before{content:\"\\\\e230\"}.glyphicon-ice-lolly:before{content:\"\\\\e231\"}.glyphicon-ice-lolly-tasted:before{content:\"\\\\e232\"}.glyphicon-education:before{content:\"\\\\e233\"}.glyphicon-option-horizontal:before{content:\"\\\\e234\"}.glyphicon-option-vertical:before{content:\"\\\\e235\"}.glyphicon-menu-hamburger:before{content:\"\\\\e236\"}.glyphicon-modal-window:before{content:\"\\\\e237\"}.glyphicon-oil:before{content:\"\\\\e238\"}.glyphicon-grain:before{content:\"\\\\e239\"}.glyphicon-sunglasses:before{content:\"\\\\e240\"}.glyphicon-text-size:before{content:\"\\\\e241\"}.glyphicon-text-color:before{content:\"\\\\e242\"}.glyphicon-text-background:before{content:\"\\\\e243\"}.glyphicon-object-align-top:before{content:\"\\\\e244\"}.glyphicon-object-align-bottom:before{content:\"\\\\e245\"}.glyphicon-object-align-horizontal:before{content:\"\\\\e246\"}.glyphicon-object-align-left:before{content:\"\\\\e247\"}.glyphicon-object-align-vertical:before{content:\"\\\\e248\"}.glyphicon-object-align-right:before{content:\"\\\\e249\"}.glyphicon-triangle-right:before{content:\"\\\\e250\"}.glyphicon-triangle-left:before{content:\"\\\\e251\"}.glyphicon-triangle-bottom:before{content:\"\\\\e252\"}.glyphicon-triangle-top:before{content:\"\\\\e253\"}.glyphicon-console:before{content:\"\\\\e254\"}.glyphicon-superscript:before{content:\"\\\\e255\"}.glyphicon-subscript:before{content:\"\\\\e256\"}.glyphicon-menu-left:before{content:\"\\\\e257\"}.glyphicon-menu-right:before{content:\"\\\\e258\"}.glyphicon-menu-down:before{content:\"\\\\e259\"}.glyphicon-menu-up:before{content:\"\\\\e260\"}`, \"\",{\"version\":3,\"sources\":[\"webpack://./css/bootstrap.min.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"@font-face{font-family:'Glyphicons Halflings';src:url(../fonts/glyphicons-halflings-regular.eot);src:url(../fonts/glyphicons-halflings-regular.eot?#iefix) format('embedded-opentype'),url(../fonts/glyphicons-halflings-regular.woff2) format('woff2'),url(../fonts/glyphicons-halflings-regular.woff) format('woff'),url(../fonts/glyphicons-halflings-regular.ttf) format('truetype'),url(../fonts/glyphicons-halflings-regular.svg#glyphicons_halflingsregular) format('svg')}.glyphicon{position:relative;top:1px;display:inline-block;font-family:'Glyphicons Halflings';font-style:normal;font-weight:400;line-height:1;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.glyphicon-asterisk:before{content:\\\"\\\\002a\\\"}.glyphicon-plus:before{content:\\\"\\\\002b\\\"}.glyphicon-eur:before,.glyphicon-euro:before{content:\\\"\\\\20ac\\\"}.glyphicon-minus:before{content:\\\"\\\\2212\\\"}.glyphicon-cloud:before{content:\\\"\\\\2601\\\"}.glyphicon-envelope:before{content:\\\"\\\\2709\\\"}.glyphicon-pencil:before{content:\\\"\\\\270f\\\"}.glyphicon-glass:before{content:\\\"\\\\e001\\\"}.glyphicon-music:before{content:\\\"\\\\e002\\\"}.glyphicon-search:before{content:\\\"\\\\e003\\\"}.glyphicon-heart:before{content:\\\"\\\\e005\\\"}.glyphicon-star:before{content:\\\"\\\\e006\\\"}.glyphicon-star-empty:before{content:\\\"\\\\e007\\\"}.glyphicon-user:before{content:\\\"\\\\e008\\\"}.glyphicon-film:before{content:\\\"\\\\e009\\\"}.glyphicon-th-large:before{content:\\\"\\\\e010\\\"}.glyphicon-th:before{content:\\\"\\\\e011\\\"}.glyphicon-th-list:before{content:\\\"\\\\e012\\\"}.glyphicon-ok:before{content:\\\"\\\\e013\\\"}.glyphicon-remove:before{content:\\\"\\\\e014\\\"}.glyphicon-zoom-in:before{content:\\\"\\\\e015\\\"}.glyphicon-zoom-out:before{content:\\\"\\\\e016\\\"}.glyphicon-off:before{content:\\\"\\\\e017\\\"}.glyphicon-signal:before{content:\\\"\\\\e018\\\"}.glyphicon-cog:before{content:\\\"\\\\e019\\\"}.glyphicon-trash:before{content:\\\"\\\\e020\\\"}.glyphicon-home:before{content:\\\"\\\\e021\\\"}.glyphicon-file:before{content:\\\"\\\\e022\\\"}.glyphicon-time:before{content:\\\"\\\\e023\\\"}.glyphicon-road:before{content:\\\"\\\\e024\\\"}.glyphicon-download-alt:before{content:\\\"\\\\e025\\\"}.glyphicon-download:before{content:\\\"\\\\e026\\\"}.glyphicon-upload:before{content:\\\"\\\\e027\\\"}.glyphicon-inbox:before{content:\\\"\\\\e028\\\"}.glyphicon-play-circle:before{content:\\\"\\\\e029\\\"}.glyphicon-repeat:before{content:\\\"\\\\e030\\\"}.glyphicon-refresh:before{content:\\\"\\\\e031\\\"}.glyphicon-list-alt:before{content:\\\"\\\\e032\\\"}.glyphicon-lock:before{content:\\\"\\\\e033\\\"}.glyphicon-flag:before{content:\\\"\\\\e034\\\"}.glyphicon-headphones:before{content:\\\"\\\\e035\\\"}.glyphicon-volume-off:before{content:\\\"\\\\e036\\\"}.glyphicon-volume-down:before{content:\\\"\\\\e037\\\"}.glyphicon-volume-up:before{content:\\\"\\\\e038\\\"}.glyphicon-qrcode:before{content:\\\"\\\\e039\\\"}.glyphicon-barcode:before{content:\\\"\\\\e040\\\"}.glyphicon-tag:before{content:\\\"\\\\e041\\\"}.glyphicon-tags:before{content:\\\"\\\\e042\\\"}.glyphicon-book:before{content:\\\"\\\\e043\\\"}.glyphicon-bookmark:before{content:\\\"\\\\e044\\\"}.glyphicon-print:before{content:\\\"\\\\e045\\\"}.glyphicon-camera:before{content:\\\"\\\\e046\\\"}.glyphicon-font:before{content:\\\"\\\\e047\\\"}.glyphicon-bold:before{content:\\\"\\\\e048\\\"}.glyphicon-italic:before{content:\\\"\\\\e049\\\"}.glyphicon-text-height:before{content:\\\"\\\\e050\\\"}.glyphicon-text-width:before{content:\\\"\\\\e051\\\"}.glyphicon-align-left:before{content:\\\"\\\\e052\\\"}.glyphicon-align-center:before{content:\\\"\\\\e053\\\"}.glyphicon-align-right:before{content:\\\"\\\\e054\\\"}.glyphicon-align-justify:before{content:\\\"\\\\e055\\\"}.glyphicon-list:before{content:\\\"\\\\e056\\\"}.glyphicon-indent-left:before{content:\\\"\\\\e057\\\"}.glyphicon-indent-right:before{content:\\\"\\\\e058\\\"}.glyphicon-facetime-video:before{content:\\\"\\\\e059\\\"}.glyphicon-picture:before{content:\\\"\\\\e060\\\"}.glyphicon-map-marker:before{content:\\\"\\\\e062\\\"}.glyphicon-adjust:before{content:\\\"\\\\e063\\\"}.glyphicon-tint:before{content:\\\"\\\\e064\\\"}.glyphicon-edit:before{content:\\\"\\\\e065\\\"}.glyphicon-share:before{content:\\\"\\\\e066\\\"}.glyphicon-check:before{content:\\\"\\\\e067\\\"}.glyphicon-move:before{content:\\\"\\\\e068\\\"}.glyphicon-step-backward:before{content:\\\"\\\\e069\\\"}.glyphicon-fast-backward:before{content:\\\"\\\\e070\\\"}.glyphicon-backward:before{content:\\\"\\\\e071\\\"}.glyphicon-play:before{content:\\\"\\\\e072\\\"}.glyphicon-pause:before{content:\\\"\\\\e073\\\"}.glyphicon-stop:before{content:\\\"\\\\e074\\\"}.glyphicon-forward:before{content:\\\"\\\\e075\\\"}.glyphicon-fast-forward:before{content:\\\"\\\\e076\\\"}.glyphicon-step-forward:before{content:\\\"\\\\e077\\\"}.glyphicon-eject:before{content:\\\"\\\\e078\\\"}.glyphicon-chevron-left:before{content:\\\"\\\\e079\\\"}.glyphicon-chevron-right:before{content:\\\"\\\\e080\\\"}.glyphicon-plus-sign:before{content:\\\"\\\\e081\\\"}.glyphicon-minus-sign:before{content:\\\"\\\\e082\\\"}.glyphicon-remove-sign:before{content:\\\"\\\\e083\\\"}.glyphicon-ok-sign:before{content:\\\"\\\\e084\\\"}.glyphicon-question-sign:before{content:\\\"\\\\e085\\\"}.glyphicon-info-sign:before{content:\\\"\\\\e086\\\"}.glyphicon-screenshot:before{content:\\\"\\\\e087\\\"}.glyphicon-remove-circle:before{content:\\\"\\\\e088\\\"}.glyphicon-ok-circle:before{content:\\\"\\\\e089\\\"}.glyphicon-ban-circle:before{content:\\\"\\\\e090\\\"}.glyphicon-arrow-left:before{content:\\\"\\\\e091\\\"}.glyphicon-arrow-right:before{content:\\\"\\\\e092\\\"}.glyphicon-arrow-up:before{content:\\\"\\\\e093\\\"}.glyphicon-arrow-down:before{content:\\\"\\\\e094\\\"}.glyphicon-share-alt:before{content:\\\"\\\\e095\\\"}.glyphicon-resize-full:before{content:\\\"\\\\e096\\\"}.glyphicon-resize-small:before{content:\\\"\\\\e097\\\"}.glyphicon-exclamation-sign:before{content:\\\"\\\\e101\\\"}.glyphicon-gift:before{content:\\\"\\\\e102\\\"}.glyphicon-leaf:before{content:\\\"\\\\e103\\\"}.glyphicon-fire:before{content:\\\"\\\\e104\\\"}.glyphicon-eye-open:before{content:\\\"\\\\e105\\\"}.glyphicon-eye-close:before{content:\\\"\\\\e106\\\"}.glyphicon-warning-sign:before{content:\\\"\\\\e107\\\"}.glyphicon-plane:before{content:\\\"\\\\e108\\\"}.glyphicon-calendar:before{content:\\\"\\\\e109\\\"}.glyphicon-random:before{content:\\\"\\\\e110\\\"}.glyphicon-comment:before{content:\\\"\\\\e111\\\"}.glyphicon-magnet:before{content:\\\"\\\\e112\\\"}.glyphicon-chevron-up:before{content:\\\"\\\\e113\\\"}.glyphicon-chevron-down:before{content:\\\"\\\\e114\\\"}.glyphicon-retweet:before{content:\\\"\\\\e115\\\"}.glyphicon-shopping-cart:before{content:\\\"\\\\e116\\\"}.glyphicon-folder-close:before{content:\\\"\\\\e117\\\"}.glyphicon-folder-open:before{content:\\\"\\\\e118\\\"}.glyphicon-resize-vertical:before{content:\\\"\\\\e119\\\"}.glyphicon-resize-horizontal:before{content:\\\"\\\\e120\\\"}.glyphicon-hdd:before{content:\\\"\\\\e121\\\"}.glyphicon-bullhorn:before{content:\\\"\\\\e122\\\"}.glyphicon-bell:before{content:\\\"\\\\e123\\\"}.glyphicon-certificate:before{content:\\\"\\\\e124\\\"}.glyphicon-thumbs-up:before{content:\\\"\\\\e125\\\"}.glyphicon-thumbs-down:before{content:\\\"\\\\e126\\\"}.glyphicon-hand-right:before{content:\\\"\\\\e127\\\"}.glyphicon-hand-left:before{content:\\\"\\\\e128\\\"}.glyphicon-hand-up:before{content:\\\"\\\\e129\\\"}.glyphicon-hand-down:before{content:\\\"\\\\e130\\\"}.glyphicon-circle-arrow-right:before{content:\\\"\\\\e131\\\"}.glyphicon-circle-arrow-left:before{content:\\\"\\\\e132\\\"}.glyphicon-circle-arrow-up:before{content:\\\"\\\\e133\\\"}.glyphicon-circle-arrow-down:before{content:\\\"\\\\e134\\\"}.glyphicon-globe:before{content:\\\"\\\\e135\\\"}.glyphicon-wrench:before{content:\\\"\\\\e136\\\"}.glyphicon-tasks:before{content:\\\"\\\\e137\\\"}.glyphicon-filter:before{content:\\\"\\\\e138\\\"}.glyphicon-briefcase:before{content:\\\"\\\\e139\\\"}.glyphicon-fullscreen:before{content:\\\"\\\\e140\\\"}.glyphicon-dashboard:before{content:\\\"\\\\e141\\\"}.glyphicon-paperclip:before{content:\\\"\\\\e142\\\"}.glyphicon-heart-empty:before{content:\\\"\\\\e143\\\"}.glyphicon-link:before{content:\\\"\\\\e144\\\"}.glyphicon-phone:before{content:\\\"\\\\e145\\\"}.glyphicon-pushpin:before{content:\\\"\\\\e146\\\"}.glyphicon-usd:before{content:\\\"\\\\e148\\\"}.glyphicon-gbp:before{content:\\\"\\\\e149\\\"}.glyphicon-sort:before{content:\\\"\\\\e150\\\"}.glyphicon-sort-by-alphabet:before{content:\\\"\\\\e151\\\"}.glyphicon-sort-by-alphabet-alt:before{content:\\\"\\\\e152\\\"}.glyphicon-sort-by-order:before{content:\\\"\\\\e153\\\"}.glyphicon-sort-by-order-alt:before{content:\\\"\\\\e154\\\"}.glyphicon-sort-by-attributes:before{content:\\\"\\\\e155\\\"}.glyphicon-sort-by-attributes-alt:before{content:\\\"\\\\e156\\\"}.glyphicon-unchecked:before{content:\\\"\\\\e157\\\"}.glyphicon-expand:before{content:\\\"\\\\e158\\\"}.glyphicon-collapse-down:before{content:\\\"\\\\e159\\\"}.glyphicon-collapse-up:before{content:\\\"\\\\e160\\\"}.glyphicon-log-in:before{content:\\\"\\\\e161\\\"}.glyphicon-flash:before{content:\\\"\\\\e162\\\"}.glyphicon-log-out:before{content:\\\"\\\\e163\\\"}.glyphicon-new-window:before{content:\\\"\\\\e164\\\"}.glyphicon-record:before{content:\\\"\\\\e165\\\"}.glyphicon-save:before{content:\\\"\\\\e166\\\"}.glyphicon-open:before{content:\\\"\\\\e167\\\"}.glyphicon-saved:before{content:\\\"\\\\e168\\\"}.glyphicon-import:before{content:\\\"\\\\e169\\\"}.glyphicon-export:before{content:\\\"\\\\e170\\\"}.glyphicon-send:before{content:\\\"\\\\e171\\\"}.glyphicon-floppy-disk:before{content:\\\"\\\\e172\\\"}.glyphicon-floppy-saved:before{content:\\\"\\\\e173\\\"}.glyphicon-floppy-remove:before{content:\\\"\\\\e174\\\"}.glyphicon-floppy-save:before{content:\\\"\\\\e175\\\"}.glyphicon-floppy-open:before{content:\\\"\\\\e176\\\"}.glyphicon-credit-card:before{content:\\\"\\\\e177\\\"}.glyphicon-transfer:before{content:\\\"\\\\e178\\\"}.glyphicon-cutlery:before{content:\\\"\\\\e179\\\"}.glyphicon-header:before{content:\\\"\\\\e180\\\"}.glyphicon-compressed:before{content:\\\"\\\\e181\\\"}.glyphicon-earphone:before{content:\\\"\\\\e182\\\"}.glyphicon-phone-alt:before{content:\\\"\\\\e183\\\"}.glyphicon-tower:before{content:\\\"\\\\e184\\\"}.glyphicon-stats:before{content:\\\"\\\\e185\\\"}.glyphicon-sd-video:before{content:\\\"\\\\e186\\\"}.glyphicon-hd-video:before{content:\\\"\\\\e187\\\"}.glyphicon-subtitles:before{content:\\\"\\\\e188\\\"}.glyphicon-sound-stereo:before{content:\\\"\\\\e189\\\"}.glyphicon-sound-dolby:before{content:\\\"\\\\e190\\\"}.glyphicon-sound-5-1:before{content:\\\"\\\\e191\\\"}.glyphicon-sound-6-1:before{content:\\\"\\\\e192\\\"}.glyphicon-sound-7-1:before{content:\\\"\\\\e193\\\"}.glyphicon-copyright-mark:before{content:\\\"\\\\e194\\\"}.glyphicon-registration-mark:before{content:\\\"\\\\e195\\\"}.glyphicon-cloud-download:before{content:\\\"\\\\e197\\\"}.glyphicon-cloud-upload:before{content:\\\"\\\\e198\\\"}.glyphicon-tree-conifer:before{content:\\\"\\\\e199\\\"}.glyphicon-tree-deciduous:before{content:\\\"\\\\e200\\\"}.glyphicon-cd:before{content:\\\"\\\\e201\\\"}.glyphicon-save-file:before{content:\\\"\\\\e202\\\"}.glyphicon-open-file:before{content:\\\"\\\\e203\\\"}.glyphicon-level-up:before{content:\\\"\\\\e204\\\"}.glyphicon-copy:before{content:\\\"\\\\e205\\\"}.glyphicon-paste:before{content:\\\"\\\\e206\\\"}.glyphicon-alert:before{content:\\\"\\\\e209\\\"}.glyphicon-equalizer:before{content:\\\"\\\\e210\\\"}.glyphicon-king:before{content:\\\"\\\\e211\\\"}.glyphicon-queen:before{content:\\\"\\\\e212\\\"}.glyphicon-pawn:before{content:\\\"\\\\e213\\\"}.glyphicon-bishop:before{content:\\\"\\\\e214\\\"}.glyphicon-knight:before{content:\\\"\\\\e215\\\"}.glyphicon-baby-formula:before{content:\\\"\\\\e216\\\"}.glyphicon-tent:before{content:\\\"\\\\26fa\\\"}.glyphicon-blackboard:before{content:\\\"\\\\e218\\\"}.glyphicon-bed:before{content:\\\"\\\\e219\\\"}.glyphicon-apple:before{content:\\\"\\\\f8ff\\\"}.glyphicon-erase:before{content:\\\"\\\\e221\\\"}.glyphicon-hourglass:before{content:\\\"\\\\231b\\\"}.glyphicon-lamp:before{content:\\\"\\\\e223\\\"}.glyphicon-duplicate:before{content:\\\"\\\\e224\\\"}.glyphicon-piggy-bank:before{content:\\\"\\\\e225\\\"}.glyphicon-scissors:before{content:\\\"\\\\e226\\\"}.glyphicon-bitcoin:before{content:\\\"\\\\e227\\\"}.glyphicon-btc:before{content:\\\"\\\\e227\\\"}.glyphicon-xbt:before{content:\\\"\\\\e227\\\"}.glyphicon-yen:before{content:\\\"\\\\00a5\\\"}.glyphicon-jpy:before{content:\\\"\\\\00a5\\\"}.glyphicon-ruble:before{content:\\\"\\\\20bd\\\"}.glyphicon-rub:before{content:\\\"\\\\20bd\\\"}.glyphicon-scale:before{content:\\\"\\\\e230\\\"}.glyphicon-ice-lolly:before{content:\\\"\\\\e231\\\"}.glyphicon-ice-lolly-tasted:before{content:\\\"\\\\e232\\\"}.glyphicon-education:before{content:\\\"\\\\e233\\\"}.glyphicon-option-horizontal:before{content:\\\"\\\\e234\\\"}.glyphicon-option-vertical:before{content:\\\"\\\\e235\\\"}.glyphicon-menu-hamburger:before{content:\\\"\\\\e236\\\"}.glyphicon-modal-window:before{content:\\\"\\\\e237\\\"}.glyphicon-oil:before{content:\\\"\\\\e238\\\"}.glyphicon-grain:before{content:\\\"\\\\e239\\\"}.glyphicon-sunglasses:before{content:\\\"\\\\e240\\\"}.glyphicon-text-size:before{content:\\\"\\\\e241\\\"}.glyphicon-text-color:before{content:\\\"\\\\e242\\\"}.glyphicon-text-background:before{content:\\\"\\\\e243\\\"}.glyphicon-object-align-top:before{content:\\\"\\\\e244\\\"}.glyphicon-object-align-bottom:before{content:\\\"\\\\e245\\\"}.glyphicon-object-align-horizontal:before{content:\\\"\\\\e246\\\"}.glyphicon-object-align-left:before{content:\\\"\\\\e247\\\"}.glyphicon-object-align-vertical:before{content:\\\"\\\\e248\\\"}.glyphicon-object-align-right:before{content:\\\"\\\\e249\\\"}.glyphicon-triangle-right:before{content:\\\"\\\\e250\\\"}.glyphicon-triangle-left:before{content:\\\"\\\\e251\\\"}.glyphicon-triangle-bottom:before{content:\\\"\\\\e252\\\"}.glyphicon-triangle-top:before{content:\\\"\\\\e253\\\"}.glyphicon-console:before{content:\\\"\\\\e254\\\"}.glyphicon-superscript:before{content:\\\"\\\\e255\\\"}.glyphicon-subscript:before{content:\\\"\\\\e256\\\"}.glyphicon-menu-left:before{content:\\\"\\\\e257\\\"}.glyphicon-menu-right:before{content:\\\"\\\\e258\\\"}.glyphicon-menu-down:before{content:\\\"\\\\e259\\\"}.glyphicon-menu-up:before{content:\\\"\\\\e260\\\"}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.settingsContainer {\n\tposition: absolute;\n\tleft: 0;\n\ttop: 0;\n\twidth: 100%;\n\theight: 100%;\n\toverflow-y: hidden;\n\toverflow-x: hidden;\n}\n.settingsTabButtonContainer {\n\tbackground-color: var(--innerMenuBgColor);\n\twidth: 100%;\n\ttop: 0;\n\tleft: 0;\n\theight: 2em;\n\tdisplay: flex;\n\tjustify-content: space-between;\n\tposition: absolute;\n}\n\n.settingsTabButton {\n\tflex: 1 1 auto;\n\theight: 2em;\n\tpadding: 0.6em 1em;\n\tbox-sizing: border-box;\n\tborder: none;\n\tborder-bottom: 2px solid transparent;\n\tbackground-color: var(--innerMenuBgColor);\n\tcolor: var(--fontColor);\n\tfont-size: 0.9em;\n\ttext-align: center;\n\tcursor: pointer;\n\ttransition: background-color 0.15s ease-out, border-color 0.15s ease-out, color 0.15s ease-out;\n\tborder-radius: 0;\n}\n\n.settingsTabButton:hover {\n\tbackground-color: var(--lightInnerMenuHoverBgColor);\n\tcolor: var(--buttonHoverFontColor);\n}\n\n.settingsTabButton.selected {\n\tbackground-color: var(--innerMenuBgColor);\n\tcolor: var(--fontWeightedColor);\n\tborder-bottom-color: var(--accentColor);\n}\n\n.settingsContentContainer {\n\theight: 100%;\n\toverflow-y: hidden;\n\toverflow-x: hidden;\n}\n.settingsTabContentContainer {\n\toverflow-y: auto;\n\toverflow-x: hidden;\n\tmargin-top: 2em;\n\tdisplay: none;\n\theight: calc(100% - 2em);\n}\n.settingsTabContentContainer button {\n\tmargin: 1.5em;\n}\n.settingsGroupContainer {\n\tborder-top: 1px solid var(--borderColor);\n\tpadding-top: 0.8em;\n\tmargin-bottom: 0.8em;\n}\n\n.settingsGroupContainer:first-of-type {\n\tborder-top: none;\n\tpadding-top: 0;\n}\n.settingsGroupLabel {\n\tfont-size: 0.9em;\n\tfont-weight: 600;\n\tpadding-left: 0.8em;\n\tpadding-bottom: 0.6em;\n\tcolor: var(--fontWeightedColor);\n}\n.settingContainer {\n\tpadding: 0.8em 1em;\n\twidth: 100%;\n\tbox-sizing: border-box;\n\tbackground-color: var(--innerMenuBgColor);\n\ttransition: background-color 0.15s ease-out;\n}\n.settingContainer:hover {\n\tbackground-color: var(--lightInnerMenuHoverBgColor);\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./css/Settings.css\"],\"names\":[],\"mappings\":\"AAAA;CACC,kBAAkB;CAClB,OAAO;CACP,MAAM;CACN,WAAW;CACX,YAAY;CACZ,kBAAkB;CAClB,kBAAkB;AACnB;AACA;CACC,yCAAyC;CACzC,WAAW;CACX,MAAM;CACN,OAAO;CACP,WAAW;CACX,aAAa;CACb,8BAA8B;CAC9B,kBAAkB;AACnB;;AAEA;CACC,cAAc;CACd,WAAW;CACX,kBAAkB;CAClB,sBAAsB;CACtB,YAAY;CACZ,oCAAoC;CACpC,yCAAyC;CACzC,uBAAuB;CACvB,gBAAgB;CAChB,kBAAkB;CAClB,eAAe;CACf,8FAA8F;CAC9F,gBAAgB;AACjB;;AAEA;CACC,mDAAmD;CACnD,kCAAkC;AACnC;;AAEA;CACC,yCAAyC;CACzC,+BAA+B;CAC/B,uCAAuC;AACxC;;AAEA;CACC,YAAY;CACZ,kBAAkB;CAClB,kBAAkB;AACnB;AACA;CACC,gBAAgB;CAChB,kBAAkB;CAClB,eAAe;CACf,aAAa;CACb,wBAAwB;AACzB;AACA;CACC,aAAa;AACd;AACA;CACC,wCAAwC;CACxC,kBAAkB;CAClB,oBAAoB;AACrB;;AAEA;CACC,gBAAgB;CAChB,cAAc;AACf;AACA;CACC,gBAAgB;CAChB,gBAAgB;CAChB,mBAAmB;CACnB,qBAAqB;CACrB,+BAA+B;AAChC;AACA;CACC,kBAAkB;CAClB,WAAW;CACX,sBAAsB;CACtB,yCAAyC;CACzC,2CAA2C;AAC5C;AACA;CACC,mDAAmD;AACpD\",\"sourcesContent\":[\".settingsContainer {\\n\\tposition: absolute;\\n\\tleft: 0;\\n\\ttop: 0;\\n\\twidth: 100%;\\n\\theight: 100%;\\n\\toverflow-y: hidden;\\n\\toverflow-x: hidden;\\n}\\n.settingsTabButtonContainer {\\n\\tbackground-color: var(--innerMenuBgColor);\\n\\twidth: 100%;\\n\\ttop: 0;\\n\\tleft: 0;\\n\\theight: 2em;\\n\\tdisplay: flex;\\n\\tjustify-content: space-between;\\n\\tposition: absolute;\\n}\\n\\n.settingsTabButton {\\n\\tflex: 1 1 auto;\\n\\theight: 2em;\\n\\tpadding: 0.6em 1em;\\n\\tbox-sizing: border-box;\\n\\tborder: none;\\n\\tborder-bottom: 2px solid transparent;\\n\\tbackground-color: var(--innerMenuBgColor);\\n\\tcolor: var(--fontColor);\\n\\tfont-size: 0.9em;\\n\\ttext-align: center;\\n\\tcursor: pointer;\\n\\ttransition: background-color 0.15s ease-out, border-color 0.15s ease-out, color 0.15s ease-out;\\n\\tborder-radius: 0;\\n}\\n\\n.settingsTabButton:hover {\\n\\tbackground-color: var(--lightInnerMenuHoverBgColor);\\n\\tcolor: var(--buttonHoverFontColor);\\n}\\n\\n.settingsTabButton.selected {\\n\\tbackground-color: var(--innerMenuBgColor);\\n\\tcolor: var(--fontWeightedColor);\\n\\tborder-bottom-color: var(--accentColor);\\n}\\n\\n.settingsContentContainer {\\n\\theight: 100%;\\n\\toverflow-y: hidden;\\n\\toverflow-x: hidden;\\n}\\n.settingsTabContentContainer {\\n\\toverflow-y: auto;\\n\\toverflow-x: hidden;\\n\\tmargin-top: 2em;\\n\\tdisplay: none;\\n\\theight: calc(100% - 2em);\\n}\\n.settingsTabContentContainer button {\\n\\tmargin: 1.5em;\\n}\\n.settingsGroupContainer {\\n\\tborder-top: 1px solid var(--borderColor);\\n\\tpadding-top: 0.8em;\\n\\tmargin-bottom: 0.8em;\\n}\\n\\n.settingsGroupContainer:first-of-type {\\n\\tborder-top: none;\\n\\tpadding-top: 0;\\n}\\n.settingsGroupLabel {\\n\\tfont-size: 0.9em;\\n\\tfont-weight: 600;\\n\\tpadding-left: 0.8em;\\n\\tpadding-bottom: 0.6em;\\n\\tcolor: var(--fontWeightedColor);\\n}\\n.settingContainer {\\n\\tpadding: 0.8em 1em;\\n\\twidth: 100%;\\n\\tbox-sizing: border-box;\\n\\tbackground-color: var(--innerMenuBgColor);\\n\\ttransition: background-color 0.15s ease-out;\\n}\\n.settingContainer:hover {\\n\\tbackground-color: var(--lightInnerMenuHoverBgColor);\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `:root {\n\t/* Modernized Dark Theme */\n\t--bgColor: #282c34; /* Darker background */\n\t--innerMenuBgColor: #21252b; /* Slightly lighter menu bg */\n\t--lightInnerMenuHoverBgColor: #3a3f4b; /* Hover state */\n\n\t--inputBgColor: #3a3f4b; /* Input background */\n\t--inputFontColor: #abb2bf; /* Lighter input text */\n\n\t--fontColor: #abb2bf; /* Main text color */\n\t--fontWeightedColor: #e6e6e6; /* Brighter text */\n\t--fontWeakenedColor: #7f848e; /* Dimmer text */\n\n\t--buttonFontColor: #e6e6e6; /* Button text */\n\t--buttonBgColor: #3a3f4b; /* Button background */\n\t--buttonActiveBgColor: #61dafb; /* Accent color for active/pressed */\n\t--buttonHoverBgColor: #4b5263; /* Button hover */\n\t--buttonHoverFontColor: #ffffff; /* Brighter hover text */\n\n\t--borderColor: #21252b; /* Darker border, matching menu bg */\n\t--accentColor: #61dafb; /* Primary accent color (e.g., for highlights, selections) */\n}\n\nhtml,\nbody {\n\tfont-family: \"Source Sans Pro\", sans-serif !important;\n\tcolor: var(--fontColor);\n\twidth: 100%;\n\theight: 100%;\n\t/* min-width: 1040px; */\n\tmin-height: 100%;\n}\nbody {\n\toverflow-y: hidden;\n\toverflow-x: auto;\n\tmargin: 0;\n\tpadding: 0;\n}\n.pcr-app:not(.visible) {\n\tdisplay: none;\n}\n.navbar {\n\tbox-sizing: border-box;\n\ttransition: all 0.4s ease-out;\n\tmax-height: 150px;\n\tbackground-color: var(--bgColor);\n\tpadding: 0.5em;\n}\n#minimizeMenu {\n\tposition: absolute;\n\tright: 5px;\n\ttransition: all 0.4s ease-out;\n\tcursor: pointer;\n}\n.zoomGroup {\n\tposition: absolute;\n\tleft: 0px;\n\tbottom: 0px;\n}\n.zoomGroup:hover,\n.pianoCanvas:hover ~ .zoomGroup {\n\tz-index: 1055;\n}\ncanvas {\n\tz-index: -5;\n}\n#progressBarCanvas {\n\ttransition: all 0.4s ease-out;\n\tbackground-color: var(--inputBgColor);\n\tbox-sizing: border-box;\n\tleft: 0px;\n\tposition: absolute;\n\tborder-bottom: 4px solid var(--borderColor);\n\tfloat: left;\n\tcursor: pointer;\n\tz-index: 10;\n}\n\n.row {\n\tdisplay: flex;\n\tjustify-content: space-between;\n\tflex-direction: row;\n}\n.forcedThinButton {\n\twidth: 60px !important;\n}\n.innerMenuDivsContainer {\n\tposition: relative;\n\twidth: 100%;\n\theight: 100%;\n\tmin-width: 1040px;\n\tbackground-color: rgba(0, 0, 0, 0);\n\tpointer-events: none;\n\toverflow: none;\n}\n.innerMenuDiv {\n\tmargin-top: 24px;\n\tposition: absolute;\n\tbox-sizing: border-box;\n\tpointer-events: all;\n\tz-index: 100;\n\n\twidth: 30%;\n\theight: 100%;\n\tmin-width: 300px;\n\tright: 0px;\n\tpadding: 5px;\n\n\tbackground-color: var(--bgColor);\n\tbox-shadow: -3px 3px 10px 1px rgb(0 0 0, 0.5);\n\n\toverflow-y: auto;\n\toverflow-x: hidden;\n\n\ttransition: all 0.25s ease-out;\n}\n.innerMenuDiv.hidden {\n\t/* right: -30%; */\n}\n\n.innerMenuContDiv:first-of-type {\n\tborder-top: none;\n}\n.innerMenuContDiv {\n\tbackground-color: var(--innerMenuBgColor);\n\tbackground-image: var(--navBackground);\n\tcolor: var(--buttonFontColor);\n\tborder-top: 1px solid var(--borderColor);\n\tborder-radius: 2px;\n\t/* padding: 5px;\n\tmargin: 5px; */\n\tbox-sizing: border-box;\n\toverflow: hidden;\n\n\ttransition: 0.3s all ease-out;\n}\n.innerMenuContDiv.collapsed {\n\tmax-height: 2em;\n}\n.clickableTitle:not(.glyphicon) {\n\tposition: relative;\n\tpadding-left: 5px;\n\theight: 2em;\n\tbox-sizing: border-box;\n}\n.clickableTitle:hover {\n\tbackground-color: var(--lightInnerMenuHoverBgColor);\n}\n.collapserGlyphSpan {\n\tfont-size: 1em;\n\tposition: absolute !important;\n\ttop: 0.5em !important;\n\theight: 14px;\n\tright: 8px;\n}\n.centeredMenuDiv {\n\tbackground-color: var(--bgColor);\n\tmax-height: calc(50% - 50px);\n\ttop: 24px;\n\tpadding: 2em;\n\tposition: absolute;\n\twidth: 50%;\n\tleft: 25%;\n\toverflow-y: auto;\n\toverflow-x: hidden;\n\tborder-radius: 5px;\n\ttransition: all 0.3s ease-out;\n}\n.notification {\n\tbackground-color: var(--bgColor);\n\tmax-height: calc(50% - 50px);\n\ttop: 30%;\n\tpadding: 30px;\n\tposition: absolute;\n\twidth: 50%;\n\tleft: 25%;\n\toverflow-y: auto;\n\toverflow-x: hidden;\n\tborder-radius: 5px;\n}\n.highlighted {\n\tanimation: pulse 1.5s infinite;\n\tbox-shadow: 0em 0em 5px 5px rgba(0, 0, 0, 0.8);\n}\n\n@-webkit-keyframes pulse {\n\t0% {\n\t\t-webkit-box-shadow: 0 0 0 0 rgba(10, 141, 228, 0.4);\n\t}\n\t50% {\n\t\t-webkit-box-shadow: 0 0 0 10px rgba(10, 141, 228, 0.4);\n\t}\n\t100% {\n\t\t-webkit-box-shadow: 0 0 0 0 rgba(10, 141, 228, 0.4);\n\t}\n}\n@keyframes pulse {\n\t0% {\n\t\t-moz-box-shadow: 0 0 0 0 rgba(10, 141, 228, 0.4);\n\t\tbox-shadow: 0 0 0 0 rgba(10, 141, 228, 0.4);\n\t}\n\t50% {\n\t\t-moz-box-shadow: 0 0 0 10px rgba(10, 141, 228, 0.4);\n\t\tbox-shadow: 0 0 0 10px rgba(10, 141, 228, 0.4);\n\t}\n\t100% {\n\t\t-moz-box-shadow: 0 0 0 0 rgba(10, 141, 228, 0.4);\n\t\tbox-shadow: 0 0 0 0 rgba(10, 141, 228, 0.4);\n\t}\n}\n\n.centeredBigText {\n\twidth: 100%;\n\ttext-align: center;\n\tmargin-top: 1em;\n\tmargin-bottom: 1em;\n}\n.trackName {\n\twidth: 100%;\n\tpadding-top: 0.1em;\n\tfont-size: 0.8em;\n}\n.instrumentName {\n\twidth: 100%;\n\ttext-align: left;\n\tfont-size: 0.7em;\n\tpadding-left: 0.2em;\n}\n.divider {\n\tborder: 0;\n\tborder: 1px solid var(--buttonColor);\n}\n\n.floatSpanLeft span {\n\tfloat: left;\n\tmargin-right: 2px;\n}\n.container {\n\twidth: 100% !important;\n\tdisplay: flex;\n}\n.halfContainer {\n\twidth: 50% !important;\n\tfloat: left;\n}\n.row {\n\twidth: 100%;\n\tmargin: 0;\n}\n.col {\n\tjustify-content: space-between !important;\n}\n.btn-group {\n\talign-self: auto;\n}\n.btn-group-vertical {\n\tdisplay: flex;\n\tflex-direction: column;\n}\n.btn {\n\tposition: relative;\n\tbox-sizing: border-box;\n\n\tpadding: 0.6em 1em; /* Slightly more padding */\n\n\ttext-align: center;\n\tfont-size: 1em;\n\tfont-weight: normal !important;\n\n\tcolor: var(--buttonFontColor);\n\tbackground-color: var(--buttonBgColor);\n\n\toutline: none;\n\tborder-radius: 4px; /* Add rounded corners */\n\tborder: 1px solid transparent; /* Use transparent border for consistent size */\n\n\ttransition: all 0.15s ease-out;\n\n\tcursor: pointer; /* Ensure cursor changes */\n\t-ms-user-select: none; /* Internet Explorer/Edge */\n\tuser-select: none;\n}\n.btn:hover:active {\n\tbackground-color: var(--buttonActiveBgColor);\n\tcolor: #1a1a1d; /* Darker text on active accent */\n}\n.btn:hover {\n\tbackground-color: var(--buttonHoverBgColor);\n\tcolor: var(--buttonHoverFontColor);\n\tborder-color: var(--buttonHoverBgColor); /* Make border match bg on hover */\n}\n.btn-select-line {\n\tborder-bottom: 4px solid var(--accentColor); /* Use accent color */\n\ttransition: all 0.15s ease-out;\n\tposition: absolute;\n\tbottom: 0;\n\tleft: 0;\n\twidth: 0%;\n\topacity: 0;\n}\n.btn.selected {\n\tbackground-color: var(--buttonHoverBgColor); /* Maintain hover style when selected */\n\tcolor: var(--buttonHoverFontColor);\n\tborder-bottom-left-radius: 0px;\n\tborder-bottom-right-radius: 0px;\n}\n.btn-lg {\n\tfont-size: 1.5em;\n\tmargin-left: 0.2em;\n\tmargin-right: 0.2em;\n}\n.btn span {\n\tfont-size: 1em;\n}\n.pcr-button {\n\topacity: 0;\n\tposition: absolute;\n}\n\n.topContainer {\n\tflex: 1;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n}\n\n.topContainer:first-child {\n\tmargin-right: auto;\n\tjustify-content: space-between !important;\n\talign-items: unset;\n}\n\n.topContainer:last-child {\n\tmargin-left: auto;\n\tjustify-content: space-between !important;\n\talign-items: unset;\n}\n\n.vertical-align {\n\tdisplay: flex;\n\talign-items: center;\n}\n.hidden {\n\tvisibility: hidden;\n\topacity: 0;\n\tpointer-events: none;\n}\n.unhidden {\n\tvisibility: visible;\n\topacity: 1;\n}\n.fullscreen {\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\theight: 100%;\n}\n.fullscreen p {\n\tcolor: var(--inputBgColor);\n\ttext-align: center;\n\tposition: fixed;\n\tz-index: 999;\n\toverflow: show;\n\tmargin: auto;\n\ttop: 11.5em;\n\tfont-size: 1.5em;\n\tleft: 0;\n\tbottom: 0;\n\tright: 0;\n\theight: 50px;\n}\n\n.floatLeft {\n\tfloat: left;\n}\n.loadingDiv {\n\ttext-align: left;\n}\n/* Loading Spinner */\n.loader,\n.loader:after {\n\tposition: fixed;\n\tz-index: 999;\n\toverflow: show;\n\tmargin: auto;\n\ttop: 150px;\n\tleft: 0;\n\tbottom: 0;\n\tright: 0;\n\twidth: 50px;\n\theight: 50px;\n\tborder-radius: 50%;\n\twidth: 10em;\n\theight: 10em;\n}\n.loader {\n\tfont-size: 0.5em;\n\tborder-top: 1.1em solid rgba(255, 255, 255, 0.2);\n\tborder-right: 1.1em solid rgba(255, 255, 255, 0.2);\n\tborder-bottom: 1.1em solid rgba(255, 255, 255, 0.2);\n\tborder-left: 1.1em solid #ffffff;\n\t-webkit-transform: translateZ(0);\n\t-ms-transform: translateZ(0);\n\ttransform: translateZ(0);\n\t-webkit-animation: load8 1.1s infinite linear;\n\tanimation: load8 1.1s infinite linear;\n}\n@-webkit-keyframes load8 {\n\t0% {\n\t\t-webkit-transform: rotate(0deg);\n\t\ttransform: rotate(0deg);\n\t}\n\t100% {\n\t\t-webkit-transform: rotate(360deg);\n\t\ttransform: rotate(360deg);\n\t}\n}\n@keyframes load8 {\n\t0% {\n\t\t-webkit-transform: rotate(0deg);\n\t\ttransform: rotate(0deg);\n\t}\n\t100% {\n\t\t-webkit-transform: rotate(360deg);\n\t\ttransform: rotate(360deg);\n\t}\n}\n\n/* --- Responsive Styles --- */\n@media (max-width: 768px) {\n\t.innerMenuDiv {\n\t\twidth: 100%; /* Take full width on smaller screens */\n\t\tmin-width: unset; /* Remove the fixed min-width */\n\t\tright: 0; /* Ensure it's positioned correctly */\n\t\t/* Add other adjustments as needed, e.g., position, height */\n\t}\n\n\t/* Add other rules for small screens here */\n}\n\n/* --- Panel Close Button --- */\n.panel-close-button {\n\tposition: absolute;\n\ttop: 5px; /* Adjust for potential parent padding */\n\tright: 5px; /* Adjust for potential parent padding */\n\tbackground: yellow !important; /* TEMP: Force visibility */\n\tcolor: red !important; /* TEMP: Force visibility */\n\tborder: 1px solid red !important; /* TEMP: Force visibility */\n\tfont-size: 1.5em; /* Slightly smaller */\n\tfont-weight: bold;\n\tcursor: pointer;\n\tpadding: 0 8px; /* More padding */\n\tline-height: 1;\n\tz-index: 101; /* Ensure it's above other panel content */\n\ttransition: color 0.15s ease-out;\n}\n.panel-close-button:hover {\n\tcolor: darkred !important; /* TEMP */\n}\n\n/* --- Sheet Music Container --- */\n#sheetMusicContainer {\n\twidth: 100%;\n\theight: 220px; /* Initial height, match VexFlow height + padding */\n\tpadding: 10px;\n\tbox-sizing: border-box;\n\tbackground-color: var(--innerMenuBgColor); /* Match theme bg */\n\tborder-top: 1px solid var(--borderColor);\n\toverflow: hidden; /* Hide potential VexFlow overflow */\n\tposition: relative; /* For potential absolute positioning inside */\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./css/Interface.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\":root {\\n\\t/* Modernized Dark Theme */\\n\\t--bgColor: #282c34; /* Darker background */\\n\\t--innerMenuBgColor: #21252b; /* Slightly lighter menu bg */\\n\\t--lightInnerMenuHoverBgColor: #3a3f4b; /* Hover state */\\n\\n\\t--inputBgColor: #3a3f4b; /* Input background */\\n\\t--inputFontColor: #abb2bf; /* Lighter input text */\\n\\n\\t--fontColor: #abb2bf; /* Main text color */\\n\\t--fontWeightedColor: #e6e6e6; /* Brighter text */\\n\\t--fontWeakenedColor: #7f848e; /* Dimmer text */\\n\\n\\t--buttonFontColor: #e6e6e6; /* Button text */\\n\\t--buttonBgColor: #3a3f4b; /* Button background */\\n\\t--buttonActiveBgColor: #61dafb; /* Accent color for active/pressed */\\n\\t--buttonHoverBgColor: #4b5263; /* Button hover */\\n\\t--buttonHoverFontColor: #ffffff; /* Brighter hover text */\\n\\n\\t--borderColor: #21252b; /* Darker border, matching menu bg */\\n\\t--accentColor: #61dafb; /* Primary accent color (e.g., for highlights, selections) */\\n}\\n\\nhtml,\\nbody {\\n\\tfont-family: \\\"Source Sans Pro\\\", sans-serif !important;\\n\\tcolor: var(--fontColor);\\n\\twidth: 100%;\\n\\theight: 100%;\\n\\t/* min-width: 1040px; */\\n\\tmin-height: 100%;\\n}\\nbody {\\n\\toverflow-y: hidden;\\n\\toverflow-x: auto;\\n\\tmargin: 0;\\n\\tpadding: 0;\\n}\\n.pcr-app:not(.visible) {\\n\\tdisplay: none;\\n}\\n.navbar {\\n\\tbox-sizing: border-box;\\n\\ttransition: all 0.4s ease-out;\\n\\tmax-height: 150px;\\n\\tbackground-color: var(--bgColor);\\n\\tpadding: 0.5em;\\n}\\n#minimizeMenu {\\n\\tposition: absolute;\\n\\tright: 5px;\\n\\ttransition: all 0.4s ease-out;\\n\\tcursor: pointer;\\n}\\n.zoomGroup {\\n\\tposition: absolute;\\n\\tleft: 0px;\\n\\tbottom: 0px;\\n}\\n.zoomGroup:hover,\\n.pianoCanvas:hover ~ .zoomGroup {\\n\\tz-index: 1055;\\n}\\ncanvas {\\n\\tz-index: -5;\\n}\\n#progressBarCanvas {\\n\\ttransition: all 0.4s ease-out;\\n\\tbackground-color: var(--inputBgColor);\\n\\tbox-sizing: border-box;\\n\\tleft: 0px;\\n\\tposition: absolute;\\n\\tborder-bottom: 4px solid var(--borderColor);\\n\\tfloat: left;\\n\\tcursor: pointer;\\n\\tz-index: 10;\\n}\\n\\n.row {\\n\\tdisplay: flex;\\n\\tjustify-content: space-between;\\n\\tflex-direction: row;\\n}\\n.forcedThinButton {\\n\\twidth: 60px !important;\\n}\\n.innerMenuDivsContainer {\\n\\tposition: relative;\\n\\twidth: 100%;\\n\\theight: 100%;\\n\\tmin-width: 1040px;\\n\\tbackground-color: rgba(0, 0, 0, 0);\\n\\tpointer-events: none;\\n\\toverflow: none;\\n}\\n.innerMenuDiv {\\n\\tmargin-top: 24px;\\n\\tposition: absolute;\\n\\tbox-sizing: border-box;\\n\\tpointer-events: all;\\n\\tz-index: 100;\\n\\n\\twidth: 30%;\\n\\theight: 100%;\\n\\tmin-width: 300px;\\n\\tright: 0px;\\n\\tpadding: 5px;\\n\\n\\tbackground-color: var(--bgColor);\\n\\tbox-shadow: -3px 3px 10px 1px rgb(0 0 0, 0.5);\\n\\n\\toverflow-y: auto;\\n\\toverflow-x: hidden;\\n\\n\\ttransition: all 0.25s ease-out;\\n}\\n.innerMenuDiv.hidden {\\n\\t/* right: -30%; */\\n}\\n\\n.innerMenuContDiv:first-of-type {\\n\\tborder-top: none;\\n}\\n.innerMenuContDiv {\\n\\tbackground-color: var(--innerMenuBgColor);\\n\\tbackground-image: var(--navBackground);\\n\\tcolor: var(--buttonFontColor);\\n\\tborder-top: 1px solid var(--borderColor);\\n\\tborder-radius: 2px;\\n\\t/* padding: 5px;\\n\\tmargin: 5px; */\\n\\tbox-sizing: border-box;\\n\\toverflow: hidden;\\n\\n\\ttransition: 0.3s all ease-out;\\n}\\n.innerMenuContDiv.collapsed {\\n\\tmax-height: 2em;\\n}\\n.clickableTitle:not(.glyphicon) {\\n\\tposition: relative;\\n\\tpadding-left: 5px;\\n\\theight: 2em;\\n\\tbox-sizing: border-box;\\n}\\n.clickableTitle:hover {\\n\\tbackground-color: var(--lightInnerMenuHoverBgColor);\\n}\\n.collapserGlyphSpan {\\n\\tfont-size: 1em;\\n\\tposition: absolute !important;\\n\\ttop: 0.5em !important;\\n\\theight: 14px;\\n\\tright: 8px;\\n}\\n.centeredMenuDiv {\\n\\tbackground-color: var(--bgColor);\\n\\tmax-height: calc(50% - 50px);\\n\\ttop: 24px;\\n\\tpadding: 2em;\\n\\tposition: absolute;\\n\\twidth: 50%;\\n\\tleft: 25%;\\n\\toverflow-y: auto;\\n\\toverflow-x: hidden;\\n\\tborder-radius: 5px;\\n\\ttransition: all 0.3s ease-out;\\n}\\n.notification {\\n\\tbackground-color: var(--bgColor);\\n\\tmax-height: calc(50% - 50px);\\n\\ttop: 30%;\\n\\tpadding: 30px;\\n\\tposition: absolute;\\n\\twidth: 50%;\\n\\tleft: 25%;\\n\\toverflow-y: auto;\\n\\toverflow-x: hidden;\\n\\tborder-radius: 5px;\\n}\\n.highlighted {\\n\\tanimation: pulse 1.5s infinite;\\n\\tbox-shadow: 0em 0em 5px 5px rgba(0, 0, 0, 0.8);\\n}\\n\\n@-webkit-keyframes pulse {\\n\\t0% {\\n\\t\\t-webkit-box-shadow: 0 0 0 0 rgba(10, 141, 228, 0.4);\\n\\t}\\n\\t50% {\\n\\t\\t-webkit-box-shadow: 0 0 0 10px rgba(10, 141, 228, 0.4);\\n\\t}\\n\\t100% {\\n\\t\\t-webkit-box-shadow: 0 0 0 0 rgba(10, 141, 228, 0.4);\\n\\t}\\n}\\n@keyframes pulse {\\n\\t0% {\\n\\t\\t-moz-box-shadow: 0 0 0 0 rgba(10, 141, 228, 0.4);\\n\\t\\tbox-shadow: 0 0 0 0 rgba(10, 141, 228, 0.4);\\n\\t}\\n\\t50% {\\n\\t\\t-moz-box-shadow: 0 0 0 10px rgba(10, 141, 228, 0.4);\\n\\t\\tbox-shadow: 0 0 0 10px rgba(10, 141, 228, 0.4);\\n\\t}\\n\\t100% {\\n\\t\\t-moz-box-shadow: 0 0 0 0 rgba(10, 141, 228, 0.4);\\n\\t\\tbox-shadow: 0 0 0 0 rgba(10, 141, 228, 0.4);\\n\\t}\\n}\\n\\n.centeredBigText {\\n\\twidth: 100%;\\n\\ttext-align: center;\\n\\tmargin-top: 1em;\\n\\tmargin-bottom: 1em;\\n}\\n.trackName {\\n\\twidth: 100%;\\n\\tpadding-top: 0.1em;\\n\\tfont-size: 0.8em;\\n}\\n.instrumentName {\\n\\twidth: 100%;\\n\\ttext-align: left;\\n\\tfont-size: 0.7em;\\n\\tpadding-left: 0.2em;\\n}\\n.divider {\\n\\tborder: 0;\\n\\tborder: 1px solid var(--buttonColor);\\n}\\n\\n.floatSpanLeft span {\\n\\tfloat: left;\\n\\tmargin-right: 2px;\\n}\\n.container {\\n\\twidth: 100% !important;\\n\\tdisplay: flex;\\n}\\n.halfContainer {\\n\\twidth: 50% !important;\\n\\tfloat: left;\\n}\\n.row {\\n\\twidth: 100%;\\n\\tmargin: 0;\\n}\\n.col {\\n\\tjustify-content: space-between !important;\\n}\\n.btn-group {\\n\\talign-self: auto;\\n}\\n.btn-group-vertical {\\n\\tdisplay: flex;\\n\\tflex-direction: column;\\n}\\n.btn {\\n\\tposition: relative;\\n\\tbox-sizing: border-box;\\n\\n\\tpadding: 0.6em 1em; /* Slightly more padding */\\n\\n\\ttext-align: center;\\n\\tfont-size: 1em;\\n\\tfont-weight: normal !important;\\n\\n\\tcolor: var(--buttonFontColor);\\n\\tbackground-color: var(--buttonBgColor);\\n\\n\\toutline: none;\\n\\tborder-radius: 4px; /* Add rounded corners */\\n\\tborder: 1px solid transparent; /* Use transparent border for consistent size */\\n\\n\\ttransition: all 0.15s ease-out;\\n\\n\\tcursor: pointer; /* Ensure cursor changes */\\n\\t-ms-user-select: none; /* Internet Explorer/Edge */\\n\\tuser-select: none;\\n}\\n.btn:hover:active {\\n\\tbackground-color: var(--buttonActiveBgColor);\\n\\tcolor: #1a1a1d; /* Darker text on active accent */\\n}\\n.btn:hover {\\n\\tbackground-color: var(--buttonHoverBgColor);\\n\\tcolor: var(--buttonHoverFontColor);\\n\\tborder-color: var(--buttonHoverBgColor); /* Make border match bg on hover */\\n}\\n.btn-select-line {\\n\\tborder-bottom: 4px solid var(--accentColor); /* Use accent color */\\n\\ttransition: all 0.15s ease-out;\\n\\tposition: absolute;\\n\\tbottom: 0;\\n\\tleft: 0;\\n\\twidth: 0%;\\n\\topacity: 0;\\n}\\n.btn.selected {\\n\\tbackground-color: var(--buttonHoverBgColor); /* Maintain hover style when selected */\\n\\tcolor: var(--buttonHoverFontColor);\\n\\tborder-bottom-left-radius: 0px;\\n\\tborder-bottom-right-radius: 0px;\\n}\\n.btn-lg {\\n\\tfont-size: 1.5em;\\n\\tmargin-left: 0.2em;\\n\\tmargin-right: 0.2em;\\n}\\n.btn span {\\n\\tfont-size: 1em;\\n}\\n.pcr-button {\\n\\topacity: 0;\\n\\tposition: absolute;\\n}\\n\\n.topContainer {\\n\\tflex: 1;\\n\\tdisplay: flex;\\n\\tjustify-content: center;\\n\\talign-items: center;\\n}\\n\\n.topContainer:first-child {\\n\\tmargin-right: auto;\\n\\tjustify-content: space-between !important;\\n\\talign-items: unset;\\n}\\n\\n.topContainer:last-child {\\n\\tmargin-left: auto;\\n\\tjustify-content: space-between !important;\\n\\talign-items: unset;\\n}\\n\\n.vertical-align {\\n\\tdisplay: flex;\\n\\talign-items: center;\\n}\\n.hidden {\\n\\tvisibility: hidden;\\n\\topacity: 0;\\n\\tpointer-events: none;\\n}\\n.unhidden {\\n\\tvisibility: visible;\\n\\topacity: 1;\\n}\\n.fullscreen {\\n\\tposition: absolute;\\n\\ttop: 0;\\n\\tleft: 0;\\n\\twidth: 100%;\\n\\theight: 100%;\\n}\\n.fullscreen p {\\n\\tcolor: var(--inputBgColor);\\n\\ttext-align: center;\\n\\tposition: fixed;\\n\\tz-index: 999;\\n\\toverflow: show;\\n\\tmargin: auto;\\n\\ttop: 11.5em;\\n\\tfont-size: 1.5em;\\n\\tleft: 0;\\n\\tbottom: 0;\\n\\tright: 0;\\n\\theight: 50px;\\n}\\n\\n.floatLeft {\\n\\tfloat: left;\\n}\\n.loadingDiv {\\n\\ttext-align: left;\\n}\\n/* Loading Spinner */\\n.loader,\\n.loader:after {\\n\\tposition: fixed;\\n\\tz-index: 999;\\n\\toverflow: show;\\n\\tmargin: auto;\\n\\ttop: 150px;\\n\\tleft: 0;\\n\\tbottom: 0;\\n\\tright: 0;\\n\\twidth: 50px;\\n\\theight: 50px;\\n\\tborder-radius: 50%;\\n\\twidth: 10em;\\n\\theight: 10em;\\n}\\n.loader {\\n\\tfont-size: 0.5em;\\n\\tborder-top: 1.1em solid rgba(255, 255, 255, 0.2);\\n\\tborder-right: 1.1em solid rgba(255, 255, 255, 0.2);\\n\\tborder-bottom: 1.1em solid rgba(255, 255, 255, 0.2);\\n\\tborder-left: 1.1em solid #ffffff;\\n\\t-webkit-transform: translateZ(0);\\n\\t-ms-transform: translateZ(0);\\n\\ttransform: translateZ(0);\\n\\t-webkit-animation: load8 1.1s infinite linear;\\n\\tanimation: load8 1.1s infinite linear;\\n}\\n@-webkit-keyframes load8 {\\n\\t0% {\\n\\t\\t-webkit-transform: rotate(0deg);\\n\\t\\ttransform: rotate(0deg);\\n\\t}\\n\\t100% {\\n\\t\\t-webkit-transform: rotate(360deg);\\n\\t\\ttransform: rotate(360deg);\\n\\t}\\n}\\n@keyframes load8 {\\n\\t0% {\\n\\t\\t-webkit-transform: rotate(0deg);\\n\\t\\ttransform: rotate(0deg);\\n\\t}\\n\\t100% {\\n\\t\\t-webkit-transform: rotate(360deg);\\n\\t\\ttransform: rotate(360deg);\\n\\t}\\n}\\n\\n/* --- Responsive Styles --- */\\n@media (max-width: 768px) {\\n\\t.innerMenuDiv {\\n\\t\\twidth: 100%; /* Take full width on smaller screens */\\n\\t\\tmin-width: unset; /* Remove the fixed min-width */\\n\\t\\tright: 0; /* Ensure it's positioned correctly */\\n\\t\\t/* Add other adjustments as needed, e.g., position, height */\\n\\t}\\n\\n\\t/* Add other rules for small screens here */\\n}\\n\\n/* --- Panel Close Button --- */\\n.panel-close-button {\\n\\tposition: absolute;\\n\\ttop: 5px; /* Adjust for potential parent padding */\\n\\tright: 5px; /* Adjust for potential parent padding */\\n\\tbackground: yellow !important; /* TEMP: Force visibility */\\n\\tcolor: red !important; /* TEMP: Force visibility */\\n\\tborder: 1px solid red !important; /* TEMP: Force visibility */\\n\\tfont-size: 1.5em; /* Slightly smaller */\\n\\tfont-weight: bold;\\n\\tcursor: pointer;\\n\\tpadding: 0 8px; /* More padding */\\n\\tline-height: 1;\\n\\tz-index: 101; /* Ensure it's above other panel content */\\n\\ttransition: color 0.15s ease-out;\\n}\\n.panel-close-button:hover {\\n\\tcolor: darkred !important; /* TEMP */\\n}\\n\\n/* --- Sheet Music Container --- */\\n#sheetMusicContainer {\\n\\twidth: 100%;\\n\\theight: 220px; /* Initial height, match VexFlow height + padding */\\n\\tpadding: 10px;\\n\\tbox-sizing: border-box;\\n\\tbackground-color: var(--innerMenuBgColor); /* Match theme bg */\\n\\tborder-top: 1px solid var(--borderColor);\\n\\toverflow: hidden; /* Hide potential VexFlow overflow */\\n\\tposition: relative; /* For potential absolute positioning inside */\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.sliderContainer {\n\t/* margin-top: 5px;\n\tmargin-bottom: 5px; */\n}\n.inputSelect {\n\tfloat: right;\n\tmargin-left: 3px;\n}\n.inputSelectLabel,\n.sliderLabel,\n.checkboxlabel,\n.settingLabel {\n\tdisplay: inline-block;\n\tcolor: var(--fontColor);\n\tz-index: 15;\n\tpointer-events: none;\n\tfont-size: 0.75rem;\n\t-ms-user-select: none; /* Internet Explorer/Edge */\n\tuser-select: none;\n}\n\n.colorPickerButtonContainer {\n\tfloat: right;\n\twidth: 1.5em;\n\theight: 1.5em;\n\tmargin-top: 0em;\n\tborder-radius: 0;\n\tborder: 1px solid var(--borderColor);\n\tbackground-color: rgba(0, 0, 0, 0);\n}\n\n.checkboxlabel {\n\tcolor: var(--fontWeakenedColor);\n\ttransition: all 0.15s ease-out;\n}\n.checkboxInput:checked + label {\n\tcolor: var(--fontColor);\n}\n\n.checkboxInput {\n\tfloat: right;\n\twidth: 1.5em;\n\theight: 1.5em;\n\tmargin-top: 0em;\n\tborder-radius: 0;\n\tborder: 1px solid var(--borderColor);\n\tmargin: 0;\n\n\tbackground-color: none;\n\tbox-shadow: inset 0em 0em 0em 1em var(--inputBgColor),\n\t\tinset 0em 0em 0em 0.75em var(--inputFontColor);\n\tappearance: none;\n\t-webkit-appearance: none;\n\t-moz-appearance: none;\n\n\ttransition: all 0.15s ease-out;\n}\n\n.checkboxInput:checked {\n\tbox-shadow: inset 0em 0em 0em 0.3em var(--inputBgColor),\n\t\tinset 0em 0em 0em 0.75em var(--inputFontColor);\n}\n.checkboxInput:active {\n\tborder: 1px solid var(--borderColor);\n}\n.checkboxInput:focus {\n\tborder: 1px solid var(--borderColor);\n\toutline: none;\n}\n\ninput[type=\"text\"] {\n\toutline: none;\n\tbox-sizing: border-box;\n\tborder: 1px solid var(--borderColor);\n\tborder-radius: 4px;\n\tpadding: 0.5em 0.8em;\n\tmargin: 3px 1px;\n\tbackground-color: var(--inputBgColor);\n\tcolor: var(--inputFontColor);\n\ttransition: border-color 0.15s ease-out;\n}\n\ninput[type=\"text\"]:focus {\n\tborder-color: var(--accentColor);\n}\n\n.sliderVal {\n\tmargin-top: 5px;\n\tmargin-right: 5px;\n\tfloat: right;\n\tcolor: var(--buttonFontColor);\n\tz-index: 15;\n\tpointer-events: none;\n\tfont-size: 0.75rem;\n}\ninput[type=\"range\"] {\n\t-webkit-appearance: none;\n\tmargin: 10px 0;\n\twidth: 100%;\n\tpadding-left: 1px;\n\tpadding-right: 1px;\n\ttransition: all 1s ease-out;\n\tbackground-color: rgba(0, 0, 0, 0);\n}\ninput[type=\"range\"]:focus {\n\toutline: none;\n}\ninput[type=\"range\"]::-webkit-slider-runnable-track {\n\twidth: 100%;\n\theight: 8px;\n\tcursor: pointer;\n\tbackground: var(--inputBgColor);\n\tborder-radius: 4px;\n\tborder: 1px solid var(--borderColor);\n}\ninput[type=\"range\"]::-webkit-slider-thumb {\n\tborder: 2px solid var(--bgColor);\n\theight: 16px;\n\twidth: 16px;\n\tborder-radius: 8px;\n\tbackground: var(--accentColor);\n\tcursor: pointer;\n\t-webkit-appearance: none;\n\tmargin-top: -5px;\n\ttransition: background 0.15s ease-out;\n}\ninput[type=\"range\"]:focus::-webkit-slider-runnable-track {\n\tbackground: var(--inputBgColor);\n}\ninput[type=\"range\"]:hover::-webkit-slider-thumb {\n\tbackground: var(--buttonHoverFontColor);\n}\ninput[type=\"range\"]::-moz-range-track {\n\twidth: 100%;\n\theight: 8px;\n\tcursor: pointer;\n\tbackground: var(--inputBgColor);\n\tborder-radius: 4px;\n\tborder: 1px solid var(--borderColor);\n}\ninput[type=\"range\"]::-moz-range-thumb {\n\tborder: 2px solid var(--bgColor);\n\theight: 16px;\n\twidth: 16px;\n\tborder-radius: 8px;\n\tbackground: var(--accentColor);\n\tcursor: pointer;\n\tmargin-top: -5px;\n\ttransition: background 0.15s ease-out;\n}\ninput[type=\"range\"]:hover::-moz-range-thumb {\n\tbackground: var(--buttonHoverFontColor);\n}\ninput[type=\"range\"]::-ms-track {\n\twidth: 100%;\n\theight: 8px;\n\tcursor: pointer;\n\tbackground: transparent;\n\tborder-color: transparent;\n\tcolor: transparent;\n}\ninput[type=\"range\"]::-ms-fill-lower {\n\tbackground: var(--accentColor);\n\tborder: 1px solid var(--borderColor);\n\tborder-radius: 4px;\n}\ninput[type=\"range\"]::-ms-fill-upper {\n\tbackground: var(--inputBgColor);\n\tborder: 1px solid var(--borderColor);\n\tborder-radius: 4px;\n}\ninput[type=\"range\"]::-ms-thumb {\n\tborder: 2px solid var(--bgColor);\n\theight: 16px;\n\twidth: 16px;\n\tborder-radius: 8px;\n\tbackground: var(--accentColor);\n\tcursor: pointer;\n\tmargin-top: 1px;\n}\ninput[type=\"range\"]:focus::-ms-fill-lower {\n\tbackground: var(--accentColor);\n}\ninput[type=\"range\"]:focus::-ms-fill-upper {\n\tbackground: var(--inputBgColor);\n}\ninput[type=\"range\"]:hover::-ms-thumb {\n\tbackground: var(--buttonHoverFontColor);\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./css/Inputs.css\"],\"names\":[],\"mappings\":\"AAAA;CACC;sBACqB;AACtB;AACA;CACC,YAAY;CACZ,gBAAgB;AACjB;AACA;;;;CAIC,qBAAqB;CACrB,uBAAuB;CACvB,WAAW;CACX,oBAAoB;CACpB,kBAAkB;CAClB,qBAAqB,EAAE,2BAA2B;CAClD,iBAAiB;AAClB;;AAEA;CACC,YAAY;CACZ,YAAY;CACZ,aAAa;CACb,eAAe;CACf,gBAAgB;CAChB,oCAAoC;CACpC,kCAAkC;AACnC;;AAEA;CACC,+BAA+B;CAC/B,8BAA8B;AAC/B;AACA;CACC,uBAAuB;AACxB;;AAEA;CACC,YAAY;CACZ,YAAY;CACZ,aAAa;CACb,eAAe;CACf,gBAAgB;CAChB,oCAAoC;CACpC,SAAS;;CAET,sBAAsB;CACtB;gDAC+C;CAC/C,gBAAgB;CAChB,wBAAwB;CACxB,qBAAqB;;CAErB,8BAA8B;AAC/B;;AAEA;CACC;gDAC+C;AAChD;AACA;CACC,oCAAoC;AACrC;AACA;CACC,oCAAoC;CACpC,aAAa;AACd;;AAEA;CACC,aAAa;CACb,sBAAsB;CACtB,oCAAoC;CACpC,kBAAkB;CAClB,oBAAoB;CACpB,eAAe;CACf,qCAAqC;CACrC,4BAA4B;CAC5B,uCAAuC;AACxC;;AAEA;CACC,gCAAgC;AACjC;;AAEA;CACC,eAAe;CACf,iBAAiB;CACjB,YAAY;CACZ,6BAA6B;CAC7B,WAAW;CACX,oBAAoB;CACpB,kBAAkB;AACnB;AACA;CACC,wBAAwB;CACxB,cAAc;CACd,WAAW;CACX,iBAAiB;CACjB,kBAAkB;CAClB,2BAA2B;CAC3B,kCAAkC;AACnC;AACA;CACC,aAAa;AACd;AACA;CACC,WAAW;CACX,WAAW;CACX,eAAe;CACf,+BAA+B;CAC/B,kBAAkB;CAClB,oCAAoC;AACrC;AACA;CACC,gCAAgC;CAChC,YAAY;CACZ,WAAW;CACX,kBAAkB;CAClB,8BAA8B;CAC9B,eAAe;CACf,wBAAwB;CACxB,gBAAgB;CAChB,qCAAqC;AACtC;AACA;CACC,+BAA+B;AAChC;AACA;CACC,uCAAuC;AACxC;AACA;CACC,WAAW;CACX,WAAW;CACX,eAAe;CACf,+BAA+B;CAC/B,kBAAkB;CAClB,oCAAoC;AACrC;AACA;CACC,gCAAgC;CAChC,YAAY;CACZ,WAAW;CACX,kBAAkB;CAClB,8BAA8B;CAC9B,eAAe;CACf,gBAAgB;CAChB,qCAAqC;AACtC;AACA;CACC,uCAAuC;AACxC;AACA;CACC,WAAW;CACX,WAAW;CACX,eAAe;CACf,uBAAuB;CACvB,yBAAyB;CACzB,kBAAkB;AACnB;AACA;CACC,8BAA8B;CAC9B,oCAAoC;CACpC,kBAAkB;AACnB;AACA;CACC,+BAA+B;CAC/B,oCAAoC;CACpC,kBAAkB;AACnB;AACA;CACC,gCAAgC;CAChC,YAAY;CACZ,WAAW;CACX,kBAAkB;CAClB,8BAA8B;CAC9B,eAAe;CACf,eAAe;AAChB;AACA;CACC,8BAA8B;AAC/B;AACA;CACC,+BAA+B;AAChC;AACA;CACC,uCAAuC;AACxC\",\"sourcesContent\":[\".sliderContainer {\\n\\t/* margin-top: 5px;\\n\\tmargin-bottom: 5px; */\\n}\\n.inputSelect {\\n\\tfloat: right;\\n\\tmargin-left: 3px;\\n}\\n.inputSelectLabel,\\n.sliderLabel,\\n.checkboxlabel,\\n.settingLabel {\\n\\tdisplay: inline-block;\\n\\tcolor: var(--fontColor);\\n\\tz-index: 15;\\n\\tpointer-events: none;\\n\\tfont-size: 0.75rem;\\n\\t-ms-user-select: none; /* Internet Explorer/Edge */\\n\\tuser-select: none;\\n}\\n\\n.colorPickerButtonContainer {\\n\\tfloat: right;\\n\\twidth: 1.5em;\\n\\theight: 1.5em;\\n\\tmargin-top: 0em;\\n\\tborder-radius: 0;\\n\\tborder: 1px solid var(--borderColor);\\n\\tbackground-color: rgba(0, 0, 0, 0);\\n}\\n\\n.checkboxlabel {\\n\\tcolor: var(--fontWeakenedColor);\\n\\ttransition: all 0.15s ease-out;\\n}\\n.checkboxInput:checked + label {\\n\\tcolor: var(--fontColor);\\n}\\n\\n.checkboxInput {\\n\\tfloat: right;\\n\\twidth: 1.5em;\\n\\theight: 1.5em;\\n\\tmargin-top: 0em;\\n\\tborder-radius: 0;\\n\\tborder: 1px solid var(--borderColor);\\n\\tmargin: 0;\\n\\n\\tbackground-color: none;\\n\\tbox-shadow: inset 0em 0em 0em 1em var(--inputBgColor),\\n\\t\\tinset 0em 0em 0em 0.75em var(--inputFontColor);\\n\\tappearance: none;\\n\\t-webkit-appearance: none;\\n\\t-moz-appearance: none;\\n\\n\\ttransition: all 0.15s ease-out;\\n}\\n\\n.checkboxInput:checked {\\n\\tbox-shadow: inset 0em 0em 0em 0.3em var(--inputBgColor),\\n\\t\\tinset 0em 0em 0em 0.75em var(--inputFontColor);\\n}\\n.checkboxInput:active {\\n\\tborder: 1px solid var(--borderColor);\\n}\\n.checkboxInput:focus {\\n\\tborder: 1px solid var(--borderColor);\\n\\toutline: none;\\n}\\n\\ninput[type=\\\"text\\\"] {\\n\\toutline: none;\\n\\tbox-sizing: border-box;\\n\\tborder: 1px solid var(--borderColor);\\n\\tborder-radius: 4px;\\n\\tpadding: 0.5em 0.8em;\\n\\tmargin: 3px 1px;\\n\\tbackground-color: var(--inputBgColor);\\n\\tcolor: var(--inputFontColor);\\n\\ttransition: border-color 0.15s ease-out;\\n}\\n\\ninput[type=\\\"text\\\"]:focus {\\n\\tborder-color: var(--accentColor);\\n}\\n\\n.sliderVal {\\n\\tmargin-top: 5px;\\n\\tmargin-right: 5px;\\n\\tfloat: right;\\n\\tcolor: var(--buttonFontColor);\\n\\tz-index: 15;\\n\\tpointer-events: none;\\n\\tfont-size: 0.75rem;\\n}\\ninput[type=\\\"range\\\"] {\\n\\t-webkit-appearance: none;\\n\\tmargin: 10px 0;\\n\\twidth: 100%;\\n\\tpadding-left: 1px;\\n\\tpadding-right: 1px;\\n\\ttransition: all 1s ease-out;\\n\\tbackground-color: rgba(0, 0, 0, 0);\\n}\\ninput[type=\\\"range\\\"]:focus {\\n\\toutline: none;\\n}\\ninput[type=\\\"range\\\"]::-webkit-slider-runnable-track {\\n\\twidth: 100%;\\n\\theight: 8px;\\n\\tcursor: pointer;\\n\\tbackground: var(--inputBgColor);\\n\\tborder-radius: 4px;\\n\\tborder: 1px solid var(--borderColor);\\n}\\ninput[type=\\\"range\\\"]::-webkit-slider-thumb {\\n\\tborder: 2px solid var(--bgColor);\\n\\theight: 16px;\\n\\twidth: 16px;\\n\\tborder-radius: 8px;\\n\\tbackground: var(--accentColor);\\n\\tcursor: pointer;\\n\\t-webkit-appearance: none;\\n\\tmargin-top: -5px;\\n\\ttransition: background 0.15s ease-out;\\n}\\ninput[type=\\\"range\\\"]:focus::-webkit-slider-runnable-track {\\n\\tbackground: var(--inputBgColor);\\n}\\ninput[type=\\\"range\\\"]:hover::-webkit-slider-thumb {\\n\\tbackground: var(--buttonHoverFontColor);\\n}\\ninput[type=\\\"range\\\"]::-moz-range-track {\\n\\twidth: 100%;\\n\\theight: 8px;\\n\\tcursor: pointer;\\n\\tbackground: var(--inputBgColor);\\n\\tborder-radius: 4px;\\n\\tborder: 1px solid var(--borderColor);\\n}\\ninput[type=\\\"range\\\"]::-moz-range-thumb {\\n\\tborder: 2px solid var(--bgColor);\\n\\theight: 16px;\\n\\twidth: 16px;\\n\\tborder-radius: 8px;\\n\\tbackground: var(--accentColor);\\n\\tcursor: pointer;\\n\\tmargin-top: -5px;\\n\\ttransition: background 0.15s ease-out;\\n}\\ninput[type=\\\"range\\\"]:hover::-moz-range-thumb {\\n\\tbackground: var(--buttonHoverFontColor);\\n}\\ninput[type=\\\"range\\\"]::-ms-track {\\n\\twidth: 100%;\\n\\theight: 8px;\\n\\tcursor: pointer;\\n\\tbackground: transparent;\\n\\tborder-color: transparent;\\n\\tcolor: transparent;\\n}\\ninput[type=\\\"range\\\"]::-ms-fill-lower {\\n\\tbackground: var(--accentColor);\\n\\tborder: 1px solid var(--borderColor);\\n\\tborder-radius: 4px;\\n}\\ninput[type=\\\"range\\\"]::-ms-fill-upper {\\n\\tbackground: var(--inputBgColor);\\n\\tborder: 1px solid var(--borderColor);\\n\\tborder-radius: 4px;\\n}\\ninput[type=\\\"range\\\"]::-ms-thumb {\\n\\tborder: 2px solid var(--bgColor);\\n\\theight: 16px;\\n\\twidth: 16px;\\n\\tborder-radius: 8px;\\n\\tbackground: var(--accentColor);\\n\\tcursor: pointer;\\n\\tmargin-top: 1px;\\n}\\ninput[type=\\\"range\\\"]:focus::-ms-fill-lower {\\n\\tbackground: var(--accentColor);\\n}\\ninput[type=\\\"range\\\"]:focus::-ms-fill-upper {\\n\\tbackground: var(--inputBgColor);\\n}\\ninput[type=\\\"range\\\"]:hover::-ms-thumb {\\n\\tbackground: var(--buttonHoverFontColor);\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_GET_URL_IMPORT___ from \"../node_modules/css-loader/dist/runtime/getUrl.js\";\nvar ___CSS_LOADER_URL_IMPORT_0___ = new URL(\"data:image/svg+xml;utf8, <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 2 2\\\"><path fill=\\\"white\\\" d=\\\"M1,0H2V1H1V0ZM0,1H1V2H0V1Z\\\"/><path fill=\\\"gray\\\" d=\\\"M0,0H1V1H0V0ZM1,1H2V2H1V1Z\\\"/></svg>\", import.meta.url);\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/*! Pickr 1.4.7 MIT | https://github.com/Simonwep/pickr */.pickr{position:relative;overflow:visible;-webkit-transform:translateY(0);transform:translateY(0)}.pickr *{box-sizing:border-box;outline:none;border:none;-webkit-appearance:none}.pcr-app *,.pickr *{box-sizing:border-box;outline:none;border:none;-webkit-appearance:none}.pcr-app button.pcr-active,.pcr-app button:focus,.pcr-app input.pcr-active,.pcr-app input:focus,.pickr button.pcr-active,.pickr button:focus,.pickr input.pcr-active,.pickr input:focus{box-shadow:0 0 0 1px hsla(0,0%,100%,.85),0 0 0 3px currentColor}.pcr-app .pcr-palette,.pcr-app .pcr-slider,.pickr .pcr-palette,.pickr .pcr-slider{-webkit-transition:box-shadow .3s;transition:box-shadow .3s}.pcr-app .pcr-palette:focus,.pcr-app .pcr-slider:focus,.pickr .pcr-palette:focus,.pickr .pcr-slider:focus{box-shadow:0 0 0 1px hsla(0,0%,100%,.85),0 0 0 3px rgba(0,0,0,.25)}.pcr-app{position:fixed;display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;z-index:10000;border-radius:.1em;background:#fff;opacity:0;visibility:hidden;-webkit-transition:opacity .3s,visibility 0s .3s;transition:opacity .3s,visibility 0s .3s;font-family:-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,sans-serif;box-shadow:0 .15em 1.5em 0 rgba(0,0,0,.1),0 0 1em 0 rgba(0,0,0,.03);left:0;top:0}.pcr-app.visible{-webkit-transition:opacity .3s;transition:opacity .3s;visibility:visible;opacity:1}.pcr-app .pcr-swatches{display:-webkit-box;display:flex;flex-wrap:wrap;margin-top:.75em}.pcr-app .pcr-swatches.pcr-last{margin:0}@supports (display:grid){.pcr-app .pcr-swatches{display:grid;-webkit-box-align:center;align-items:center;grid-template-columns:repeat(auto-fit,1.75em)}}.pcr-app .pcr-swatches>button{font-size:1em;position:relative;width:calc(1.75em - 5px);height:calc(1.75em - 5px);border-radius:.15em;cursor:pointer;margin:2.5px;flex-shrink:0;justify-self:center;-webkit-transition:all .15s;transition:all .15s;overflow:hidden;background:transparent;z-index:1}.pcr-app .pcr-swatches>button:before{position:absolute;content:\"\";top:0;left:0;width:100%;height:100%;background:url(${___CSS_LOADER_URL_REPLACEMENT_0___});background-size:6px;border-radius:.15em;z-index:-1}.pcr-app .pcr-swatches>button:after{content:\"\";position:absolute;top:0;left:0;width:100%;height:100%;background:currentColor;border:1px solid rgba(0,0,0,.05);border-radius:.15em;box-sizing:border-box}.pcr-app .pcr-swatches>button:hover{-webkit-filter:brightness(1.05);filter:brightness(1.05)}.pcr-app .pcr-interaction{display:-webkit-box;display:flex;flex-wrap:wrap;-webkit-box-align:center;align-items:center;margin:0 -.2em}.pcr-app .pcr-interaction>*{margin:0 .2em}.pcr-app .pcr-interaction input{letter-spacing:.07em;font-size:.75em;text-align:center;cursor:pointer;color:#75797e;background:#f1f3f4;border-radius:.15em;-webkit-transition:all .15s;transition:all .15s;padding:.45em .5em;margin-top:.75em}.pcr-app .pcr-interaction input:hover{-webkit-filter:brightness(.975);filter:brightness(.975)}.pcr-app .pcr-interaction input:focus{box-shadow:0 0 0 1px hsla(0,0%,100%,.85),0 0 0 3px rgba(66,133,244,.75)}.pcr-app .pcr-interaction .pcr-result{color:#75797e;text-align:left;-webkit-box-flex:1;flex:1 1 8em;min-width:8em;-webkit-transition:all .2s;transition:all .2s;border-radius:.15em;background:#f1f3f4;cursor:text}.pcr-app .pcr-interaction .pcr-result::-moz-selection{background:#4285f4;color:#fff}.pcr-app .pcr-interaction .pcr-result::selection{background:#4285f4;color:#fff}.pcr-app .pcr-interaction .pcr-type.active{color:#fff;background:#4285f4}.pcr-app .pcr-interaction .pcr-cancel,.pcr-app .pcr-interaction .pcr-clear,.pcr-app .pcr-interaction .pcr-save{width:auto;color:#fff}.pcr-app .pcr-interaction .pcr-cancel:hover,.pcr-app .pcr-interaction .pcr-clear:hover,.pcr-app .pcr-interaction .pcr-save:hover{-webkit-filter:brightness(.925);filter:brightness(.925)}.pcr-app .pcr-interaction .pcr-save{background:#4285f4}.pcr-app .pcr-interaction .pcr-cancel,.pcr-app .pcr-interaction .pcr-clear{background:#f44250}.pcr-app .pcr-interaction .pcr-cancel:focus,.pcr-app .pcr-interaction .pcr-clear:focus{box-shadow:0 0 0 1px hsla(0,0%,100%,.85),0 0 0 3px rgba(244,66,80,.75)}.pcr-app .pcr-selection .pcr-picker{position:absolute;height:18px;width:18px;border:2px solid #fff;border-radius:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.pcr-app .pcr-selection .pcr-color-chooser,.pcr-app .pcr-selection .pcr-color-opacity,.pcr-app .pcr-selection .pcr-color-palette{position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;cursor:grab;cursor:-webkit-grab}.pcr-app .pcr-selection .pcr-color-chooser:active,.pcr-app .pcr-selection .pcr-color-opacity:active,.pcr-app .pcr-selection .pcr-color-palette:active{cursor:grabbing;cursor:-webkit-grabbing}.pcr-app[data-theme=nano]{width:14.25em;max-width:95vw}.pcr-app[data-theme=nano] .pcr-swatches{margin-top:.6em;padding:0 .6em}.pcr-app[data-theme=nano] .pcr-interaction{padding:0 .6em .6em}.pcr-app[data-theme=nano] .pcr-selection{display:grid;grid-gap:.6em;grid-template-columns:1fr 4fr;grid-template-rows:5fr auto auto;-webkit-box-align:center;align-items:center;height:10.5em;width:100%;align-self:flex-start}.pcr-app[data-theme=nano] .pcr-selection .pcr-color-preview{grid-area:2/1/4/1;height:100%;width:100%;display:-webkit-box;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;flex-direction:row;-webkit-box-pack:center;justify-content:center;margin-left:.6em}.pcr-app[data-theme=nano] .pcr-selection .pcr-color-preview .pcr-last-color{display:none}.pcr-app[data-theme=nano] .pcr-selection .pcr-color-preview .pcr-current-color{position:relative;background:currentColor;width:2em;height:2em;border-radius:50em;overflow:hidden}.pcr-app[data-theme=nano] .pcr-selection .pcr-color-preview .pcr-current-color:before{position:absolute;content:\"\";top:0;left:0;width:100%;height:100%;background:url(${___CSS_LOADER_URL_REPLACEMENT_0___});background-size:.5em;border-radius:.15em;z-index:-1}.pcr-app[data-theme=nano] .pcr-selection .pcr-color-palette{grid-area:1/1/2/3;width:100%;height:100%;z-index:1}.pcr-app[data-theme=nano] .pcr-selection .pcr-color-palette .pcr-palette{border-radius:.15em;width:100%;height:100%}.pcr-app[data-theme=nano] .pcr-selection .pcr-color-palette .pcr-palette:before{position:absolute;content:\"\";top:0;left:0;width:100%;height:100%;background:url(${___CSS_LOADER_URL_REPLACEMENT_0___});background-size:.5em;border-radius:.15em;z-index:-1}.pcr-app[data-theme=nano] .pcr-selection .pcr-color-chooser{grid-area:2/2/2/2}.pcr-app[data-theme=nano] .pcr-selection .pcr-color-opacity{grid-area:3/2/3/2}.pcr-app[data-theme=nano] .pcr-selection .pcr-color-chooser,.pcr-app[data-theme=nano] .pcr-selection .pcr-color-opacity{height:.5em;margin:0 .6em}.pcr-app[data-theme=nano] .pcr-selection .pcr-color-chooser .pcr-picker,.pcr-app[data-theme=nano] .pcr-selection .pcr-color-opacity .pcr-picker{top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%)}.pcr-app[data-theme=nano] .pcr-selection .pcr-color-chooser .pcr-slider,.pcr-app[data-theme=nano] .pcr-selection .pcr-color-opacity .pcr-slider{-webkit-box-flex:1;flex-grow:1;border-radius:50em}.pcr-app[data-theme=nano] .pcr-selection .pcr-color-chooser .pcr-slider{background:-webkit-gradient(linear,left top,right top,from(red),color-stop(#ff0),color-stop(#0f0),color-stop(#0ff),color-stop(#00f),color-stop(#f0f),to(red));background:linear-gradient(90deg,red,#ff0,#0f0,#0ff,#00f,#f0f,red)}.pcr-app[data-theme=nano] .pcr-selection .pcr-color-opacity .pcr-slider{background:-webkit-gradient(linear,left top,right top,from(transparent),to(#000)),url(${___CSS_LOADER_URL_REPLACEMENT_0___});background:linear-gradient(90deg,transparent,#000),url(${___CSS_LOADER_URL_REPLACEMENT_0___});background-size:100%,.25em}`, \"\",{\"version\":3,\"sources\":[\"webpack://./css/nano.min.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"/*! Pickr 1.4.7 MIT | https://github.com/Simonwep/pickr */.pickr{position:relative;overflow:visible;-webkit-transform:translateY(0);transform:translateY(0)}.pickr *{box-sizing:border-box;outline:none;border:none;-webkit-appearance:none}.pcr-app *,.pickr *{box-sizing:border-box;outline:none;border:none;-webkit-appearance:none}.pcr-app button.pcr-active,.pcr-app button:focus,.pcr-app input.pcr-active,.pcr-app input:focus,.pickr button.pcr-active,.pickr button:focus,.pickr input.pcr-active,.pickr input:focus{box-shadow:0 0 0 1px hsla(0,0%,100%,.85),0 0 0 3px currentColor}.pcr-app .pcr-palette,.pcr-app .pcr-slider,.pickr .pcr-palette,.pickr .pcr-slider{-webkit-transition:box-shadow .3s;transition:box-shadow .3s}.pcr-app .pcr-palette:focus,.pcr-app .pcr-slider:focus,.pickr .pcr-palette:focus,.pickr .pcr-slider:focus{box-shadow:0 0 0 1px hsla(0,0%,100%,.85),0 0 0 3px rgba(0,0,0,.25)}.pcr-app{position:fixed;display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;z-index:10000;border-radius:.1em;background:#fff;opacity:0;visibility:hidden;-webkit-transition:opacity .3s,visibility 0s .3s;transition:opacity .3s,visibility 0s .3s;font-family:-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,sans-serif;box-shadow:0 .15em 1.5em 0 rgba(0,0,0,.1),0 0 1em 0 rgba(0,0,0,.03);left:0;top:0}.pcr-app.visible{-webkit-transition:opacity .3s;transition:opacity .3s;visibility:visible;opacity:1}.pcr-app .pcr-swatches{display:-webkit-box;display:flex;flex-wrap:wrap;margin-top:.75em}.pcr-app .pcr-swatches.pcr-last{margin:0}@supports (display:grid){.pcr-app .pcr-swatches{display:grid;-webkit-box-align:center;align-items:center;grid-template-columns:repeat(auto-fit,1.75em)}}.pcr-app .pcr-swatches>button{font-size:1em;position:relative;width:calc(1.75em - 5px);height:calc(1.75em - 5px);border-radius:.15em;cursor:pointer;margin:2.5px;flex-shrink:0;justify-self:center;-webkit-transition:all .15s;transition:all .15s;overflow:hidden;background:transparent;z-index:1}.pcr-app .pcr-swatches>button:before{position:absolute;content:\\\"\\\";top:0;left:0;width:100%;height:100%;background:url('data:image/svg+xml;utf8, <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 2 2\\\"><path fill=\\\"white\\\" d=\\\"M1,0H2V1H1V0ZM0,1H1V2H0V1Z\\\"/><path fill=\\\"gray\\\" d=\\\"M0,0H1V1H0V0ZM1,1H2V2H1V1Z\\\"/></svg>');background-size:6px;border-radius:.15em;z-index:-1}.pcr-app .pcr-swatches>button:after{content:\\\"\\\";position:absolute;top:0;left:0;width:100%;height:100%;background:currentColor;border:1px solid rgba(0,0,0,.05);border-radius:.15em;box-sizing:border-box}.pcr-app .pcr-swatches>button:hover{-webkit-filter:brightness(1.05);filter:brightness(1.05)}.pcr-app .pcr-interaction{display:-webkit-box;display:flex;flex-wrap:wrap;-webkit-box-align:center;align-items:center;margin:0 -.2em}.pcr-app .pcr-interaction>*{margin:0 .2em}.pcr-app .pcr-interaction input{letter-spacing:.07em;font-size:.75em;text-align:center;cursor:pointer;color:#75797e;background:#f1f3f4;border-radius:.15em;-webkit-transition:all .15s;transition:all .15s;padding:.45em .5em;margin-top:.75em}.pcr-app .pcr-interaction input:hover{-webkit-filter:brightness(.975);filter:brightness(.975)}.pcr-app .pcr-interaction input:focus{box-shadow:0 0 0 1px hsla(0,0%,100%,.85),0 0 0 3px rgba(66,133,244,.75)}.pcr-app .pcr-interaction .pcr-result{color:#75797e;text-align:left;-webkit-box-flex:1;flex:1 1 8em;min-width:8em;-webkit-transition:all .2s;transition:all .2s;border-radius:.15em;background:#f1f3f4;cursor:text}.pcr-app .pcr-interaction .pcr-result::-moz-selection{background:#4285f4;color:#fff}.pcr-app .pcr-interaction .pcr-result::selection{background:#4285f4;color:#fff}.pcr-app .pcr-interaction .pcr-type.active{color:#fff;background:#4285f4}.pcr-app .pcr-interaction .pcr-cancel,.pcr-app .pcr-interaction .pcr-clear,.pcr-app .pcr-interaction .pcr-save{width:auto;color:#fff}.pcr-app .pcr-interaction .pcr-cancel:hover,.pcr-app .pcr-interaction .pcr-clear:hover,.pcr-app .pcr-interaction .pcr-save:hover{-webkit-filter:brightness(.925);filter:brightness(.925)}.pcr-app .pcr-interaction .pcr-save{background:#4285f4}.pcr-app .pcr-interaction .pcr-cancel,.pcr-app .pcr-interaction .pcr-clear{background:#f44250}.pcr-app .pcr-interaction .pcr-cancel:focus,.pcr-app .pcr-interaction .pcr-clear:focus{box-shadow:0 0 0 1px hsla(0,0%,100%,.85),0 0 0 3px rgba(244,66,80,.75)}.pcr-app .pcr-selection .pcr-picker{position:absolute;height:18px;width:18px;border:2px solid #fff;border-radius:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.pcr-app .pcr-selection .pcr-color-chooser,.pcr-app .pcr-selection .pcr-color-opacity,.pcr-app .pcr-selection .pcr-color-palette{position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;cursor:grab;cursor:-webkit-grab}.pcr-app .pcr-selection .pcr-color-chooser:active,.pcr-app .pcr-selection .pcr-color-opacity:active,.pcr-app .pcr-selection .pcr-color-palette:active{cursor:grabbing;cursor:-webkit-grabbing}.pcr-app[data-theme=nano]{width:14.25em;max-width:95vw}.pcr-app[data-theme=nano] .pcr-swatches{margin-top:.6em;padding:0 .6em}.pcr-app[data-theme=nano] .pcr-interaction{padding:0 .6em .6em}.pcr-app[data-theme=nano] .pcr-selection{display:grid;grid-gap:.6em;grid-template-columns:1fr 4fr;grid-template-rows:5fr auto auto;-webkit-box-align:center;align-items:center;height:10.5em;width:100%;align-self:flex-start}.pcr-app[data-theme=nano] .pcr-selection .pcr-color-preview{grid-area:2/1/4/1;height:100%;width:100%;display:-webkit-box;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;flex-direction:row;-webkit-box-pack:center;justify-content:center;margin-left:.6em}.pcr-app[data-theme=nano] .pcr-selection .pcr-color-preview .pcr-last-color{display:none}.pcr-app[data-theme=nano] .pcr-selection .pcr-color-preview .pcr-current-color{position:relative;background:currentColor;width:2em;height:2em;border-radius:50em;overflow:hidden}.pcr-app[data-theme=nano] .pcr-selection .pcr-color-preview .pcr-current-color:before{position:absolute;content:\\\"\\\";top:0;left:0;width:100%;height:100%;background:url('data:image/svg+xml;utf8, <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 2 2\\\"><path fill=\\\"white\\\" d=\\\"M1,0H2V1H1V0ZM0,1H1V2H0V1Z\\\"/><path fill=\\\"gray\\\" d=\\\"M0,0H1V1H0V0ZM1,1H2V2H1V1Z\\\"/></svg>');background-size:.5em;border-radius:.15em;z-index:-1}.pcr-app[data-theme=nano] .pcr-selection .pcr-color-palette{grid-area:1/1/2/3;width:100%;height:100%;z-index:1}.pcr-app[data-theme=nano] .pcr-selection .pcr-color-palette .pcr-palette{border-radius:.15em;width:100%;height:100%}.pcr-app[data-theme=nano] .pcr-selection .pcr-color-palette .pcr-palette:before{position:absolute;content:\\\"\\\";top:0;left:0;width:100%;height:100%;background:url('data:image/svg+xml;utf8, <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 2 2\\\"><path fill=\\\"white\\\" d=\\\"M1,0H2V1H1V0ZM0,1H1V2H0V1Z\\\"/><path fill=\\\"gray\\\" d=\\\"M0,0H1V1H0V0ZM1,1H2V2H1V1Z\\\"/></svg>');background-size:.5em;border-radius:.15em;z-index:-1}.pcr-app[data-theme=nano] .pcr-selection .pcr-color-chooser{grid-area:2/2/2/2}.pcr-app[data-theme=nano] .pcr-selection .pcr-color-opacity{grid-area:3/2/3/2}.pcr-app[data-theme=nano] .pcr-selection .pcr-color-chooser,.pcr-app[data-theme=nano] .pcr-selection .pcr-color-opacity{height:.5em;margin:0 .6em}.pcr-app[data-theme=nano] .pcr-selection .pcr-color-chooser .pcr-picker,.pcr-app[data-theme=nano] .pcr-selection .pcr-color-opacity .pcr-picker{top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%)}.pcr-app[data-theme=nano] .pcr-selection .pcr-color-chooser .pcr-slider,.pcr-app[data-theme=nano] .pcr-selection .pcr-color-opacity .pcr-slider{-webkit-box-flex:1;flex-grow:1;border-radius:50em}.pcr-app[data-theme=nano] .pcr-selection .pcr-color-chooser .pcr-slider{background:-webkit-gradient(linear,left top,right top,from(red),color-stop(#ff0),color-stop(#0f0),color-stop(#0ff),color-stop(#00f),color-stop(#f0f),to(red));background:linear-gradient(90deg,red,#ff0,#0f0,#0ff,#00f,#f0f,red)}.pcr-app[data-theme=nano] .pcr-selection .pcr-color-opacity .pcr-slider{background:-webkit-gradient(linear,left top,right top,from(transparent),to(#000)),url('data:image/svg+xml;utf8, <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 2 2\\\"><path fill=\\\"white\\\" d=\\\"M1,0H2V1H1V0ZM0,1H1V2H0V1Z\\\"/><path fill=\\\"gray\\\" d=\\\"M0,0H1V1H0V0ZM1,1H2V2H1V1Z\\\"/></svg>');background:linear-gradient(90deg,transparent,#000),url('data:image/svg+xml;utf8, <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 2 2\\\"><path fill=\\\"white\\\" d=\\\"M1,0H2V1H1V0ZM0,1H1V2H0V1Z\\\"/><path fill=\\\"gray\\\" d=\\\"M0,0H1V1H0V0ZM1,1H2V2H1V1Z\\\"/></svg>');background-size:100%,.25em}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    options = {};\n  }\n  if (!url) {\n    return url;\n  }\n  url = String(url.__esModule ? url.default : url);\n\n  // If url is already wrapped in quotes, remove them\n  if (/^['\"].*['\"]$/.test(url)) {\n    url = url.slice(1, -1);\n  }\n  if (options.hash) {\n    url += options.hash;\n  }\n\n  // Should url be wrapped?\n  // See https://drafts.csswg.org/css-values-3/#urls\n  if (/[\"'() \\t\\n]|(%20)/.test(url) || options.needQuotes) {\n    return \"\\\"\".concat(url.replace(/\"/g, '\\\\\"').replace(/\\n/g, \"\\\\n\"), \"\\\"\");\n  }\n  return url;\n};","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;","\"use strict\";\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, ``, \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","__webpack_require__.nc = undefined;","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!./bootstrap.min.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!./bootstrap.min.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!./bootstrap-theme.min.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!./bootstrap-theme.min.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!./nano.min.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!./nano.min.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!./Interface.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!./Interface.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!./Inputs.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!./Inputs.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!./Settings.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!./Settings.css\";\n       export default content && content.locals ? content.locals : undefined;\n","function formatTime(seconds, showMilis) {\n\tseconds = Math.max(seconds, 0)\n\tlet date = new Date(seconds * 1000)\n\tlet timeStrLength = showMilis ? 11 : 8\n\ttry {\n\t\tlet timeStr = date.toISOString().substr(11, timeStrLength)\n\t\tif (timeStr.substr(0, 2) == \"00\") {\n\t\t\ttimeStr = timeStr.substr(3)\n\t\t}\n\t\treturn timeStr\n\t} catch (e) {\n\t\tconsole.error(e)\n\t\t//ignore this. only seems to happend when messing with breakpoints in devtools\n\t}\n}\n/**\n *  Checks whether a note Number corresponds to a black piano key\n * @param {Number} noteNumber\n */\nfunction isBlack(noteNumber) {\n\treturn (noteNumber + 11) % 12 == 0 ||\n\t\t(noteNumber + 8) % 12 == 0 ||\n\t\t(noteNumber + 6) % 12 == 0 ||\n\t\t(noteNumber + 3) % 12 == 0 ||\n\t\t(noteNumber + 1) % 12 == 0\n\t\t? 1\n\t\t: 0\n}\nfunction sum(arr) {\n\treturn arr.reduce((previousVal, currentVal) => previousVal + currentVal)\n}\n\n/**\n *\n * @param {CanvasRenderingContext2D} ctx\n * @param {Number} x\n * @param {Number} y\n * @param {Number} width\n * @param {Number} height\n * @param {Number} radius\n */\nfunction drawRoundRect(ctx, x, y, width, height, radius, isRounded) {\n\t// radius = radius * 2 < ( Math.min( height, width ) ) ? radius : ( Math.min( height, width ) ) / 2\n\tif (typeof radius === \"undefined\") {\n\t\tradius = 0\n\t}\n\tif (typeof radius === \"number\") {\n\t\tradius = Math.min(radius, Math.min(width / 2, height / 2))\n\t\tradius = {\n\t\t\ttl: radius,\n\t\t\ttr: radius,\n\t\t\tbr: radius,\n\t\t\tbl: radius\n\t\t}\n\t} else {\n\t\tvar defaultRadius = {\n\t\t\ttl: 0,\n\t\t\ttr: 0,\n\t\t\tbr: 0,\n\t\t\tbl: 0\n\t\t}\n\t\tfor (var side in defaultRadius) {\n\t\t\tradius[side] = radius[side] || defaultRadius[side]\n\t\t}\n\t}\n\n\tctx.beginPath()\n\tif (!isRounded) {\n\t\tctx.moveTo(x + radius.tl, y)\n\t\tctx.lineTo(x + width - radius.tr, y)\n\t\tctx.lineTo(x + width, y + radius.tr)\n\t\tctx.lineTo(x + width, y + height - radius.br)\n\t\tctx.lineTo(x + width - radius.br, y + height)\n\t\tctx.lineTo(x + radius.bl, y + height)\n\t\tctx.lineTo(x, y + height - radius.bl)\n\t\tctx.lineTo(x, y + radius.tl)\n\t\tctx.lineTo(x + radius.tl, y)\n\t} else {\n\t\tctx.moveTo(x + radius.tl, y)\n\t\tctx.lineTo(x + width - radius.tr, y)\n\t\tctx.quadraticCurveTo(x + width, y, x + width, y + radius.tr)\n\t\tctx.lineTo(x + width, y + height - radius.br)\n\t\tctx.quadraticCurveTo(\n\t\t\tx + width,\n\t\t\ty + height,\n\t\t\tx + width - radius.br,\n\t\t\ty + height\n\t\t)\n\t\tctx.lineTo(x + radius.bl, y + height)\n\t\tctx.quadraticCurveTo(x, y + height, x, y + height - radius.bl)\n\t\tctx.lineTo(x, y + radius.tl)\n\t\tctx.quadraticCurveTo(x, y, x + radius.tl, y)\n\t}\n\tctx.closePath()\n}\n\nfunction replaceAllString(text, replaceThis, withThat) {\n\treturn text.replace(new RegExp(replaceThis, \"g\"), withThat)\n}\n\nfunction groupArrayBy(arr, keyFunc) {\n\tlet keys = {}\n\tarr.forEach(el => (keys[keyFunc(el)] = []))\n\tObject.keys(keys).forEach(key => {\n\t\tarr.forEach(el => (keyFunc(el) == key ? keys[keyFunc(el)].push(el) : null))\n\t})\n\treturn keys\n}\nfunction loadJson(url, callback) {\n\tlet request = new XMLHttpRequest()\n\trequest.overrideMimeType(\"application/json\")\n\trequest.open(\"GET\", url, true)\n\trequest.onreadystatechange = function () {\n\t\tif (request.readyState == 4 && request.status == \"200\") {\n\t\t\tcallback(request.responseText)\n\t\t}\n\t}\n\trequest.send(null)\n}\n\nfunction iOS() {\n\treturn (\n\t\t[\n\t\t\t\"iPad Simulator\",\n\t\t\t\"iPhone Simulator\",\n\t\t\t\"iPod Simulator\",\n\t\t\t\"iPad\",\n\t\t\t\"iPhone\",\n\t\t\t\"iPod\"\n\t\t].includes(navigator.platform) ||\n\t\t// iPad on iOS 13 detection\n\t\t(navigator.userAgent.includes(\"Mac\") && \"ontouchend\" in document)\n\t)\n}\n\nexport {\n\tformatTime,\n\tisBlack,\n\tsum,\n\tdrawRoundRect,\n\treplaceAllString,\n\tgroupArrayBy,\n\tloadJson,\n\tiOS\n}\n","import { replaceAllString } from \"../Util.js\"\n\nexport class DomHelper {\n\tstatic createCanvas(width, height, styles) {\n\t\treturn DomHelper.createElement(\"canvas\", styles, {\n\t\t\twidth: width,\n\t\t\theight: height\n\t\t})\n\t}\n\tstatic createSpinner() {\n\t\treturn DomHelper.createDivWithIdAndClass(\"loadSpinner\", \"loader\")\n\t}\n\tstatic setCanvasSize(cnv, width, height) {\n\t\tif (cnv.width != width) {\n\t\t\tcnv.width = width\n\t\t}\n\t\tif (cnv.height != height) {\n\t\t\tcnv.height = height\n\t\t}\n\t}\n\tstatic replaceGlyph(element, oldIcon, newIcon) {\n\t\telement.children.forEach(childNode => {\n\t\t\tif (childNode.classList.contains(\"glyphicon-\" + oldIcon)) {\n\t\t\t\tchildNode.className = childNode.className.replace(\n\t\t\t\t\t\"glyphicon-\" + oldIcon,\n\t\t\t\t\t\"glyphicon-\" + newIcon\n\t\t\t\t)\n\t\t\t}\n\t\t})\n\t}\n\tstatic removeClass(className, element) {\n\t\tif (element.classList.contains(className)) {\n\t\t\telement.classList.remove(className)\n\t\t}\n\t}\n\tstatic removeClassFromElementsSelector(selector, className) {\n\t\tdocument.querySelectorAll(selector).forEach(el => {\n\t\t\tif (el.classList.contains(className)) {\n\t\t\t\tel.classList.remove(className)\n\t\t\t}\n\t\t})\n\t}\n\tstatic createSliderWithLabel(id, label, val, min, max, step, onChange) {\n\t\tlet cont = DomHelper.createElement(\n\t\t\t\"div\",\n\t\t\t{},\n\t\t\t{ id: id + \"container\", className: \"sliderContainer\" }\n\t\t)\n\t\tlet labelDiv = DomHelper.createElement(\n\t\t\t\"label\",\n\t\t\t{},\n\t\t\t{ id: id + \"label\", className: \"sliderLabel\", innerHTML: label }\n\t\t)\n\t\tlet slider = DomHelper.createSlider(id, val, min, max, step, onChange)\n\t\tcont.appendChild(labelDiv)\n\t\tcont.appendChild(slider)\n\t\treturn { slider: slider, container: cont }\n\t}\n\tstatic createSliderWithLabelAndField(\n\t\tid,\n\t\tlabel,\n\t\tval,\n\t\tmin,\n\t\tmax,\n\t\tstep,\n\t\tonChange\n\t) {\n\t\tlet displayDiv = DomHelper.createElement(\n\t\t\t\"div\",\n\t\t\t{},\n\t\t\t{ id: id + \"Field\", className: \"sliderVal\", innerHTML: val }\n\t\t)\n\n\t\tlet onChangeInternal = ev => {\n\t\t\tdisplayDiv.innerHTML = ev.target.value\n\t\t\tonChange(ev.target.value)\n\t\t}\n\n\t\tlet cont = DomHelper.createElement(\n\t\t\t\"div\",\n\t\t\t{},\n\t\t\t{ id: id + \"container\", className: \"sliderContainer\" }\n\t\t)\n\t\tlet labelDiv = DomHelper.createElement(\n\t\t\t\"label\",\n\t\t\t{},\n\t\t\t{ id: id + \"label\", className: \"sliderLabel\", innerHTML: label }\n\t\t)\n\t\tlet slider = DomHelper.createSlider(\n\t\t\tid,\n\t\t\tval,\n\t\t\tmin,\n\t\t\tmax,\n\t\t\tstep,\n\t\t\tonChangeInternal\n\t\t)\n\t\tcont.appendChild(labelDiv)\n\t\tcont.appendChild(displayDiv)\n\t\tcont.appendChild(slider)\n\n\t\treturn { slider: slider, container: cont }\n\t}\n\tstatic createGlyphiconButton(id, glyph, onClick) {\n\t\tlet bt = DomHelper.createButton(id, onClick)\n\t\tbt.appendChild(this.getGlyphicon(glyph))\n\t\treturn bt\n\t}\n\tstatic createGlyphiconTextButton(id, glyph, text, onClick) {\n\t\tlet bt = DomHelper.createButton(id, onClick)\n\t\tbt.appendChild(this.getGlyphicon(glyph))\n\t\tbt.innerHTML += \" \" + text\n\t\treturn bt\n\t}\n\tstatic createDiv(styles, attributes) {\n\t\treturn DomHelper.createElement(\"div\", styles, attributes)\n\t}\n\tstatic createDivWithId(id, styles, attributes) {\n\t\tattributes = attributes || {}\n\t\tattributes.id = id\n\t\treturn DomHelper.createElement(\"div\", styles, attributes)\n\t}\n\tstatic createDivWithClass(className, styles, attributes) {\n\t\tattributes = attributes || {}\n\t\tattributes.className = className\n\t\treturn DomHelper.createElement(\"div\", styles, attributes)\n\t}\n\tstatic createDivWithIdAndClass(id, className, styles, attributes) {\n\t\tattributes = attributes || {}\n\t\tattributes.id = id\n\t\tattributes.className = className\n\t\treturn DomHelper.createElement(\"div\", styles, attributes)\n\t}\n\tstatic createElementWithId(id, tag, styles, attributes) {\n\t\tattributes = attributes || {}\n\t\tattributes.id = id\n\t\treturn DomHelper.createElement(tag, styles, attributes)\n\t}\n\tstatic createElementWithClass(className, tag, styles, attributes) {\n\t\tattributes = attributes || {}\n\t\tattributes.className = className\n\t\treturn DomHelper.createElement(tag, styles, attributes)\n\t}\n\tstatic createElementWithIdAndClass(id, className, tag, styles, attributes) {\n\t\tstyles = styles || {}\n\t\tattributes = attributes || {}\n\t\tattributes.id = id\n\t\tattributes.className = className\n\t\treturn DomHelper.createElement(tag, styles, attributes)\n\t}\n\tstatic getGlyphicon(name) {\n\t\treturn DomHelper.createElement(\n\t\t\t\"span\",\n\t\t\t{},\n\t\t\t{ className: \"glyphicon glyphicon-\" + name }\n\t\t)\n\t}\n\tstatic createSlider(id, val, min, max, step, onChange) {\n\t\tlet el = DomHelper.createElement(\n\t\t\t\"input\",\n\t\t\t{},\n\t\t\t{\n\t\t\t\tid: id,\n\t\t\t\toninput: onChange,\n\t\t\t\ttype: \"range\",\n\t\t\t\tvalue: val,\n\t\t\t\tmin: min,\n\t\t\t\tmax: max,\n\t\t\t\tstep: step\n\t\t\t}\n\t\t)\n\t\tel.value = val\n\t\treturn el\n\t}\n\tstatic createTextInput(onChange, styles, attributes) {\n\t\tattributes = attributes || {}\n\t\tattributes.type = \"text\"\n\t\tattributes.onchange = onChange\n\t\treturn DomHelper.createElement(\"input\", styles, attributes)\n\t}\n\tstatic createCheckbox(text, onChange, value, isChecked) {\n\t\tlet id = replaceAllString(text, \" \", \"\") + \"checkbox\"\n\t\tlet cont = DomHelper.createDivWithIdAndClass(id, \"checkboxCont\")\n\t\tlet checkbox = DomHelper.createElementWithClass(\"checkboxInput\", \"input\")\n\t\tcheckbox.setAttribute(\"type\", \"checkbox\")\n\t\tcheckbox.checked = value\n\t\tcheckbox.setAttribute(\"name\", id)\n\t\tcheckbox.onchange = onChange\n\n\t\tlet label = DomHelper.createElementWithClass(\n\t\t\t\"checkboxlabel\",\n\t\t\t\"label\",\n\t\t\t{},\n\t\t\t{ innerHTML: text, for: id }\n\t\t)\n\n\t\tlabel.setAttribute(\"for\", id)\n\n\t\tcont.appendChild(checkbox)\n\t\tcont.appendChild(label)\n\t\tcont.addEventListener(\"click\", ev => {\n\t\t\tif (ev.target != checkbox) {\n\t\t\t\tcheckbox.click()\n\t\t\t\tif (isChecked) {\n\t\t\t\t\tcheckbox.checked = isChecked()\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\treturn cont\n\t}\n\tstatic addClassToElements(className, elements) {\n\t\telements.forEach(element => DomHelper.addClassToElement(className, element))\n\t}\n\tstatic addClassToElement(className, element) {\n\t\tif (!element.classList.contains(className)) {\n\t\t\telement.classList.add(className)\n\t\t}\n\t}\n\tstatic createFlexContainer() {\n\t\treturn DomHelper.createElement(\"div\", {}, { className: \"flexContainer\" })\n\t}\n\tstatic addToFlexContainer(el) {\n\t\tlet cont = DomHelper.createFlexContainer()\n\t\tcont.appendChild(el)\n\t\treturn cont\n\t}\n\tstatic appendChildren(parent, children) {\n\t\tchildren.forEach(child => parent.appendChild(child))\n\t}\n\tstatic createButtonGroup(vertical) {\n\t\treturn vertical\n\t\t\t? DomHelper.createElement(\n\t\t\t\t\t\"div\",\n\t\t\t\t\t{ justifyContent: \"space-around\" },\n\t\t\t\t\t{ className: \"btn-group btn-group-vertical\", role: \"group\" }\n\t\t\t  )\n\t\t\t: DomHelper.createElement(\n\t\t\t\t\t\"div\",\n\t\t\t\t\t{ justifyContent: \"space-around\" },\n\t\t\t\t\t{ className: \"btn-group\", role: \"group\" }\n\t\t\t  )\n\t}\n\tstatic createFileInput(text, callback) {\n\t\tlet customFile = DomHelper.createElement(\n\t\t\t\"label\",\n\t\t\t{},\n\t\t\t{ className: \"btn btn-default btn-file\" }\n\t\t)\n\t\tcustomFile.appendChild(DomHelper.getGlyphicon(\"folder-open\"))\n\t\tcustomFile.innerHTML += \" \" + text\n\t\tlet inp = DomHelper.createElement(\n\t\t\t\"input\",\n\t\t\t{ display: \"none\" },\n\t\t\t{ type: \"file\" }\n\t\t)\n\n\t\tcustomFile.appendChild(inp)\n\t\tinp.onchange = callback\n\n\t\treturn customFile\n\t}\n\tstatic getDivider() {\n\t\treturn DomHelper.createElement(\"div\", {}, { className: \"divider\" })\n\t}\n\tstatic createButton(id, onClick) {\n\t\tlet bt = DomHelper.createElement(\n\t\t\t\"button\",\n\t\t\t{},\n\t\t\t{\n\t\t\t\tid: id,\n\t\t\t\ttype: \"button\",\n\t\t\t\tclassName: \"btn btn-default\",\n\t\t\t\tonclick: onClick\n\t\t\t}\n\t\t)\n\t\tbt.appendChild(DomHelper.getButtonSelectLine())\n\t\treturn bt\n\t}\n\tstatic createTextButton(id, text, onClick) {\n\t\tlet bt = DomHelper.createElement(\n\t\t\t\"button\",\n\t\t\t{},\n\t\t\t{\n\t\t\t\tid: id,\n\t\t\t\ttype: \"button\",\n\t\t\t\tclassName: \"btn btn-default\",\n\t\t\t\tonclick: onClick,\n\t\t\t\tinnerHTML: text\n\t\t\t}\n\t\t)\n\t\tbt.appendChild(DomHelper.getButtonSelectLine())\n\t\treturn bt\n\t}\n\tstatic getButtonSelectLine() {\n\t\treturn DomHelper.createDivWithClass(\"btn-select-line\")\n\t}\n\tstatic createElement(tag, styles, attributes) {\n\t\ttag = tag || \"div\"\n\t\tattributes = attributes || {}\n\t\tstyles = styles || {}\n\t\tlet el = document.createElement(tag)\n\t\tObject.keys(attributes).forEach(attr => {\n\t\t\tel[attr] = attributes[attr]\n\t\t})\n\t\tObject.keys(styles).forEach(style => {\n\t\t\tel.style[style] = styles[style]\n\t\t})\n\t\treturn el\n\t}\n\n\tstatic createInputSelect(title, items, callback) {\n\t\tlet selectBox = DomHelper.createDivWithId(title)\n\t\tlet label = DomHelper.createElementWithClass(\n\t\t\t\"inputSelectLabel\",\n\t\t\t\"label\",\n\t\t\t{},\n\t\t\t{ innerHTML: title }\n\t\t)\n\t\tselectBox.appendChild(label)\n\t\tlet selectTag = DomHelper.createElementWithIdAndClass(\n\t\t\ttitle,\n\t\t\t\"inputSelect\",\n\t\t\t\"select\"\n\t\t)\n\t\tselectBox.appendChild(selectTag)\n\t\titems.forEach((item, index) => {\n\t\t\tlet option = DomHelper.createElement(\n\t\t\t\t\"option\",\n\t\t\t\t{},\n\t\t\t\t{\n\t\t\t\t\tvalue: item,\n\t\t\t\t\tinnerHTML: item\n\t\t\t\t}\n\t\t\t)\n\t\t\tselectTag.appendChild(option)\n\t\t})\n\t\tselectBox.addEventListener(\"change\", ev => {\n\t\t\tcallback(selectTag.value)\n\t\t})\n\t\treturn selectBox\n\t}\n\n\tstatic createColorPickerGlyphiconText(glyph, text, startColor, onChange) {\n\t\tlet pickrEl = null\n\t\tlet pickrElCont = DomHelper.createDiv()\n\t\tlet glyphBut = DomHelper.createGlyphiconTextButton(\n\t\t\t\"colorPickerGlyph\" + glyph + replaceAllString(text, \" \", \"_\"),\n\t\t\tglyph,\n\t\t\ttext,\n\t\t\t() => {\n\t\t\t\tpickrEl.show()\n\t\t\t}\n\t\t)\n\n\t\tglyphBut.appendChild(pickrElCont)\n\n\t\tpickrEl = Pickr.create({\n\t\t\tel: pickrElCont,\n\t\t\ttheme: \"nano\",\n\t\t\tuseAsButton: true,\n\t\t\tcomponents: {\n\t\t\t\thue: true,\n\t\t\t\tpreview: true,\n\t\t\t\topacity: true,\n\t\t\t\tinteraction: {\n\t\t\t\t\tinput: true\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tlet getGlyphEl = () =>\n\t\t\tglyphBut.querySelector(\n\t\t\t\t\"#colorPickerGlyph\" +\n\t\t\t\t\tglyph +\n\t\t\t\t\treplaceAllString(text, \" \", \"_\") +\n\t\t\t\t\t\" .glyphicon\"\n\t\t\t)\n\n\t\tpickrEl.on(\"init\", () => {\n\t\t\tpickrEl.setColor(startColor)\n\t\t\tgetGlyphEl().style.color = startColor\n\t\t})\n\t\tpickrEl.on(\"change\", color => {\n\t\t\tlet colorString = color.toRGBA().toString()\n\t\t\tgetGlyphEl().style.color = colorString\n\t\t\tonChange(colorString)\n\t\t})\n\t\treturn glyphBut\n\t}\n\t/**\n\t *\n\t * @param {String} text\n\t * @param {String} startColor\n\t * @param {Function} onChange  A color string of the newly selected color will be passed as argument\n\t */\n\tstatic createColorPickerText(text, startColor, onChange) {\n\t\tlet cont = DomHelper.createDivWithClass(\"settingContainer\")\n\n\t\tlet label = DomHelper.createDivWithClass(\n\t\t\t\"colorLabel settingLabel\",\n\t\t\t{},\n\t\t\t{ innerHTML: text }\n\t\t)\n\n\t\tlet colorButtonContainer = DomHelper.createDivWithClass(\n\t\t\t\"colorPickerButtonContainer\"\n\t\t)\n\t\tlet colorButton = DomHelper.createDivWithClass(\"colorPickerButton\")\n\t\tcolorButtonContainer.appendChild(colorButton)\n\n\t\tcont.appendChild(label)\n\t\tcont.appendChild(colorButtonContainer)\n\n\t\tlet colorPicker = Pickr.create({\n\t\t\tel: colorButton,\n\t\t\ttheme: \"nano\",\n\t\t\tdefaultRepresentation: \"RGBA\",\n\t\t\tcomponents: {\n\t\t\t\thue: true,\n\t\t\t\tpreview: true,\n\t\t\t\topacity: true,\n\t\t\t\tinteraction: {\n\t\t\t\t\tinput: true\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\tcolorButtonContainer.style.backgroundColor = startColor\n\t\tcont.onclick = () => colorPicker.show()\n\t\tcolorPicker.on(\"init\", () => {\n\t\t\tcolorPicker.show()\n\t\t\tcolorPicker.setColor(startColor)\n\t\t\tcolorPicker.hide()\n\t\t})\n\t\tcolorPicker.on(\"change\", color => {\n\t\t\tcolorButtonContainer.style.backgroundColor = colorPicker\n\t\t\t\t.getColor()\n\t\t\t\t.toRGBA()\n\t\t\t\t.toString()\n\t\t\tonChange(color.toRGBA().toString())\n\t\t})\n\n\t\treturn cont\n\t}\n}\n","export var CONST = {\n\tTRACK_COLORS: [\n\t\t{ white: \"#ffa000\", black: \"#ff8f00\" }, //orange\n\t\t{ white: \"#1e88e5\", black: \"#1976d2\" }, //blue\n\t\t{ white: \"#43a047\", black: \"#388e3c\" }, //green\n\t\t{ white: \"#ffeb3b\", black: \"#fdd835\" }, //yellow\n\t\t{ white: \"#9c27b0\", black: \"#8e24aa\" }, //pink\n\t\t{ white: \"#f44336\", black: \"#e53935\" }, //red\n\t\t{ white: \"#673ab7\", black: \"#5e35b1\" } //purple\n\n\t\t// { white: \"rgb(40,50,90)\", black: \"Blue\" },\n\t\t// { white: \"rgb(50,90,60)\", black: \"rgb(20,85,40)\" },\n\t\t// { white: \"rgb(40,50,90)\", black: \"Blue\" },\n\t\t// { white: \"rgb(50,90,60)\", black: \"rgb(20,85,40)\" }\n\t],\n\tINSTRUMENTS: {\n\t\tBY_ID: {\n\t\t\t0: {\n\t\t\t\tid: \"acoustic_grand_piano\",\n\t\t\t\tinstrument: \"Acoustic Grand Piano\",\n\t\t\t\tnumber: 0,\n\t\t\t\tcategory: \"Piano\"\n\t\t\t},\n\t\t\t1: {\n\t\t\t\tid: \"bright_acoustic_piano\",\n\t\t\t\tinstrument: \"Bright Acoustic Piano\",\n\t\t\t\tnumber: 1,\n\t\t\t\tcategory: \"Piano\"\n\t\t\t},\n\t\t\t2: {\n\t\t\t\tid: \"electric_grand_piano\",\n\t\t\t\tinstrument: \"Electric Grand Piano\",\n\t\t\t\tnumber: 2,\n\t\t\t\tcategory: \"Piano\"\n\t\t\t},\n\t\t\t3: {\n\t\t\t\tid: \"honkytonk_piano\",\n\t\t\t\tinstrument: \"Honky-tonk Piano\",\n\t\t\t\tnumber: 3,\n\t\t\t\tcategory: \"Piano\"\n\t\t\t},\n\t\t\t4: {\n\t\t\t\tid: \"electric_piano_1\",\n\t\t\t\tinstrument: \"Electric Piano 1\",\n\t\t\t\tnumber: 4,\n\t\t\t\tcategory: \"Piano\"\n\t\t\t},\n\t\t\t5: {\n\t\t\t\tid: \"electric_piano_2\",\n\t\t\t\tinstrument: \"Electric Piano 2\",\n\t\t\t\tnumber: 5,\n\t\t\t\tcategory: \"Piano\"\n\t\t\t},\n\t\t\t6: {\n\t\t\t\tid: \"harpsichord\",\n\t\t\t\tinstrument: \"Harpsichord\",\n\t\t\t\tnumber: 6,\n\t\t\t\tcategory: \"Piano\"\n\t\t\t},\n\t\t\t7: {\n\t\t\t\tid: \"clavinet\",\n\t\t\t\tinstrument: \"Clavinet\",\n\t\t\t\tnumber: 7,\n\t\t\t\tcategory: \"Piano\"\n\t\t\t},\n\t\t\t8: {\n\t\t\t\tid: \"celesta\",\n\t\t\t\tinstrument: \"Celesta\",\n\t\t\t\tnumber: 8,\n\t\t\t\tcategory: \"Chromatic Percussion\"\n\t\t\t},\n\t\t\t9: {\n\t\t\t\tid: \"glockenspiel\",\n\t\t\t\tinstrument: \"Glockenspiel\",\n\t\t\t\tnumber: 9,\n\t\t\t\tcategory: \"Chromatic Percussion\"\n\t\t\t},\n\t\t\t10: {\n\t\t\t\tid: \"music_box\",\n\t\t\t\tinstrument: \"Music Box\",\n\t\t\t\tnumber: 10,\n\t\t\t\tcategory: \"Chromatic Percussion\"\n\t\t\t},\n\t\t\t11: {\n\t\t\t\tid: \"vibraphone\",\n\t\t\t\tinstrument: \"Vibraphone\",\n\t\t\t\tnumber: 11,\n\t\t\t\tcategory: \"Chromatic Percussion\"\n\t\t\t},\n\t\t\t12: {\n\t\t\t\tid: \"marimba\",\n\t\t\t\tinstrument: \"Marimba\",\n\t\t\t\tnumber: 12,\n\t\t\t\tcategory: \"Chromatic Percussion\"\n\t\t\t},\n\t\t\t13: {\n\t\t\t\tid: \"xylophone\",\n\t\t\t\tinstrument: \"Xylophone\",\n\t\t\t\tnumber: 13,\n\t\t\t\tcategory: \"Chromatic Percussion\"\n\t\t\t},\n\t\t\t14: {\n\t\t\t\tid: \"tubular_bells\",\n\t\t\t\tinstrument: \"Tubular Bells\",\n\t\t\t\tnumber: 14,\n\t\t\t\tcategory: \"Chromatic Percussion\"\n\t\t\t},\n\t\t\t15: {\n\t\t\t\tid: \"dulcimer\",\n\t\t\t\tinstrument: \"Dulcimer\",\n\t\t\t\tnumber: 15,\n\t\t\t\tcategory: \"Chromatic Percussion\"\n\t\t\t},\n\t\t\t16: {\n\t\t\t\tid: \"drawbar_organ\",\n\t\t\t\tinstrument: \"Drawbar Organ\",\n\t\t\t\tnumber: 16,\n\t\t\t\tcategory: \"Organ\"\n\t\t\t},\n\t\t\t17: {\n\t\t\t\tid: \"percussive_organ\",\n\t\t\t\tinstrument: \"Percussive Organ\",\n\t\t\t\tnumber: 17,\n\t\t\t\tcategory: \"Organ\"\n\t\t\t},\n\t\t\t18: {\n\t\t\t\tid: \"rock_organ\",\n\t\t\t\tinstrument: \"Rock Organ\",\n\t\t\t\tnumber: 18,\n\t\t\t\tcategory: \"Organ\"\n\t\t\t},\n\t\t\t19: {\n\t\t\t\tid: \"church_organ\",\n\t\t\t\tinstrument: \"Church Organ\",\n\t\t\t\tnumber: 19,\n\t\t\t\tcategory: \"Organ\"\n\t\t\t},\n\t\t\t20: {\n\t\t\t\tid: \"reed_organ\",\n\t\t\t\tinstrument: \"Reed Organ\",\n\t\t\t\tnumber: 20,\n\t\t\t\tcategory: \"Organ\"\n\t\t\t},\n\t\t\t21: {\n\t\t\t\tid: \"accordion\",\n\t\t\t\tinstrument: \"Accordion\",\n\t\t\t\tnumber: 21,\n\t\t\t\tcategory: \"Organ\"\n\t\t\t},\n\t\t\t22: {\n\t\t\t\tid: \"harmonica\",\n\t\t\t\tinstrument: \"Harmonica\",\n\t\t\t\tnumber: 22,\n\t\t\t\tcategory: \"Organ\"\n\t\t\t},\n\t\t\t23: {\n\t\t\t\tid: \"tango_accordion\",\n\t\t\t\tinstrument: \"Tango Accordion\",\n\t\t\t\tnumber: 23,\n\t\t\t\tcategory: \"Organ\"\n\t\t\t},\n\t\t\t24: {\n\t\t\t\tid: \"acoustic_guitar_nylon\",\n\t\t\t\tinstrument: \"Acoustic Guitar (nylon)\",\n\t\t\t\tnumber: 24,\n\t\t\t\tcategory: \"Guitar\"\n\t\t\t},\n\t\t\t25: {\n\t\t\t\tid: \"acoustic_guitar_steel\",\n\t\t\t\tinstrument: \"Acoustic Guitar (steel)\",\n\t\t\t\tnumber: 25,\n\t\t\t\tcategory: \"Guitar\"\n\t\t\t},\n\t\t\t26: {\n\t\t\t\tid: \"electric_guitar_jazz\",\n\t\t\t\tinstrument: \"Electric Guitar (jazz)\",\n\t\t\t\tnumber: 26,\n\t\t\t\tcategory: \"Guitar\"\n\t\t\t},\n\t\t\t27: {\n\t\t\t\tid: \"electric_guitar_clean\",\n\t\t\t\tinstrument: \"Electric Guitar (clean)\",\n\t\t\t\tnumber: 27,\n\t\t\t\tcategory: \"Guitar\"\n\t\t\t},\n\t\t\t28: {\n\t\t\t\tid: \"electric_guitar_muted\",\n\t\t\t\tinstrument: \"Electric Guitar (muted)\",\n\t\t\t\tnumber: 28,\n\t\t\t\tcategory: \"Guitar\"\n\t\t\t},\n\t\t\t29: {\n\t\t\t\tid: \"overdriven_guitar\",\n\t\t\t\tinstrument: \"Overdriven Guitar\",\n\t\t\t\tnumber: 29,\n\t\t\t\tcategory: \"Guitar\"\n\t\t\t},\n\t\t\t30: {\n\t\t\t\tid: \"distortion_guitar\",\n\t\t\t\tinstrument: \"Distortion Guitar\",\n\t\t\t\tnumber: 30,\n\t\t\t\tcategory: \"Guitar\"\n\t\t\t},\n\t\t\t31: {\n\t\t\t\tid: \"guitar_harmonics\",\n\t\t\t\tinstrument: \"Guitar Harmonics\",\n\t\t\t\tnumber: 31,\n\t\t\t\tcategory: \"Guitar\"\n\t\t\t},\n\t\t\t32: {\n\t\t\t\tid: \"acoustic_bass\",\n\t\t\t\tinstrument: \"Acoustic Bass\",\n\t\t\t\tnumber: 32,\n\t\t\t\tcategory: \"Bass\"\n\t\t\t},\n\t\t\t33: {\n\t\t\t\tid: \"electric_bass_finger\",\n\t\t\t\tinstrument: \"Electric Bass (finger)\",\n\t\t\t\tnumber: 33,\n\t\t\t\tcategory: \"Bass\"\n\t\t\t},\n\t\t\t34: {\n\t\t\t\tid: \"electric_bass_pick\",\n\t\t\t\tinstrument: \"Electric Bass (pick)\",\n\t\t\t\tnumber: 34,\n\t\t\t\tcategory: \"Bass\"\n\t\t\t},\n\t\t\t35: {\n\t\t\t\tid: \"fretless_bass\",\n\t\t\t\tinstrument: \"Fretless Bass\",\n\t\t\t\tnumber: 35,\n\t\t\t\tcategory: \"Bass\"\n\t\t\t},\n\t\t\t36: {\n\t\t\t\tid: \"slap_bass_1\",\n\t\t\t\tinstrument: \"Slap Bass 1\",\n\t\t\t\tnumber: 36,\n\t\t\t\tcategory: \"Bass\"\n\t\t\t},\n\t\t\t37: {\n\t\t\t\tid: \"slap_bass_2\",\n\t\t\t\tinstrument: \"Slap Bass 2\",\n\t\t\t\tnumber: 37,\n\t\t\t\tcategory: \"Bass\"\n\t\t\t},\n\t\t\t38: {\n\t\t\t\tid: \"synth_bass_1\",\n\t\t\t\tinstrument: \"Synth Bass 1\",\n\t\t\t\tnumber: 38,\n\t\t\t\tcategory: \"Bass\"\n\t\t\t},\n\t\t\t39: {\n\t\t\t\tid: \"synth_bass_2\",\n\t\t\t\tinstrument: \"Synth Bass 2\",\n\t\t\t\tnumber: 39,\n\t\t\t\tcategory: \"Bass\"\n\t\t\t},\n\t\t\t40: {\n\t\t\t\tid: \"violin\",\n\t\t\t\tinstrument: \"Violin\",\n\t\t\t\tnumber: 40,\n\t\t\t\tcategory: \"Strings\"\n\t\t\t},\n\t\t\t41: {\n\t\t\t\tid: \"viola\",\n\t\t\t\tinstrument: \"Viola\",\n\t\t\t\tnumber: 41,\n\t\t\t\tcategory: \"Strings\"\n\t\t\t},\n\t\t\t42: {\n\t\t\t\tid: \"cello\",\n\t\t\t\tinstrument: \"Cello\",\n\t\t\t\tnumber: 42,\n\t\t\t\tcategory: \"Strings\"\n\t\t\t},\n\t\t\t43: {\n\t\t\t\tid: \"contrabass\",\n\t\t\t\tinstrument: \"Contrabass\",\n\t\t\t\tnumber: 43,\n\t\t\t\tcategory: \"Strings\"\n\t\t\t},\n\t\t\t44: {\n\t\t\t\tid: \"tremolo_strings\",\n\t\t\t\tinstrument: \"Tremolo Strings\",\n\t\t\t\tnumber: 44,\n\t\t\t\tcategory: \"Strings\"\n\t\t\t},\n\t\t\t45: {\n\t\t\t\tid: \"pizzicato_strings\",\n\t\t\t\tinstrument: \"Pizzicato Strings\",\n\t\t\t\tnumber: 45,\n\t\t\t\tcategory: \"Strings\"\n\t\t\t},\n\t\t\t46: {\n\t\t\t\tid: \"orchestral_harp\",\n\t\t\t\tinstrument: \"Orchestral Harp\",\n\t\t\t\tnumber: 46,\n\t\t\t\tcategory: \"Strings\"\n\t\t\t},\n\t\t\t47: {\n\t\t\t\tid: \"timpani\",\n\t\t\t\tinstrument: \"Timpani\",\n\t\t\t\tnumber: 47,\n\t\t\t\tcategory: \"Strings\"\n\t\t\t},\n\t\t\t48: {\n\t\t\t\tid: \"string_ensemble_1\",\n\t\t\t\tinstrument: \"String Ensemble 1\",\n\t\t\t\tnumber: 48,\n\t\t\t\tcategory: \"Ensemble\"\n\t\t\t},\n\t\t\t49: {\n\t\t\t\tid: \"string_ensemble_2\",\n\t\t\t\tinstrument: \"String Ensemble 2\",\n\t\t\t\tnumber: 49,\n\t\t\t\tcategory: \"Ensemble\"\n\t\t\t},\n\t\t\t50: {\n\t\t\t\tid: \"synth_strings_1\",\n\t\t\t\tinstrument: \"Synth Strings 1\",\n\t\t\t\tnumber: 50,\n\t\t\t\tcategory: \"Ensemble\"\n\t\t\t},\n\t\t\t51: {\n\t\t\t\tid: \"synth_strings_2\",\n\t\t\t\tinstrument: \"Synth Strings 2\",\n\t\t\t\tnumber: 51,\n\t\t\t\tcategory: \"Ensemble\"\n\t\t\t},\n\t\t\t52: {\n\t\t\t\tid: \"choir_aahs\",\n\t\t\t\tinstrument: \"Choir Aahs\",\n\t\t\t\tnumber: 52,\n\t\t\t\tcategory: \"Ensemble\"\n\t\t\t},\n\t\t\t53: {\n\t\t\t\tid: \"voice_oohs\",\n\t\t\t\tinstrument: \"Voice Oohs\",\n\t\t\t\tnumber: 53,\n\t\t\t\tcategory: \"Ensemble\"\n\t\t\t},\n\t\t\t54: {\n\t\t\t\tid: \"synth_choir\",\n\t\t\t\tinstrument: \"Synth Choir\",\n\t\t\t\tnumber: 54,\n\t\t\t\tcategory: \"Ensemble\"\n\t\t\t},\n\t\t\t55: {\n\t\t\t\tid: \"orchestra_hit\",\n\t\t\t\tinstrument: \"Orchestra Hit\",\n\t\t\t\tnumber: 55,\n\t\t\t\tcategory: \"Ensemble\"\n\t\t\t},\n\t\t\t56: {\n\t\t\t\tid: \"trumpet\",\n\t\t\t\tinstrument: \"Trumpet\",\n\t\t\t\tnumber: 56,\n\t\t\t\tcategory: \"Brass\"\n\t\t\t},\n\t\t\t57: {\n\t\t\t\tid: \"trombone\",\n\t\t\t\tinstrument: \"Trombone\",\n\t\t\t\tnumber: 57,\n\t\t\t\tcategory: \"Brass\"\n\t\t\t},\n\t\t\t58: {\n\t\t\t\tid: \"tuba\",\n\t\t\t\tinstrument: \"Tuba\",\n\t\t\t\tnumber: 58,\n\t\t\t\tcategory: \"Brass\"\n\t\t\t},\n\t\t\t59: {\n\t\t\t\tid: \"muted_trumpet\",\n\t\t\t\tinstrument: \"Muted Trumpet\",\n\t\t\t\tnumber: 59,\n\t\t\t\tcategory: \"Brass\"\n\t\t\t},\n\t\t\t60: {\n\t\t\t\tid: \"french_horn\",\n\t\t\t\tinstrument: \"French Horn\",\n\t\t\t\tnumber: 60,\n\t\t\t\tcategory: \"Brass\"\n\t\t\t},\n\t\t\t61: {\n\t\t\t\tid: \"brass_section\",\n\t\t\t\tinstrument: \"Brass Section\",\n\t\t\t\tnumber: 61,\n\t\t\t\tcategory: \"Brass\"\n\t\t\t},\n\t\t\t62: {\n\t\t\t\tid: \"synth_brass_1\",\n\t\t\t\tinstrument: \"Synth Brass 1\",\n\t\t\t\tnumber: 62,\n\t\t\t\tcategory: \"Brass\"\n\t\t\t},\n\t\t\t63: {\n\t\t\t\tid: \"synth_brass_2\",\n\t\t\t\tinstrument: \"Synth Brass 2\",\n\t\t\t\tnumber: 63,\n\t\t\t\tcategory: \"Brass\"\n\t\t\t},\n\t\t\t64: {\n\t\t\t\tid: \"soprano_sax\",\n\t\t\t\tinstrument: \"Soprano Sax\",\n\t\t\t\tnumber: 64,\n\t\t\t\tcategory: \"Reed\"\n\t\t\t},\n\t\t\t65: {\n\t\t\t\tid: \"alto_sax\",\n\t\t\t\tinstrument: \"Alto Sax\",\n\t\t\t\tnumber: 65,\n\t\t\t\tcategory: \"Reed\"\n\t\t\t},\n\t\t\t66: {\n\t\t\t\tid: \"tenor_sax\",\n\t\t\t\tinstrument: \"Tenor Sax\",\n\t\t\t\tnumber: 66,\n\t\t\t\tcategory: \"Reed\"\n\t\t\t},\n\t\t\t67: {\n\t\t\t\tid: \"baritone_sax\",\n\t\t\t\tinstrument: \"Baritone Sax\",\n\t\t\t\tnumber: 67,\n\t\t\t\tcategory: \"Reed\"\n\t\t\t},\n\t\t\t68: {\n\t\t\t\tid: \"oboe\",\n\t\t\t\tinstrument: \"Oboe\",\n\t\t\t\tnumber: 68,\n\t\t\t\tcategory: \"Reed\"\n\t\t\t},\n\t\t\t69: {\n\t\t\t\tid: \"english_horn\",\n\t\t\t\tinstrument: \"English Horn\",\n\t\t\t\tnumber: 69,\n\t\t\t\tcategory: \"Reed\"\n\t\t\t},\n\t\t\t70: {\n\t\t\t\tid: \"bassoon\",\n\t\t\t\tinstrument: \"Bassoon\",\n\t\t\t\tnumber: 70,\n\t\t\t\tcategory: \"Reed\"\n\t\t\t},\n\t\t\t71: {\n\t\t\t\tid: \"clarinet\",\n\t\t\t\tinstrument: \"Clarinet\",\n\t\t\t\tnumber: 71,\n\t\t\t\tcategory: \"Reed\"\n\t\t\t},\n\t\t\t72: {\n\t\t\t\tid: \"piccolo\",\n\t\t\t\tinstrument: \"Piccolo\",\n\t\t\t\tnumber: 72,\n\t\t\t\tcategory: \"Pipe\"\n\t\t\t},\n\t\t\t73: {\n\t\t\t\tid: \"flute\",\n\t\t\t\tinstrument: \"Flute\",\n\t\t\t\tnumber: 73,\n\t\t\t\tcategory: \"Pipe\"\n\t\t\t},\n\t\t\t74: {\n\t\t\t\tid: \"recorder\",\n\t\t\t\tinstrument: \"Recorder\",\n\t\t\t\tnumber: 74,\n\t\t\t\tcategory: \"Pipe\"\n\t\t\t},\n\t\t\t75: {\n\t\t\t\tid: \"pan_flute\",\n\t\t\t\tinstrument: \"Pan Flute\",\n\t\t\t\tnumber: 75,\n\t\t\t\tcategory: \"Pipe\"\n\t\t\t},\n\t\t\t76: {\n\t\t\t\tid: \"blown_bottle\",\n\t\t\t\tinstrument: \"Blown Bottle\",\n\t\t\t\tnumber: 76,\n\t\t\t\tcategory: \"Pipe\"\n\t\t\t},\n\t\t\t77: {\n\t\t\t\tid: \"shakuhachi\",\n\t\t\t\tinstrument: \"Shakuhachi\",\n\t\t\t\tnumber: 77,\n\t\t\t\tcategory: \"Pipe\"\n\t\t\t},\n\t\t\t78: {\n\t\t\t\tid: \"whistle\",\n\t\t\t\tinstrument: \"Whistle\",\n\t\t\t\tnumber: 78,\n\t\t\t\tcategory: \"Pipe\"\n\t\t\t},\n\t\t\t79: {\n\t\t\t\tid: \"ocarina\",\n\t\t\t\tinstrument: \"Ocarina\",\n\t\t\t\tnumber: 79,\n\t\t\t\tcategory: \"Pipe\"\n\t\t\t},\n\t\t\t80: {\n\t\t\t\tid: \"lead_1_square\",\n\t\t\t\tinstrument: \"Lead 1 (square)\",\n\t\t\t\tnumber: 80,\n\t\t\t\tcategory: \"Synth Lead\"\n\t\t\t},\n\t\t\t81: {\n\t\t\t\tid: \"lead_2_sawtooth\",\n\t\t\t\tinstrument: \"Lead 2 (sawtooth)\",\n\t\t\t\tnumber: 81,\n\t\t\t\tcategory: \"Synth Lead\"\n\t\t\t},\n\t\t\t82: {\n\t\t\t\tid: \"lead_3_calliope\",\n\t\t\t\tinstrument: \"Lead 3 (calliope)\",\n\t\t\t\tnumber: 82,\n\t\t\t\tcategory: \"Synth Lead\"\n\t\t\t},\n\t\t\t83: {\n\t\t\t\tid: \"lead_4_chiff\",\n\t\t\t\tinstrument: \"Lead 4 (chiff)\",\n\t\t\t\tnumber: 83,\n\t\t\t\tcategory: \"Synth Lead\"\n\t\t\t},\n\t\t\t84: {\n\t\t\t\tid: \"lead_5_charang\",\n\t\t\t\tinstrument: \"Lead 5 (charang)\",\n\t\t\t\tnumber: 84,\n\t\t\t\tcategory: \"Synth Lead\"\n\t\t\t},\n\t\t\t85: {\n\t\t\t\tid: \"lead_6_voice\",\n\t\t\t\tinstrument: \"Lead 6 (voice)\",\n\t\t\t\tnumber: 85,\n\t\t\t\tcategory: \"Synth Lead\"\n\t\t\t},\n\t\t\t86: {\n\t\t\t\tid: \"lead_7_fifths\",\n\t\t\t\tinstrument: \"Lead 7 (fifths)\",\n\t\t\t\tnumber: 86,\n\t\t\t\tcategory: \"Synth Lead\"\n\t\t\t},\n\t\t\t87: {\n\t\t\t\tid: \"lead_8_bass__lead\",\n\t\t\t\tinstrument: \"Lead 8 (bass + lead)\",\n\t\t\t\tnumber: 87,\n\t\t\t\tcategory: \"Synth Lead\"\n\t\t\t},\n\t\t\t88: {\n\t\t\t\tid: \"pad_1_new_age\",\n\t\t\t\tinstrument: \"Pad 1 (new age)\",\n\t\t\t\tnumber: 88,\n\t\t\t\tcategory: \"Synth Pad\"\n\t\t\t},\n\t\t\t89: {\n\t\t\t\tid: \"pad_2_warm\",\n\t\t\t\tinstrument: \"Pad 2 (warm)\",\n\t\t\t\tnumber: 89,\n\t\t\t\tcategory: \"Synth Pad\"\n\t\t\t},\n\t\t\t90: {\n\t\t\t\tid: \"pad_3_polysynth\",\n\t\t\t\tinstrument: \"Pad 3 (polysynth)\",\n\t\t\t\tnumber: 90,\n\t\t\t\tcategory: \"Synth Pad\"\n\t\t\t},\n\t\t\t91: {\n\t\t\t\tid: \"pad_4_choir\",\n\t\t\t\tinstrument: \"Pad 4 (choir)\",\n\t\t\t\tnumber: 91,\n\t\t\t\tcategory: \"Synth Pad\"\n\t\t\t},\n\t\t\t92: {\n\t\t\t\tid: \"pad_5_bowed\",\n\t\t\t\tinstrument: \"Pad 5 (bowed)\",\n\t\t\t\tnumber: 92,\n\t\t\t\tcategory: \"Synth Pad\"\n\t\t\t},\n\t\t\t93: {\n\t\t\t\tid: \"pad_6_metallic\",\n\t\t\t\tinstrument: \"Pad 6 (metallic)\",\n\t\t\t\tnumber: 93,\n\t\t\t\tcategory: \"Synth Pad\"\n\t\t\t},\n\t\t\t94: {\n\t\t\t\tid: \"pad_7_halo\",\n\t\t\t\tinstrument: \"Pad 7 (halo)\",\n\t\t\t\tnumber: 94,\n\t\t\t\tcategory: \"Synth Pad\"\n\t\t\t},\n\t\t\t95: {\n\t\t\t\tid: \"pad_8_sweep\",\n\t\t\t\tinstrument: \"Pad 8 (sweep)\",\n\t\t\t\tnumber: 95,\n\t\t\t\tcategory: \"Synth Pad\"\n\t\t\t},\n\t\t\t96: {\n\t\t\t\tid: \"fx_1_rain\",\n\t\t\t\tinstrument: \"FX 1 (rain)\",\n\t\t\t\tnumber: 96,\n\t\t\t\tcategory: \"Synth Effects\"\n\t\t\t},\n\t\t\t97: {\n\t\t\t\tid: \"fx_2_soundtrack\",\n\t\t\t\tinstrument: \"FX 2 (soundtrack)\",\n\t\t\t\tnumber: 97,\n\t\t\t\tcategory: \"Synth Effects\"\n\t\t\t},\n\t\t\t98: {\n\t\t\t\tid: \"fx_3_crystal\",\n\t\t\t\tinstrument: \"FX 3 (crystal)\",\n\t\t\t\tnumber: 98,\n\t\t\t\tcategory: \"Synth Effects\"\n\t\t\t},\n\t\t\t99: {\n\t\t\t\tid: \"fx_4_atmosphere\",\n\t\t\t\tinstrument: \"FX 4 (atmosphere)\",\n\t\t\t\tnumber: 99,\n\t\t\t\tcategory: \"Synth Effects\"\n\t\t\t},\n\t\t\t100: {\n\t\t\t\tid: \"fx_5_brightness\",\n\t\t\t\tinstrument: \"FX 5 (brightness)\",\n\t\t\t\tnumber: 100,\n\t\t\t\tcategory: \"Synth Effects\"\n\t\t\t},\n\t\t\t101: {\n\t\t\t\tid: \"fx_6_goblins\",\n\t\t\t\tinstrument: \"FX 6 (goblins)\",\n\t\t\t\tnumber: 101,\n\t\t\t\tcategory: \"Synth Effects\"\n\t\t\t},\n\t\t\t102: {\n\t\t\t\tid: \"fx_7_echoes\",\n\t\t\t\tinstrument: \"FX 7 (echoes)\",\n\t\t\t\tnumber: 102,\n\t\t\t\tcategory: \"Synth Effects\"\n\t\t\t},\n\t\t\t103: {\n\t\t\t\tid: \"fx_8_scifi\",\n\t\t\t\tinstrument: \"FX 8 (sci-fi)\",\n\t\t\t\tnumber: 103,\n\t\t\t\tcategory: \"Synth Effects\"\n\t\t\t},\n\t\t\t104: {\n\t\t\t\tid: \"sitar\",\n\t\t\t\tinstrument: \"Sitar\",\n\t\t\t\tnumber: 104,\n\t\t\t\tcategory: \"Ethnic\"\n\t\t\t},\n\t\t\t105: {\n\t\t\t\tid: \"banjo\",\n\t\t\t\tinstrument: \"Banjo\",\n\t\t\t\tnumber: 105,\n\t\t\t\tcategory: \"Ethnic\"\n\t\t\t},\n\t\t\t106: {\n\t\t\t\tid: \"shamisen\",\n\t\t\t\tinstrument: \"Shamisen\",\n\t\t\t\tnumber: 106,\n\t\t\t\tcategory: \"Ethnic\"\n\t\t\t},\n\t\t\t107: {\n\t\t\t\tid: \"koto\",\n\t\t\t\tinstrument: \"Koto\",\n\t\t\t\tnumber: 107,\n\t\t\t\tcategory: \"Ethnic\"\n\t\t\t},\n\t\t\t108: {\n\t\t\t\tid: \"kalimba\",\n\t\t\t\tinstrument: \"Kalimba\",\n\t\t\t\tnumber: 108,\n\t\t\t\tcategory: \"Ethnic\"\n\t\t\t},\n\t\t\t109: {\n\t\t\t\tid: \"bagpipe\",\n\t\t\t\tinstrument: \"Bagpipe\",\n\t\t\t\tnumber: 109,\n\t\t\t\tcategory: \"Ethnic\"\n\t\t\t},\n\t\t\t110: {\n\t\t\t\tid: \"fiddle\",\n\t\t\t\tinstrument: \"Fiddle\",\n\t\t\t\tnumber: 110,\n\t\t\t\tcategory: \"Ethnic\"\n\t\t\t},\n\t\t\t111: {\n\t\t\t\tid: \"shanai\",\n\t\t\t\tinstrument: \"Shanai\",\n\t\t\t\tnumber: 111,\n\t\t\t\tcategory: \"Ethnic\"\n\t\t\t},\n\t\t\t112: {\n\t\t\t\tid: \"tinkle_bell\",\n\t\t\t\tinstrument: \"Tinkle Bell\",\n\t\t\t\tnumber: 112,\n\t\t\t\tcategory: \"Percussive\"\n\t\t\t},\n\t\t\t113: {\n\t\t\t\tid: \"agogo\",\n\t\t\t\tinstrument: \"Agogo\",\n\t\t\t\tnumber: 113,\n\t\t\t\tcategory: \"Percussive\"\n\t\t\t},\n\t\t\t114: {\n\t\t\t\tid: \"steel_drums\",\n\t\t\t\tinstrument: \"Steel Drums\",\n\t\t\t\tnumber: 114,\n\t\t\t\tcategory: \"Percussive\"\n\t\t\t},\n\t\t\t115: {\n\t\t\t\tid: \"woodblock\",\n\t\t\t\tinstrument: \"Woodblock\",\n\t\t\t\tnumber: 115,\n\t\t\t\tcategory: \"Percussive\"\n\t\t\t},\n\t\t\t116: {\n\t\t\t\tid: \"taiko_drum\",\n\t\t\t\tinstrument: \"Taiko Drum\",\n\t\t\t\tnumber: 116,\n\t\t\t\tcategory: \"Percussive\"\n\t\t\t},\n\t\t\t117: {\n\t\t\t\tid: \"melodic_tom\",\n\t\t\t\tinstrument: \"Melodic Tom\",\n\t\t\t\tnumber: 117,\n\t\t\t\tcategory: \"Percussive\"\n\t\t\t},\n\t\t\t118: {\n\t\t\t\tid: \"synth_drum\",\n\t\t\t\tinstrument: \"Synth Drum\",\n\t\t\t\tnumber: 118,\n\t\t\t\tcategory: \"Percussive\"\n\t\t\t},\n\t\t\t119: {\n\t\t\t\tid: \"reverse_cymbal\",\n\t\t\t\tinstrument: \"Reverse Cymbal\",\n\t\t\t\tnumber: 119,\n\t\t\t\tcategory: \"Sound effects\"\n\t\t\t},\n\t\t\t120: {\n\t\t\t\tid: \"guitar_fret_noise\",\n\t\t\t\tinstrument: \"Guitar Fret Noise\",\n\t\t\t\tnumber: 120,\n\t\t\t\tcategory: \"Sound effects\"\n\t\t\t},\n\t\t\t121: {\n\t\t\t\tid: \"breath_noise\",\n\t\t\t\tinstrument: \"Breath Noise\",\n\t\t\t\tnumber: 121,\n\t\t\t\tcategory: \"Sound effects\"\n\t\t\t},\n\t\t\t122: {\n\t\t\t\tid: \"seashore\",\n\t\t\t\tinstrument: \"Seashore\",\n\t\t\t\tnumber: 122,\n\t\t\t\tcategory: \"Sound effects\"\n\t\t\t},\n\t\t\t123: {\n\t\t\t\tid: \"bird_tweet\",\n\t\t\t\tinstrument: \"Bird Tweet\",\n\t\t\t\tnumber: 123,\n\t\t\t\tcategory: \"Sound effects\"\n\t\t\t},\n\t\t\t124: {\n\t\t\t\tid: \"telephone_ring\",\n\t\t\t\tinstrument: \"Telephone Ring\",\n\t\t\t\tnumber: 124,\n\t\t\t\tcategory: \"Sound effects\"\n\t\t\t},\n\t\t\t125: {\n\t\t\t\tid: \"helicopter\",\n\t\t\t\tinstrument: \"Helicopter\",\n\t\t\t\tnumber: 125,\n\t\t\t\tcategory: \"Sound effects\"\n\t\t\t},\n\t\t\t126: {\n\t\t\t\tid: \"applause\",\n\t\t\t\tinstrument: \"Applause\",\n\t\t\t\tnumber: 126,\n\t\t\t\tcategory: \"Sound effects\"\n\t\t\t},\n\t\t\t127: {\n\t\t\t\tid: \"gunshot\",\n\t\t\t\tinstrument: \"Gunshot\",\n\t\t\t\tnumber: 127,\n\t\t\t\tcategory: \"Sound effects\"\n\t\t\t},\n\t\t\t\"-1\": {\n\t\t\t\tid: \"percussion\",\n\t\t\t\tinstrument: \"Percussion\",\n\t\t\t\tnumber: -1,\n\t\t\t\tcategory: \"Percussion\"\n\t\t\t}\n\t\t}\n\t},\n\tKEY_TO_NOTE: {\n\t\tA0: 21,\n\t\tBb0: 22,\n\t\tB0: 23,\n\t\tC1: 24,\n\t\tDb1: 25,\n\t\tD1: 26,\n\t\tEb1: 27,\n\t\tE1: 28,\n\t\tF1: 29,\n\t\tGb1: 30,\n\t\tG1: 31,\n\t\tAb1: 32,\n\t\tA1: 33,\n\t\tBb1: 34,\n\t\tB1: 35,\n\t\tC2: 36,\n\t\tDb2: 37,\n\t\tD2: 38,\n\t\tEb2: 39,\n\t\tE2: 40,\n\t\tF2: 41,\n\t\tGb2: 42,\n\t\tG2: 43,\n\t\tAb2: 44,\n\t\tA2: 45,\n\t\tBb2: 46,\n\t\tB2: 47,\n\t\tC3: 48,\n\t\tDb3: 49,\n\t\tD3: 50,\n\t\tEb3: 51,\n\t\tE3: 52,\n\t\tF3: 53,\n\t\tGb3: 54,\n\t\tG3: 55,\n\t\tAb3: 56,\n\t\tA3: 57,\n\t\tBb3: 58,\n\t\tB3: 59,\n\t\tC4: 60,\n\t\tDb4: 61,\n\t\tD4: 62,\n\t\tEb4: 63,\n\t\tE4: 64,\n\t\tF4: 65,\n\t\tGb4: 66,\n\t\tG4: 67,\n\t\tAb4: 68,\n\t\tA4: 69,\n\t\tBb4: 70,\n\t\tB4: 71,\n\t\tC5: 72,\n\t\tDb5: 73,\n\t\tD5: 74,\n\t\tEb5: 75,\n\t\tE5: 76,\n\t\tF5: 77,\n\t\tGb5: 78,\n\t\tG5: 79,\n\t\tAb5: 80,\n\t\tA5: 81,\n\t\tBb5: 82,\n\t\tB5: 83,\n\t\tC6: 84,\n\t\tDb6: 85,\n\t\tD6: 86,\n\t\tEb6: 87,\n\t\tE6: 88,\n\t\tF6: 89,\n\t\tGb6: 90,\n\t\tG6: 91,\n\t\tAb6: 92,\n\t\tA6: 93,\n\t\tBb6: 94,\n\t\tB6: 95,\n\t\tC7: 96,\n\t\tDb7: 97,\n\t\tD7: 98,\n\t\tEb7: 99,\n\t\tE7: 100,\n\t\tF7: 101,\n\t\tGb7: 102,\n\t\tG7: 103,\n\t\tAb7: 104,\n\t\tA7: 105,\n\t\tBb7: 106,\n\t\tB7: 107,\n\t\tC8: 108\n\t},\n\tMIDI_NOTE_TO_KEY: {\n\t\t21: \"A0\",\n\t\t22: \"Bb0\",\n\t\t23: \"B0\",\n\t\t24: \"C1\",\n\t\t25: \"Db1\",\n\t\t26: \"D1\",\n\t\t27: \"Eb1\",\n\t\t28: \"E1\",\n\t\t29: \"F1\",\n\t\t30: \"Gb1\",\n\t\t31: \"G1\",\n\t\t32: \"Ab1\",\n\t\t33: \"A1\",\n\t\t34: \"Bb1\",\n\t\t35: \"B1\",\n\t\t36: \"C2\",\n\t\t37: \"Db2\",\n\t\t38: \"D2\",\n\t\t39: \"Eb2\",\n\t\t40: \"E2\",\n\t\t41: \"F2\",\n\t\t42: \"Gb2\",\n\t\t43: \"G2\",\n\t\t44: \"Ab2\",\n\t\t45: \"A2\",\n\t\t46: \"Bb2\",\n\t\t47: \"B2\",\n\t\t48: \"C3\",\n\t\t49: \"Db3\",\n\t\t50: \"D3\",\n\t\t51: \"Eb3\",\n\t\t52: \"E3\",\n\t\t53: \"F3\",\n\t\t54: \"Gb3\",\n\t\t55: \"G3\",\n\t\t56: \"Ab3\",\n\t\t57: \"A3\",\n\t\t58: \"Bb3\",\n\t\t59: \"B3\",\n\t\t60: \"C4\",\n\t\t61: \"Db4\",\n\t\t62: \"D4\",\n\t\t63: \"Eb4\",\n\t\t64: \"E4\",\n\t\t65: \"F4\",\n\t\t66: \"Gb4\",\n\t\t67: \"G4\",\n\t\t68: \"Ab4\",\n\t\t69: \"A4\",\n\t\t70: \"Bb4\",\n\t\t71: \"B4\",\n\t\t72: \"C5\",\n\t\t73: \"Db5\",\n\t\t74: \"D5\",\n\t\t75: \"Eb5\",\n\t\t76: \"E5\",\n\t\t77: \"F5\",\n\t\t78: \"Gb5\",\n\t\t79: \"G5\",\n\t\t80: \"Ab5\",\n\t\t81: \"A5\",\n\t\t82: \"Bb5\",\n\t\t83: \"B5\",\n\t\t84: \"C6\",\n\t\t85: \"Db6\",\n\t\t86: \"D6\",\n\t\t87: \"Eb6\",\n\t\t88: \"E6\",\n\t\t89: \"F6\",\n\t\t90: \"Gb6\",\n\t\t91: \"G6\",\n\t\t92: \"Ab6\",\n\t\t93: \"A6\",\n\t\t94: \"Bb6\",\n\t\t95: \"B6\",\n\t\t96: \"C7\",\n\t\t97: \"Db7\",\n\t\t98: \"D7\",\n\t\t99: \"Eb7\",\n\t\t100: \"E7\",\n\t\t101: \"F7\",\n\t\t102: \"Gb7\",\n\t\t103: \"G7\",\n\t\t104: \"Ab7\",\n\t\t105: \"A7\",\n\t\t106: \"Bb7\",\n\t\t107: \"B7\",\n\t\t108: \"C8\"\n\t}\n}\n","import { getSetting, setSetting } from \"./Settings.js\"\n\nexport const getDefaultSettings = () => {\n\tlet copy = {}\n\tfor (let tab in defaultSettings) {\n\t\tcopy[tab] = {}\n\t\tfor (let category in defaultSettings[tab]) {\n\t\t\tcopy[tab][category] = []\n\t\t\tdefaultSettings[tab][category].forEach(setting => {\n\t\t\t\tlet settingCopy = {}\n\t\t\t\tfor (let attribute in setting) {\n\t\t\t\t\tsettingCopy[attribute] = setting[attribute]\n\t\t\t\t}\n\t\t\t\tcopy[tab][category].push(settingCopy)\n\t\t\t})\n\t\t}\n\t}\n\treturn copy\n}\nconst TAB_GENERAL = \"General\"\nconst TAB_AUDIO = \"Audio\"\nconst TAB_VIDEO = \"Video\"\n\nconst defaultSettings = {\n\t//tabs\n\tGeneral: {\n\t\t//default or subcategory\n\t\tdefault: [\n\t\t\t{\n\t\t\t\ttype: \"slider\",\n\t\t\t\tid: \"renderOffset\",\n\t\t\t\tlabel: \"Render offset (ms)\",\n\t\t\t\tvalue: 0,\n\t\t\t\tmin: -250,\n\t\t\t\tmax: 250,\n\t\t\t\tstep: 1,\n\t\t\t\tonChange: value => setSetting(\"renderOffset\", value)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"checkbox\",\n\t\t\t\tid: \"reverseNoteDirection\",\n\t\t\t\tlabel: \"Reverse note direction\",\n\t\t\t\tvalue: false,\n\t\t\t\tonChange: ev => {\n\t\t\t\t\tsetSetting(\"reverseNoteDirection\", ev.target.checked)\n\t\t\t\t\tsetSetting(\n\t\t\t\t\t\t\"pianoPosition\",\n\t\t\t\t\t\tMath.abs(parseInt(getSetting(\"pianoPosition\")) + 1)\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t{\n\t\t\t\ttype: \"checkbox\",\n\t\t\t\tid: \"showBPM\",\n\t\t\t\tlabel: \"Show BPM\",\n\t\t\t\tvalue: true,\n\t\t\t\tonChange: ev => setSetting(\"showBPM\", ev.target.checked)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"checkbox\",\n\t\t\t\tid: \"showMiliseconds\",\n\t\t\t\tlabel: \"Show Miliseconds\",\n\t\t\t\tvalue: true,\n\t\t\t\tonChange: ev => setSetting(\"showMiliseconds\", ev.target.checked)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"checkbox\",\n\t\t\t\tid: \"showNoteDebugInfo\",\n\t\t\t\tlabel: \"Enable debug info on hover over note\",\n\t\t\t\tvalue: false,\n\t\t\t\tonChange: ev => setSetting(\"showNoteDebugInfo\", ev.target.checked)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"checkbox\",\n\t\t\t\tid: \"showMarkersSong\",\n\t\t\t\tlabel: \"Show markers in the song\",\n\t\t\t\tvalue: false,\n\t\t\t\tonChange: ev => setSetting(\"showMarkersSong\", ev.target.checked)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"checkbox\",\n\t\t\t\tid: \"showMarkersTimeline\",\n\t\t\t\tlabel: \"Show markers on timeline\",\n\t\t\t\tvalue: false,\n\t\t\t\tonChange: ev => setSetting(\"showMarkersTimeline\", ev.target.checked)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"checkbox\",\n\t\t\t\tid: \"showFps\",\n\t\t\t\tlabel: \"Show FPS\",\n\t\t\t\tvalue: true,\n\t\t\t\tonChange: ev => setSetting(\"showFps\", ev.target.checked)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"color\",\n\t\t\t\tid: \"inputNoteColor\",\n\t\t\t\tlabel: \"Your note color\",\n\t\t\t\tvalue: \"rgba(40,155,155,0.8)\",\n\t\t\t\tonChange: value => setSetting(\"inputNoteColor\", value)\n\t\t\t}\n\t\t],\n\t\t\"On Screen Piano\": [\n\t\t\t{\n\t\t\t\ttype: \"checkbox\",\n\t\t\t\tid: \"clickablePiano\",\n\t\t\t\tlabel: \"Clickable piano\",\n\t\t\t\tvalue: true,\n\t\t\t\tonChange: ev => setSetting(\"clickablePiano\", ev.target.checked)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"checkbox\",\n\t\t\t\tid: \"showKeyNamesOnPianoWhite\",\n\t\t\t\tlabel: \"Show white key names on piano\",\n\t\t\t\tvalue: true,\n\t\t\t\tonChange: ev =>\n\t\t\t\t\tsetSetting(\"showKeyNamesOnPianoWhite\", ev.target.checked)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"checkbox\",\n\t\t\t\tid: \"showKeyNamesOnPianoBlack\",\n\t\t\t\tlabel: \"Show black key names on piano\",\n\t\t\t\tvalue: true,\n\t\t\t\tonChange: ev =>\n\t\t\t\t\tsetSetting(\"showKeyNamesOnPianoBlack\", ev.target.checked)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"checkbox\",\n\t\t\t\tid: \"highlightActivePianoKeys\",\n\t\t\t\tlabel: \"Color active piano keys\",\n\t\t\t\tvalue: true,\n\t\t\t\tonChange: ev => setSetting(\"showPianoKeys\", ev.target.checked)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"checkbox\",\n\t\t\t\tid: \"drawPianoKeyHitEffect\",\n\t\t\t\tlabel: \"Piano Hit key effect\",\n\t\t\t\tvalue: true,\n\t\t\t\tonChange: ev => setSetting(\"drawPianoKeyHitEffect\", ev.target.checked)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"slider\",\n\t\t\t\tid: \"pianoPosition\",\n\t\t\t\tlabel: \"Piano Position\",\n\t\t\t\tvalue: 20,\n\t\t\t\tmin: 0,\n\t\t\t\tmax: 100,\n\t\t\t\tstep: 1,\n\t\t\t\tonChange: value => setSetting(\"pianoPosition\", value)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"slider\",\n\t\t\t\tid: \"whiteKeyHeight\",\n\t\t\t\tlabel: \"Height (%) - White keys\",\n\t\t\t\tvalue: 100,\n\t\t\t\tmin: 0,\n\t\t\t\tmax: 200,\n\t\t\t\tstep: 1,\n\t\t\t\tonChange: value => setSetting(\"whiteKeyHeight\", value)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"slider\",\n\t\t\t\tid: \"blackKeyHeight\",\n\t\t\t\tlabel: \"Height (%) - Black keys\",\n\t\t\t\tvalue: 100,\n\t\t\t\tmin: 0,\n\t\t\t\tmax: 200,\n\t\t\t\tstep: 1,\n\t\t\t\tonChange: value => setSetting(\"blackKeyHeight\", value)\n\t\t\t}\n\t\t]\n\t},\n\n\tVideo: {\n\t\tdefault: [\n\t\t\t{\n\t\t\t\ttype: \"slider\",\n\t\t\t\tid: \"noteToHeightConst\",\n\t\t\t\tlabel: \"Seconds shown on screen\",\n\t\t\t\tvalue: 3,\n\t\t\t\tmin: 0.1,\n\t\t\t\tmax: 30,\n\t\t\t\tstep: 0.1,\n\t\t\t\tonChange: value => setSetting(\"noteToHeightConst\", value)\n\t\t\t}\n\t\t],\n\t\t\"Note Appearance\": [\n\t\t\t{\n\t\t\t\ttype: \"checkbox\",\n\t\t\t\tid: \"showHitKeys\",\n\t\t\t\tlabel: \"Active Notes effect\",\n\t\t\t\tvalue: true,\n\t\t\t\tonChange: ev => setSetting(\"showHitKeys\", ev.target.checked)\n\t\t\t},\n\n\t\t\t{\n\t\t\t\ttype: \"checkbox\",\n\t\t\t\tid: \"strokeActiveNotes\",\n\t\t\t\tlabel: \"Stroke active notes\",\n\t\t\t\tvalue: true,\n\t\t\t\tonChange: ev => setSetting(\"strokeActiveNotes\", ev.target.checked)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"color\",\n\t\t\t\tid: \"strokeActiveNotesColor\",\n\t\t\t\tlabel: \"Stroke color\",\n\t\t\t\tvalue: \"rgba(240,240,240,0.5)\",\n\t\t\t\tonChange: value => setSetting(\"strokeActiveNotesColor\", value)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"slider\",\n\t\t\t\tid: \"strokeActiveNotesWidth\",\n\t\t\t\tlabel: \"Stroke width\",\n\t\t\t\tvalue: \"4\",\n\t\t\t\tmin: 1,\n\t\t\t\tmax: 10,\n\t\t\t\tstep: 0.5,\n\t\t\t\tonChange: value => setSetting(\"strokeActiveNotesWidth\", value)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"checkbox\",\n\t\t\t\tid: \"strokeNotes\",\n\t\t\t\tlabel: \"Stroke notes\",\n\t\t\t\tvalue: true,\n\t\t\t\tonChange: ev => setSetting(\"strokeNotes\", ev.target.checked)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"color\",\n\t\t\t\tid: \"strokeNotesColor\",\n\t\t\t\tlabel: \"Stroke color\",\n\t\t\t\tvalue: \"rgba(0,0,0,1)\",\n\t\t\t\tonChange: value => setSetting(\"strokeNotesColor\", value)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"slider\",\n\t\t\t\tid: \"strokeNotesWidth\",\n\t\t\t\tlabel: \"Stroke width\",\n\t\t\t\tvalue: \"1\",\n\t\t\t\tmin: 1,\n\t\t\t\tmax: 10,\n\t\t\t\tstep: 0.5,\n\t\t\t\tonChange: value => setSetting(\"strokeNotesWidth\", value)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"checkbox\",\n\t\t\t\tid: \"roundedNotes\",\n\t\t\t\tlabel: \"Rounded notes\",\n\t\t\t\tvalue: true,\n\t\t\t\tonChange: ev => setSetting(\"roundedNotes\", ev.target.checked)\n\t\t\t},\n\t\t\t//TODO fix getAlphaFromY in Noterender.\n\t\t\t// {\n\t\t\t// \ttype: \"checkbox\",\n\t\t\t// \tid: \"fadeInNotes\",\n\t\t\t// \tlabel: \"Enable fade in effect\",\n\t\t\t// \tvalue: true,\n\t\t\t// \tonChange: ev => setSetting(\"fadeInNotes\", ev.target.checked)\n\t\t\t// },\n\t\t\t{\n\t\t\t\ttype: \"slider\",\n\t\t\t\tid: \"noteBorderRadius\",\n\t\t\t\tlabel: \"Note border radius (%)\",\n\t\t\t\tvalue: 15,\n\t\t\t\tmin: 0,\n\t\t\t\tmax: 50,\n\t\t\t\tstep: 1,\n\t\t\t\tonChange: value => setSetting(\"noteBorderRadius\", value)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"slider\",\n\t\t\t\tid: \"minNoteHeight\",\n\t\t\t\tlabel: \"Minimum Note height (px)\",\n\t\t\t\tvalue: 10,\n\t\t\t\tmin: 1,\n\t\t\t\tmax: 50,\n\t\t\t\tstep: 1,\n\t\t\t\tonChange: value => setSetting(\"minNoteHeight\", value)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"slider\",\n\t\t\t\tid: \"noteEndedShrink\",\n\t\t\t\tlabel: \"Played Notes shrink speed\",\n\t\t\t\tvalue: 1,\n\t\t\t\tmin: 0,\n\t\t\t\tmax: 5,\n\t\t\t\tstep: 0.1,\n\t\t\t\tonChange: value => setSetting(\"noteEndedShrink\", value)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"slider\",\n\t\t\t\tid: \"playedNoteFalloffSpeed\",\n\t\t\t\tlabel: \"Played Note Speed\",\n\t\t\t\tvalue: 1,\n\t\t\t\tmin: 0.1,\n\t\t\t\tmax: 10,\n\t\t\t\tstep: 0.1,\n\t\t\t\tonChange: value => setSetting(\"playedNoteFalloffSpeed\", value)\n\t\t\t}\n\t\t],\n\t\tSustain: [\n\t\t\t{\n\t\t\t\ttype: \"checkbox\",\n\t\t\t\tid: \"showSustainOnOffs\",\n\t\t\t\tlabel: \"Draw Sustain On/Off Events\",\n\t\t\t\tvalue: false,\n\t\t\t\tonChange: function (ev) {\n\t\t\t\t\tsetSetting(\"showSustainOnOffs\", ev.target.checked)\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"checkbox\",\n\t\t\t\tid: \"showSustainPeriods\",\n\t\t\t\tlabel: \"Draw Sustain Periods\",\n\t\t\t\tvalue: false,\n\t\t\t\tonChange: ev => setSetting(\"showSustainPeriods\", ev.target.checked)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"checkbox\",\n\t\t\t\tid: \"showSustainedNotes\",\n\t\t\t\tlabel: \"Draw Sustained Notes\",\n\t\t\t\tvalue: false,\n\t\t\t\tonChange: ev => setSetting(\"showSustainedNotes\", ev.target.checked)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"slider\",\n\t\t\t\tid: \"sustainedNotesOpacity\",\n\t\t\t\tlabel: \"Sustained Notes Opacity (%)\",\n\t\t\t\tvalue: 50,\n\t\t\t\tmin: 0,\n\t\t\t\tmax: 100,\n\t\t\t\tstep: 1,\n\t\t\t\tonChange: value => setSetting(\"sustainedNotesOpacity\", value)\n\t\t\t}\n\t\t],\n\t\tParticles: [\n\t\t\t{\n\t\t\t\ttype: \"checkbox\",\n\t\t\t\tid: \"showParticlesTop\",\n\t\t\t\tlabel: \"Enable top particles\",\n\t\t\t\tvalue: true,\n\t\t\t\tonChange: ev => setSetting(\"showParticlesTop\", ev.target.checked)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"checkbox\",\n\t\t\t\tid: \"showParticlesBottom\",\n\t\t\t\tlabel: \"Enable bottom particles \",\n\t\t\t\tvalue: true,\n\t\t\t\tonChange: ev => setSetting(\"showParticlesBottom\", ev.target.checked)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"checkbox\",\n\t\t\t\tid: \"particleStroke\",\n\t\t\t\tlabel: \"Stroke particles\",\n\t\t\t\tvalue: true,\n\t\t\t\tonChange: ev => setSetting(\"particleStroke\", ev.target.checked)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"slider\",\n\t\t\t\tid: \"particleBlur\",\n\t\t\t\tlabel: \"Particle blur amount (px)\",\n\t\t\t\tvalue: 3,\n\t\t\t\tmin: 0,\n\t\t\t\tmax: 10,\n\t\t\t\tstep: 1,\n\t\t\t\tonChange: value => setSetting(\"particleBlur\", value)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"slider\",\n\t\t\t\tid: \"particleAmount\",\n\t\t\t\tlabel: \"Particle Amount (per frame)\",\n\t\t\t\tvalue: 3,\n\t\t\t\tmin: 0,\n\t\t\t\tmax: 15,\n\t\t\t\tstep: 1,\n\t\t\t\tonChange: value => setSetting(\"particleAmount\", value)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"slider\",\n\t\t\t\tid: \"particleSize\",\n\t\t\t\tlabel: \"Particle Size\",\n\t\t\t\tvalue: 6,\n\t\t\t\tmin: 0,\n\t\t\t\tmax: 10,\n\t\t\t\tstep: 1,\n\t\t\t\tonChange: value => setSetting(\"particleSize\", value)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"slider\",\n\t\t\t\tid: \"particleLife\",\n\t\t\t\tlabel: \"Particle Duration\",\n\t\t\t\tvalue: 20,\n\t\t\t\tmin: 1,\n\t\t\t\tmax: 150,\n\t\t\t\tstep: 1,\n\t\t\t\tonChange: value => setSetting(\"particleLife\", value)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"slider\",\n\t\t\t\tid: \"particleSpeed\",\n\t\t\t\tlabel: \"Particle Speed\",\n\t\t\t\tvalue: 4,\n\t\t\t\tmin: 1,\n\t\t\t\tmax: 15,\n\t\t\t\tstep: 1,\n\t\t\t\tonChange: value => setSetting(\"particleSpeed\", value)\n\t\t\t}\n\t\t],\n\t\tBackground: [\n\t\t\t{\n\t\t\t\ttype: \"color\",\n\t\t\t\tid: \"bgCol1\",\n\t\t\t\tlabel: \"Background fill color 1\",\n\t\t\t\tvalue: \"rgba(40,40,40,0.8)\",\n\t\t\t\tonChange: value => {\n\t\t\t\t\tsetSetting(\"bgCol1\", value)\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"color\",\n\t\t\t\tid: \"bgCol2\",\n\t\t\t\tlabel: \"Background fill color 2\",\n\t\t\t\tvalue: \"rgba(25,25,25,1)\",\n\t\t\t\tonChange: value => {\n\t\t\t\t\tsetSetting(\"bgCol2\", value)\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"color\",\n\t\t\t\tid: \"bgCol3\",\n\t\t\t\tlabel: \"Background stroke color\",\n\t\t\t\tvalue: \"rgba(10,10,10,0.5)\",\n\t\t\t\tonChange: value => {\n\t\t\t\t\tsetSetting(\"bgCol3\", value)\n\t\t\t\t}\n\t\t\t}\n\t\t]\n\t},\n\tAudio: {\n\t\tdefault: [\n\t\t\t{\n\t\t\t\ttype: \"list\",\n\t\t\t\tid: \"soundfontName\",\n\t\t\t\tlabel: \"Soundfont\",\n\t\t\t\tvalue: \"MusyngKite\",\n\t\t\t\tlist: [\"MusyngKite\", \"FluidR3_GM\", \"FatBoy\"],\n\t\t\t\tonChange: newVal => setSetting(\"soundfontName\", newVal)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"checkbox\",\n\t\t\t\tid: \"sustainEnabled\",\n\t\t\t\tlabel: \"Enable Sustain\",\n\t\t\t\tvalue: true,\n\t\t\t\tonChange: function (ev) {\n\t\t\t\t\tsetSetting(\"sustainEnabled\", ev.target.checked)\n\t\t\t\t}.bind(this)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"checkbox\",\n\t\t\t\tid: \"enableMetronome\",\n\t\t\t\tlabel: \"Enable Metronome\",\n\t\t\t\tvalue: true,\n\t\t\t\tonChange: function (ev) {\n\t\t\t\t\tsetSetting(\"enableMetronome\", ev.target.checked)\n\t\t\t\t}.bind(this)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"slider\",\n\t\t\t\tid: \"metronomeVolume\",\n\t\t\t\tlabel: \"Metronome Volume\",\n\t\t\t\tvalue: 0.5,\n\t\t\t\tmin: 0,\n\t\t\t\tmax: 1,\n\t\t\t\tstep: 0.1,\n\t\t\t\tonChange: value => setSetting(\"metronomeVolume\", value)\n\t\t\t}\n\t\t],\n\t\t\"ADSR Envelope\": [\n\t\t\t{\n\t\t\t\ttype: \"slider\",\n\t\t\t\tid: \"adsrAttack\",\n\t\t\t\tlabel: \"Attack (Seconds)\",\n\t\t\t\tvalue: 0,\n\t\t\t\tmin: 0,\n\t\t\t\tmax: 2,\n\t\t\t\tstep: 0.01,\n\t\t\t\tonChange: value => setSetting(\"adsrAttack\", value)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"slider\",\n\t\t\t\tid: \"adsrDecay\",\n\t\t\t\tlabel: \"Decay (Seconds)\",\n\t\t\t\tvalue: 0,\n\t\t\t\tmin: 0,\n\t\t\t\tmax: 0.5,\n\t\t\t\tstep: 0.01,\n\t\t\t\tonChange: value => setSetting(\"adsrDecay\", value)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"slider\",\n\t\t\t\tid: \"adsrSustain\",\n\t\t\t\tlabel: \"Sustain (%)\",\n\t\t\t\tvalue: 100,\n\t\t\t\tmin: 0,\n\t\t\t\tmax: 100,\n\t\t\t\tstep: 1,\n\t\t\t\tonChange: value => setSetting(\"adsrSustain\", value)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"slider\",\n\t\t\t\tid: \"adsrReleaseKey\",\n\t\t\t\tlabel: \"Release - Key (Seconds)\",\n\t\t\t\tvalue: 0.2,\n\t\t\t\tmin: 0,\n\t\t\t\tmax: 2,\n\t\t\t\tstep: 0.01,\n\t\t\t\tonChange: value => setSetting(\"adsrReleaseKey\", value)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"slider\",\n\t\t\t\tid: \"adsrReleasePedal\",\n\t\t\t\tlabel: \"Release - Pedal (Seconds)\",\n\t\t\t\tvalue: 0.2,\n\t\t\t\tmin: 0,\n\t\t\t\tmax: 2,\n\t\t\t\tstep: 0.01,\n\t\t\t\tonChange: value => setSetting(\"adsrReleasePedal\", value)\n\t\t\t}\n\t\t]\n\t}\n}\n","import { resetSettingsToDefault } from \"../settings/Settings.js\"\nimport { DomHelper } from \"../ui/DomHelper.js\"\nimport { groupArrayBy } from \"../Util.js\"\n/**\n * Class to create the DOM Elements used to manipulate the settings.\n */\nexport class SettingUI {\n\tconstructor() {\n\t\tthis.tabs = {}\n\t\tthis.activeTab = \"General\"\n\t\tthis.mainDiv = null\n\t}\n\t/**\n\t * returns a div with the following structure:\n\t * \t.settingsContainer {\n\t * \t\t.settingsTabButtonContainer {\n\t * \t\t\t.settingsTabButton ...\n\t * \t\t}\n\t * \t\t.settingsContentContainer {\n\t * \t\t\t.settingContainer ...\n\t * \t\t}\n\t * }\n\t *\n\t * @param {Object} settings  as defined in DefaultSettings.js\n\t */\n\tgetSettingsDiv(settings) {\n\t\tif (this.mainDiv == null) {\n\t\t\tthis.mainDiv = DomHelper.createDivWithClass(\"settingsContainer\")\n\t\t\tthis.mainDiv.appendChild(this.getTabDiv(Object.keys(settings)))\n\t\t\tthis.mainDiv.appendChild(this.getContentDiv(settings))\n\n\t\t\tthis.mainDiv\n\t\t\t\t.querySelectorAll(\".settingsTabContent\" + this.activeTab)\n\t\t\t\t.forEach(el => (el.style.display = \"block\"))\n\t\t\tthis.mainDiv\n\t\t\t\t.querySelector(\"#\" + this.activeTab + \"Tab\")\n\t\t\t\t.classList.add(\"selected\")\n\t\t}\n\t\treturn this.mainDiv\n\t}\n\tgetTabDiv(tabIds) {\n\t\tlet cont = DomHelper.createDivWithClass(\"settingsTabButtonContainer\")\n\t\ttabIds.forEach(tabId => {\n\t\t\tlet tabButton = this.createTabButton(tabId)\n\t\t\ttabButton.classList.add(\"settingsTabButton\")\n\t\t\tcont.appendChild(tabButton)\n\t\t})\n\t\treturn cont\n\t}\n\tcreateTabButton(tabName) {\n\t\tlet butEl = DomHelper.createTextButton(tabName + \"Tab\", tabName, ev => {\n\t\t\tdocument\n\t\t\t\t.querySelectorAll(\".settingsTabButton\")\n\t\t\t\t.forEach(el => el.classList.remove(\"selected\"))\n\n\t\t\tbutEl.classList.add(\"selected\")\n\n\t\t\tdocument\n\t\t\t\t.querySelectorAll(\".settingsTabContentContainer\")\n\t\t\t\t.forEach(settingEl => (settingEl.style.display = \"none\"))\n\t\t\tdocument\n\t\t\t\t.querySelectorAll(\".settingsTabContent\" + tabName)\n\t\t\t\t.forEach(settingEl => (settingEl.style.display = \"block\"))\n\t\t})\n\t\treturn butEl\n\t}\n\tgetContentDiv(settings) {\n\t\tlet cont = DomHelper.createDivWithClass(\"settingsContentContainer\")\n\t\tObject.keys(settings).forEach(tabId => {\n\t\t\tcont.appendChild(this.createSettingTabContentDiv(tabId, settings[tabId]))\n\t\t})\n\n\t\treturn cont\n\t}\n\tcreateSettingTabContentDiv(tabName, settingGroups) {\n\t\tlet cont = DomHelper.createDivWithClass(\n\t\t\t\"settingsTabContentContainer settingsTabContent\" + tabName\n\t\t)\n\t\tObject.keys(settingGroups).forEach(groupId => {\n\t\t\tcont.appendChild(\n\t\t\t\tthis.createSettingGroupDiv(groupId, settingGroups[groupId])\n\t\t\t)\n\t\t})\n\t\tif (tabName == \"General\") {\n\t\t\tcont.appendChild(this.getResetButton())\n\t\t}\n\t\treturn cont\n\t}\n\tgetResetButton() {\n\t\tlet but = DomHelper.createTextButton(\n\t\t\t\"settingsResetButton\",\n\t\t\t\"Reset to defaults\",\n\t\t\t() => {\n\t\t\t\tresetSettingsToDefault()\n\t\t\t}\n\t\t)\n\t\treturn but\n\t}\n\tcreateSettingGroupDiv(categoryName, settingsList) {\n\t\tlet cont = DomHelper.createDivWithClass(\n\t\t\t\"settingsGroupContainer innerMenuContDiv\"\n\t\t)\n\t\tif (categoryName != \"default\") {\n\t\t\tcont.classList.add(\"collapsed\")\n\t\t\tlet label = DomHelper.createElementWithClass(\n\t\t\t\t\"settingsGroupLabel clickableTitle\",\n\t\t\t\t\"div\",\n\t\t\t\t{},\n\t\t\t\t{ innerHTML: categoryName + \": \" }\n\t\t\t)\n\t\t\tcont.appendChild(label)\n\n\t\t\tlet collapsed = true\n\t\t\tlet glyph = DomHelper.getGlyphicon(\"plus\")\n\t\t\tglyph.classList.add(\"collapserGlyphSpan\")\n\t\t\tlabel.appendChild(glyph)\n\n\t\t\tlabel.onclick = () => {\n\t\t\t\tif (collapsed == true) {\n\t\t\t\t\tcollapsed = false\n\t\t\t\t\tcont.classList.remove(\"collapsed\")\n\t\t\t\t\tDomHelper.replaceGlyph(label, \"plus\", \"minus\")\n\t\t\t\t} else {\n\t\t\t\t\tcollapsed = true\n\t\t\t\t\tcont.classList.add(\"collapsed\")\n\t\t\t\t\tDomHelper.replaceGlyph(label, \"minus\", \"plus\")\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tsettingsList.forEach(setting =>\n\t\t\tcont.appendChild(SettingUI.createSettingDiv(setting))\n\t\t)\n\t\treturn cont\n\t}\n\tstatic createSettingDiv(setting) {\n\t\tswitch (setting.type) {\n\t\t\tcase \"list\":\n\t\t\t\treturn SettingUI.createListSettingDiv(setting)\n\t\t\tcase \"checkbox\":\n\t\t\t\treturn SettingUI.createCheckboxSettingDiv(setting)\n\t\t\tcase \"slider\":\n\t\t\t\treturn SettingUI.createSliderSettingDiv(setting)\n\t\t\tcase \"color\":\n\t\t\t\treturn SettingUI.createColorSettingDiv(setting)\n\t\t}\n\t}\n\tstatic createListSettingDiv(setting) {\n\t\tlet el = DomHelper.createInputSelect(\n\t\t\tsetting.label,\n\t\t\tsetting.list,\n\t\t\tsetting.onChange\n\t\t)\n\t\tel.classList.add(\"settingContainer\")\n\t\treturn el\n\t}\n\tstatic createCheckboxSettingDiv(setting) {\n\t\tlet el = DomHelper.createCheckbox(\n\t\t\tsetting.label,\n\t\t\tsetting.onChange,\n\t\t\tsetting.value,\n\t\t\tsetting.isChecked\n\t\t)\n\t\tel.classList.add(\"settingContainer\")\n\t\treturn el\n\t}\n\tstatic createSliderSettingDiv(setting) {\n\t\tlet el = DomHelper.createSliderWithLabelAndField(\n\t\t\tsetting.id + \"Slider\",\n\t\t\tsetting.label,\n\t\t\tparseFloat(setting.value),\n\t\t\tsetting.min,\n\t\t\tsetting.max,\n\t\t\tsetting.step,\n\t\t\tsetting.onChange\n\t\t).container\n\t\tel.classList.add(\"settingContainer\")\n\t\treturn el\n\t}\n\tstatic createColorSettingDiv(setting) {\n\t\treturn DomHelper.createColorPickerText(\n\t\t\tsetting.label,\n\t\t\tsetting.value,\n\t\t\tsetting.onChange\n\t\t)\n\t}\n}\n","import { getSettingObject } from \"./Settings.js\"\n\nconst SAVE_PATH_ROOT = \"Midiano/SavedSettings\"\nexport const getGlobalSavedSettings = () => {\n\tlet obj = {}\n\tif (window.localStorage) {\n\t\tlet storedObj = window.localStorage.getItem(SAVE_PATH_ROOT)\n\t\tif (storedObj) {\n\t\t\tobj = JSON.parse(storedObj)\n\t\t}\n\t}\n\treturn obj\n}\n\nexport const saveCurrentSettings = () => {\n\tif (window.localStorage) {\n\t\tlet saveObj = getSettingObject()\n\t\twindow.localStorage.setItem(SAVE_PATH_ROOT, JSON.stringify(saveObj))\n\t}\n}\n","import { getDefaultSettings } from \"./DefaultSettings.js\"\nimport { SettingUI } from \"../ui/SettingUI.js\"\nimport {\n\tgetGlobalSavedSettings,\n\tsaveCurrentSettings\n} from \"./LocalStorageHandler.js\"\n\nclass Settings {\n\tconstructor(ui) {\n\t\tthis.settings = getDefaultSettings()\n\t\tlet savedSettings = getGlobalSavedSettings()\n\n\t\tthis.settingsById = {}\n\t\tObject.keys(this.settings).forEach(tabId =>\n\t\t\tObject.keys(this.settings[tabId]).forEach(categoryId =>\n\t\t\t\tthis.settings[tabId][categoryId].forEach(setting => {\n\t\t\t\t\tthis.settingsById[setting.id] = setting\n\n\t\t\t\t\tif (savedSettings.hasOwnProperty(setting.id)) {\n\t\t\t\t\t\tsetting.value = savedSettings[setting.id]\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t)\n\t\t)\n\t\tthis.settingsUi = new SettingUI()\n\t}\n\tsetSettingValue(settingId, value) {\n\t\tthis.settingsById[settingId].value = value\n\t}\n}\n\nconst globalSettings = new Settings()\nexport const getSetting = settingId => {\n\tif (globalSettings == null) {\n\t\tglobalSettings = new Settings()\n\t}\n\treturn globalSettings.settingsById[settingId]\n\t\t? globalSettings.settingsById[settingId].value\n\t\t: null\n}\nexport const setSetting = (settingId, value) => {\n\tglobalSettings.settingsById[settingId].value = value\n\tif (settingCallbacks.hasOwnProperty(settingId)) {\n\t\tsettingCallbacks[settingId].forEach(callback => callback())\n\t}\n\tsaveCurrentSettings()\n}\nexport const getSettingsDiv = () => {\n\treturn globalSettings.settingsUi.getSettingsDiv(globalSettings.settings)\n}\nvar settingCallbacks = {}\nexport const setSettingCallback = (settingId, callback) => {\n\tif (!settingCallbacks.hasOwnProperty(settingId)) {\n\t\tsettingCallbacks[settingId] = []\n\t}\n\tsettingCallbacks[settingId].push(callback)\n}\nexport const getSettingObject = () => {\n\tlet obj = {}\n\tfor (let key in globalSettings.settingsById) {\n\t\tobj[key] = globalSettings.settingsById[key].value\n\t}\n\treturn obj\n}\n\nexport const resetSettingsToDefault = () => {\n\tlet defaultSettings = getDefaultSettings()\n\tObject.keys(defaultSettings).forEach(tabId =>\n\t\tObject.keys(defaultSettings[tabId]).forEach(categoryId =>\n\t\t\tdefaultSettings[tabId][categoryId].forEach(setting => {\n\t\t\t\tglobalSettings.settingsById[setting.id].value = setting.value\n\t\t\t})\n\t\t)\n\t)\n\n\tlet parent = globalSettings.settingsUi.getSettingsDiv(globalSettings.settings)\n\t\t.parentElement\n\tparent.removeChild(\n\t\tglobalSettings.settingsUi.getSettingsDiv(globalSettings.settings)\n\t)\n\tglobalSettings.settingsUi.mainDiv = null\n\tparent.appendChild(getSettingsDiv())\n}\n","import { CONST } from \"../data/CONST.js\"\nimport { DomHelper } from \"../ui/DomHelper.js\"\nimport { getSetting } from \"../settings/Settings.js\"\nimport { isBlack, replaceAllString } from \"../Util.js\"\n/**\n * Class to render the piano (and the colored keys played on the piano)\n */\nexport class PianoRender {\n\tconstructor(renderDimensions) {\n\t\tthis.renderDimensions = renderDimensions\n\t\tthis.renderDimensions.registerResizeCallback(this.resize.bind(this))\n\t\tthis.clickCallback = null\n\t\tthis.blackKeyImg = new Image()\n\t\tthis.blackKeyImg.src = \"../../blackKey.svg\"\n\t\tthis.blackKeyImg.onload\n\t\tthis.positionY = 50 //from bottom\n\n\t\tthis.resize()\n\t}\n\t/**\n\t * Resize canvases and redraw piano.\n\t */\n\tresize() {\n\t\tthis.resizeCanvases()\n\t\tthis.drawPiano(this.ctxWhite, this.ctxBlack)\n\t}\n\t/**\n\t * pass listeners that are called with the note number as argument when piano canvas is clicked.\n\t * @param {Function} onNoteOn\n\t * @param {Function} onNoteOff\n\t */\n\tsetPianoInputListeners(onNoteOn, onNoteOff) {\n\t\tthis.onNoteOn = onNoteOn\n\t\tthis.onNoteOff = onNoteOff\n\t}\n\t/**\n\t * Register a callback to trigger when user clicks the piano Canvas. Callback is called with\n\t */\n\tsetClickCallback(callback) {\n\t\tthis.clickCallback = callback\n\t}\n\tgetAllCanvases() {\n\t\treturn [\n\t\t\tthis.getPianoCanvasWhite(),\n\t\t\tthis.getPlayedKeysWhite(),\n\t\t\tthis.getPianoCanvasBlack(),\n\t\t\tthis.getPlayedKeysBlack()\n\t\t]\n\t}\n\n\t/**\n\t * Resizes all piano canvases.\n\t */\n\tresizeCanvases() {\n\t\tthis.getAllCanvases().forEach(canvas => {\n\t\t\tDomHelper.setCanvasSize(\n\t\t\t\tcanvas,\n\t\t\t\tthis.renderDimensions.windowWidth,\n\t\t\t\tMath.max(\n\t\t\t\t\tthis.renderDimensions.whiteKeyHeight,\n\t\t\t\t\tthis.renderDimensions.blackKeyHeight\n\t\t\t\t)\n\t\t\t)\n\t\t})\n\t\tthis.repositionCanvases()\n\t}\n\n\trepositionCanvases() {\n\t\tthis.getAllCanvases().forEach(canvas => {\n\t\t\tcanvas.style.top = this.renderDimensions.getAbsolutePianoPosition() + \"px\"\n\t\t})\n\t}\n\t/**\n\t *\n\t * @param {Integer} noteNumber\n\t */\n\tdrawActiveInputKey(noteNumber, color) {\n\t\tlet dim = this.renderDimensions.getKeyDimensions(noteNumber)\n\t\tlet isKeyBlack = isBlack(noteNumber)\n\t\tlet ctx = isKeyBlack ? this.playedKeysCtxBlack : this.playedKeysCtxWhite\n\n\t\tif (isKeyBlack) {\n\t\t\tthis.drawBlackKey(ctx, dim, color, true)\n\t\t} else {\n\t\t\tthis.drawWhiteKey(ctx, dim, color, true)\n\t\t}\n\t}\n\n\tdrawActiveKey(renderInfo, color) {\n\t\tlet dim = this.renderDimensions.getKeyDimensions(renderInfo.noteNumber)\n\t\tlet isKeyBlack = renderInfo.isBlack\n\t\tlet ctx = isKeyBlack ? this.playedKeysCtxBlack : this.playedKeysCtxWhite\n\n\t\tctx.fillStyle = color\n\t\tif (isKeyBlack) {\n\t\t\tthis.drawBlackKey(ctx, dim, color)\n\t\t} else {\n\t\t\tthis.drawWhiteKey(ctx, dim, color)\n\t\t}\n\t}\n\n\tclearPlayedKeysCanvases() {\n\t\tthis.playedKeysCtxWhite.clearRect(\n\t\t\t0,\n\t\t\t0,\n\t\t\tthis.renderDimensions.windowWidth,\n\t\t\tMath.max(\n\t\t\t\tthis.renderDimensions.whiteKeyHeight,\n\t\t\t\tthis.renderDimensions.blackKeyHeight\n\t\t\t)\n\t\t)\n\t\tthis.playedKeysCtxBlack.clearRect(\n\t\t\t0,\n\t\t\t0,\n\t\t\tthis.renderDimensions.windowWidth,\n\t\t\tMath.max(\n\t\t\t\tthis.renderDimensions.whiteKeyHeight,\n\t\t\t\tthis.renderDimensions.blackKeyHeight\n\t\t\t)\n\t\t)\n\t}\n\n\tdrawPiano(ctxWhite, ctxBlack) {\n\t\tctxWhite.clearRect(\n\t\t\t0,\n\t\t\t0,\n\t\t\tthis.renderDimensions.windowWidth,\n\t\t\tMath.max(\n\t\t\t\tthis.renderDimensions.whiteKeyHeight,\n\t\t\t\tthis.renderDimensions.blackKeyHeight\n\t\t\t)\n\t\t)\n\t\tctxBlack.clearRect(\n\t\t\t0,\n\t\t\t0,\n\t\t\tthis.renderDimensions.windowWidth,\n\t\t\tMath.max(\n\t\t\t\tthis.renderDimensions.whiteKeyHeight,\n\t\t\t\tthis.renderDimensions.blackKeyHeight\n\t\t\t)\n\t\t)\n\t\t//Background\n\t\tctxWhite.fillStyle = \"rgba(0,0,0,1)\"\n\t\tctxWhite.fillRect(\n\t\t\t0,\n\t\t\t5,\n\t\t\tthis.renderDimensions.windowWidth,\n\t\t\tthis.renderDimensions.whiteKeyHeight\n\t\t)\n\n\t\tthis.drawWhiteKeys(ctxWhite)\n\t\tif (getSetting(\"showKeyNamesOnPianoWhite\")) {\n\t\t\tthis.drawWhiteKeyNames(ctxWhite)\n\t\t}\n\t\t// var img = new Image()\n\t\t// img.src = \"../../blackKey.svg\"\n\t\t// img.onload = function () {\n\t\tthis.drawBlackKeys(ctxBlack)\n\t\tif (getSetting(\"showKeyNamesOnPianoBlack\")) {\n\t\t\tthis.drawBlackKeyNames(ctxBlack)\n\t\t}\n\t\t// }.bind(this)\n\n\t\t//velvet - Commented out for modern look\n\t\t/*\n\t\tctxWhite.strokeStyle = \"rgba(155,50,50,1)\"\n\t\tctxWhite.shadowColor = \"rgba(155,50,50,1)\"\n\t\tctxWhite.shadowOffsetY = 2\n\t\tctxWhite.shadowBlur = 2\n\t\tctxWhite.lineWidth = 4\n\t\tctxWhite.beginPath()\n\t\tctxWhite.moveTo(this.renderDimensions.windowWidth, 2)\n\t\tctxWhite.lineTo(0, 2)\n\t\tctxWhite.closePath()\n\t\tctxWhite.stroke()\n\t\tctxWhite.shadowColor = \"rgba(0,0,0,0)\"\n\t\tctxWhite.shadowBlur = 0\n\t\t*/\n\t}\n\n\tdrawWhiteKeys(ctxWhite) {\n\t\tfor (\n\t\t\tlet i = Math.max(0, this.renderDimensions.minNoteNumber);\n\t\t\ti <= this.renderDimensions.maxNoteNumber;\n\t\t\ti++\n\t\t) {\n\t\t\tlet dims = this.renderDimensions.getKeyDimensions(i)\n\t\t\tif (!isBlack(i)) {\n\t\t\t\tthis.drawWhiteKey(ctxWhite, dims, \"rgba(255,255,255,1)\")\n\t\t\t}\n\t\t}\n\t}\n\n\tdrawBlackKeys(ctxBlack) {\n\t\tfor (\n\t\t\tlet i = Math.max(0, this.renderDimensions.minNoteNumber);\n\t\t\ti <= this.renderDimensions.maxNoteNumber;\n\t\t\ti++\n\t\t) {\n\t\t\tlet dims = this.renderDimensions.getKeyDimensions(i)\n\t\t\tif (isBlack(i)) {\n\t\t\t\tthis.drawBlackKey(ctxBlack, dims, \"black\", true)\n\t\t\t}\n\t\t}\n\t}\n\tdrawWhiteKeyNames(ctx) {\n\t\tctx.fillStyle = \"black\";\n\t\tconst fontSize = this.renderDimensions.whiteKeyWidth / 2.2;\n\t\tctx.font = `bold ${fontSize}px Arial`; // Use bold instead of black\n\t\tctx.textAlign = \"center\";\n\t\tctx.textBaseline = \"bottom\"; // Align text baseline to bottom\n\t\tfor (\n\t\t\tlet i = Math.max(0, this.renderDimensions.minNoteNumber);\n\t\t\ti <= this.renderDimensions.maxNoteNumber;\n\t\t\ti++\n\t\t) {\n\t\t\tlet dims = this.renderDimensions.getKeyDimensions(i);\n\t\t\tif (!isBlack(i)) {\n\t\t\t\tlet txt = this.getDisplayKey(CONST.MIDI_NOTE_TO_KEY[i + 21] || \"\");\n\t\t\t\tlet txtWd = ctx.measureText(txt).width;\n\t\t\t\tctx.fillText(\n\t\t\t\t\ttxt,\n\t\t\t\t\tdims.x + dims.w / 2,\n\t\t\t\t\tdims.y + this.renderDimensions.whiteKeyHeight - 5 // Position slightly up from bottom\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\tdrawBlackKeyNames(ctx) {\n\t\tconst fontSize = this.renderDimensions.blackKeyWidth / 2.0; // Slightly larger perhaps\n\t\tctx.font = `normal ${Math.ceil(fontSize)}px Arial`; // Normal weight\n\t\tctx.textAlign = \"center\";\n\t\tctx.textBaseline = \"middle\"; // Center vertically\n\n\t\tconst plateFillColor = \"rgba(255, 255, 255, 0.75)\"; // Semi-transparent white plate\n\t\tconst textColor = \"#000000\"; // Black text for contrast on plate\n\t\tconst platePadding = fontSize * 0.2; // Padding around text\n\t\tconst plateRadius = 2; // Rounded corners for the plate\n\n\t\tfor (\n\t\t\tlet i = Math.max(0, this.renderDimensions.minNoteNumber);\n\t\t\ti <= this.renderDimensions.maxNoteNumber;\n\t\t\ti++\n\t\t) {\n\t\t\tlet dims = this.renderDimensions.getKeyDimensions(i);\n\t\t\tif (isBlack(i)) {\n\t\t\t\tlet txt = this.getDisplayKey(CONST.MIDI_NOTE_TO_KEY[i + 21] || \"\");\n\t\t\t\tlet txtMetrics = ctx.measureText(txt);\n\t\t\t\tlet txtWd = txtMetrics.width;\n\t\t\t\tlet txtHt = fontSize; // Approximate height\n\n\t\t\t\t// Plate dimensions\n\t\t\t\tlet plateW = txtWd + platePadding * 2;\n\t\t\t\tlet plateH = txtHt + platePadding * 2;\n\t\t\t\tlet plateX = dims.x + dims.w / 2 - plateW / 2;\n\t\t\t\tlet plateY = dims.y + this.renderDimensions.blackKeyHeight * 0.8 - plateH / 2; // Position lower middle\n\n\t\t\t\t// Draw background plate\n\t\t\t\tctx.fillStyle = plateFillColor;\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(plateX + plateRadius, plateY);\n\t\t\t\tctx.lineTo(plateX + plateW - plateRadius, plateY);\n\t\t\t\tctx.arcTo(plateX + plateW, plateY, plateX + plateW, plateY + plateRadius, plateRadius);\n\t\t\t\tctx.lineTo(plateX + plateW, plateY + plateH - plateRadius);\n\t\t\t\tctx.arcTo(plateX + plateW, plateY + plateH, plateX + plateW - plateRadius, plateY + plateH, plateRadius);\n\t\t\t\tctx.lineTo(plateX + plateRadius, plateY + plateH);\n\t\t\t\tctx.arcTo(plateX, plateY + plateH, plateX, plateY + plateH - plateRadius, plateRadius);\n\t\t\t\tctx.lineTo(plateX, plateY + plateRadius);\n\t\t\t\tctx.arcTo(plateX, plateY, plateX + plateRadius, plateY, plateRadius);\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.fill();\n\n\t\t\t\t// Draw text on top of plate\n\t\t\t\tctx.fillStyle = textColor;\n\t\t\t\tctx.fillText(txt, dims.x + dims.w / 2, plateY + plateH / 2);\n\t\t\t}\n\t\t}\n\t}\n\tgetDisplayKey(key) {\n\t\tlet blackToHash = replaceAllString(key, \"b\", \"#\")\n\t\treturn blackToHash.replace(/[0-9]/g, \"\")\n\t}\n\t/**\n\t *\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {Dimensions} dims\n\t */\n\tdrawWhiteKey(ctx, dims, color) {\n\t\tconst { x, y, w, h } = dims\n\t\tconst borderRadius = Math.min(w * 0.05, 5); // Small radius\n\n\t\t// Simplified Drawing\n\t\tctx.fillStyle = color || \"#FFFFFF\"; // Solid white or provided color\n\t\tctx.strokeStyle = \"#CCCCCC\"; // Light grey border\n\t\tctx.lineWidth = 1;\n\n\t\t// Draw rounded rectangle path\n\t\tctx.beginPath();\n\t\tctx.moveTo(x + borderRadius, y);\n\t\tctx.lineTo(x + w - borderRadius, y);\n\t\tctx.arcTo(x + w, y, x + w, y + borderRadius, borderRadius);\n\t\tctx.lineTo(x + w, y + h - borderRadius);\n\t\tctx.arcTo(x + w, y + h, x + w - borderRadius, y + h, borderRadius);\n\t\tctx.lineTo(x + borderRadius, y + h);\n\t\tctx.arcTo(x, y + h, x, y + h - borderRadius, borderRadius);\n\t\tctx.lineTo(x, y + borderRadius);\n\t\tctx.arcTo(x, y, x + borderRadius, y, borderRadius);\n\t\tctx.closePath();\n\t\t\n\t\tctx.fill();\n\t\tctx.stroke();\n\n\t\t// Comment out old gradient/stroke logic\n\t\t/*\n\t\t//shadow\n\t\t// ctx.shadowColor = \"rgba(0,0,0,0.3)\"\n\t\t// ctx.shadowOffsetY = 1\n\t\t// ctx.shadowBlur = 2\n\t\tctx.fillStyle = this.getKeyGradient(ctx, dims)\n\t\tctx.strokeStyle = \"black\"\n\t\tctx.lineWidth = 1\n\t\tthis.getWhiteKeyPath(ctx, dims.x, dims.y, dims.w, dims.h, 2)\n\t\tctx.stroke()\n\t\tctx.fill()\n\t\t*/\n\t}\n\tgetKeyGradient(ctx) {\n\t\tif (this.keyGradient == null) {\n\t\t\tthis.keyGradient = ctx.createLinearGradient(\n\t\t\t\tthis.renderDimensions.windowWidth / 2,\n\t\t\t\t0,\n\t\t\t\tthis.renderDimensions.windowWidth / 2,\n\t\t\t\tthis.renderDimensions.whiteKeyHeight\n\t\t\t)\n\t\t\tthis.keyGradient.addColorStop(0, \"rgba(0,0,0,1)\")\n\t\t\tthis.keyGradient.addColorStop(1, \"rgba(255,255,255,0.5)\")\n\t\t}\n\t\treturn this.keyGradient\n\t}\n\tgetWhiteKeyPath(ctx, x, y, width, height, radius) {\n\t\tctx.beginPath()\n\t\tctx.moveTo(x + 1, y)\n\t\tctx.lineTo(x - 1 + width, y)\n\t\tctx.lineTo(x - 1 + width, y + height - radius)\n\t\tctx.lineTo(x - 1 + width - radius, y + height)\n\t\tctx.lineTo(x + 1 + radius, y + height)\n\t\tctx.lineTo(x + 1, y + height - radius)\n\t\tctx.lineTo(x + 1, y)\n\t}\n\n\tstrokeWhiteKey(dims, color) {\n\t\tlet radius = Math.ceil(this.renderDimensions.whiteKeyWidth / 20)\n\t\tlet x = dims.x\n\t\tlet y = Math.floor(dims.y) + 6\n\t\tlet height = Math.floor(dims.h) - 8\n\t\tlet width = dims.w\n\t\tlet ctx = this.playedKeysCtxWhite\n\n\t\tthis.getWhiteKeyPath(ctx, x, y, width, height, radius)\n\t\tctx.strokeStyle = \"black\"\n\t\tctx.lineWidth = 50\n\t\tctx.fill()\n\t\tctx.closePath()\n\t}\n\tdrawBlackKeySvg(ctx, dims, color) {\n\t\tlet radiusTop = this.renderDimensions.blackKeyWidth / 15\n\t\tlet radiusBottom = this.renderDimensions.blackKeyWidth / 8\n\t\tlet x = dims.x\n\t\tlet y = dims.y + 5\n\t\tlet height = dims.h\n\t\tlet width = dims.w\n\n\t\tctx.drawImage(this.blackKeyImg, x, y, width, height)\n\t}\n\t/**\n\t *\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {Dimensions} dims\n\t */\n\tdrawBlackKey(ctx, dims, color, noShadow) {\n\t\tconst { x, y, w, h } = dims;\n\t\tconst borderRadius = Math.min(w * 0.1, 4); // Small radius\n\n\t\t// Simplified Drawing\n\t\tctx.fillStyle = color || \"#444444\"; // Solid dark grey or provided color\n\t\tctx.strokeStyle = \"#666666\"; // Slightly lighter border\n\t\tctx.lineWidth = 1;\n\n\t\t// Draw rounded rectangle path\n\t\tctx.beginPath();\n\t\tctx.moveTo(x + borderRadius, y);\n\t\tctx.lineTo(x + w - borderRadius, y);\n\t\tctx.arcTo(x + w, y, x + w, y + borderRadius, borderRadius);\n\t\tctx.lineTo(x + w, y + h - borderRadius);\n\t\tctx.arcTo(x + w, y + h, x + w - borderRadius, y + h, borderRadius);\n\t\tctx.lineTo(x + borderRadius, y + h);\n\t\tctx.arcTo(x, y + h, x, y + h - borderRadius, borderRadius);\n\t\tctx.lineTo(x, y + borderRadius);\n\t\tctx.arcTo(x, y, x + borderRadius, y, borderRadius);\n\t\tctx.closePath();\n\n\t\tctx.fill();\n\t\tctx.stroke();\n\n\t\t// Comment out old shadow/SVG logic\n\t\t/*\n\t\tlet radiusTop = this.renderDimensions.blackKeyWidth / 10\n\t\tlet radiusBottom = radiusTop\n\n\t\tif (!noShadow) {\n\t\t\tctx.shadowColor = \"rgba(0,0,0,0.5)\"\n\t\t\tctx.shadowOffsetY = 2\n\t\t\tctx.shadowBlur = 3\n\t\t}\n\t\tthis.getBlackKeyPath(\n\t\t\tctx,\n\t\t\tdims.x,\n\t\t\tdims.y,\n\t\t\tradiusTop,\n\t\t\tdims.w,\n\t\t\tdims.h,\n\t\t\tradiusBottom\n\t\t)\n\t\tctx.fillStyle = color\n\t\tctx.fill()\n\n\t\tctx.shadowOffsetY = 0\n\t\tctx.shadowBlur = 0\n\t\t*/\n\t}\n\tstrokeBlackKey(dims, color) {\n\t\tlet radiusTop = 0 //this.renderDimensions.blackKeyWidth / 15\n\t\tlet radiusBottom = this.renderDimensions.blackKeyWidth / 8\n\t\tlet x = dims.x\n\t\tlet y = dims.y + 6\n\t\tlet height = dims.h\n\t\tlet width = dims.w\n\t\tlet ctx = this.playedKeysCtxBlack\n\t\tcolor = color || \"white\"\n\n\t\tthis.getBlackKeyPath(ctx, x, y, radiusTop, width, height, radiusBottom)\n\n\t\tctx.strokeStyle = color\n\t\tctx.stroke()\n\t\tctx.closePath()\n\t}\n\n\tgetBlackKeyPath(ctx, x, y, radiusTop, width, height, radiusBottom) {\n\t\tctx.beginPath()\n\t\tctx.moveTo(x + 1, y + radiusTop)\n\t\tctx.lineTo(x + 1 + radiusTop, y)\n\t\tctx.lineTo(x - 1 - radiusTop + width, y)\n\t\tctx.lineTo(x - 1 + width, y + radiusTop)\n\t\tctx.lineTo(x - 1 + width, y + height - radiusBottom)\n\t\tctx.lineTo(x - 1 + width - radiusBottom, y + height)\n\t\tctx.lineTo(x + 1 + radiusBottom, y + height)\n\t\tctx.lineTo(x + 1, y + height - radiusBottom)\n\t\tctx.lineTo(x + 1, y)\n\t}\n\n\tgetPianoCanvasWhite() {\n\t\tif (!this.pianoCanvasWhite) {\n\t\t\tthis.pianoCanvasWhite = DomHelper.createCanvas(\n\t\t\t\tthis.renderDimensions.windowWidth,\n\t\t\t\tMath.max(\n\t\t\t\t\tthis.renderDimensions.whiteKeyHeight,\n\t\t\t\t\tthis.renderDimensions.blackKeyHeight\n\t\t\t\t),\n\t\t\t\t{\n\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\tleft: \"0px\",\n\t\t\t\t\tzIndex: 99\n\t\t\t\t}\n\t\t\t)\n\t\t\tthis.pianoCanvasWhite.className = \"pianoCanvas\"\n\t\t\tdocument.body.appendChild(this.pianoCanvasWhite)\n\t\t\tthis.ctxWhite = this.pianoCanvasWhite.getContext(\"2d\")\n\t\t}\n\t\treturn this.pianoCanvasWhite\n\t}\n\tgetPlayedKeysWhite() {\n\t\tif (!this.playedKeysCanvasWhite) {\n\t\t\tthis.playedKeysCanvasWhite = DomHelper.createCanvas(\n\t\t\t\tthis.renderDimensions.windowWidth,\n\t\t\t\tMath.max(\n\t\t\t\t\tthis.renderDimensions.whiteKeyHeight,\n\t\t\t\t\tthis.renderDimensions.blackKeyHeight\n\t\t\t\t),\n\t\t\t\t{\n\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\tleft: \"0px\",\n\t\t\t\t\tzIndex: 99\n\t\t\t\t}\n\t\t\t)\n\t\t\tthis.playedKeysCanvasWhite.className = \"pianoCanvas\"\n\t\t\tdocument.body.appendChild(this.playedKeysCanvasWhite)\n\t\t\tthis.playedKeysCtxWhite = this.playedKeysCanvasWhite.getContext(\"2d\")\n\t\t}\n\t\treturn this.playedKeysCanvasWhite\n\t}\n\tgetPianoCanvasBlack() {\n\t\tif (!this.pianoCanvasBlack) {\n\t\t\tthis.pianoCanvasBlack = DomHelper.createCanvas(\n\t\t\t\tthis.renderDimensions.windowWidth,\n\t\t\t\tMath.max(\n\t\t\t\t\tthis.renderDimensions.whiteKeyHeight,\n\t\t\t\t\tthis.renderDimensions.blackKeyHeight\n\t\t\t\t),\n\t\t\t\t{\n\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\tleft: \"0px\",\n\t\t\t\t\tzIndex: 99,\n\t\t\t\t\tboxShadow: \"0px 0px 15px 15px rgba(0,0,0,0.4)\"\n\t\t\t\t}\n\t\t\t)\n\t\t\tthis.pianoCanvasBlack.className = \"pianoCanvas\"\n\t\t\tdocument.body.appendChild(this.pianoCanvasBlack)\n\t\t\tthis.ctxBlack = this.pianoCanvasBlack.getContext(\"2d\")\n\t\t}\n\t\treturn this.pianoCanvasBlack\n\t}\n\tgetPlayedKeysBlack() {\n\t\tif (!this.playedKeysCanvasBlack) {\n\t\t\tthis.playedKeysCanvasBlack = DomHelper.createCanvas(\n\t\t\t\tthis.renderDimensions.windowWidth,\n\t\t\t\tMath.max(\n\t\t\t\t\tthis.renderDimensions.whiteKeyHeight,\n\t\t\t\t\tthis.renderDimensions.blackKeyHeight\n\t\t\t\t),\n\t\t\t\t{\n\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\tleft: \"0px\",\n\t\t\t\t\tzIndex: 99\n\t\t\t\t}\n\t\t\t)\n\t\t\tthis.playedKeysCanvasBlack.className = \"pianoCanvas\"\n\t\t\tdocument.body.appendChild(this.playedKeysCanvasBlack)\n\t\t\tthis.playedKeysCtxBlack = this.playedKeysCanvasBlack.getContext(\"2d\")\n\n\t\t\tthis.playedKeysCanvasBlack.addEventListener(\n\t\t\t\t\"mousedown\",\n\t\t\t\tthis.onPianoMousedown.bind(this)\n\t\t\t)\n\t\t\tthis.playedKeysCanvasBlack.addEventListener(\n\t\t\t\t\"mouseup\",\n\t\t\t\tthis.onPianoMouseup.bind(this)\n\t\t\t)\n\t\t\tthis.playedKeysCanvasBlack.addEventListener(\n\t\t\t\t\"mousemove\",\n\t\t\t\tthis.onPianoMousemove.bind(this)\n\t\t\t)\n\t\t\tthis.playedKeysCanvasBlack.addEventListener(\n\t\t\t\t\"mouseleave\",\n\t\t\t\tthis.onPianoMouseleave.bind(this)\n\t\t\t)\n\t\t}\n\t\treturn this.playedKeysCanvasBlack\n\t}\n\tonPianoMousedown(ev) {\n\t\tif (getSetting(\"clickablePiano\")) {\n\t\t\tlet { x, y } = this.getCanvasPosFromMouseEvent(ev)\n\t\t\tlet keyUnderMouse = this.getKeyAtPos(x, y)\n\t\t\tif (keyUnderMouse >= 0) {\n\t\t\t\tthis.currentKeyUnderMouse = keyUnderMouse\n\t\t\t\tthis.isMouseDown = true\n\t\t\t\tthis.onNoteOn(keyUnderMouse)\n\t\t\t} else {\n\t\t\t\tthis.clearCurrentKeyUnderMouse()\n\t\t\t}\n\t\t}\n\t}\n\n\tonPianoMouseup(ev) {\n\t\tthis.isMouseDown = false\n\t\tthis.clearCurrentKeyUnderMouse()\n\t}\n\tonPianoMouseleave(ev) {\n\t\tthis.isMouseDown = false\n\t\tthis.clearCurrentKeyUnderMouse()\n\t}\n\n\tonPianoMousemove(ev) {\n\t\tif (getSetting(\"clickablePiano\")) {\n\t\t\tlet { x, y } = this.getCanvasPosFromMouseEvent(ev)\n\t\t\tlet keyUnderMouse = this.getKeyAtPos(x, y)\n\t\t\tif (this.isMouseDown && keyUnderMouse >= 0) {\n\t\t\t\tif (this.currentKeyUnderMouse != keyUnderMouse) {\n\t\t\t\t\tthis.onNoteOff(this.currentKeyUnderMouse)\n\t\t\t\t\tthis.onNoteOn(keyUnderMouse)\n\t\t\t\t\tthis.currentKeyUnderMouse = keyUnderMouse\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.clearCurrentKeyUnderMouse()\n\t\t\t}\n\t\t}\n\t}\n\tclearCurrentKeyUnderMouse() {\n\t\tif (this.currentKeyUnderMouse >= 0) {\n\t\t\tthis.onNoteOff(this.currentKeyUnderMouse)\n\t\t}\n\t\tthis.currentKeyUnderMouse = -1\n\t}\n\tgetKeyAtPos(x, y) {\n\t\tlet clickedKey = -1\n\t\tfor (let i = 0; i <= 87; i++) {\n\t\t\tlet dims = this.renderDimensions.getKeyDimensions(i)\n\t\t\tif (x > dims.x && x < dims.x + dims.w) {\n\t\t\t\tif (y > dims.y && y < dims.y + dims.h) {\n\t\t\t\t\tif (clickedKey == -1) {\n\t\t\t\t\t\tclickedKey = i\n\t\t\t\t\t} else if (isBlack(i) && !isBlack(clickedKey)) {\n\t\t\t\t\t\tclickedKey = i\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn clickedKey\n\t}\n\tgetCanvasPosFromMouseEvent(ev) {\n\t\tlet canvHt = Math.max(\n\t\t\tthis.renderDimensions.whiteKeyHeight,\n\t\t\tthis.renderDimensions.blackKeyHeight\n\t\t)\n\t\tlet x = ev.clientX\n\t\tlet y =\n\t\t\tev.clientY -\n\t\t\t(this.renderDimensions.windowHeight -\n\t\t\t\tcanvHt -\n\t\t\t\t(this.renderDimensions.windowHeight -\n\t\t\t\t\tcanvHt -\n\t\t\t\t\tthis.renderDimensions.getAbsolutePianoPosition()))\n\t\treturn { x, y }\n\t}\n}\n","import { CONST } from \"../data/CONST.js\"\nimport { getSetting } from \"../settings/Settings.js\"\nimport { formatTime } from \"../Util.js\"\n\n/**\n * Class to render some general debug-info or when mouse is hovered over a note.\n */\nexport class DebugRender {\n\tconstructor(active, ctx, renderDimensions) {\n\t\tthis.noteInfoBoxesToDraw = []\n\t\tthis.active = active\n\t\tthis.ctx = ctx\n\t\tthis.renderDimensions = renderDimensions\n\n\t\tthis.fpsFilterStrength = 5\n\t\tthis.frameTime = 0\n\t\tthis.lastTimestamp = window.performance.now()\n\t}\n\taddNote(note) {\n\t\tthis.noteInfoBoxesToDraw.push(note)\n\t}\n\trender(renderInfos, mouseX, mouseY, menuHeight) {\n\t\tthis.thisTimestamp = window.performance.now()\n\t\tif (getSetting(\"showFps\")) {\n\t\t\tlet timePassed = this.thisTimestamp - this.lastTimestamp\n\t\t\tthis.frameTime += (timePassed - this.frameTime) / this.fpsFilterStrength\n\t\t\tthis.ctx.font = \"20px Arial black\"\n\t\t\tthis.ctx.fillStyle = \"rgba(255,255,255,0.8)\"\n\t\t\tthis.ctx.fillText(\n\t\t\t\t(1000 / this.frameTime).toFixed(0) + \" FPS\",\n\t\t\t\t20,\n\t\t\t\tmenuHeight + 60\n\t\t\t)\n\t\t}\n\n\t\tthis.lastTimestamp = this.thisTimestamp\n\n\t\tthis.renderNoteDebugInfo(renderInfos, mouseX, mouseY)\n\t}\n\trenderNoteDebugInfo(renderInfos, mouseX, mouseY) {\n\t\tif (getSetting(\"showNoteDebugInfo\")) {\n\t\t\tlet amountOfNotesDrawn = 0\n\t\t\tObject.keys(renderInfos).forEach(trackIndex => {\n\t\t\t\trenderInfos[trackIndex].black\n\t\t\t\t\t.filter(renderInfo =>\n\t\t\t\t\t\tthis.isMouseInRenderInfo(renderInfo, mouseX, mouseY)\n\t\t\t\t\t)\n\t\t\t\t\t.forEach(renderInfo => {\n\t\t\t\t\t\tthis.drawNoteInfoBox(renderInfo, mouseX, mouseY, amountOfNotesDrawn)\n\t\t\t\t\t\tamountOfNotesDrawn++\n\t\t\t\t\t})\n\t\t\t\trenderInfos[trackIndex].white\n\t\t\t\t\t.filter(renderInfo =>\n\t\t\t\t\t\tthis.isMouseInRenderInfo(renderInfo, mouseX, mouseY)\n\t\t\t\t\t)\n\t\t\t\t\t.forEach(renderInfo => {\n\t\t\t\t\t\tthis.drawNoteInfoBox(renderInfo, mouseX, mouseY, amountOfNotesDrawn)\n\t\t\t\t\t\tamountOfNotesDrawn++\n\t\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\tisMouseInRenderInfo(renderInfo, mouseX, mouseY) {\n\t\treturn (\n\t\t\tmouseX > renderInfo.x &&\n\t\t\tmouseX < renderInfo.x + renderInfo.w &&\n\t\t\tmouseY > renderInfo.y &&\n\t\t\tmouseY < renderInfo.y + renderInfo.h\n\t\t)\n\t}\n\n\tdrawNoteInfoBox(renderInfo, mouseX, mouseY, amountOfNotesDrawn) {\n\t\tlet c = this.ctx\n\t\tc.fillStyle = \"white\"\n\t\tc.font = \"12px Arial black\"\n\t\tc.textBaseline = \"top\"\n\t\tc.strokeStyle = renderInfo.fillStyle\n\t\tc.lineWidth = 4\n\n\t\tlet lines = [\n\t\t\t\"Note: \" + CONST.MIDI_NOTE_TO_KEY[renderInfo.noteNumber],\n\t\t\t\"NoteNumber: \" + renderInfo.noteNumber,\n\t\t\t\"MidiNoteNumber: \" + renderInfo.midiNoteNumber,\n\t\t\t\"Start: \" + renderInfo.timestamp,\n\t\t\t\"End: \" + renderInfo.offTime,\n\t\t\t\"Duration: \" + renderInfo.duration,\n\t\t\t\"Velocity: \" + renderInfo.velocity,\n\t\t\t\"Instrument: \" + renderInfo.instrument,\n\t\t\t\"Track: \" + renderInfo.track,\n\t\t\t\"Channel: \" + renderInfo.channel\n\t\t]\n\t\tlet left = mouseX > this.renderDimensions.windowWidth / 2 ? -160 : 60\n\t\tlet top =\n\t\t\tmouseY > this.renderDimensions.windowHeight / 2\n\t\t\t\t? -10 - 14 * lines.length\n\t\t\t\t: 10\n\n\t\ttop += amountOfNotesDrawn * lines.length * 15\n\t\tc.beginPath()\n\t\tc.moveTo(mouseX + left - 4, mouseY + top)\n\t\tc.lineTo(mouseX + left - 4, mouseY + top + lines.length * 14)\n\t\tc.stroke()\n\t\tfor (let l in lines) {\n\t\t\tc.fillText(lines[l], mouseX + left, mouseY + top + 14 * l)\n\t\t}\n\t}\n}\n","/**\n * Class to display message-overlays on screen\n */\nexport class OverlayRender {\n\tconstructor(ctx, renderDimensions) {\n\t\tthis.ctx = ctx\n\t\tthis.renderDimensions = renderDimensions\n\t\tthis.overlays = []\n\t}\n\t/**\n\t * add a overlay-message to the screen\n\t *\n\t * @param {String} message\n\t * @param {Number} duration\n\t */\n\taddOverlay(message, duration) {\n\t\tlet totalDuration = duration\n\t\tthis.overlays.push({ message, totalDuration, duration })\n\t}\n\t/**\n\t * Render / Update the overlays.\n\t */\n\trender() {\n\t\tfor (let i = this.overlays.length - 1; i >= 0; i--) {\n\t\t\tlet overlay = this.overlays[i]\n\t\t\toverlay.duration--\n\t\t\tif (overlay.duration < 0) {\n\t\t\t\tthis.overlays.splice(i, 1)\n\t\t\t}\n\t\t}\n\n\t\tif (this.overlays.length) {\n\t\t\tthis.globalAlpha = this.setAlphaForOverlay(\n\t\t\t\tthis.overlays[this.overlays.length - 1]\n\t\t\t)\n\t\t\tthis.ctx.fillStyle = \"rgba(0,0,0,0.9)\"\n\t\t\tthis.ctx.fillRect(\n\t\t\t\t0,\n\t\t\t\t0,\n\t\t\t\tthis.renderDimensions.windowWidth,\n\t\t\t\tthis.renderDimensions.windowHeight\n\t\t\t)\n\t\t}\n\t\tfor (let i = 0; i < this.overlays.length; i++) {\n\t\t\tlet overlay = this.overlays[i]\n\n\t\t\tthis.setAlphaForOverlay(overlay)\n\n\t\t\tthis.ctx.font = \"32px 'Source Sans Pro', sans-serif\"\n\t\t\tthis.ctx.fillStyle = \"white\"\n\n\t\t\tlet wd = this.ctx.measureText(overlay.message).width\n\t\t\tthis.ctx.fillText(\n\t\t\t\toverlay.message,\n\t\t\t\tthis.renderDimensions.windowWidth / 2 - wd / 2,\n\t\t\t\tthis.renderDimensions.windowHeight / 4 + i * 40\n\t\t\t)\n\t\t}\n\t\tthis.ctx.globalAlpha = 1\n\t}\n\n\tsetAlphaForOverlay(overlay) {\n\t\tlet ratio = 1 - overlay.duration / overlay.totalDuration\n\t\tif (ratio < 0.1) {\n\t\t\tthis.ctx.globalAlpha = ratio / 0.1\n\t\t} else {\n\t\t\tthis.ctx.globalAlpha = (0.9 - (ratio - 0.1)) / 0.9\n\t\t}\n\t\treturn ratio\n\t}\n}\n","import { getSetting } from \"../settings/Settings.js\"\n\n/**\n * Particles handler\n */\nexport class NoteParticleRender {\n\tconstructor(ctx, renderDimensions) {\n\t\tthis.ctx = ctx\n\t\tthis.renderDimensions = renderDimensions\n\t\tthis.particles = new Map()\n\t}\n\tcreateParticles(x, y, w, h, color, velocity) {\n\t\tlet amnt = getSetting(\"particleAmount\")\n\t\tif (getSetting(\"showParticlesTop\")) {\n\t\t\tfor (let i = 0; i < Math.random() * 0.5 * amnt + 0.5 * amnt; i++) {\n\t\t\t\tlet rndX = x + 3 + w * 0.5 + w * 0.5 * (-1 + 2 * Math.random())\n\t\t\t\tlet motX =\n\t\t\t\t\t(Math.random() - Math.random()) * 0.5 * getSetting(\"particleSpeed\")\n\t\t\t\tlet motY =\n\t\t\t\t\t(-Math.random() * getSetting(\"particleSpeed\") * velocity) / 127\n\t\t\t\tlet radius =\n\t\t\t\t\t(0.5 + 0.5 * Math.random()) * getSetting(\"particleSize\") + 0.5\n\t\t\t\trndX -= radius / 2\n\t\t\t\tlet lifeTime = Math.random() * getSetting(\"particleLife\") + 2\n\t\t\t\tthis.createParticle(rndX, y, motX, motY, radius, color, lifeTime)\n\t\t\t}\n\t\t}\n\t\tif (getSetting(\"showParticlesBottom\")) {\n\t\t\tfor (let i = 0; i < Math.random() * 0.5 * amnt + 0.5 * amnt; i++) {\n\t\t\t\tlet rndX = x + 3 + w * 0.5 + w * 0.5 * (-1 + 2 * Math.random())\n\t\t\t\tlet motX =\n\t\t\t\t\t(Math.random() - Math.random()) * 0.5 * getSetting(\"particleSpeed\")\n\t\t\t\tlet motY =\n\t\t\t\t\t(-Math.random() * getSetting(\"particleSpeed\") * velocity) / 127\n\t\t\t\tlet radius =\n\t\t\t\t\t(0.5 + 0.5 * Math.random()) * getSetting(\"particleSize\") + 0.5\n\t\t\t\trndX -= radius / 2\n\t\t\t\tlet lifeTime = Math.random() * getSetting(\"particleLife\") + 2\n\t\t\t\tthis.createParticle(\n\t\t\t\t\trndX,\n\t\t\t\t\ty + h,\n\t\t\t\t\tmotX,\n\t\t\t\t\t-1 * motY * 0.5,\n\t\t\t\t\tradius,\n\t\t\t\t\tcolor,\n\t\t\t\t\tlifeTime\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t}\n\tcreateParticle(x, y, motX, motY, radius, color, lifeTime) {\n\t\tif (!this.particles.has(color)) {\n\t\t\tthis.particles.set(color, [])\n\t\t}\n\t\tthis.particles.get(color).push([x, y, motX, motY, radius, lifeTime, 0])\n\t}\n\tupdateParticles() {\n\t\tthis.particles.forEach(particleArray =>\n\t\t\tparticleArray.forEach(particle => this.updateParticle(particle))\n\t\t)\n\t\tthis.clearDeadParticles()\n\t}\n\tclearDeadParticles() {\n\t\tthis.particles.forEach((particleArray, color) => {\n\t\t\tfor (let i = particleArray.length - 1; i >= 0; i--) {\n\t\t\t\tif (particleArray[i][6] >= particleArray[i][5]) {\n\t\t\t\t\tparticleArray.splice(i, 1)\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (particleArray.length == 0) {\n\t\t\t\tthis.particles.delete(color)\n\t\t\t}\n\t\t})\n\t}\n\n\tupdateParticle(particle) {\n\t\tparticle[0] += particle[2]\n\t\tparticle[1] += particle[3]\n\n\t\t// particle[3] *= 1 + (particle[6] / particle[5]) * 0.05\n\t\tparticle[3] += (particle[6] / particle[5]) * 0.3\n\n\t\t//dampen xy-motion\n\t\tparticle[2] *= 0.95\n\t\t// particle[3] *= 0.92\n\n\t\t//particle lifetime ticker\n\t\tparticle[6] += particle[4] * 0.1\n\t}\n\trender() {\n\t\tlet stroke = getSetting(\"particleStroke\")\n\t\tthis.ctx.globalAlpha = 0.5\n\t\tif (stroke) {\n\t\t\tthis.ctx.strokeStyle = \"rgba(255,255,255,0.8)\"\n\t\t\tthis.ctx.lineWidth = 0.5\n\t\t}\n\t\tthis.particles.forEach((particleArray, color) => {\n\t\t\tlet c = this.ctx\n\t\t\tc.fillStyle = color\n\t\t\tc.beginPath()\n\t\t\tparticleArray.forEach(particle => this.renderParticle(particle))\n\t\t\tc.fill()\n\t\t\tif (stroke) {\n\t\t\t\tc.stroke()\n\t\t\t}\n\t\t\tc.closePath()\n\t\t})\n\t\tthis.updateParticles()\n\t\tthis.ctx.globalAlpha = 1\n\t}\n\trenderParticle(particle) {\n\t\tthis.ctx.moveTo(particle[0], particle[1])\n\t\tlet rad = Math.max(0.1, (1 - particle[6] / particle[5]) * particle[4])\n\t\tthis.ctx.arc(particle[0], particle[1], rad, 0, Math.PI * 2, 0)\n\t}\n}\n","import { getSetting } from \"../settings/Settings.js\"\n\nconst PARTICLE_LIFE_TIME = 22\n\nexport class PianoParticleRender {\n\tconstructor(ctxWhite, ctxBlack, renderDimensions) {\n\t\tthis.ctxWhite = ctxWhite\n\t\tthis.ctxBlack = ctxBlack\n\t\tthis.renderDimensions = renderDimensions\n\t\tthis.particles = {\n\t\t\twhite: new Map(),\n\t\t\tblack: new Map()\n\t\t}\n\t}\n\tadd(noteRenderinfo, isWhite) {\n\t\tlet keyDims = this.renderDimensions.getKeyDimensions(\n\t\t\tnoteRenderinfo.noteNumber\n\t\t)\n\n\t\tlet color = noteRenderinfo.fillStyle\n\n\t\tlet keyColor = noteRenderinfo.isBlack ? \"black\" : \"white\"\n\n\t\tif (!this.particles[keyColor].has(color)) {\n\t\t\tthis.particles[keyColor].set(color, [])\n\t\t}\n\t\tthis.particles[keyColor]\n\t\t\t.get(color)\n\t\t\t.push([\n\t\t\t\tkeyDims.x,\n\t\t\t\t0,\n\t\t\t\tkeyDims.w,\n\t\t\t\tkeyDims.h,\n\t\t\t\t(PARTICLE_LIFE_TIME * noteRenderinfo.velocity) / 127\n\t\t\t])\n\t\treturn\n\t}\n\n\tupdateParticles() {\n\t\tthis.particles.white.forEach(particleArray =>\n\t\t\tparticleArray.forEach(particle => this.updateParticle(particle))\n\t\t)\n\t\tthis.particles.black.forEach(particleArray =>\n\t\t\tparticleArray.forEach(particle => this.updateParticle(particle))\n\t\t)\n\t\tthis.clearDeadParticles()\n\t}\n\tclearDeadParticles() {\n\t\tthis.particles.white.forEach((particleArray, color) => {\n\t\t\tfor (let i = particleArray.length - 1; i >= 0; i--) {\n\t\t\t\tif (particleArray[i][4] < 0) {\n\t\t\t\t\tparticleArray.splice(i, 1)\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (particleArray.length == 0) {\n\t\t\t\tthis.particles.white.delete(color)\n\t\t\t}\n\t\t})\n\t\tthis.particles.black.forEach((particleArray, color) => {\n\t\t\tfor (let i = particleArray.length - 1; i >= 0; i--) {\n\t\t\t\tif (particleArray[i][4] < 0) {\n\t\t\t\t\tparticleArray.splice(i, 1)\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (particleArray.length == 0) {\n\t\t\t\tthis.particles.black.delete(color)\n\t\t\t}\n\t\t})\n\t}\n\n\tupdateParticle(particle) {\n\t\tparticle[4]--\n\t}\n\trender() {\n\t\tthis.particles.white.forEach((particleArray, color) => {\n\t\t\tlet c = this.ctxWhite\n\t\t\tc.strokeStyle = \"rgba(255,255,255,0.4)\"\n\t\t\tc.lineWidth = 2\n\t\t\tc.beginPath()\n\t\t\tparticleArray.forEach(particle => this.renderParticle(particle, c))\n\t\t\tc.stroke()\n\t\t\tc.closePath()\n\t\t})\n\t\tthis.particles.black.forEach((particleArray, color) => {\n\t\t\tlet c = this.ctxBlack\n\t\t\tc.strokeStyle = \"rgba(255,255,255,0.4)\"\n\t\t\tc.lineWidth = 2\n\t\t\tc.beginPath()\n\t\t\tparticleArray.forEach(particle => this.renderParticle(particle, c))\n\t\t\tc.stroke()\n\t\t\tc.closePath()\n\t\t})\n\t\tthis.updateParticles()\n\t}\n\trenderParticle(particle, ctx) {\n\t\tlet doneRat = 1 - particle[4] / PARTICLE_LIFE_TIME\n\t\tlet wdRatio = (doneRat - 0.1) * particle[2] * 0.3\n\t\tctx.moveTo(particle[0] - wdRatio / 2, 5)\n\t\tctx.lineTo(particle[0] - wdRatio / 2, particle[3])\n\n\t\tctx.moveTo(particle[0] - wdRatio / 2 + particle[2] + wdRatio, 5)\n\t\tctx.lineTo(particle[0] - wdRatio / 2 + particle[2] + wdRatio, particle[3])\n\n\t\t// ctx.rect(\n\t\t// \tparticle[0] + doneRat / 2,\n\t\t// \tparticle[1],\n\t\t// \tparticle[2] - doneRat,\n\t\t// \tparticle[3]\n\t\t// )\n\t}\n}\n","import { getSetting, setSettingCallback } from \"../settings/Settings.js\"\nimport { drawRoundRect } from \"../Util.js\"\nimport { NoteParticleRender } from \"./NoteParticleRender.js\"\nimport { PianoParticleRender } from \"./PianoParticleRender.js\"\n\n/**\n * Class to render the notes on screen.\n */\nexport class NoteRender {\n\tconstructor(ctx, ctxForeground, renderDimensions, pianoRender) {\n\t\tthis.ctx = ctx\n\t\tthis.renderDimensions = renderDimensions\n\t\tthis.ctxForeground = ctxForeground\n\n\t\tthis.pianoRender = pianoRender\n\t\tthis.lastActiveNotes = {}\n\t\tthis.noteParticleRender = new NoteParticleRender(\n\t\t\tthis.ctxForeground,\n\t\t\tthis.renderDimensions\n\t\t)\n\t\tthis.pianoParticleRender = new PianoParticleRender(\n\t\t\tthis.pianoRender.playedKeysCtxWhite,\n\t\t\tthis.pianoRender.playedKeysCtxBlack,\n\t\t\tthis.renderDimensions\n\t\t)\n\t}\n\trender(time, renderInfoByTrackMap, inputActiveNotes, inputPlayedNotes) {\n\t\tthis.noteParticleRender.render()\n\n\t\t//sustained note \"tails\"\n\t\tif (getSetting(\"showSustainedNotes\")) {\n\t\t\tthis.drawSustainedNotes(renderInfoByTrackMap, time)\n\t\t}\n\n\t\tlet activeNotesByTrackMap = this.getActiveNotesByTrackMap(\n\t\t\trenderInfoByTrackMap\n\t\t)\n\t\t//Active notes effect\n\t\tObject.keys(activeNotesByTrackMap).forEach(trackIndex => {\n\t\t\tthis.renderActiveNotesEffects(activeNotesByTrackMap[trackIndex])\n\t\t})\n\n\t\t//Notes\n\t\tObject.keys(renderInfoByTrackMap).forEach(trackIndex => {\n\t\t\tthis.drawNotes(\n\t\t\t\trenderInfoByTrackMap[trackIndex].white,\n\t\t\t\trenderInfoByTrackMap[trackIndex].black\n\t\t\t)\n\t\t})\n\t\tlet currentActiveNotes = {}\n\t\t//Active keys on piano + stroking of active notes\n\t\tObject.keys(activeNotesByTrackMap).forEach(trackIndex => {\n\t\t\tthis.renderActivePianoKeys(\n\t\t\t\tactiveNotesByTrackMap[trackIndex],\n\t\t\t\tcurrentActiveNotes\n\t\t\t)\n\n\t\t\tthis.createNoteParticles(activeNotesByTrackMap[trackIndex])\n\t\t})\n\t\tif (getSetting(\"drawPianoKeyHitEffect\")) {\n\t\t\tthis.pianoParticleRender.render()\n\t\t}\n\n\t\tthis.lastActiveNotes = currentActiveNotes\n\n\t\tthis.drawInputNotes(inputActiveNotes, inputPlayedNotes)\n\t}\n\n\tdrawSustainedNotes(renderInfoByTrackMap, time) {\n\t\tObject.keys(renderInfoByTrackMap).forEach(trackIndex => {\n\t\t\tlet notesRenderInfoBlack = renderInfoByTrackMap[trackIndex].black\n\t\t\tlet notesRenderInfoWhite = renderInfoByTrackMap[trackIndex].white\n\n\t\t\tthis.ctx.globalAlpha = getSetting(\"sustainedNotesOpacity\") / 100\n\t\t\tthis.ctx.strokeStyle = \"rgba(0,0,0,1)\"\n\t\t\tthis.ctx.lineWidth = 1\n\t\t\tif (notesRenderInfoWhite.length > 0) {\n\t\t\t\tthis.ctx.fillStyle = notesRenderInfoWhite[0].fillStyle\n\t\t\t}\n\t\t\tnotesRenderInfoWhite.forEach(renderInfo =>\n\t\t\t\tthis.drawSustainedNote(renderInfo)\n\t\t\t)\n\t\t\tif (notesRenderInfoBlack.length > 0) {\n\t\t\t\tthis.ctx.fillStyle = notesRenderInfoBlack[0].fillStyle\n\t\t\t}\n\t\t\tnotesRenderInfoBlack.forEach(renderInfo =>\n\t\t\t\tthis.drawSustainedNote(renderInfo)\n\t\t\t)\n\t\t})\n\t}\n\n\tdrawSustainedNote(renderInfos) {\n\t\tlet ctx = this.ctx\n\n\t\tlet x = renderInfos.x\n\t\tlet w = renderInfos.w / 2\n\n\t\tif (renderInfos.sustainH && renderInfos.sustainY) {\n\t\t\tctx.beginPath()\n\t\t\tctx.rect(x + w / 2, renderInfos.sustainY, w, renderInfos.sustainH)\n\t\t\tctx.closePath()\n\t\t\tctx.fill()\n\t\t}\n\t}\n\n\tgetActiveNotesByTrackMap(renderInfoByTrackMap) {\n\t\treturn Object.keys(renderInfoByTrackMap).map(trackIndex =>\n\t\t\tthis.getActiveNotes(\n\t\t\t\trenderInfoByTrackMap[trackIndex].black,\n\t\t\t\trenderInfoByTrackMap[trackIndex].white\n\t\t\t)\n\t\t)\n\t}\n\tgetActiveNotes(notesRenderInfoBlack, notesRenderInfoWhite) {\n\t\tlet activeNotesBlack = notesRenderInfoBlack\n\t\t\t.slice(0)\n\t\t\t.filter(renderInfo => renderInfo.isOn)\n\n\t\tlet activeNotesWhite = notesRenderInfoWhite\n\t\t\t.slice(0)\n\t\t\t.filter(renderInfo => renderInfo.isOn)\n\t\treturn { white: activeNotesWhite, black: activeNotesBlack }\n\t}\n\n\trenderActiveNotesEffects(activeNotes) {\n\t\tif (getSetting(\"showHitKeys\")) {\n\t\t\tif (activeNotes.white.length) {\n\t\t\t\tthis.ctx.fillStyle = activeNotes.white[0].fillStyle\n\t\t\t}\n\t\t\tactiveNotes.white.forEach(note => this.renderActiveNoteEffect(note))\n\n\t\t\tif (activeNotes.black.length) {\n\t\t\t\tthis.ctx.fillStyle = activeNotes.black[0].fillStyle\n\t\t\t}\n\t\t\tactiveNotes.black.forEach(note => this.renderActiveNoteEffect(note))\n\t\t}\n\t}\n\n\trenderActiveNoteEffect(renderInfos) {\n\t\tlet ctx = this.ctx\n\t\tctx.globalAlpha = Math.max(\n\t\t\t0,\n\t\t\t0.7 - Math.min(0.7, renderInfos.noteDoneRatio)\n\t\t)\n\t\tlet wOffset = Math.pow(\n\t\t\tthis.renderDimensions.whiteKeyWidth / 2,\n\t\t\t1 + Math.min(1, renderInfos.noteDoneRatio) * renderInfos.isOn\n\t\t)\n\t\tthis.doNotePath(renderInfos, {\n\t\t\tx: renderInfos.x - wOffset / 2,\n\t\t\tw: renderInfos.w + wOffset,\n\t\t\ty:\n\t\t\t\trenderInfos.y -\n\t\t\t\t(getSetting(\"reverseNoteDirection\")\n\t\t\t\t\t? this.renderDimensions.whiteKeyHeight\n\t\t\t\t\t: 0),\n\t\t\th: renderInfos.h + this.renderDimensions.whiteKeyHeight\n\t\t})\n\n\t\tctx.fill()\n\t\tctx.globalAlpha = 1\n\t}\n\n\tdrawNotes(notesRenderInfoWhite, notesRenderInfoBlack) {\n\t\tlet {\n\t\t\tincomingWhiteNotes,\n\t\t\tincomingBlackNotes,\n\t\t\tplayedWhiteNotes,\n\t\t\tplayedBlackNotes\n\t\t} = this.getIncomingAndPlayedNotes(\n\t\t\tnotesRenderInfoWhite,\n\t\t\tnotesRenderInfoBlack\n\t\t)\n\n\t\tthis.ctx.globalAlpha = 1\n\t\tthis.ctx.strokeStyle = getSetting(\"strokeNotesColor\")\n\t\tthis.ctx.lineWidth = getSetting(\"strokeNotesWidth\")\n\n\t\tthis.drawIncomingNotes(incomingWhiteNotes, incomingBlackNotes)\n\n\t\tthis.drawPlayedNotes(playedWhiteNotes, playedBlackNotes)\n\t}\n\n\trectAbovePiano() {\n\t\tthis.ctx.rect(\n\t\t\t0,\n\t\t\t0,\n\t\t\tthis.renderDimensions.windowWidth,\n\t\t\tthis.renderDimensions.getAbsolutePianoPosition()\n\t\t)\n\t}\n\trectBelowPiano() {\n\t\tthis.ctx.rect(\n\t\t\t0,\n\t\t\tthis.renderDimensions.getAbsolutePianoPosition() +\n\t\t\t\tthis.renderDimensions.whiteKeyHeight,\n\t\t\tthis.renderDimensions.windowWidth,\n\t\t\tthis.renderDimensions.windowHeight -\n\t\t\t\t(this.renderDimensions.getAbsolutePianoPosition() +\n\t\t\t\t\tthis.renderDimensions.whiteKeyHeight)\n\t\t)\n\t}\n\tdrawPlayedNotes(playedWhiteNotes, playedBlackNotes) {\n\t\tthis.ctx.save()\n\t\tthis.ctx.beginPath()\n\t\tgetSetting(\"reverseNoteDirection\")\n\t\t\t? this.rectAbovePiano()\n\t\t\t: this.rectBelowPiano()\n\n\t\tthis.ctx.clip()\n\t\tthis.ctx.closePath()\n\t\tthis.ctx.fillStyle = playedWhiteNotes.length\n\t\t\t? playedWhiteNotes[0].fillStyle\n\t\t\t: \"\"\n\n\t\tplayedWhiteNotes.forEach(renderInfo => {\n\t\t\tthis.drawNoteAfter(renderInfo)\n\t\t\tthis.ctx.fill()\n\t\t\tthis.strokeActiveAndOthers(renderInfo)\n\t\t})\n\n\t\tthis.ctx.fillStyle = playedBlackNotes.length\n\t\t\t? playedBlackNotes[0].fillStyle\n\t\t\t: \"\"\n\t\tplayedBlackNotes.forEach(renderInfo => {\n\t\t\tthis.drawNoteAfter(renderInfo)\n\t\t\tthis.ctx.fill()\n\t\t\tthis.strokeActiveAndOthers(renderInfo)\n\t\t})\n\n\t\tthis.ctx.restore()\n\t}\n\n\tstrokeActiveAndOthers(renderInfo) {\n\t\tif (renderInfo.isOn) {\n\t\t\tthis.ctx.strokeStyle = getSetting(\"strokeActiveNotesColor\")\n\t\t\tthis.ctx.lineWidth = getSetting(\"strokeActiveNotesWidth\")\n\t\t\tthis.ctx.stroke()\n\t\t} else if (getSetting(\"strokeNotes\")) {\n\t\t\tthis.ctx.strokeStyle = getSetting(\"strokeNotesColor\")\n\t\t\tthis.ctx.lineWidth = getSetting(\"strokeNotesWidth\")\n\t\t\tthis.ctx.stroke()\n\t\t}\n\t}\n\n\tdrawIncomingNotes(incomingWhiteNotes, incomingBlackNotes) {\n\t\tthis.ctx.save()\n\t\tthis.ctx.beginPath()\n\t\tgetSetting(\"reverseNoteDirection\")\n\t\t\t? this.rectBelowPiano()\n\t\t\t: this.rectAbovePiano()\n\t\tthis.ctx.clip()\n\t\tthis.ctx.closePath()\n\t\tthis.ctx.fillStyle = incomingWhiteNotes.length\n\t\t\t? incomingWhiteNotes[0].fillStyle\n\t\t\t: \"\"\n\t\tincomingWhiteNotes.forEach(renderInfo => {\n\t\t\tthis.drawNoteBefore(renderInfo)\n\t\t\tthis.ctx.fill()\n\t\t\tthis.strokeActiveAndOthers(renderInfo)\n\t\t})\n\n\t\tthis.ctx.fillStyle = incomingBlackNotes.length\n\t\t\t? incomingBlackNotes[0].fillStyle\n\t\t\t: \"\"\n\t\tincomingBlackNotes.forEach(renderInfo => {\n\t\t\tthis.drawNoteBefore(renderInfo)\n\t\t\tthis.ctx.fill()\n\t\t\tthis.strokeActiveAndOthers(renderInfo)\n\t\t})\n\t\tthis.ctx.restore()\n\t}\n\n\tgetIncomingAndPlayedNotes(notesRenderInfoWhite, notesRenderInfoBlack) {\n\t\tlet incomingWhiteNotes = []\n\t\tlet playedWhiteNotes = []\n\t\tnotesRenderInfoWhite\n\t\t\t.filter(renderInfo => renderInfo.w > 0 && renderInfo.h > 0)\n\t\t\t.forEach(renderInfo => {\n\t\t\t\tif (renderInfo.noteDoneRatio < 1) {\n\t\t\t\t\tincomingWhiteNotes.push(renderInfo)\n\t\t\t\t}\n\t\t\t\tif (getSetting(\"pianoPosition\") != 0 && renderInfo.noteDoneRatio > 0) {\n\t\t\t\t\tplayedWhiteNotes.push(renderInfo)\n\t\t\t\t}\n\t\t\t})\n\t\tlet incomingBlackNotes = []\n\t\tlet playedBlackNotes = []\n\t\tnotesRenderInfoBlack\n\t\t\t.filter(renderInfo => renderInfo.w > 0 && renderInfo.h > 0)\n\t\t\t.forEach(renderInfo => {\n\t\t\t\tif (renderInfo.noteDoneRatio < 1) {\n\t\t\t\t\tincomingBlackNotes.push(renderInfo)\n\t\t\t\t}\n\t\t\t\tif (getSetting(\"pianoPosition\") != 0 && renderInfo.noteDoneRatio > 0) {\n\t\t\t\t\tplayedBlackNotes.push(renderInfo)\n\t\t\t\t}\n\t\t\t})\n\t\treturn {\n\t\t\tincomingWhiteNotes,\n\t\t\tincomingBlackNotes,\n\t\t\tplayedWhiteNotes,\n\t\t\tplayedBlackNotes\n\t\t}\n\t}\n\n\tdrawInputNotes(inputActiveNotes, inputPlayedNotes) {\n\t\tthis.ctx.globalAlpha = 1\n\t\tthis.ctx.strokeStyle = getSetting(\"strokeNotesColor\")\n\t\tthis.ctx.lineWidth = getSetting(\"strokeNotesWidth\")\n\t\tthis.ctx.fillStyle = getSetting(\"inputNoteColor\")\n\t\tlet whiteActive = inputActiveNotes.filter(noteInfo => !noteInfo.isBlack)\n\t\tinputActiveNotes.forEach(noteInfo => {\n\t\t\tthis.createNoteParticle(noteInfo)\n\t\t\tthis.pianoRender.drawActiveInputKey(\n\t\t\t\tparseInt(noteInfo.noteNumber),\n\t\t\t\tthis.ctx.fillStyle\n\t\t\t)\n\t\t\tthis.drawNoteAfter(noteInfo)\n\t\t\tthis.ctx.fill()\n\t\t})\n\t\tinputPlayedNotes.forEach(noteInfo => {\n\t\t\t// noteInfo.y += this.renderDimensions.whiteKeyHeight\n\t\t\tthis.drawNoteAfter(noteInfo)\n\t\t\tthis.ctx.fill()\n\t\t})\n\t}\n\tdrawNote(renderInfos) {\n\t\tthis.doNotePath(renderInfos)\n\t\tthis.ctx.fill()\n\t\tthis.strokeActiveAndOthers(renderInfos)\n\n\t\t// --- Add Note Name Text --- \n\t\tif (getSetting(\"showFallingNoteNames\")) { // Optional: Add a setting later\n\t\t\tconst noteName = this.getDisplayNoteName(renderInfos.noteNumber);\n\t\t\tif (noteName) {\n\t\t\t\tconst fontSize = Math.min(renderInfos.w * 0.6, 12); // Adjust size based on width\n\t\t\t\tthis.ctx.font = `${fontSize}px Arial`;\n\t\t\t\tthis.ctx.textAlign = \"center\";\n\t\t\t\tthis.ctx.textBaseline = \"top\";\n\n\t\t\t\t// Choose contrasting text color (simple example)\n\t\t\t\tconst avgColorVal = this.getAverageColorValue(renderInfos.fillStyle);\n\t\t\t\tthis.ctx.fillStyle = avgColorVal > 128 ? \"#000000\" : \"#FFFFFF\"; \n\t\t\t\t\n\t\t\t\t// Calculate position (near top-center of the note rectangle)\n\t\t\t\tconst textX = renderInfos.x + renderInfos.w / 2;\n\t\t\t\tconst textY = renderInfos.y + fontSize * 0.5; // Add small top margin\n\t\t\t\t\n\t\t\t\t// Only draw if note is tall enough\n\t\t\t\tif (renderInfos.h > fontSize * 1.5) { \n\t\t\t\t\tthis.ctx.fillText(noteName, textX, textY);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// --- End Note Name Text ---\n\t}\n\n\tdrawNoteAfter(renderInfos) {\n\t\tlet y =\n\t\t\trenderInfos.y +\n\t\t\t(getSetting(\"reverseNoteDirection\") ? -1 : 1) *\n\t\t\t\tthis.renderDimensions.whiteKeyHeight\n\n\t\tthis.doNotePath(renderInfos, {\n\t\t\ty\n\t\t})\n\t}\n\n\tdrawNoteBefore(renderInfos) {\n\t\t//Done by .clip() now. Keep in case clipping isn't performant\n\t\t// let h = Math.min(\n\t\t// \trenderInfos.h,\n\t\t// \tthis.renderDimensions.getAbsolutePianoPosition() - renderInfos.y\n\t\t// )\n\t\tthis.doNotePath(renderInfos /*, { h }*/)\n\t}\n\n\trenderActivePianoKeys(activeNotes, currentActiveNotes) {\n\t\tif (getSetting(\"highlightActivePianoKeys\")) {\n\t\t\tactiveNotes.white.forEach(noteRenderInfo => {\n\t\t\t\tthis.pianoRender.drawActiveKey(noteRenderInfo, noteRenderInfo.fillStyle)\n\t\t\t})\n\t\t\tactiveNotes.black.forEach(noteRenderInfo => {\n\t\t\t\tthis.pianoRender.drawActiveKey(noteRenderInfo, noteRenderInfo.fillStyle)\n\t\t\t})\n\n\t\t\t//stroke newly hit ones\n\t\t\t//TODO: Doesn't look very nice.\n\t\t\tif (getSetting(\"drawPianoKeyHitEffect\")) {\n\t\t\t\tactiveNotes.white.forEach(noteRenderInfo => {\n\t\t\t\t\tcurrentActiveNotes[noteRenderInfo.noteId] = true\n\t\t\t\t\tif (!this.lastActiveNotes.hasOwnProperty(noteRenderInfo.noteId)) {\n\t\t\t\t\t\tthis.pianoParticleRender.add(noteRenderInfo)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tactiveNotes.black.forEach(noteRenderInfo => {\n\t\t\t\t\tcurrentActiveNotes[noteRenderInfo.noteId] = true\n\t\t\t\t\tif (!this.lastActiveNotes.hasOwnProperty(noteRenderInfo.noteId)) {\n\t\t\t\t\t\tthis.pianoParticleRender.add(noteRenderInfo)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tstrokeNote(renderInfo) {\n\t\tthis.drawNoteBefore(renderInfo)\n\t\tthis.ctx.stroke()\n\n\t\tif (renderInfo.isOn) {\n\t\t\tthis.drawNoteAfter(renderInfo)\n\t\t\tthis.ctx.stroke()\n\t\t}\n\t}\n\n\tdoNotePath(renderInfo, overWriteParams) {\n\t\tif (!overWriteParams) {\n\t\t\toverWriteParams = {}\n\t\t}\n\t\tfor (let key in renderInfo) {\n\t\t\tif (!overWriteParams.hasOwnProperty(key)) {\n\t\t\t\toverWriteParams[key] = renderInfo[key]\n\t\t\t}\n\t\t}\n\t\tif (getSetting(\"roundedNotes\") || getSetting(\"noteBorderRadius\") > 0) {\n\t\t\tdrawRoundRect(\n\t\t\t\tthis.ctx,\n\t\t\t\toverWriteParams.x,\n\t\t\t\toverWriteParams.y,\n\t\t\t\toverWriteParams.w,\n\t\t\t\toverWriteParams.h,\n\t\t\t\toverWriteParams.rad,\n\t\t\t\tgetSetting(\"roundedNotes\")\n\t\t\t)\n\t\t} else {\n\t\t\tthis.ctx.beginPath()\n\t\t\tthis.ctx.rect(\n\t\t\t\toverWriteParams.x,\n\t\t\t\toverWriteParams.y,\n\t\t\t\toverWriteParams.w,\n\t\t\t\toverWriteParams.h\n\t\t\t)\n\t\t\tthis.ctx.closePath()\n\t\t}\n\t}\n\n\tcreateNoteParticles(activeNotes, colWhite, colBlack) {\n\t\tif (getSetting(\"showParticlesTop\") || getSetting(\"showParticlesBottom\")) {\n\t\t\tactiveNotes.white.forEach(noteRenderInfo =>\n\t\t\t\tthis.createNoteParticle(noteRenderInfo)\n\t\t\t)\n\t\t\tactiveNotes.black.forEach(noteRenderInfo =>\n\t\t\t\tthis.createNoteParticle(noteRenderInfo)\n\t\t\t)\n\t\t}\n\t}\n\tcreateNoteParticle(noteRenderInfo) {\n\t\tthis.noteParticleRender.createParticles(\n\t\t\tnoteRenderInfo.x,\n\t\t\tthis.renderDimensions.getAbsolutePianoPosition(),\n\t\t\tnoteRenderInfo.w,\n\t\t\tthis.renderDimensions.whiteKeyHeight,\n\t\t\tnoteRenderInfo.fillStyle,\n\t\t\tnoteRenderInfo.velocity\n\t\t)\n\t}\n\n\tgetAlphaFromY(y) {\n\t\t//TODO broken.\n\t\treturn Math.min(\n\t\t\t1,\n\t\t\tMath.max(\n\t\t\t\t0,\n\t\t\t\t(y - this.menuHeight - 5) /\n\t\t\t\t\t((this.renderDimensions.windowHeight - this.menuHeight) * 0.5)\n\t\t\t)\n\t\t)\n\t}\n\t/**\n\t * Sets Menu (Navbar) Height.  Required to calculate fadeIn alpha value\n\t *\n\t * @param {Number} menuHeight\n\t */\n\tsetMenuHeight(menuHeight) {\n\t\tthis.menuHeight = menuHeight\n\t}\n\n\t// --- Helper function to get note name ---\n\tgetDisplayNoteName(noteNumber) {\n\t\tconst key = CONST.MIDI_NOTE_TO_KEY[noteNumber + 21] || \"\";\n\t\t// Optional: Simplify name (e.g., remove octave number)\n\t\t// return key.replace(/[0-9]/g, \"\"); \n\t\treturn key;\n\t}\n\n\t// --- Helper function to determine contrast color ---\n\tgetAverageColorValue(colorString) {\n\t\ttry {\n\t\t\t// Simple check for named colors or basic hex\n\t\t\tif (colorString === 'white' || colorString === '#FFFFFF' || colorString === '#FFF') return 255;\n\t\t\tif (colorString === 'black' || colorString === '#000000' || colorString === '#000') return 0;\n\n\t\t\t// Basic check for rgba(r,g,b,a)\n\t\t\tif (colorString.startsWith('rgba')) {\n\t\t\t\tconst parts = colorString.match(/\\d+/g);\n\t\t\t\tif (parts && parts.length >= 3) {\n\t\t\t\t\treturn (parseInt(parts[0]) + parseInt(parts[1]) + parseInt(parts[2])) / 3;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Add more robust color parsing if needed (hex, hsl, etc.)\n\t\t} catch (e) {\n\t\t\tconsole.warn(\"Could not parse color for contrast:\", colorString);\n\t\t}\n\t\treturn 128; // Default if parsing fails\n\t}\n}\n","import { getSetting } from \"../settings/Settings.js\"\n\n/**\n * Class to render the sustain events in the midi-song. Can fill the sustain periods or draw lines for the individual control-events.\n */\nexport class SustainRender {\n\tconstructor(ctx, renderDimensions, lookBackTime, lookAheadTime) {\n\t\tthis.ctx = ctx\n\t\tthis.renderDimensions = renderDimensions\n\n\t\tthis.sustainPeriodFillStyle = \"rgba(0,0,0,0.4)\"\n\t\tthis.sustainOnStrokeStyle = \"rgba(55,155,55,0.6)\"\n\t\tthis.sustainOffStrokeStyle = \"rgba(155,55,55,0.6)\"\n\t\tthis.sustainOnOffFont = \"12px Arial black\"\n\t}\n\trender(time, sustainsBySecond, sustainPeriods) {\n\t\tif (getSetting(\"showSustainOnOffs\")) {\n\t\t\tthis.renderSustainOnOffs(time, sustainsBySecond)\n\t\t}\n\t\tif (getSetting(\"showSustainPeriods\")) {\n\t\t\tthis.renderSustainPeriods(time, sustainPeriods)\n\t\t}\n\t}\n\t/**\n\t * Renders On/Off Sustain Control-Events as lines on screen.\n\t *\n\t * @param {Number} time\n\t * @param {Object} sustainsBySecond\n\t */\n\trenderSustainOnOffs(time, sustainsBySecond) {\n\t\tlet lookBackTime = Math.floor(\n\t\t\ttime - this.renderDimensions.getSecondsDisplayedAfter() - 4\n\t\t)\n\t\tlet lookAheadTime = Math.ceil(\n\t\t\ttime + this.renderDimensions.getSecondsDisplayedBefore() + 1\n\t\t)\n\n\t\tfor (\n\t\t\tlet lookUpTime = lookBackTime;\n\t\t\tlookUpTime < lookAheadTime;\n\t\t\tlookUpTime++\n\t\t) {\n\t\t\tif (sustainsBySecond.hasOwnProperty(lookUpTime)) {\n\t\t\t\tsustainsBySecond[lookUpTime].forEach(sustain => {\n\t\t\t\t\tthis.ctx.lineWidth = \"1\"\n\t\t\t\t\tlet text = \"\"\n\t\t\t\t\tthis.ctx.fillStyle = \"rgba(0,0,0,0.8)\"\n\t\t\t\t\tif (sustain.isOn) {\n\t\t\t\t\t\tthis.ctx.strokeStyle = this.sustainOnStrokeStyle\n\t\t\t\t\t\ttext = \"Sustain On\"\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.ctx.strokeStyle = this.sustainOffStrokeStyle\n\t\t\t\t\t\ttext = \"Sustain Off\"\n\t\t\t\t\t}\n\t\t\t\t\tlet y = this.renderDimensions.getYForTime(\n\t\t\t\t\t\tsustain.timestamp - time * 1000\n\t\t\t\t\t)\n\t\t\t\t\tthis.ctx.beginPath()\n\t\t\t\t\tthis.ctx.moveTo(0, y)\n\t\t\t\t\tthis.ctx.lineTo(this.renderDimensions.windowWidth, y)\n\t\t\t\t\tthis.ctx.closePath()\n\t\t\t\t\tthis.ctx.stroke()\n\n\t\t\t\t\tthis.ctx.fillStyle = \"rgba(200,200,200,0.9)\"\n\t\t\t\t\tthis.ctx.font = this.sustainOnOffFont\n\t\t\t\t\tthis.ctx.fillText(text, 10, y - 12)\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\t/**\n\t * Renders Sustain Periods as rectangles on screen.\n\t * @param {Number} time\n\t * @param {Array} sustainPeriods\n\t */\n\trenderSustainPeriods(time, sustainPeriods) {\n\t\tlet firstSecondShown = Math.floor(\n\t\t\ttime - this.renderDimensions.getSecondsDisplayedAfter() - 4\n\t\t)\n\t\tlet lastSecondShown = Math.ceil(\n\t\t\ttime + this.renderDimensions.getSecondsDisplayedBefore() + 1\n\t\t)\n\t\tthis.ctx.fillStyle = this.sustainPeriodFillStyle\n\n\t\tsustainPeriods\n\t\t\t.filter(\n\t\t\t\tperiod =>\n\t\t\t\t\t(period.start < lastSecondShown * 1000 &&\n\t\t\t\t\t\tperiod.start > firstSecondShown * 1000) ||\n\t\t\t\t\t(period.start < firstSecondShown * 1000 &&\n\t\t\t\t\t\tperiod.end > firstSecondShown * 1000)\n\t\t\t)\n\t\t\t.forEach(period => {\n\t\t\t\tlet yStart = this.renderDimensions.getYForTime(\n\t\t\t\t\tperiod.start - time * 1000\n\t\t\t\t)\n\t\t\t\tlet yEnd = this.renderDimensions.getYForTime(period.end - time * 1000)\n\n\t\t\t\tthis.ctx.fillRect(\n\t\t\t\t\t0,\n\t\t\t\t\tyEnd,\n\t\t\t\t\tthis.renderDimensions.windowWidth,\n\t\t\t\t\tyStart - yEnd\n\t\t\t\t)\n\t\t\t})\n\t}\n}\n","import { getSetting } from \"../settings/Settings.js\"\n\n/**\n * Class to render the markers in the midi-song\n */\nexport class MarkerRenderer {\n\tconstructor(ctx, renderDimensions) {\n\t\tthis.ctx = ctx\n\t\tthis.renderDimensions = renderDimensions\n\t}\n\trender(time, markers) {\n\t\tif (getSetting(\"showMarkersSong\")) {\n\t\t\tlet lookAheadTime = Math.ceil(\n\t\t\t\ttime + this.renderDimensions.getSecondsDisplayedBefore() + 1\n\t\t\t)\n\n\t\t\tlet c = this.ctx\n\t\t\tc.fillStyle = \"rgba(255,255,255,0.8)\"\n\t\t\tc.strokeStyle = \"rgba(255,255,255,0.8)\"\n\t\t\tc.font = \"25px Arial black\"\n\t\t\tc.textBaseline = \"top\"\n\t\t\tc.lineWidth = 1.5\n\t\t\tmarkers.forEach(marker => {\n\t\t\t\tif (\n\t\t\t\t\tmarker.timestamp / 1000 >= time &&\n\t\t\t\t\tmarker.timestamp / 1000 < lookAheadTime\n\t\t\t\t) {\n\t\t\t\t\tlet y = this.renderDimensions.getYForTime(\n\t\t\t\t\t\tmarker.timestamp - time * 1000\n\t\t\t\t\t)\n\t\t\t\t\tlet txtWd = c.measureText(marker.text).width\n\t\t\t\t\tc.fillText(\n\t\t\t\t\t\tmarker.text,\n\t\t\t\t\t\tthis.renderDimensions.windowWidth / 2 - txtWd / 2,\n\t\t\t\t\t\ty + 3\n\t\t\t\t\t)\n\t\t\t\t\tc.beginPath()\n\t\t\t\t\tc.moveTo(0, y)\n\t\t\t\t\tc.lineTo(this.renderDimensions.windowWidth, y)\n\t\t\t\t\tc.closePath()\n\t\t\t\t\tc.stroke()\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n}\n","import { isBlack } from \"../Util.js\"\nimport { getSetting, setSettingCallback } from \"../settings/Settings.js\"\n\nconst MAX_NOTE_NUMBER = 87\nconst MIN_NOTE_NUMBER = 0\n\nconst MIN_WIDTH = 1040\nconst MIN_HEIGHT = 560\n\n/**\n * Class to handle all the calculation of dimensions of the Notes & Keys on Screen-\n */\nexport class RenderDimensions {\n\tconstructor() {\n\t\twindow.addEventListener(\"resize\", this.resize.bind(this))\n\t\tthis.resizeCallbacks = []\n\t\tthis.numberOfWhiteKeysShown = 52\n\t\tthis.minNoteNumber = MIN_NOTE_NUMBER\n\t\tthis.maxNoteNumber = MAX_NOTE_NUMBER\n\t\tthis.menuHeight = 200\n\t\tsetSettingCallback(\"blackKeyHeight\", this.resize.bind(this))\n\t\tsetSettingCallback(\"whiteKeyHeight\", this.resize.bind(this))\n\t\tthis.resize()\n\t}\n\t/**\n\t * Recompute all dimensions dependent on Screen Size\n\t */\n\tresize() {\n\t\tthis.windowWidth = Math.max(MIN_WIDTH, Math.floor(window.innerWidth))\n\t\tthis.windowHeight = Math.floor(window.innerHeight)\n\n\t\tthis.keyDimensions = {}\n\t\tthis.computeKeyDimensions()\n\t\tthis.resizeCallbacks.forEach(func => func())\n\t}\n\tregisterResizeCallback(callback) {\n\t\tthis.resizeCallbacks.push(callback)\n\t}\n\n\t/**\n\t * Computes the key dimensions. Should be called on resize.\n\t */\n\tcomputeKeyDimensions() {\n\t\tthis.pianoPositionY = getSetting(\"pianoPosition\")\n\t\tthis.whiteKeyWidth =\n\t\t\t// Math.max(\n\t\t\t// \t20,\n\t\t\tthis.windowWidth / this.numberOfWhiteKeysShown\n\t\t// )\n\n\t\tthis.whiteKeyHeight = Math.min(\n\t\t\tMath.floor(this.windowHeight * 0.2),\n\t\t\tthis.whiteKeyWidth * 4.5\n\t\t)\n\t\tthis.blackKeyWidth = Math.floor(this.whiteKeyWidth * 0.5829787234)\n\t\tthis.blackKeyHeight =\n\t\t\tMath.floor((this.whiteKeyHeight * 2) / 3) *\n\t\t\t(getSetting(\"blackKeyHeight\") / 100)\n\n\t\t//Do this after computing blackKey, as its dependent on the white key size ( without adjusting for the setting )\n\t\tthis.whiteKeyHeight *= getSetting(\"whiteKeyHeight\") / 100\n\t}\n\n\t/**\n\t * Returns the dimensions for the piano-key of the given note\n\t *\n\t * @param {Number} noteNumber\n\t */\n\tgetKeyDimensions(noteNumber) {\n\t\tif (!this.keyDimensions.hasOwnProperty(noteNumber)) {\n\t\t\tlet isNoteBlack = isBlack(noteNumber)\n\t\t\tlet x = this.getKeyX(noteNumber)\n\n\t\t\tthis.keyDimensions[noteNumber] = {\n\t\t\t\tx: x,\n\t\t\t\ty: 0,\n\t\t\t\tw: isNoteBlack ? this.blackKeyWidth : this.whiteKeyWidth,\n\t\t\t\th: isNoteBlack ? this.blackKeyHeight : this.whiteKeyHeight,\n\t\t\t\tblack: isNoteBlack\n\t\t\t}\n\t\t}\n\t\treturn this.keyDimensions[noteNumber]\n\t}\n\tgetAbsolutePianoPosition() {\n\t\tlet pianoSettingsRatio = getSetting(\"reverseNoteDirection\")\n\t\t\t? 1 - parseInt(this.pianoPositionY) / 100\n\t\t\t: parseInt(this.pianoPositionY) / 100\n\t\tlet y =\n\t\t\tthis.windowHeight -\n\t\t\tthis.whiteKeyHeight -\n\t\t\tMath.ceil(\n\t\t\t\tpianoSettingsRatio *\n\t\t\t\t\t(this.windowHeight - this.whiteKeyHeight - this.menuHeight - 24)\n\t\t\t)\n\n\t\treturn y\n\t}\n\n\t/**\n\t * Returns x-value  of the given Notenumber\n\t *\n\t * @param {Integer} noteNumber\n\t */\n\tgetKeyX(noteNumber) {\n\t\treturn (\n\t\t\t(this.getWhiteKeyNumber(noteNumber) -\n\t\t\t\tthis.getWhiteKeyNumber(this.minNoteNumber)) *\n\t\t\t\tthis.whiteKeyWidth +\n\t\t\t(this.whiteKeyWidth - this.blackKeyWidth / 2) * isBlack(noteNumber)\n\t\t)\n\t}\n\n\t/**\n\t * Returns the \"white key index\" of the note number. Ignores if the key itself is black\n\t * @param {Number} noteNumber\n\t */\n\tgetWhiteKeyNumber(noteNumber) {\n\t\treturn (\n\t\t\tnoteNumber -\n\t\t\tMath.floor(Math.max(0, noteNumber + 11) / 12) -\n\t\t\tMath.floor(Math.max(0, noteNumber + 8) / 12) -\n\t\t\tMath.floor(Math.max(0, noteNumber + 6) / 12) -\n\t\t\tMath.floor(Math.max(0, noteNumber + 3) / 12) -\n\t\t\tMath.floor(Math.max(0, noteNumber + 1) / 12)\n\t\t)\n\t}\n\n\t/**\n\t * Returns y value corresponding to the given time\n\t *\n\t * @param {Number} time\n\t */\n\tgetYForTime(time) {\n\t\tconst height = this.windowHeight - this.whiteKeyHeight\n\t\tlet noteToHeightConst = this.getNoteToHeightConst()\n\t\tif (time < 0) {\n\t\t\tnoteToHeightConst /= getSetting(\"playedNoteFalloffSpeed\")\n\t\t}\n\n\t\tif (getSetting(\"reverseNoteDirection\")) {\n\t\t\treturn (\n\t\t\t\t(time / noteToHeightConst) * height +\n\t\t\t\tthis.getAbsolutePianoPosition() +\n\t\t\t\tthis.whiteKeyHeight\n\t\t\t)\n\t\t} else {\n\t\t\treturn (\n\t\t\t\theight -\n\t\t\t\t(time / noteToHeightConst) * height -\n\t\t\t\t(height - this.getAbsolutePianoPosition())\n\t\t\t)\n\t\t}\n\t}\n\n\t/**\n     *Returns rendering x/y-location & size for the given note & time-info\n     \n\t * @param {Integer} noteNumber \n\t * @param {Number} currentTime\n\t * @param {Number} noteStartTime\n\t * @param {Number} noteEndTime\n\t * @param {Number} sustainOffTime\n\t */\n\tgetNoteDimensions(\n\t\tnoteNumber,\n\t\tcurrentTime,\n\t\tnoteStartTime,\n\t\tnoteEndTime,\n\t\tsustainOffTime\n\t) {\n\t\tconst dur = noteEndTime - noteStartTime\n\t\tconst isKeyBlack = isBlack(noteNumber)\n\t\tlet x = this.getKeyX(noteNumber)\n\t\tlet w = isKeyBlack ? this.blackKeyWidth : this.whiteKeyWidth\n\t\tlet h =\n\t\t\t(dur / this.getNoteToHeightConst()) *\n\t\t\t(this.windowHeight - this.whiteKeyHeight)\n\n\t\tlet hCorrection = 0\n\t\tlet minNoteHeight = parseFloat(getSetting(\"minNoteHeight\"))\n\t\tif (h < minNoteHeight + 2) {\n\t\t\thCorrection = minNoteHeight + 2 - h\n\t\t\th = minNoteHeight + 2\n\t\t}\n\n\t\tlet rad = (getSetting(\"noteBorderRadius\") / 100) * w\n\t\tif (h < rad * 2) {\n\t\t\trad = h / 2\n\t\t}\n\t\tlet y = this.getYForTime(noteEndTime - currentTime)\n\t\tlet reversed = getSetting(\"reverseNoteDirection\")\n\t\tif (reversed) {\n\t\t\ty -= h\n\t\t}\n\n\t\tlet sustainY = 0\n\t\tlet sustainH = 0\n\t\tif (sustainOffTime > noteEndTime) {\n\t\t\tsustainH =\n\t\t\t\t((sustainOffTime - noteEndTime) / this.getNoteToHeightConst()) *\n\t\t\t\t(this.windowHeight - this.whiteKeyHeight)\n\t\t\tsustainY = this.getYForTime(sustainOffTime - currentTime)\n\t\t\tif (reversed) {\n\t\t\t\tsustainY -= sustainH\n\t\t\t}\n\t\t}\n\n\t\t//adjust height/y for notes that have passed the piano / have been played\n\t\tlet showSustainedNotes = getSetting(\"showSustainedNotes\")\n\t\tlet endTime = showSustainedNotes\n\t\t\t? Math.max(isNaN(sustainOffTime) ? 0 : sustainOffTime, noteEndTime)\n\t\t\t: noteEndTime\n\n\t\tif (showSustainedNotes) {\n\t\t\tif (!isNaN(sustainOffTime) && sustainOffTime < currentTime) {\n\t\t\t\tsustainY += (reversed ? -1 : 1) * this.whiteKeyHeight\n\t\t\t}\n\t\t\tif (\n\t\t\t\t!isNaN(sustainOffTime) &&\n\t\t\t\tsustainOffTime > currentTime &&\n\t\t\t\tnoteEndTime < currentTime\n\t\t\t) {\n\t\t\t\tsustainH += this.whiteKeyHeight\n\t\t\t\tif (reversed) {\n\t\t\t\t\tsustainY -= this.whiteKeyHeight\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (endTime < currentTime) {\n\t\t\tlet endRatio =\n\t\t\t\t(currentTime - endTime) / this.getMilisecondsDisplayedAfter()\n\n\t\t\tendRatio = Math.max(0, 1 - getSetting(\"noteEndedShrink\") * endRatio)\n\n\t\t\tx = x + (w - w * endRatio) / 2\n\t\t\tw *= endRatio\n\n\t\t\tlet tmpH = h\n\t\t\th *= endRatio\n\t\t\ty += (reversed ? -1 : 1) * (tmpH - h)\n\n\t\t\tlet tmpSustainH = sustainH\n\t\t\tsustainH *= endRatio\n\t\t\tsustainY +=\n\t\t\t\t(reversed ? -1 : 1) * (tmpSustainH - sustainH) +\n\t\t\t\t(reversed ? -1 : 1) * (tmpH - h)\n\t\t}\n\t\treturn {\n\t\t\tx: x + 1,\n\t\t\ty: y + 1 - hCorrection,\n\t\t\tw: w - 2,\n\t\t\th: h - 2,\n\t\t\trad: rad,\n\t\t\tsustainH: sustainH,\n\t\t\tsustainY: sustainY,\n\t\t\tisBlack: isKeyBlack\n\t\t}\n\t}\n\n\tgetNoteToHeightConst() {\n\t\treturn getSetting(\"noteToHeightConst\") * this.windowHeight\n\t}\n\n\tgetSecondsDisplayedBefore() {\n\t\tlet pianoPos = getSetting(\"pianoPosition\") / 100\n\t\treturn Math.ceil(((1 - pianoPos) * this.getNoteToHeightConst()) / 1000)\n\t}\n\tgetSecondsDisplayedAfter() {\n\t\treturn Math.ceil(this.getMilisecondsDisplayedAfter() / 1000)\n\t}\n\tgetMilisecondsDisplayedAfter() {\n\t\tlet pianoPos = getSetting(\"pianoPosition\") / 100\n\t\treturn (\n\t\t\tpianoPos *\n\t\t\t(this.getNoteToHeightConst() / getSetting(\"playedNoteFalloffSpeed\"))\n\t\t)\n\t}\n\n\t//ZOOM\n\tshowAll() {\n\t\tthis.setZoom(MIN_NOTE_NUMBER, MAX_NOTE_NUMBER)\n\t}\n\tfitSong(range) {\n\t\trange.min = Math.max(range.min, MIN_NOTE_NUMBER)\n\t\trange.max = Math.min(range.max, MAX_NOTE_NUMBER)\n\t\twhile (\n\t\t\tisBlack(range.min - MIN_NOTE_NUMBER) &&\n\t\t\trange.min > MIN_NOTE_NUMBER\n\t\t) {\n\t\t\trange.min--\n\t\t}\n\t\twhile (\n\t\t\tisBlack(range.max - MIN_NOTE_NUMBER) &&\n\t\t\trange.max < MAX_NOTE_NUMBER\n\t\t) {\n\t\t\trange.max++\n\t\t}\n\t\tthis.setZoom(range.min, range.max)\n\t}\n\tzoomIn() {\n\t\tthis.minNoteNumber++\n\t\tthis.maxNoteNumber--\n\t\twhile (\n\t\t\tisBlack(this.minNoteNumber - MIN_NOTE_NUMBER) &&\n\t\t\tthis.minNoteNumber < this.maxNoteNumber\n\t\t) {\n\t\t\tthis.minNoteNumber++\n\t\t}\n\t\twhile (\n\t\t\tisBlack(this.maxNoteNumber - MIN_NOTE_NUMBER) &&\n\t\t\tthis.maxNoteNumber > this.minNoteNumber\n\t\t) {\n\t\t\tthis.maxNoteNumber--\n\t\t}\n\t\tthis.setZoom(this.minNoteNumber, this.maxNoteNumber)\n\t}\n\tzoomOut() {\n\t\tthis.minNoteNumber--\n\t\tthis.maxNoteNumber++\n\t\twhile (\n\t\t\tisBlack(this.minNoteNumber - MIN_NOTE_NUMBER) &&\n\t\t\tthis.minNoteNumber > MIN_NOTE_NUMBER\n\t\t) {\n\t\t\tthis.minNoteNumber--\n\t\t}\n\t\twhile (\n\t\t\tisBlack(this.maxNoteNumber - MIN_NOTE_NUMBER) &&\n\t\t\tthis.maxNoteNumber < MAX_NOTE_NUMBER\n\t\t) {\n\t\t\tthis.maxNoteNumber++\n\t\t}\n\t\tthis.setZoom(\n\t\t\tMath.max(MIN_NOTE_NUMBER, this.minNoteNumber),\n\t\t\tMath.min(MAX_NOTE_NUMBER, this.maxNoteNumber)\n\t\t)\n\t}\n\tmoveViewLeft() {\n\t\tif (this.minNoteNumber == MIN_NOTE_NUMBER) return\n\t\tthis.minNoteNumber--\n\t\tthis.maxNoteNumber--\n\t\twhile (\n\t\t\tisBlack(this.minNoteNumber - MIN_NOTE_NUMBER) &&\n\t\t\tthis.minNoteNumber > MIN_NOTE_NUMBER\n\t\t) {\n\t\t\tthis.minNoteNumber--\n\t\t}\n\t\twhile (isBlack(this.maxNoteNumber - MIN_NOTE_NUMBER)) {\n\t\t\tthis.maxNoteNumber--\n\t\t}\n\t\tthis.setZoom(\n\t\t\tMath.max(MIN_NOTE_NUMBER, this.minNoteNumber),\n\t\t\tthis.maxNoteNumber\n\t\t)\n\t}\n\tmoveViewRight() {\n\t\tif (this.maxNoteNumber == MAX_NOTE_NUMBER) return\n\t\tthis.minNoteNumber++\n\t\tthis.maxNoteNumber++\n\t\twhile (isBlack(this.minNoteNumber - MIN_NOTE_NUMBER)) {\n\t\t\tthis.minNoteNumber++\n\t\t}\n\t\twhile (\n\t\t\tisBlack(this.maxNoteNumber - MIN_NOTE_NUMBER) &&\n\t\t\tthis.maxNoteNumber < MAX_NOTE_NUMBER\n\t\t) {\n\t\t\tthis.maxNoteNumber++\n\t\t}\n\n\t\tthis.setZoom(\n\t\t\tthis.minNoteNumber,\n\t\t\tMath.min(MAX_NOTE_NUMBER, this.maxNoteNumber)\n\t\t)\n\t}\n\n\t/**\n\t *\n\t * @param {Number} minNoteNumber\n\t * @param {Number} maxNoteNumber\n\t */\n\tsetZoom(minNoteNumber, maxNoteNumber) {\n\t\tlet numOfWhiteKeysInRange = 0\n\t\tfor (let i = minNoteNumber; i <= maxNoteNumber; i++) {\n\t\t\tnumOfWhiteKeysInRange += isBlack(i - MIN_NOTE_NUMBER) ? 0 : 1\n\t\t}\n\t\tthis.minNoteNumber = minNoteNumber\n\t\tthis.maxNoteNumber = maxNoteNumber\n\t\tthis.numberOfWhiteKeysShown = numOfWhiteKeysInRange\n\n\t\tthis.resize()\n\t}\n}\n","import { getSetting } from \"../settings/Settings.js\"\nimport { isBlack } from \"../Util.js\"\n/**\n * Class that renders the background of the main canvas\n */\nexport class BackgroundRender {\n\tconstructor(ctx, renderDimensions) {\n\t\tthis.ctx = ctx\n\t\tthis.renderDimensions = renderDimensions\n\t\tthis.renderDimensions.registerResizeCallback(this.render.bind(this))\n\t\tthis.render()\n\t}\n\trenderIfColorsChanged() {\n\t\tif (\n\t\t\tthis.col1 != getSetting(\"bgCol1\") ||\n\t\t\tthis.col2 != getSetting(\"bgCol2\") ||\n\t\t\tthis.col3 != getSetting(\"bgCol3\") ||\n\t\t\tthis.pianoPosition != getSetting(\"pianoPosition\")\n\t\t) {\n\t\t\tthis.render()\n\t\t}\n\t}\n\trender() {\n\t\tlet c = this.ctx\n\t\tc.clearRect(\n\t\t\t0,\n\t\t\t0,\n\t\t\tthis.renderDimensions.windowWidth,\n\t\t\tthis.renderDimensions.windowHeight\n\t\t)\n\n\t\tlet reversed = getSetting(\"reverseNoteDirection\")\n\t\tlet bgHeight = reversed\n\t\t\t? this.renderDimensions.windowHeight -\n\t\t\t  this.renderDimensions.getAbsolutePianoPosition()\n\t\t\t: this.renderDimensions.getAbsolutePianoPosition()\n\t\tlet bgY = reversed ? this.renderDimensions.getAbsolutePianoPosition() : 0\n\t\tconst col1 = getSetting(\"bgCol1\")\n\t\tconst col2 = getSetting(\"bgCol2\")\n\t\tconst col3 = getSetting(\"bgCol3\")\n\t\tc.strokeStyle = col1\n\t\tc.fillStyle = col2\n\t\tlet whiteKey = 0\n\t\tfor (let i = 0; i < 88; i++) {\n\t\t\tif (!isBlack(i)) {\n\t\t\t\tc.strokeStyle = col3\n\t\t\t\tc.fillStyle = (i + 2) % 2 ? col1 : col2\n\t\t\t\tc.lineWidth = 1\n\n\t\t\t\tlet dim = this.renderDimensions.getKeyDimensions(i)\n\t\t\t\tc.fillRect(dim.x, bgY, dim.w, bgHeight)\n\n\t\t\t\tif (1 + (whiteKey % 7) == 3) {\n\t\t\t\t\tc.lineWidth = 2\n\t\t\t\t\tc.beginPath()\n\t\t\t\t\tc.moveTo(dim.x, bgY)\n\t\t\t\t\tc.lineTo(dim.x, bgY + bgHeight)\n\t\t\t\t\tc.stroke()\n\t\t\t\t\tc.closePath()\n\t\t\t\t}\n\t\t\t\twhiteKey++\n\t\t\t}\n\t\t}\n\t\tthis.col1 = col1\n\t\tthis.col2 = col2\n\t\tthis.col3 = col3\n\t\tthis.pianoPosition = getSetting(\"pianoPosition\")\n\t}\n}\n","/**\n * Class to render measure lines on the main canvas.\n */\nexport class MeasureLinesRender {\n\tconstructor(ctx, renderDimensions) {\n\t\tthis.ctx = ctx\n\t\tthis.renderDimensions = renderDimensions\n\t}\n\trender(time, measureLines) {\n\t\tlet ctx = this.ctx\n\n\t\tctx.strokeStyle = \"rgba(255,255,255,0.3)\"\n\n\t\tctx.lineWidth = 0.5\n\t\tlet currentSecond = Math.floor(time)\n\t\tctx.beginPath()\n\t\tlet firstSecondShown =\n\t\t\tcurrentSecond - this.renderDimensions.getSecondsDisplayedAfter() - 1\n\t\tlet lastSecondShown =\n\t\t\tcurrentSecond + this.renderDimensions.getSecondsDisplayedBefore() + 1\n\t\tfor (let i = firstSecondShown; i < lastSecondShown; i++) {\n\t\t\tif (!measureLines[i]) {\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tmeasureLines[i].forEach(tempoLine => {\n\t\t\t\tlet ht = this.renderDimensions.getYForTime(tempoLine - time * 1000)\n\n\t\t\t\tctx.moveTo(0, ht)\n\t\t\t\tctx.lineTo(this.renderDimensions.windowWidth, ht)\n\t\t\t})\n\t\t}\n\t\tctx.closePath()\n\t\tctx.stroke()\n\t}\n}\n","import { getSetting } from \"../settings/Settings.js\"\nimport { formatTime } from \"../Util.js\"\n/**\n * Renders the progress bar of the song\n */\nexport class ProgressBarRender {\n\tconstructor(ctx, renderDimensions) {\n\t\tthis.ctx = ctx\n\t\tthis.ctx.canvas.addEventListener(\n\t\t\t\"mousemove\",\n\t\t\tfunction (ev) {\n\t\t\t\tthis.mouseX = ev.clientX\n\t\t\t}.bind(this)\n\t\t)\n\t\tthis.ctx.canvas.addEventListener(\n\t\t\t\"mouseleave\",\n\t\t\tfunction (ev) {\n\t\t\t\tthis.mouseX = -1000\n\t\t\t}.bind(this)\n\t\t)\n\t\tthis.renderDimensions = renderDimensions\n\t}\n\trender(time, end, markers) {\n\t\tthis.ctx.clearRect(\n\t\t\t0,\n\t\t\t0,\n\t\t\tthis.renderDimensions.windowWidth,\n\t\t\tthis.renderDimensions.windowHeight\n\t\t)\n\t\tlet ctx = this.ctx\n\t\tlet progressPercent = time / (end / 1000)\n\t\tctx.fillStyle = \"rgba(80,80,80,0.8)\"\n\t\tctx.fillRect(this.renderDimensions.windowWidth * progressPercent, 0, 2, 20)\n\t\tctx.fillStyle = \"rgba(50,150,50,0.8)\"\n\t\tctx.fillRect(0, 0, this.renderDimensions.windowWidth * progressPercent, 20)\n\n\t\tlet isShowingAMarker = false\n\n\t\tif (getSetting(\"showMarkersTimeline\")) {\n\t\t\tmarkers.forEach(marker => {\n\t\t\t\tlet xPos = (marker.timestamp / end) * this.renderDimensions.windowWidth\n\t\t\t\tif (Math.abs(xPos - this.mouseX) < 10) {\n\t\t\t\t\tisShowingAMarker = true\n\t\t\t\t\tlet txtWd = ctx.measureText(marker.text).width\n\t\t\t\t\tctx.fillStyle = \"black\"\n\t\t\t\t\tctx.fillText(\n\t\t\t\t\t\tmarker.text,\n\t\t\t\t\t\tMath.max(\n\t\t\t\t\t\t\t5,\n\t\t\t\t\t\t\tMath.min(\n\t\t\t\t\t\t\t\tthis.renderDimensions.windowWidth - txtWd - 5,\n\t\t\t\t\t\t\t\txPos - txtWd / 2\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t),\n\t\t\t\t\t\t15\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tctx.strokeStyle = \"black\"\n\t\t\t\t\tctx.lineWidth = 2\n\t\t\t\t\tctx.beginPath()\n\t\t\t\t\tctx.moveTo(xPos, 0)\n\t\t\t\t\tctx.lineTo(xPos, 25)\n\n\t\t\t\t\tctx.closePath()\n\t\t\t\t\tctx.stroke()\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif (!isShowingAMarker) {\n\t\t\tctx.fillStyle = \"rgba(0,0,0,1)\"\n\t\t\tlet showMilis = getSetting(\"showMiliseconds\")\n\t\t\tlet text =\n\t\t\t\tformatTime(Math.min(time, end), showMilis) +\n\t\t\t\t\" / \" +\n\t\t\t\tformatTime(end / 1000, showMilis)\n\t\t\tlet wd = ctx.measureText(text).width\n\t\t\tctx.font = \"14px Arial black\"\n\t\t\tctx.fillText(text, this.renderDimensions.windowWidth / 2 - wd / 2, 15)\n\t\t}\n\t}\n}\n","import { CONST } from \"../data/CONST.js\"\n\n/**\n *\n */\n\nvar theTracks = {}\nexport const getTracks = () => {\n\treturn theTracks\n}\nexport const getTrack = trackId => {\n\treturn theTracks[trackId]\n}\nexport const setupTracks = activeTracks => {\n\ttheTracks = {}\n\tfor (let trackId in activeTracks) {\n\t\tif (!theTracks.hasOwnProperty(trackId)) {\n\t\t\ttheTracks[trackId] = {\n\t\t\t\tdraw: true,\n\t\t\t\tcolor: CONST.TRACK_COLORS[trackId % 4],\n\t\t\t\tvolume: 100,\n\t\t\t\tname: activeTracks[trackId].name || \"Track \" + trackId,\n\t\t\t\trequiredToPlay: false,\n\t\t\t\tindex: trackId\n\t\t\t}\n\t\t}\n\t\ttheTracks[trackId].color = CONST.TRACK_COLORS[trackId % 4]\n\t}\n}\n\nexport const isTrackRequiredToPlay = trackId => {\n\treturn theTracks[trackId].requiredToPlay\n}\n\nexport const isAnyTrackPlayalong = () => {\n\treturn (\n\t\tObject.keys(theTracks).filter(trackId => theTracks[trackId].requiredToPlay)\n\t\t\t.length > 0\n\t)\n}\n\nexport const getTrackVolume = trackId => {\n\treturn theTracks[trackId].volume\n}\n\nexport const isTrackDrawn = trackId => {\n\treturn theTracks[trackId] && theTracks[trackId].draw\n}\n\nexport const getTrackColor = trackId => {\n\treturn theTracks[trackId] ? theTracks[trackId].color : \"rgba(0,0,0,0)\"\n}\n\nexport const setTrackColor = (trackId, colorId, color) => {\n\ttheTracks[trackId].color[colorId] = color\n}\n","export class MidiLoader {\n\t/**\n\t *\n\t * @param {String} url\n\t */\n\tstatic async loadFile(url) {\n\t\tconst response = await fetch(url)\n\t\tif (response.ok) {\n\t\t\tlet arrayBuffer = await response.arrayBuffer()\n\t\t\tif (arrayBuffer) {\n\t\t\t\tarrayBuffer = new Uint8Array(arrayBuffer)\n\n\t\t\t\treturn parseMidi(arrayBuffer)\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new Error(`could not load ${url}`)\n\t\t}\n\t}\n}\nfunction parseMidi(data) {\n\tvar p = new Parser(data)\n\n\tvar headerChunk = p.readChunk()\n\tif (headerChunk.id != \"MThd\")\n\t\tthrow \"Bad MIDI file.  Expected 'MHdr', got: '\" + headerChunk.id + \"'\"\n\tvar header = parseHeader(headerChunk.data)\n\n\tvar tracks = []\n\tfor (var i = 0; !p.eof() && i < header.numTracks; i++) {\n\t\tvar trackChunk = p.readChunk()\n\t\tif (trackChunk.id != \"MTrk\")\n\t\t\tthrow \"Bad MIDI file.  Expected 'MTrk', got: '\" + trackChunk.id + \"'\"\n\t\tvar track = parseTrack(trackChunk.data)\n\t\ttracks.push(track)\n\t}\n\n\tlet midiData = {\n\t\theader: header,\n\t\ttracks: tracks\n\t}\n\n\tlet temporalData = Parser.setTemporal(midiData)\n\treturn {\n\t\theader: header,\n\t\ttracks: tracks,\n\t\ttemporalData: temporalData\n\t}\n}\n\nfunction parseHeader(data) {\n\tvar p = new Parser(data)\n\n\tvar format = p.readUInt16()\n\tvar numTracks = p.readUInt16()\n\n\tvar result = {\n\t\tformat: format,\n\t\tnumTracks: numTracks\n\t}\n\n\tvar timeDivision = p.readUInt16()\n\tif (timeDivision & 0x8000) {\n\t\tresult.framesPerSecond = 0x100 - (timeDivision >> 8)\n\t\tresult.ticksPerFrame = timeDivision & 0xff\n\t} else {\n\t\tresult.ticksPerBeat = timeDivision\n\t}\n\n\treturn result\n}\n\nfunction parseTrack(data) {\n\tlet parser = new Parser(data)\n\n\tlet events = []\n\twhile (!parser.eof()) {\n\t\tlet event = readEvent()\n\t\tevents.push(event)\n\t}\n\n\treturn events\n\n\tvar lastEventTypeByte = null\n\n\tfunction readEvent() {\n\t\tvar event = {}\n\t\tevent.deltaTime = parser.readVarInt()\n\n\t\tvar eventTypeByte = parser.readUInt8()\n\n\t\tif ((eventTypeByte & 0xf0) === 0xf0) {\n\t\t\t// system / meta event\n\t\t\tif (eventTypeByte === 0xff) {\n\t\t\t\t// meta event\n\t\t\t\tevent.meta = true\n\t\t\t\tvar metatypeByte = parser.readUInt8()\n\t\t\t\tvar length = parser.readVarInt()\n\t\t\t\tswitch (metatypeByte) {\n\t\t\t\t\tcase 0x00:\n\t\t\t\t\t\tevent.type = \"sequenceNumber\"\n\t\t\t\t\t\tif (length !== 2)\n\t\t\t\t\t\t\tthrow (\n\t\t\t\t\t\t\t\t\"Expected length for sequenceNumber event is 2, got \" + length\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\tevent.number = parser.readUInt16()\n\t\t\t\t\t\treturn event\n\t\t\t\t\tcase 0x01:\n\t\t\t\t\t\tevent.type = \"text\"\n\t\t\t\t\t\tevent.text = parser.readString(length)\n\t\t\t\t\t\treturn event\n\t\t\t\t\tcase 0x02:\n\t\t\t\t\t\tevent.type = \"copyrightNotice\"\n\t\t\t\t\t\tevent.text = parser.readString(length)\n\t\t\t\t\t\treturn event\n\t\t\t\t\tcase 0x03:\n\t\t\t\t\t\tevent.type = \"trackName\"\n\t\t\t\t\t\tevent.text = parser.readString(length)\n\t\t\t\t\t\treturn event\n\t\t\t\t\tcase 0x04:\n\t\t\t\t\t\tevent.type = \"instrumentName\"\n\t\t\t\t\t\tevent.text = parser.readString(length)\n\t\t\t\t\t\treturn event\n\t\t\t\t\tcase 0x05:\n\t\t\t\t\t\tevent.type = \"lyrics\"\n\t\t\t\t\t\tevent.text = parser.readString(length)\n\t\t\t\t\t\treturn event\n\t\t\t\t\tcase 0x06:\n\t\t\t\t\t\tevent.type = \"marker\"\n\t\t\t\t\t\tevent.text = parser.readString(length)\n\t\t\t\t\t\treturn event\n\t\t\t\t\tcase 0x07:\n\t\t\t\t\t\tevent.type = \"cuePoint\"\n\t\t\t\t\t\tevent.text = parser.readString(length)\n\t\t\t\t\t\treturn event\n\t\t\t\t\tcase 0x20:\n\t\t\t\t\t\tevent.type = \"channelPrefix\"\n\t\t\t\t\t\tif (length != 1)\n\t\t\t\t\t\t\tthrow (\n\t\t\t\t\t\t\t\t\"Expected length for channelPrefix event is 1, got \" + length\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\tevent.channel = parser.readUInt8()\n\t\t\t\t\t\treturn event\n\t\t\t\t\tcase 0x21:\n\t\t\t\t\t\tevent.type = \"portPrefix\"\n\t\t\t\t\t\tif (length != 1)\n\t\t\t\t\t\t\tthrow \"Expected length for portPrefix event is 1, got \" + length\n\t\t\t\t\t\tevent.port = parser.readUInt8()\n\t\t\t\t\t\treturn event\n\t\t\t\t\tcase 0x2f:\n\t\t\t\t\t\tevent.type = \"endOfTrack\"\n\t\t\t\t\t\tif (length != 0)\n\t\t\t\t\t\t\tthrow \"Expected length for endOfTrack event is 0, got \" + length\n\t\t\t\t\t\treturn event\n\t\t\t\t\tcase 0x51:\n\t\t\t\t\t\tevent.type = \"setTempo\"\n\t\t\t\t\t\tif (length != 3)\n\t\t\t\t\t\t\tthrow \"Expected length for setTempo event is 3, got \" + length\n\t\t\t\t\t\tevent.microsecondsPerBeat = parser.readUInt24()\n\t\t\t\t\t\treturn event\n\t\t\t\t\tcase 0x54:\n\t\t\t\t\t\tevent.type = \"smpteOffset\"\n\t\t\t\t\t\tif (length != 5)\n\t\t\t\t\t\t\tthrow \"Expected length for smpteOffset event is 5, got \" + length\n\t\t\t\t\t\tvar hourByte = parser.readUInt8()\n\t\t\t\t\t\tvar FRAME_RATES = { 0x00: 24, 0x20: 25, 0x40: 29, 0x60: 30 }\n\t\t\t\t\t\tevent.frameRate = FRAME_RATES[hourByte & 0x60]\n\t\t\t\t\t\tevent.hour = hourByte & 0x1f\n\t\t\t\t\t\tevent.min = parser.readUInt8()\n\t\t\t\t\t\tevent.sec = parser.readUInt8()\n\t\t\t\t\t\tevent.frame = parser.readUInt8()\n\t\t\t\t\t\tevent.subFrame = parser.readUInt8()\n\t\t\t\t\t\treturn event\n\t\t\t\t\tcase 0x58:\n\t\t\t\t\t\tevent.type = \"timeSignature\"\n\t\t\t\t\t\tif (length != 4)\n\t\t\t\t\t\t\tthrow (\n\t\t\t\t\t\t\t\t\"Expected length for timeSignature event is 4, got \" + length\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\tevent.numerator = parser.readUInt8()\n\t\t\t\t\t\tevent.denominator = 1 << parser.readUInt8()\n\t\t\t\t\t\tevent.metronome = parser.readUInt8()\n\t\t\t\t\t\tevent.thirtyseconds = parser.readUInt8()\n\t\t\t\t\t\treturn event\n\t\t\t\t\tcase 0x59:\n\t\t\t\t\t\tevent.type = \"keySignature\"\n\t\t\t\t\t\tif (length != 2)\n\t\t\t\t\t\t\tthrow \"Expected length for keySignature event is 2, got \" + length\n\t\t\t\t\t\tevent.key = parser.readInt8()\n\t\t\t\t\t\tevent.scale = parser.readUInt8()\n\t\t\t\t\t\treturn event\n\t\t\t\t\tcase 0x7f:\n\t\t\t\t\t\tevent.type = \"sequencerSpecific\"\n\t\t\t\t\t\tevent.data = parser.readBytes(length)\n\t\t\t\t\t\treturn event\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tevent.type = \"unknownMeta\"\n\t\t\t\t\t\tevent.data = parser.readBytes(length)\n\t\t\t\t\t\tevent.metatypeByte = metatypeByte\n\t\t\t\t\t\treturn event\n\t\t\t\t}\n\t\t\t} else if (eventTypeByte == 0xf0) {\n\t\t\t\tevent.type = \"sysEx\"\n\t\t\t\tvar length = parser.readVarInt()\n\t\t\t\tevent.data = parser.readBytes(length)\n\t\t\t\treturn event\n\t\t\t} else if (eventTypeByte == 0xf7) {\n\t\t\t\tevent.type = \"endSysEx\"\n\t\t\t\tvar length = parser.readVarInt()\n\t\t\t\tevent.data = parser.readBytes(length)\n\t\t\t\treturn event\n\t\t\t} else {\n\t\t\t\tthrow \"Unrecognised MIDI event type byte: \" + eventTypeByte\n\t\t\t}\n\t\t} else {\n\t\t\t// channel event\n\t\t\tvar param1\n\t\t\tif ((eventTypeByte & 0x80) === 0) {\n\t\t\t\t// running status - reuse lastEventTypeByte as the event type.\n\t\t\t\t// eventTypeByte is actually the first parameter\n\t\t\t\tif (lastEventTypeByte === null)\n\t\t\t\t\tthrow \"Running status byte encountered before status byte\"\n\t\t\t\tparam1 = eventTypeByte\n\t\t\t\teventTypeByte = lastEventTypeByte\n\t\t\t\tevent.running = true\n\t\t\t} else {\n\t\t\t\tparam1 = parser.readUInt8()\n\t\t\t\tlastEventTypeByte = eventTypeByte\n\t\t\t}\n\t\t\tvar eventType = eventTypeByte >> 4\n\t\t\tevent.channel = eventTypeByte & 0x0f\n\t\t\tswitch (eventType) {\n\t\t\t\tcase 0x08:\n\t\t\t\t\tevent.type = \"noteOff\"\n\t\t\t\t\tevent.midiNoteNumber = param1\n\t\t\t\t\tevent.noteNumber = param1 - 21\n\t\t\t\t\tevent.velocity = parser.readUInt8()\n\t\t\t\t\treturn event\n\t\t\t\tcase 0x09:\n\t\t\t\t\tvar velocity = parser.readUInt8()\n\t\t\t\t\tevent.type = velocity === 0 ? \"noteOff\" : \"noteOn\"\n\t\t\t\t\tevent.midiNoteNumber = param1\n\t\t\t\t\tevent.noteNumber = param1 - 21\n\t\t\t\t\tevent.velocity = velocity\n\t\t\t\t\tif (velocity === 0) event.byte9 = true\n\t\t\t\t\treturn event\n\t\t\t\tcase 0x0a:\n\t\t\t\t\tevent.type = \"noteAftertouch\"\n\t\t\t\t\tevent.midiNoteNumber = param1\n\t\t\t\t\tevent.noteNumber = param1 - 21\n\t\t\t\t\tevent.amount = parser.readUInt8()\n\t\t\t\t\treturn event\n\t\t\t\tcase 0x0b:\n\t\t\t\t\tevent.type = \"controller\"\n\t\t\t\t\tevent.controllerType = param1\n\t\t\t\t\tevent.value = parser.readUInt8()\n\t\t\t\t\treturn event\n\t\t\t\tcase 0x0c:\n\t\t\t\t\tevent.type = \"programChange\"\n\t\t\t\t\tevent.programNumber = param1\n\t\t\t\t\treturn event\n\t\t\t\tcase 0x0d:\n\t\t\t\t\tevent.type = \"channelAftertouch\"\n\t\t\t\t\tevent.amount = param1\n\t\t\t\t\treturn event\n\t\t\t\tcase 0x0e:\n\t\t\t\t\tevent.type = \"pitchBend\"\n\t\t\t\t\tevent.value = param1 + (parser.readUInt8() << 7) - 0x2000\n\t\t\t\t\treturn event\n\t\t\t\tdefault:\n\t\t\t\t\tthrow \"Unrecognised MIDI event type: \" + eventType\n\t\t\t}\n\t\t}\n\t}\n}\n\nclass Parser {\n\tconstructor(data) {\n\t\tthis.buffer = data\n\t\tthis.bufferLen = this.buffer.length\n\t\tthis.pos = 0\n\t}\n\n\teof() {\n\t\treturn this.pos >= this.bufferLen\n\t}\n\treadUInt8() {\n\t\tlet result = this.buffer[this.pos]\n\t\tthis.pos += 1\n\t\treturn result\n\t}\n\treadInt8() {\n\t\tlet u = this.readUInt8()\n\t\treturn u & 0x80 ? u - 0x100 : u\n\t}\n\treadUInt16() {\n\t\tlet b0 = this.readUInt8()\n\t\tlet b1 = this.readUInt8()\n\t\treturn (b0 << 8) + b1\n\t}\n\treadInt16() {\n\t\tlet u = this.readUInt16()\n\t\treturn u & 0x8000 ? u - 0x10000 : u\n\t}\n\treadUInt24() {\n\t\tlet b0 = this.readUInt8()\n\t\tlet b1 = this.readUInt8()\n\t\tlet b2 = this.readUInt8()\n\t\treturn (b0 << 16) + (b1 << 8) + b2\n\t}\n\treadInt24() {\n\t\tlet u = this.readUInt24()\n\t\treturn u & 0x800000 ? u - 0x1000000 : u\n\t}\n\treadUInt32() {\n\t\tlet b0 = this.readUInt8()\n\t\tlet b1 = this.readUInt8()\n\t\tlet b2 = this.readUInt8()\n\t\tlet b3 = this.readUInt8()\n\t\treturn (b0 << 24) + (b1 << 16) + (b2 << 8) + b3\n\t}\n\treadBytes(length) {\n\t\tlet bytes = this.buffer.slice(this.pos, this.pos + length)\n\t\tthis.pos += length\n\t\treturn bytes\n\t}\n\treadString(length) {\n\t\tlet bytes = this.readBytes(length)\n\t\treturn String.fromCharCode.apply(null, bytes)\n\t}\n\treadVarInt() {\n\t\tlet result = 0\n\t\twhile (!this.eof()) {\n\t\t\tlet b = this.readUInt8()\n\t\t\tif (b & 0x80) {\n\t\t\t\tresult += b & 0x7f\n\t\t\t\tresult <<= 7\n\t\t\t} else {\n\t\t\t\treturn result + b\n\t\t\t}\n\t\t}\n\t\treturn result\n\t}\n\treadChunk() {\n\t\tlet id = this.readString(4)\n\t\tlet length = this.readUInt32()\n\t\tlet data = this.readBytes(length)\n\t\treturn {\n\t\t\tid: id,\n\t\t\tdata: data,\n\t\t\tlength: length\n\t\t}\n\t}\n\n\t/*********\n\t * <ADAPTED FROM JASMID>\n\t * Replayer.js\n\t *********/\n\tstatic setTemporal(midiObj) {\n\t\tlet trackStates = []\n\t\tlet beatsPerMinute = 120\n\t\tlet ticksPerBeat = midiObj.header.ticksPerBeat\n\t\tvar totTime = 0\n\t\tvar bpms = []\n\t\tvar generatedBeats = 0\n\t\tvar beatsBySecond = { 0: [0] }\n\t\tvar sustainsBySecond = {}\n\t\tlet channels = getDefaultChannels()\n\t\tfor (let t in midiObj.tracks) {\n\t\t\tlet track = midiObj.tracks[t]\n\t\t\ttrackStates.push({\n\t\t\t\tnextEventIndex: 0,\n\t\t\t\tticksToNextEvent: track.length ? track[0].deltaTime : null\n\t\t\t})\n\t\t}\n\t\tvar midiEvent\n\n\t\tfunction getNextEvent() {\n\t\t\tvar ticksToNextEvent = null\n\t\t\tvar nextEventTrack = null\n\t\t\tvar nextEventIndex = null\n\n\t\t\t//search all tracks for next event.\n\t\t\tfor (var i = 0; i < trackStates.length; i++) {\n\t\t\t\tif (\n\t\t\t\t\ttrackStates[i].ticksToNextEvent != null &&\n\t\t\t\t\t(ticksToNextEvent == null ||\n\t\t\t\t\t\ttrackStates[i].ticksToNextEvent < ticksToNextEvent)\n\t\t\t\t) {\n\t\t\t\t\tticksToNextEvent = trackStates[i].ticksToNextEvent\n\t\t\t\t\tnextEventTrack = i\n\t\t\t\t\tnextEventIndex = trackStates[i].nextEventIndex\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (nextEventTrack != null) {\n\t\t\t\t// get next event from that track and\n\t\t\t\tvar nextEvent = midiObj.tracks[nextEventTrack][nextEventIndex]\n\t\t\t\tif (midiObj.tracks[nextEventTrack][nextEventIndex + 1]) {\n\t\t\t\t\ttrackStates[nextEventTrack].ticksToNextEvent +=\n\t\t\t\t\t\tmidiObj.tracks[nextEventTrack][nextEventIndex + 1].deltaTime\n\t\t\t\t} else {\n\t\t\t\t\ttrackStates[nextEventTrack].ticksToNextEvent = null\n\t\t\t\t}\n\t\t\t\ttrackStates[nextEventTrack].nextEventIndex += 1\n\t\t\t\t// advance timings on all tracks\n\t\t\t\tfor (var i = 0; i < trackStates.length; i++) {\n\t\t\t\t\tif (trackStates[i].ticksToNextEvent != null) {\n\t\t\t\t\t\ttrackStates[i].ticksToNextEvent -= ticksToNextEvent\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tticksToEvent: ticksToNextEvent,\n\t\t\t\t\tevent: nextEvent,\n\t\t\t\t\ttrack: nextEventTrack\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn null\n\t\t\t}\n\t\t} //end getNextEvent\n\n\t\tfunction processNext() {\n\t\t\tlet newBPM = false\n\t\t\tif (midiEvent.event.type == \"setTempo\") {\n\t\t\t\t// tempo change events can occur anywhere in the middle and affect events that follow\n\t\t\t\tbeatsPerMinute = 60000000 / midiEvent.event.microsecondsPerBeat\n\t\t\t\tnewBPM = true\n\t\t\t}\n\t\t\tif (\n\t\t\t\tmidiEvent.event.type == \"controller\" &&\n\t\t\t\tmidiEvent.event.controllerType == 7\n\t\t\t) {\n\t\t\t\tchannels[midiEvent.event.channel].volume = midiEvent.event.value\n\t\t\t}\n\n\t\t\tvar beatsToGenerate = 0\n\t\t\tvar secondsToGenerate = 0\n\t\t\tif (midiEvent.ticksToEvent > 0) {\n\t\t\t\tbeatsToGenerate = midiEvent.ticksToEvent / ticksPerBeat\n\t\t\t\tsecondsToGenerate = beatsToGenerate / (beatsPerMinute / 60)\n\t\t\t}\n\t\t\tvar time = secondsToGenerate * 1000 || 0\n\t\t\tmidiEvent.event.temporalDelta = time\n\t\t\ttotTime += time\n\t\t\tmidiEvent.event.timestamp = totTime\n\n\t\t\t//Keep track of sustain on/offs\n\t\t\tif (\n\t\t\t\tmidiEvent.event.type == \"controller\" &&\n\t\t\t\tmidiEvent.event.controllerType == 64\n\t\t\t) {\n\t\t\t\tlet currentSecond = Math.floor(totTime / 1000)\n\t\t\t\tif (!sustainsBySecond.hasOwnProperty(currentSecond)) {\n\t\t\t\t\tsustainsBySecond[currentSecond] = []\n\t\t\t\t}\n\t\t\t\tsustainsBySecond[currentSecond].push({\n\t\t\t\t\ttimestamp: totTime,\n\t\t\t\t\tisOn: midiEvent.event.value > 64,\n\t\t\t\t\tvalue: midiEvent.event.value\n\t\t\t\t})\n\t\t\t}\n\n\t\t\t//keep track of completed beats to show beatLines\n\t\t\tgeneratedBeats +=\n\t\t\t\tMath.floor(ticksPerBeat * beatsToGenerate) / ticksPerBeat\n\t\t\twhile (generatedBeats >= 1) {\n\t\t\t\tgeneratedBeats -= 1\n\t\t\t\tlet beatTime = totTime - generatedBeats * secondsToGenerate * 1000\n\t\t\t\tlet beatSecond = Math.floor(beatTime / 1000)\n\t\t\t\tif (!beatsBySecond.hasOwnProperty(beatSecond)) {\n\t\t\t\t\tbeatsBySecond[beatSecond] = []\n\t\t\t\t}\n\t\t\t\tbeatsBySecond[beatSecond].push(beatTime)\n\t\t\t}\n\n\t\t\tif (midiEvent.event.hasOwnProperty(\"channel\")) {\n\t\t\t\tmidiEvent.event.channelVolume = channels[midiEvent.event.channel].volume\n\t\t\t}\n\t\t\tmidiEvent = getNextEvent()\n\t\t\tif (newBPM) {\n\t\t\t\tbpms.push({\n\t\t\t\t\tbpm: beatsPerMinute,\n\t\t\t\t\ttimestamp: totTime\n\t\t\t\t})\n\t\t\t}\n\t\t} //end processNext\n\n\t\tif ((midiEvent = getNextEvent())) {\n\t\t\twhile (midiEvent) processNext(true)\n\t\t}\n\t\t/*********\n\t\t * </ADAPTED FROM JASMID>\n\t\t *********/\n\t\treturn { bpms, beatsBySecond, sustainsBySecond: sustainsBySecond }\n\t}\n}\n\nfunction getDefaultChannels() {\n\tlet channels = {}\n\tfor (var i = 0; i <= 15; i++) {\n\t\tchannels[i] = {\n\t\t\tinstrument: i,\n\t\t\tpitchBend: 0,\n\t\t\tvolume: 127,\n\t\t\tvolumeControl: 50,\n\t\t\tmute: false,\n\t\t\tmono: false,\n\t\t\tomni: false,\n\t\t\tsolo: false\n\t\t}\n\t}\n\tchannels[9].instrument = -1\n\treturn channels\n}\n","import { CONST } from \"./data/CONST.js\"\nexport class Song {\n\tconstructor(midiData, fileName, name) {\n\t\tthis.fileName = fileName\n\t\tthis.name = name || fileName\n\t\tthis.text = []\n\t\tthis.timeSignature\n\t\tthis.keySignarture\n\t\tthis.duration = 0\n\t\tthis.speed = 1\n\t\tthis.notesBySeconds = {}\n\t\tthis.controlEvents = []\n\t\tthis.temporalData = midiData.temporalData\n\t\tthis.sustainsBySecond = midiData.temporalData.sustainsBySecond\n\n\t\tthis.header = midiData.header\n\t\tthis.tracks = midiData.tracks\n\t\tthis.markers = []\n\t\tthis.otherTracks = []\n\t\tthis.activeTracks = []\n\t\tthis.microSecondsPerBeat = 10\n\t\tthis.channels = this.getDefaultChannels()\n\t\tthis.idCounter = 0\n\n\t\tthis.processEvents(midiData)\n\t\tconsole.log(this)\n\t}\n\tgetStart() {\n\t\treturn this.getNoteSequence()[0].timestamp\n\t}\n\tgetEnd() {\n\t\tif (!this.end) {\n\t\t\tlet noteSequence = this.getNoteSequence().sort(\n\t\t\t\t(a, b) => a.offTime - b.offTime\n\t\t\t)\n\t\t\tlet lastNote = noteSequence[noteSequence.length - 1]\n\t\t\tthis.end = lastNote.offTime\n\t\t}\n\t\treturn this.end\n\t}\n\tgetOffset() {\n\t\tif (!this.smpteOffset) {\n\t\t\treturn 0 //\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t((this.smpteOffset.hour * 60 + this.smpteOffset.min) * 60 +\n\t\t\t\t\tthis.smpteOffset.sec) *\n\t\t\t\t1000\n\t\t\t)\n\t\t}\n\t}\n\tgetMeasureLines() {\n\t\tif (!this.measureLines) {\n\t\t\tthis.setMeasureLines()\n\t\t}\n\t\treturn this.measureLines\n\t}\n\tsetMeasureLines() {\n\t\tlet timeSignature = this.timeSignature || {\n\t\t\tnumerator: 4,\n\t\t\tdenominator: 4,\n\t\t\tthirtySeconds: 8\n\t\t}\n\t\tlet numerator = timeSignature.numerator || 4\n\t\tlet denominator = timeSignature.denominator || 4\n\t\tlet thirtySeconds = timeSignature.thirtyseconds || 8\n\n\t\tlet beatsPerMeasure = numerator / (denominator * (thirtySeconds / 32))\n\t\tlet skippedBeats = beatsPerMeasure - 1\n\t\tthis.measureLines = {}\n\t\tObject.keys(this.temporalData.beatsBySecond).forEach(second => {\n\t\t\tthis.temporalData.beatsBySecond[second].forEach(beat => {\n\t\t\t\tif (skippedBeats < beatsPerMeasure - 1) {\n\t\t\t\t\tskippedBeats++\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tskippedBeats = 0\n\t\t\t\tif (!this.measureLines.hasOwnProperty(second)) {\n\t\t\t\t\tthis.measureLines[second] = []\n\t\t\t\t}\n\t\t\t\tthis.measureLines[second].push(beat)\n\t\t\t})\n\t\t})\n\t}\n\tsetSustainPeriods() {\n\t\tthis.sustainPeriods = []\n\t\tlet isOn = false\n\t\tfor (let second in this.sustainsBySecond) {\n\t\t\tthis.sustainsBySecond[second].forEach(sustain => {\n\t\t\t\tif (isOn) {\n\t\t\t\t\tif (!sustain.isOn) {\n\t\t\t\t\t\tisOn = false\n\t\t\t\t\t\tthis.sustainPeriods[this.sustainPeriods.length - 1].end =\n\t\t\t\t\t\t\tsustain.timestamp\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (sustain.isOn) {\n\t\t\t\t\t\tisOn = true\n\t\t\t\t\t\tthis.sustainPeriods.push({\n\t\t\t\t\t\t\tstart: sustain.timestamp,\n\t\t\t\t\t\t\tvalue: sustain.value\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\tgetMicrosecondsPerBeat() {\n\t\treturn this.microSecondsPerBeat\n\t}\n\tgetBPM(time) {\n\t\tfor (let i = this.temporalData.bpms.length - 1; i >= 0; i--) {\n\t\t\tif (this.temporalData.bpms[i].timestamp < time) {\n\t\t\t\treturn this.temporalData.bpms[i].bpm\n\t\t\t}\n\t\t}\n\t}\n\n\tgetNotes(from, to) {\n\t\tlet secondStart = Math.floor(from)\n\t\tlet secondEnd = Math.floor(to)\n\t\tlet notes = []\n\t\tfor (let i = secondStart; i < secondEnd; i++) {\n\t\t\tfor (let track in this.activeTracks) {\n\t\t\t\tif (this.activeTracks[track].notesBySeconds.hasOwnProperty(i)) {\n\t\t\t\t\tfor (let n in this.activeTracks[track].notesBySeconds[i]) {\n\t\t\t\t\t\tlet note = this.activeTracks[track].notesBySeconds[i][n]\n\t\t\t\t\t\tif (note.timestamp > from) {\n\t\t\t\t\t\t\tnotes.push(note)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn notes\n\t}\n\tgetAllInstruments() {\n\t\tlet instruments = {}\n\t\tlet programs = {}\n\t\tthis.controlEvents = {}\n\t\tthis.tracks.forEach(track => {\n\t\t\ttrack.forEach(event => {\n\t\t\t\tlet channel = event.channel\n\n\t\t\t\tif (event.type == \"programChange\") {\n\t\t\t\t\tprograms[channel] = event.programNumber\n\t\t\t\t}\n\n\t\t\t\tif (event.type == \"controller\" && event.controllerType == 7) {\n\t\t\t\t\tif (\n\t\t\t\t\t\t!this.controlEvents.hasOwnProperty(\n\t\t\t\t\t\t\tMath.floor(event.timestamp / 1000)\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.controlEvents[Math.floor(event.timestamp / 1000)] = []\n\t\t\t\t\t}\n\t\t\t\t\tthis.controlEvents[Math.floor(event.timestamp / 1000)].push(event)\n\t\t\t\t}\n\n\t\t\t\tif (event.type == \"noteOn\") {\n\t\t\t\t\tif (channel != 9) {\n\t\t\t\t\t\tlet program = programs[channel]\n\t\t\t\t\t\tlet instrument =\n\t\t\t\t\t\t\tCONST.INSTRUMENTS.BY_ID[isFinite(program) ? program : channel]\n\t\t\t\t\t\tinstruments[instrument.id] = true\n\t\t\t\t\t\tevent.instrument = instrument.id\n\t\t\t\t\t} else {\n\t\t\t\t\t\tinstruments[\"percussion\"] = true\n\t\t\t\t\t\tevent.instrument = \"percussion\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t})\n\t\treturn Object.keys(instruments)\n\t}\n\tprocessEvents(midiData) {\n\t\tthis.setSustainPeriods()\n\t\tmidiData.tracks.forEach(midiTrack => {\n\t\t\tlet newTrack = {\n\t\t\t\tnotes: [],\n\t\t\t\tmeta: [],\n\t\t\t\ttempoChanges: []\n\t\t\t}\n\n\t\t\tthis.distributeEvents(midiTrack, newTrack)\n\n\t\t\tif (newTrack.notes.length) {\n\t\t\t\tthis.activeTracks.push(newTrack)\n\t\t\t} else {\n\t\t\t\tthis.otherTracks.push(newTrack)\n\t\t\t}\n\t\t})\n\n\t\tthis.activeTracks.forEach((track, trackIndex) => {\n\t\t\ttrack.notesBySeconds = {}\n\t\t\tthis.setNoteOffTimestamps(track.notes)\n\t\t\tthis.setNoteSustainTimestamps(track.notes)\n\t\t\ttrack.notes = track.notes.slice(0).filter(note => note.type == \"noteOn\")\n\t\t\ttrack.notes.forEach(note => (note.track = trackIndex))\n\t\t\tthis.setNotesBySecond(track)\n\t\t})\n\t}\n\tdistributeEvents(track, newTrack) {\n\t\ttrack.forEach(event => {\n\t\t\tevent.id = this.idCounter++\n\t\t\tif (event.type == \"noteOn\" || event.type == \"noteOff\") {\n\t\t\t\tnewTrack.notes.push(event)\n\t\t\t} else if (event.type == \"setTempo\") {\n\t\t\t\tnewTrack.tempoChanges.push(event)\n\t\t\t} else if (event.type == \"trackName\") {\n\t\t\t\tnewTrack.name = event.text\n\t\t\t} else if (event.type == \"text\") {\n\t\t\t\tthis.text.push(event.text)\n\t\t\t} else if (event.type == \"timeSignature\") {\n\t\t\t\tthis.timeSignature = event\n\t\t\t} else if (event.type == \"keySignature\") {\n\t\t\t\tnewTrack.keySignature = event\n\t\t\t} else if (event.type == \"smpteOffset\") {\n\t\t\t\tthis.smpteOffset = event\n\t\t\t} else if (event.type == \"marker\") {\n\t\t\t\tthis.markers.push(event)\n\t\t\t} else {\n\t\t\t\tnewTrack.meta.push(event)\n\t\t\t}\n\t\t})\n\t}\n\n\tsetNotesBySecond(track) {\n\t\ttrack.notes.forEach(note => {\n\t\t\tlet second = Math.floor(note.timestamp / 1000)\n\t\t\tif (track.notesBySeconds.hasOwnProperty(second)) {\n\t\t\t\ttrack.notesBySeconds[second].push(note)\n\t\t\t} else {\n\t\t\t\ttrack.notesBySeconds[second] = [note]\n\t\t\t}\n\t\t})\n\t}\n\tgetNoteSequence() {\n\t\tif (!this.notesSequence) {\n\t\t\tlet tracks = []\n\t\t\tfor (let t in this.activeTracks) [tracks.push(this.activeTracks[t].notes)]\n\n\t\t\tthis.noteSequence = [].concat\n\t\t\t\t.apply([], tracks)\n\t\t\t\t.sort((a, b) => a.timestamp - b.timestamp)\n\t\t}\n\t\treturn this.noteSequence.slice(0)\n\t}\n\tgetNoteRange() {\n\t\tlet seq = this.getNoteSequence()\n\t\tlet min = 87\n\t\tlet max = 0\n\t\tseq.forEach(note => {\n\t\t\tif (note.noteNumber > max) {\n\t\t\t\tmax = note.noteNumber\n\t\t\t}\n\t\t\tif (note.noteNumber < min) {\n\t\t\t\tmin = note.noteNumber\n\t\t\t}\n\t\t})\n\t\treturn { min, max }\n\t}\n\tsetNoteSustainTimestamps(notes) {\n\t\tfor (let i = 0; i < notes.length; i++) {\n\t\t\tlet note = notes[i]\n\t\t\tlet currentSustains = this.sustainPeriods.filter(\n\t\t\t\tperiod =>\n\t\t\t\t\t(period.start < note.timestamp && period.end > note.timestamp) ||\n\t\t\t\t\t(period.start < note.offTime && period.end > note.offTime)\n\t\t\t)\n\t\t\tif (currentSustains.length) {\n\t\t\t\tnote.sustainOnTime = currentSustains[0].start\n\t\t\t\tlet end = Math.max.apply(\n\t\t\t\t\tnull,\n\t\t\t\t\tcurrentSustains.map(sustain => sustain.end)\n\t\t\t\t)\n\t\t\t\tnote.sustainOffTime = end\n\t\t\t\tnote.sustainDuration = note.sustainOffTime - note.timestamp\n\t\t\t}\n\t\t}\n\t}\n\n\tsetNoteOffTimestamps(notes) {\n\t\tfor (let i = 0; i < notes.length; i++) {\n\t\t\tlet note = notes[i]\n\t\t\tif (note.type == \"noteOn\") {\n\t\t\t\tSong.findOffNote(i, notes.slice(0))\n\t\t\t}\n\t\t}\n\t}\n\n\tstatic findOffNote(index, notes) {\n\t\tlet onNote = notes[index]\n\t\tfor (let i = index + 1; i < notes.length; i++) {\n\t\t\tif (\n\t\t\t\tnotes[i].type == \"noteOff\" &&\n\t\t\t\tonNote.noteNumber == notes[i].noteNumber\n\t\t\t) {\n\t\t\t\tonNote.offTime = notes[i].timestamp\n\t\t\t\tonNote.offVelocity = notes[i].velocity\n\t\t\t\tonNote.duration = onNote.offTime - onNote.timestamp\n\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t}\n\n\tgetDefaultChannels() {\n\t\tlet channels = {}\n\t\tfor (var i = 0; i <= 15; i++) {\n\t\t\tchannels[i] = {\n\t\t\t\tinstrument: i,\n\t\t\t\tpitchBend: 0,\n\t\t\t\tvolume: 127,\n\t\t\t\tvolumeControl: 50,\n\t\t\t\tmute: false,\n\t\t\t\tmono: false,\n\t\t\t\tomni: false,\n\t\t\t\tsolo: false\n\t\t\t}\n\t\t}\n\t\tchannels[9].instrument = -1\n\t\treturn channels\n\t}\n}\n","import { CONST } from \"../data/CONST.js\"\n\nconst buffers = {}\nexport const getBuffers = () => {\n\treturn buffers\n}\nexport const getBufferForNote = (soundfontName, instrument, noteNumber) => {\n\tlet noteKey = CONST.MIDI_NOTE_TO_KEY[noteNumber + 21]\n\tlet buffer\n\tif (instrument == \"percussion\") {\n\t\tsoundfontName = \"FluidR3_GM\"\n\t}\n\ttry {\n\t\tbuffer = buffers[soundfontName][instrument][noteKey]\n\t} catch (e) {\n\t\tconsole.error(e)\n\t}\n\treturn buffer\n}\nexport const hasBuffer = (soundfontName, instrument) =>\n\tbuffers.hasOwnProperty(soundfontName) &&\n\tbuffers[soundfontName].hasOwnProperty(instrument)\n\nexport const setBuffer = (soundfontName, instrument, noteKey, buffer) => {\n\tif (!buffers.hasOwnProperty(soundfontName)) {\n\t\tbuffers[soundfontName] = {}\n\t}\n\tif (!buffers[soundfontName].hasOwnProperty(instrument)) {\n\t\tbuffers[soundfontName][instrument] = {}\n\t}\n\tbuffers[soundfontName][instrument][noteKey] = buffer\n}\n","import { DomHelper } from \"./DomHelper.js\"\nclass Loader {\n\tstartLoad() {\n\t\tthis.getLoadingDiv().style.display = \"block\"\n\t\tthis.getLoadingText().innerHTML = \"Loading\"\n\t\tthis.loading = true\n\t\tthis.loadAnimation()\n\t}\n\tstopLoad() {\n\t\tthis.getLoadingDiv().style.display = \"none\"\n\t\tthis.loading = false\n\t}\n\tloadAnimation() {\n\t\tlet currentText = this.getLoadingText().innerHTML\n\t\tcurrentText = currentText.replace(\"...\", \" ..\")\n\t\tcurrentText = currentText.replace(\" ..\", \". .\")\n\t\tcurrentText = currentText.replace(\". .\", \".. \")\n\t\tcurrentText = currentText.replace(\".. \", \"...\")\n\t\tthis.getLoadingText().innerHTML = currentText\n\t\tif (this.loading) {\n\t\t\twindow.requestAnimationFrame(this.loadAnimation.bind(this))\n\t\t}\n\t}\n\tsetLoadMessage(msg) {\n\t\tthis.getLoadingText().innerHTML = msg + \"...\"\n\t}\n\tgetLoadingText() {\n\t\tif (!this.loadingText) {\n\t\t\tthis.loadingText = DomHelper.createElement(\"p\")\n\t\t\tthis.getLoadingDiv().appendChild(this.loadingText)\n\t\t}\n\t\treturn this.loadingText\n\t}\n\tgetLoadingDiv() {\n\t\tif (!this.loadingDiv) {\n\t\t\tthis.loadingDiv = DomHelper.createDivWithIdAndClass(\n\t\t\t\t\"loadingDiv\",\n\t\t\t\t\"fullscreen\"\n\t\t\t)\n\n\t\t\tlet spinner = DomHelper.createSpinner()\n\t\t\tthis.loadingDiv.appendChild(spinner)\n\t\t\tdocument.body.appendChild(this.loadingDiv)\n\t\t}\n\t\treturn this.loadingDiv\n\t}\n}\n\nexport const getLoader = () => loaderSingleton\nconst loaderSingleton = new Loader()\n","import { hasBuffer, setBuffer } from \"./audio/Buffers.js\"\nimport { getLoader } from \"./ui/Loader.js\"\nimport { replaceAllString, iOS } from \"./Util.js\"\nexport class SoundfontLoader {\n\t/**\n\t *\n\t * @param {String} instrument\n\t */\n\tstatic async loadInstrument(instrument, soundfontName) {\n\t\tlet baseUrl = \"https://gleitz.github.io/midi-js-soundfonts/\"\n\t\tif (instrument == \"percussion\") {\n\t\t\tsoundfontName = \"FluidR3_GM\"\n\t\t\tbaseUrl = \"\"\n\t\t}\n\t\tlet fileType = iOS ? \"mp3\" : \"ogg\"\n\t\treturn fetch(\n\t\t\tbaseUrl + soundfontName + \"/\" + instrument + \"-\" + fileType + \".js\"\n\t\t)\n\t\t\t.then(response => {\n\t\t\t\tif (response.ok) {\n\t\t\t\t\tgetLoader().setLoadMessage(\n\t\t\t\t\t\t\"Loaded \" + instrument + \" from \" + soundfontName + \" soundfont.\"\n\t\t\t\t\t)\n\t\t\t\t\treturn response.text()\n\t\t\t\t}\n\t\t\t\tthrow Error(response.statusText)\n\t\t\t})\n\t\t\t.then(data => {\n\t\t\t\tlet scr = document.createElement(\"script\")\n\t\t\t\tscr.language = \"javascript\"\n\t\t\t\tscr.type = \"text/javascript\"\n\t\t\t\tlet newData = replaceAllString(data, \"Soundfont\", soundfontName)\n\t\t\t\tscr.text = newData\n\t\t\t\tdocument.body.appendChild(scr)\n\t\t\t})\n\t\t\t.catch(function (error) {\n\t\t\t\tconsole.error(\"Error fetching soundfont: \\n\", error)\n\t\t\t})\n\t}\n\tstatic async loadInstruments(instruments) {\n\t\treturn await Promise.all(\n\t\t\tinstruments\n\t\t\t\t.slice(0)\n\t\t\t\t.map(instrument => SoundfontLoader.loadInstrument(instrument))\n\t\t)\n\t}\n\tstatic async getBuffers(ctx) {\n\t\tlet sortedBuffers = null\n\t\tawait SoundfontLoader.createBuffers(ctx).then(\n\t\t\tunsortedBuffers => {\n\t\t\t\tunsortedBuffers.forEach(noteBuffer => {\n\t\t\t\t\tsetBuffer(\n\t\t\t\t\t\tnoteBuffer.soundfontName,\n\t\t\t\t\t\tnoteBuffer.instrument,\n\t\t\t\t\t\tnoteBuffer.noteKey,\n\t\t\t\t\t\tnoteBuffer.buffer\n\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t},\n\t\t\terror => console.error(error)\n\t\t)\n\t\treturn sortedBuffers\n\t}\n\tstatic async createBuffers(ctx) {\n\t\tlet promises = []\n\t\tfor (let soundfontName in MIDI) {\n\t\t\tfor (let instrument in MIDI[soundfontName]) {\n\t\t\t\tif (!hasBuffer(soundfontName, instrument)) {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\"Loaded '\" + soundfontName + \"' instrument : \" + instrument\n\t\t\t\t\t)\n\t\t\t\t\tfor (let noteKey in MIDI[soundfontName][instrument]) {\n\t\t\t\t\t\tlet base64Buffer = SoundfontLoader.getBase64Buffer(\n\t\t\t\t\t\t\tMIDI[soundfontName][instrument][noteKey]\n\t\t\t\t\t\t)\n\t\t\t\t\t\tpromises.push(\n\t\t\t\t\t\t\tSoundfontLoader.getNoteBuffer(\n\t\t\t\t\t\t\t\tctx,\n\t\t\t\t\t\t\t\tbase64Buffer,\n\t\t\t\t\t\t\t\tsoundfontName,\n\t\t\t\t\t\t\t\tnoteKey,\n\t\t\t\t\t\t\t\tinstrument\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn await Promise.all(promises)\n\t}\n\tstatic async getNoteBuffer(\n\t\tctx,\n\t\tbase64Buffer,\n\t\tsoundfontName,\n\t\tnoteKey,\n\t\tinstrument\n\t) {\n\t\tlet promise = new Promise((resolve, reject) => {\n\t\t\tctx.decodeAudioData(\n\t\t\t\tbase64Buffer,\n\t\t\t\tdecodedBuffer => {\n\t\t\t\t\tresolve({\n\t\t\t\t\t\tbuffer: decodedBuffer,\n\t\t\t\t\t\tnoteKey: noteKey,\n\t\t\t\t\t\tinstrument: instrument,\n\t\t\t\t\t\tsoundfontName: soundfontName\n\t\t\t\t\t})\n\t\t\t\t},\n\t\t\t\terror => reject(error)\n\t\t\t)\n\t\t})\n\t\treturn await promise\n\n\t\t//ios can't handle the promise based decodeAudioData\n\t\t// return await ctx\n\t\t// \t.decodeAudioData(base64Buffer, function (decodedBuffer) {\n\t\t// \t\taudioBuffer = decodedBuffer\n\t\t// \t})\n\t\t// \t.then(\n\t\t// \t\t() => {\n\t\t// \t\t\treturn {\n\t\t// \t\t\t\tbuffer: audioBuffer,\n\t\t// \t\t\t\tnoteKey: noteKey,\n\t\t// \t\t\t\tinstrument: instrument,\n\t\t// \t\t\t\tsoundfontName: soundfontName\n\t\t// \t\t\t}\n\t\t// \t\t},\n\t\t// \t\te => {\n\t\t// \t\t\tconsole.log(e)\n\t\t// \t\t}\n\t\t// \t)\n\t}\n\tstatic getBase64Buffer(str) {\n\t\tlet base64 = str.split(\",\")[1]\n\t\treturn Base64Binary.decodeArrayBuffer(base64)\n\t}\n}\n","import { getSetting } from \"../settings/Settings.js\"\n\nconst TIME_CONST = 0.05\nclass GainNodeController {\n\tconstructor(context) {\n\t\tthis.createGainNode(context)\n\t}\n\tcreateGainNode(context) {\n\t\tthis.gainNode = context.createGain()\n\t\tthis.gainNode.value = 0\n\t\tthis.gainNode.gain.setTargetAtTime(0, 0, TIME_CONST)\n\t}\n\n\tsetAttackAndDecay(start, gainValue, adsrValues) {\n\t\tlet endOfAttackTime = start + adsrValues.attack\n\n\t\tthis.sustainValue = gainValue * adsrValues.sustain\n\t\tthis.endOfDecayTime = endOfAttackTime + adsrValues.decay\n\n\t\t//Start at 0\n\t\tthis.gainNode.gain.linearRampToValueAtTime(0, start, TIME_CONST)\n\n\t\t//Attack\n\t\tthis.gainNode.gain.linearRampToValueAtTime(\n\t\t\tgainValue,\n\t\t\tendOfAttackTime,\n\t\t\tTIME_CONST\n\t\t)\n\t\t//Decay\n\t\tthis.gainNode.gain.linearRampToValueAtTime(\n\t\t\tthis.sustainValue,\n\t\t\tthis.endOfDecayTime,\n\t\t\tTIME_CONST\n\t\t)\n\t}\n\tsetReleaseGainNode(end, release) {\n\t\tthis.gainNode.gain.linearRampToValueAtTime(\n\t\t\tthis.sustainValue,\n\t\t\tend,\n\t\t\tTIME_CONST\n\t\t)\n\t\t//Release\n\t\tthis.gainNode.gain.linearRampToValueAtTime(0.001, end + release)\n\t\tthis.gainNode.gain.linearRampToValueAtTime(\n\t\t\t0,\n\t\t\tend + release + 0.001,\n\t\t\tTIME_CONST\n\t\t)\n\t\tthis.gainNode.gain.setTargetAtTime(0, end + release + 0.005, TIME_CONST)\n\t}\n\tendAt(endTime, isSustained) {\n\t\tconst release = isSustained\n\t\t\t? parseFloat(getSetting(\"adsrReleasePedal\"))\n\t\t\t: parseFloat(getSetting(\"adsrReleaseKey\"))\n\t\tendTime = Math.max(endTime, this.endOfDecayTime)\n\t\tthis.setReleaseGainNode(endTime, release)\n\t\treturn endTime\n\t}\n}\n\nfunction getAdsrValues() {\n\tlet attack = parseFloat(getSetting(\"adsrAttack\"))\n\tlet decay = parseFloat(getSetting(\"adsrDecay\"))\n\tlet sustain = parseFloat(getSetting(\"adsrSustain\")) / 100\n\tlet releasePedal = parseFloat(getSetting(\"adsrReleasePedal\"))\n\tlet releaseKey = parseFloat(getSetting(\"adsrReleaseKey\"))\n\treturn { attack, decay, sustain, releasePedal, releaseKey }\n}\nfunction getAdsrAdjustedForDuration(duration) {\n\tlet maxGainLevel = 1\n\tlet adsrValues = getAdsrValues()\n\t//If duration is smaller than decay and attack, shorten decay / set it to 0\n\tif (duration < adsrValues.attack + adsrValues.decay) {\n\t\tadsrValues.decay = Math.max(duration - adsrValues.attack, 0)\n\t}\n\t//if attack alone is longer than duration, linearly lower the maximum gain value that will be reached before\n\t//the sound starts to release.\n\tif (duration < adsrValues.attack) {\n\t\tlet ratio = duration / adsrValues.attack\n\t\tmaxGainLevel *= ratio\n\t\tadsrValues.attack *= ratio\n\t\tadsrValues.decay = 0\n\t\tadsrValues.sustain = 1\n\t}\n\tadsrValues.maxGainLevel = maxGainLevel\n\treturn adsrValues\n}\n\nexport const createContinuousGainNode = (context, start, gainValue) => {\n\tconst gainNodeGen = new GainNodeController(context)\n\n\tgainNodeGen.setAttackAndDecay(start, gainValue, getAdsrValues())\n\treturn gainNodeGen\n}\n\nexport const createCompleteGainNode = (\n\tcontext,\n\tgainValue,\n\tctxTimes,\n\tisSustained\n) => {\n\tconst gainNodeGen = new GainNodeController(context)\n\n\tconst adsrValues = getAdsrAdjustedForDuration(\n\t\t(isSustained ? ctxTimes.sustainOff : ctxTimes.end) - ctxTimes.start\n\t)\n\n\t//Adjust gain value if attack period is longer than duration of entire note.\n\tgainValue *= adsrValues.maxGainLevel\n\n\tgainNodeGen.setAttackAndDecay(ctxTimes.start, gainValue, adsrValues)\n\n\tlet end = ctxTimes.end\n\tlet release = parseFloat(getSetting(\"adsrReleaseKey\"))\n\tif (isSustained && getSetting(\"sustainEnabled\")) {\n\t\tend = ctxTimes.sustainOff\n\t\trelease = parseFloat(getSetting(\"adsrReleasePedal\"))\n\t}\n\n\treturn gainNodeGen\n}\n","import { getSetting } from \"../settings/Settings.js\"\nimport {\n\tcreateCompleteGainNode,\n\tcreateContinuousGainNode\n} from \"./GainNodeController.js\"\n\nclass AudioNote {\n\tconstructor(context, buffer) {\n\t\tthis.source = context.createBufferSource()\n\t\tthis.source.buffer = buffer\n\t}\n\n\tconnectSource(context, gainNode) {\n\t\tthis.source.connect(gainNode)\n\t\tthis.getGainNode().connect(context.destination)\n\t}\n\tgetGainNode() {\n\t\treturn this.gainNodeController.gainNode\n\t}\n\tsuspend() {\n\t\tthis.source.stop(0)\n\t}\n\tplay(time) {\n\t\tthis.source.start(time)\n\t}\n\tendAt(time, isSustained) {\n\t\tlet endTime = this.gainNodeController.endAt(time, isSustained)\n\t\tthis.endSourceAt(endTime + 0.5)\n\t}\n\tendSourceAt(time) {\n\t\tthis.source.stop(time)\n\t}\n}\n\nexport const createContinuousAudioNote = (context, buffer, volume) => {\n\tlet audioNote = new AudioNote(context, buffer)\n\n\taudioNote.gainNodeController = createContinuousGainNode(\n\t\tcontext,\n\t\tcontext.currentTime,\n\t\tvolume\n\t)\n\n\taudioNote.connectSource(context, audioNote.gainNodeController.gainNode)\n\taudioNote.play(context.currentTime)\n\treturn audioNote\n}\n\nexport const createCompleteAudioNote = (\n\tnote,\n\tcurrentSongTime,\n\tplaybackSpeed,\n\tvolume,\n\tisPlayalong,\n\tcontext,\n\tbuffer\n) => {\n\tlet audioNote = new AudioNote(context, buffer)\n\tconst gainValue = getNoteGain(note, volume)\n\tif (gainValue == 0) {\n\t\treturn audioNote\n\t}\n\n\tlet contextTimes = getContextTimesForNote(\n\t\tcontext,\n\t\tnote,\n\t\tcurrentSongTime,\n\t\tplaybackSpeed,\n\t\tisPlayalong\n\t)\n\tconst isSustained = contextTimes.end < contextTimes.sustainOff\n\n\taudioNote.gainNodeController = createCompleteGainNode(\n\t\tcontext,\n\t\tgainValue,\n\t\tcontextTimes,\n\t\tisSustained\n\t)\n\n\taudioNote.connectSource(context, audioNote.getGainNode())\n\n\taudioNote.play(contextTimes.start)\n\taudioNote.endAt(\n\t\tisSustained ? contextTimes.sustainOff : contextTimes.end,\n\t\tisSustained\n\t)\n\n\treturn audioNote\n}\n\nfunction getContextTimesForNote(\n\tcontext,\n\tnote,\n\tcurrentSongTime,\n\tplaybackSpeed,\n\tisPlayAlong\n) {\n\tlet delayUntilNote = (note.timestamp / 1000 - currentSongTime) / playbackSpeed\n\tlet delayCorrection = 0\n\tif (isPlayAlong) {\n\t\tdelayCorrection = getPlayalongDelayCorrection(delayUntilNote)\n\t\tdelayUntilNote = Math.max(0, delayUntilNote)\n\t}\n\tlet start = context.currentTime + delayUntilNote\n\n\tlet end = start + note.duration / 1000 / playbackSpeed + delayCorrection\n\n\tlet sustainOff = start + note.sustainDuration / 1000 / playbackSpeed\n\treturn { start, end, sustainOff }\n}\n\nfunction getPlayalongDelayCorrection(delayUntilNote) {\n\tlet delayCorrection = 0\n\tif (delayUntilNote < 0) {\n\t\tconsole.log(\"negative delay\")\n\t\tdelayCorrection = -1 * (delayUntilNote - 0.1)\n\t\tdelayUntilNote = 0.1\n\t}\n\n\treturn delayCorrection\n}\n\nfunction getNoteGain(note, volume) {\n\tlet gain = 2 * (note.velocity / 127) * volume\n\n\tlet clampedGain = Math.min(10.0, Math.max(-1.0, gain))\n\treturn clampedGain\n}\n","import { getSetting } from \"../settings/Settings.js\"\nimport { SoundfontLoader } from \"../SoundfontLoader.js\"\nimport { getLoader } from \"../ui/Loader.js\"\nimport {\n\tcreateContinuousAudioNote,\n\tcreateCompleteAudioNote\n} from \"./AudioNote.js\"\nimport { getBufferForNote } from \"./Buffers.js\"\n\nexport class AudioPlayer {\n\tconstructor() {\n\t\twindow.AudioContext = window.AudioContext || window.webkitAudioContext\n\n\t\tthis.context = new AudioContext()\n\t\tthis.buffers = {}\n\t\tthis.audioNotes = []\n\t\tthis.soundfontName = \"MusyngKite\"\n\n\t\tthis.loadMetronomeSounds()\n\t}\n\n\tgetContextTime() {\n\t\treturn this.context.currentTime\n\t}\n\tgetContext() {\n\t\treturn this.context\n\t}\n\tisRunning() {\n\t\treturn this.context.state == \"running\"\n\t}\n\tresume() {\n\t\tthis.context.resume()\n\t}\n\tsuspend() {\n\t\tthis.context.suspend()\n\t}\n\tstopAllSources() {\n\t\tthis.audioNotes.forEach(audioNote => {\n\t\t\ttry {\n\t\t\t\taudioNote.source.stop(0)\n\t\t\t} catch (error) {\n\t\t\t\t//Lets ignore this. Happens when notes are created while jumping on timeline\n\t\t\t}\n\t\t})\n\t}\n\tcreateContinuousNote(noteNumber, volume, instrument) {\n\t\tif (this.context.state === \"suspended\") {\n\t\t\tthis.wasSuspended = true\n\t\t\tthis.context.resume()\n\t\t}\n\t\tlet audioNote = createContinuousAudioNote(\n\t\t\tthis.context,\n\t\t\tgetBufferForNote(this.soundfontName, instrument, noteNumber),\n\t\t\tvolume / 100\n\t\t)\n\n\t\treturn audioNote\n\t}\n\tnoteOffContinuous(audioNote) {\n\t\taudioNote.endAt(this.context.currentTime + 0.1, false)\n\t}\n\n\tplayCompleteNote(currentTime, note, playbackSpeed, volume, isPlayAlong) {\n\t\tconst buffer = getBufferForNote(\n\t\t\tthis.soundfontName,\n\t\t\tnote.instrument,\n\t\t\tnote.noteNumber\n\t\t)\n\n\t\tlet audioNote = createCompleteAudioNote(\n\t\t\tnote,\n\t\t\tcurrentTime,\n\t\t\tplaybackSpeed,\n\t\t\tvolume,\n\t\t\tisPlayAlong,\n\t\t\tthis.context,\n\t\t\tbuffer\n\t\t)\n\t\tthis.audioNotes.push(audioNote)\n\t}\n\n\tplayBeat(time, newMeasure) {\n\t\tif (time < 0) return\n\t\tthis.context.resume()\n\t\tlet ctxTime = this.context.currentTime\n\n\t\tconst source = this.context.createBufferSource()\n\t\tconst gainNode = this.context.createGain()\n\t\tgainNode.gain.value = getSetting(\"metronomeVolume\")\n\t\tsource.buffer = newMeasure ? this.metronomSound1 : this.metronomSound2\n\t\tsource.connect(gainNode)\n\t\tgainNode.connect(this.context.destination)\n\t\tsource.start(ctxTime + time)\n\t\tsource.stop(ctxTime + time + 0.2)\n\t}\n\n\tasync switchSoundfont(soundfontName, currentSong) {\n\t\tthis.soundfontName = soundfontName\n\t\tgetLoader().setLoadMessage(\"Loading Instruments\")\n\t\tawait this.loadInstrumentsForSong(currentSong)\n\t\tgetLoader().setLoadMessage(\"Loading Buffers\")\n\t\treturn await this.loadBuffers()\n\t}\n\tloadMetronomeSounds() {\n\t\tlet audioPl = this\n\n\t\tconst request = new XMLHttpRequest()\n\t\trequest.open(\"GET\", \"../../metronome/1.wav\")\n\t\trequest.responseType = \"arraybuffer\"\n\t\trequest.onload = function () {\n\t\t\tlet undecodedAudio = request.response\n\t\t\taudioPl.context.decodeAudioData(\n\t\t\t\tundecodedAudio,\n\t\t\t\tdata => (audioPl.metronomSound1 = data)\n\t\t\t)\n\t\t}\n\t\trequest.send()\n\n\t\tconst request2 = new XMLHttpRequest()\n\t\trequest2.open(\"GET\", \"../../metronome/2.wav\")\n\t\trequest2.responseType = \"arraybuffer\"\n\t\trequest2.onload = function () {\n\t\t\tlet undecodedAudio = request2.response\n\t\t\taudioPl.context.decodeAudioData(\n\t\t\t\tundecodedAudio,\n\t\t\t\tdata => (audioPl.metronomSound2 = data)\n\t\t\t)\n\t\t}\n\t\trequest2.send()\n\t}\n\tasync loadInstrumentsForSong(currentSong) {\n\t\tif (!this.buffers.hasOwnProperty(this.soundfontName)) {\n\t\t\tthis.buffers[this.soundfontName] = {}\n\t\t}\n\n\t\tlet instrumentsOfSong = currentSong.getAllInstruments()\n\n\t\t//filter instruments we've loaded already and directly map onto promise\n\t\tlet neededInstruments = instrumentsOfSong\n\t\t\t.filter(\n\t\t\t\tinstrument =>\n\t\t\t\t\t!this.buffers[this.soundfontName].hasOwnProperty(instrument)\n\t\t\t)\n\t\t\t.map(instrument =>\n\t\t\t\tSoundfontLoader.loadInstrument(instrument, this.soundfontName)\n\t\t\t)\n\t\tif (instrumentsOfSong.includes(\"percussion\")) {\n\t\t\tneededInstruments.push(\n\t\t\t\tSoundfontLoader.loadInstrument(\"percussion\", \"FluidR3_GM\")\n\t\t\t)\n\t\t}\n\t\tif (neededInstruments.length == 0) {\n\t\t\treturn Promise.resolve()\n\t\t}\n\t\tawait Promise.all(neededInstruments)\n\t}\n\n\tasync loadBuffers() {\n\t\treturn await SoundfontLoader.getBuffers(this.context).then(buffers => {\n\t\t\tconsole.log(\"Buffers loaded\")\n\t\t\tthis.loading = false\n\t\t})\n\t}\n}\n","class MidiInputHandler {\n\tconstructor() {\n\t\t// patch up prefixes\n\t\twindow.AudioContext = window.AudioContext || window.webkitAudioContext\n\n\t\tthis.noMidiMessage =\n\t\t\t\"You will only be able to play Midi-Files. To play along, you need to use a browser with Midi-support, connect a Midi-Device to your computer and reload the page.\"\n\t\tthis.init()\n\t}\n\tinit() {\n\t\tif (navigator.requestMIDIAccess)\n\t\t\tnavigator\n\t\t\t\t.requestMIDIAccess()\n\t\t\t\t.then(this.onMIDIInit.bind(this), this.onMIDIReject.bind(this))\n\t\telse\n\t\t\talert(\n\t\t\t\t\"No MIDI support present in your browser.  Check https://developer.mozilla.org/en-US/docs/Web/API/MIDIAccess#Browser_compatibility to see which Browsers support this feature.\"\n\t\t\t)\n\t}\n\tgetAvailableInputDevices() {\n\t\ttry {\n\t\t\treturn Array.from(this.midiAccess.inputs.values())\n\t\t} catch (e) {\n\t\t\treturn []\n\t\t}\n\t}\n\tgetAvailableOutputDevices() {\n\t\ttry {\n\t\t\treturn Array.from(this.midiAccess.outputs.values())\n\t\t} catch (e) {\n\t\t\treturn []\n\t\t}\n\t}\n\tsetNoteOnCallback(callback) {\n\t\tthis.noteOnCallback = callback\n\t}\n\taddInput(device) {\n\t\tdevice.onmidimessage = this.MIDIMessageEventHandler.bind(this)\n\t}\n\tclearInput(device) {\n\t\tdevice.onmidimessage = null\n\t}\n\taddOutput(device) {\n\t\tthis.activeOutput = device\n\t}\n\tclearOutput(device) {\n\t\tif (this.activeOutput == device) {\n\t\t\tthis.activeOutput = null\n\t\t}\n\t}\n\tclearInputs() {\n\t\tArray.from(this.midiAccess.inputs.values()).forEach(\n\t\t\tdevice => (device.onmidimessage = null)\n\t\t)\n\t}\n\tisDeviceActive(device) {\n\t\treturn device.onmidimessage != null\n\t}\n\tisOutputDeviceActive(device) {\n\t\treturn this.activeOutput == device\n\t}\n\tonMIDIInit(midi) {\n\t\tthis.midiAccess = midi\n\t}\n\tsetNoteOffCallback(callback) {\n\t\tthis.noteOffCallback = callback\n\t}\n\tonMIDIReject(err) {\n\t\talert(\"The MIDI system failed to start. \" + this.noMidiMessage)\n\t}\n\n\tMIDIMessageEventHandler(event) {\n\t\t// Mask off the lower nibble (MIDI channel, which we don't care about)\n\t\tswitch (event.data[0] & 0xf0) {\n\t\t\tcase 0x90:\n\t\t\t\tif (event.data[2] != 0) {\n\t\t\t\t\t// if velocity != 0 => note-on\n\t\t\t\t\tthis.noteOnCallback(parseInt(event.data[1]) - 21)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\tcase 0x80:\n\t\t\t\tthis.noteOffCallback(parseInt(event.data[1]) - 21)\n\t\t\t\treturn\n\t\t}\n\t}\n\tgetActiveMidiOutput() {\n\t\treturn this.activeOutput\n\t}\n\tisOutputActive() {\n\t\treturn this.activeOutput ? true : false\n\t}\n\tisInputActive() {\n\t\tlet devices = this.getAvailableInputDevices()\n\t\tfor (let i = 0; i < devices.length; i++) {\n\t\t\tif (this.isDeviceActive(devices[i])) {\n\t\t\t\treturn true\n\t\t\t}\n\t\t}\n\t\treturn false\n\t}\n\tplayNote(noteNumber, velocity, noteOffVelocity, delayOn, delayOff) {\n\t\tlet noteOnEvent = [0x90, noteNumber, velocity]\n\t\tlet noteOffEvent = [0x80, noteNumber, noteOffVelocity]\n\t\tthis.activeOutput.send(noteOnEvent, window.performance.now() + delayOn)\n\t\tthis.activeOutput.send(noteOffEvent, window.performance.now() + delayOff)\n\t}\n\tmidiOutNoteOff() {}\n\tnoteOnCallback() {}\n\tnoteOffCallback() {}\n}\nconst theMidiHandler = new MidiInputHandler()\nexport const getMidiHandler = () => {\n\treturn theMidiHandler\n}\n","import { DomHelper } from \"./DomHelper.js\"\n\nexport class Notification {\n\tstatic create(message, time) {\n\t\ttime = time || 1500\n\t\tlet notifEl = DomHelper.createDivWithClass(\"notification\")\n\t\tnotifEl.innerHTML = message\n\t\tdocument.body.appendChild(notifEl)\n\t\twindow.setTimeout(() => document.body.removeChild(notifEl), time)\n\t}\n}\n","import { MidiLoader } from \"../MidiLoader.js\"\nimport { Song } from \"../Song.js\"\nimport { AudioPlayer } from \"../audio/AudioPlayer.js\"\nimport { getLoader } from \"../ui/Loader.js\"\nimport { getSetting } from \"../settings/Settings.js\"\nimport { getMidiHandler } from \"../MidiInputHandler.js\"\nimport { getCurrentMicNote } from \"../MicInputHandler.js\"\nimport {\n\tgetTrackVolume,\n\tisAnyTrackPlayalong,\n\tisTrackRequiredToPlay,\n\tsetupTracks\n} from \"./Tracks.js\"\nimport { Notification } from \"../ui/Notification.js\"\n\nconst LOOK_AHEAD_TIME = 0.2\nconst LOOK_AHEAD_TIME_WHEN_PLAYALONG = 0.02\n\nclass Player {\n\tconstructor() {\n\t\tthis.audioPlayer = new AudioPlayer()\n\n\t\tgetMidiHandler().setNoteOnCallback(this.addInputNoteOn.bind(this))\n\t\tgetMidiHandler().setNoteOffCallback(this.addInputNoteOff.bind(this))\n\n\t\tthis.startDelay = -2.5\n\t\tthis.lastTime = this.audioPlayer.getContextTime()\n\t\tthis.progress = 0\n\t\tthis.paused = true\n\t\tthis.playing = false\n\t\tthis.scrolling = 0\n\t\tthis.loadedSongs = new Set()\n\t\tthis.muted = false\n\t\tthis.volume = 100\n\t\tthis.mutedAtVolume = 100\n\t\tthis.soundfontName = getSetting(\"soundfontName\")\n\t\tthis.inputInstrument = \"acoustic_grand_piano\"\n\t\tthis.lastMicNote = -1\n\n\t\tthis.newSongCallbacks = []\n\t\tthis.inputActiveNotes = {}\n\t\tthis.inputPlayedNotes = []\n\n\t\tthis.playbackSpeed = 1\n\n\t\tconsole.log(\"Player created.\")\n\t\tthis.playTick()\n\t}\n\tgetState() {\n\t\tlet time = this.getTime()\n\t\treturn {\n\t\t\ttime: time,\n\t\t\tctxTime: this.audioPlayer.getContextTime(),\n\t\t\tend: this.song ? this.song.getEnd() : 0,\n\t\t\tloading: this.audioPlayer.loading,\n\t\t\tsong: this.song,\n\t\t\tinputActiveNotes: this.inputActiveNotes,\n\t\t\tinputPlayedNotes: this.inputPlayedNotes,\n\t\t\tbpm: this.getBPM(time)\n\t\t}\n\t}\n\taddNewSongCallback(callback) {\n\t\tthis.newSongCallbacks.push(callback)\n\t}\n\tswitchSoundfont(soundfontName) {\n\t\tthis.wasPaused = this.paused\n\t\tthis.pause()\n\t\tgetLoader().startLoad()\n\t\tlet nowTime = window.performance.now()\n\t\tthis.soundfontName = soundfontName\n\t\tthis.audioPlayer.switchSoundfont(soundfontName, this.song).then(resolve => {\n\t\t\twindow.setTimeout(() => {\n\t\t\t\tif (!this.wasPaused) {\n\t\t\t\t\tthis.resume()\n\t\t\t\t}\n\t\t\t\tgetLoader().stopLoad()\n\t\t\t}, Math.max(0, 500 - (window.performance.now() - nowTime)))\n\t\t})\n\t}\n\n\tgetTimeWithScrollOffset(scrollOffset) {\n\t\treturn this.progress + this.startDelay - scrollOffset\n\t}\n\tgetTime() {\n\t\treturn this.progress + this.startDelay - this.scrollOffset\n\t}\n\tgetTimeWithoutScrollOffset() {\n\t\treturn this.progress + this.startDelay\n\t}\n\tsetTime(seconds) {\n\t\tthis.audioPlayer.stopAllSources()\n\t\tthis.progress += seconds - this.getTime()\n\t\tthis.resetNoteSequence()\n\t}\n\tincreaseSpeed(val) {\n\t\tthis.playbackSpeed = Math.max(\n\t\t\t0,\n\t\t\tMath.round((this.playbackSpeed + val) * 100) / 100\n\t\t)\n\t}\n\tgetChannel(track) {\n\t\tif (this.song.activeTracks[track].notes.length) {\n\t\t\treturn this.channels[this.song.activeTracks[track].notes[0].channel]\n\t\t}\n\t}\n\tgetCurrentTrackInstrument(trackIndex) {\n\t\tlet i = 0\n\t\tlet noteSeq = this.song.getNoteSequence()\n\t\tlet nextNote = noteSeq[i]\n\t\twhile (nextNote.track != trackIndex && i < noteSeq.length - 1) {\n\t\t\ti++\n\t\t\tnextNote = noteSeq[i]\n\t\t}\n\t\tif (nextNote.track == trackIndex) {\n\t\t\treturn nextNote.instrument\n\t\t}\n\t}\n\n\tasync loadSong(theSong, fileName, name) {\n\t\tthis.audioPlayer.stopAllSources()\n\t\tgetLoader().startLoad()\n\t\tgetLoader().setLoadMessage(\"Loading \" + fileName + \".\")\n\t\tif (this.audioPlayer.isRunning()) {\n\t\t\tthis.audioPlayer.suspend()\n\t\t}\n\n\t\tthis.loading = true\n\n\t\tgetLoader().setLoadMessage(\"Parsing Midi File.\")\n\t\ttry {\n\t\t\tlet midiFile = await MidiLoader.loadFile(theSong)\n\t\t\tthis.setSong(new Song(midiFile, fileName, name))\n\t\t\tgetLoader().setLoadMessage(\"Loading Instruments\")\n\n\t\t\tawait this.audioPlayer.loadInstrumentsForSong(this.song)\n\n\t\t\tgetLoader().setLoadMessage(\"Creating Buffers\")\n\t\t\treturn this.audioPlayer.loadBuffers().then(v => getLoader().stopLoad())\n\t\t} catch (error) {\n\t\t\tconsole.log(error)\n\t\t\tNotification.create(\"Couldn't read Midi-File - \" + error, 2000)\n\t\t\tgetLoader().stopLoad()\n\t\t}\n\t}\n\n\tsetSong(song) {\n\t\tthis.pause()\n\t\tthis.playing = false\n\t\tthis.paused = true\n\t\tthis.wasPaused = true\n\t\tthis.progress = 0\n\t\tthis.scrollOffset = 0\n\t\tthis.song = song\n\t\tif (this.loadedSongs.has(song)) {\n\t\t\tthis.loadedSongs.add(song)\n\t\t}\n\t\tsetupTracks(song.activeTracks)\n\t\tthis.newSongCallbacks.forEach(callback => callback())\n\t}\n\tstartPlay() {\n\t\tconsole.log(\"Starting Song\")\n\t\tthis.wasPaused = false\n\n\t\tthis.resetNoteSequence()\n\t\tthis.lastTime = this.audioPlayer.getContextTime()\n\t\tthis.resume()\n\t}\n\thandleScroll(stacksize) {\n\t\tif (this.scrolling != 0) {\n\t\t\tif (!this.song) {\n\t\t\t\tthis.scrolling = 0\n\t\t\t\treturn\n\t\t\t}\n\t\t\tthis.lastTime = this.audioPlayer.getContextTime()\n\t\t\tlet newScrollOffset = this.scrollOffset + 0.01 * this.scrolling\n\t\t\t//get hypothetical time with new scrollOffset.\n\t\t\tlet oldTime = this.getTimeWithScrollOffset(this.scrollOffset)\n\t\t\tlet newTime = this.getTimeWithScrollOffset(newScrollOffset)\n\n\t\t\t//limit scroll past end\n\t\t\tif (this.song && newTime > 1 + this.song.getEnd() / 1000) {\n\t\t\t\tthis.scrolling = 0\n\t\t\t\tnewScrollOffset =\n\t\t\t\t\tthis.getTimeWithoutScrollOffset() - (1 + this.song.getEnd() / 1000)\n\t\t\t\tthis.scrollOffset + (1 + this.song.getEnd() / 1000 - this.getTime()) ||\n\t\t\t\t\tthis.scrollOffset\n\t\t\t}\n\n\t\t\t//limit scroll past beginning\n\t\t\tif (newTime < oldTime && newTime < this.startDelay) {\n\t\t\t\tthis.scrolling = 0\n\t\t\t\tnewScrollOffset = this.getTimeWithoutScrollOffset() - this.startDelay\n\t\t\t}\n\n\t\t\tthis.scrollOffset = newScrollOffset\n\n\t\t\t//dampen scroll amount somehow...\n\t\t\tthis.scrolling =\n\t\t\t\t(Math.abs(this.scrolling) -\n\t\t\t\t\tMath.max(\n\t\t\t\t\t\tMath.abs(this.scrolling * 0.003),\n\t\t\t\t\t\tthis.playbackSpeed * 0.001\n\t\t\t\t\t)) *\n\t\t\t\t\t(Math.abs(this.scrolling) / this.scrolling) || 0\n\n\t\t\t//set to zero if only minimal scrollingspeed left\n\t\t\tif (Math.abs(this.scrolling) <= this.playbackSpeed * 0.005) {\n\t\t\t\tthis.scrolling = 0\n\t\t\t\tthis.resetNoteSequence()\n\t\t\t}\n\t\t\t//limit recursion\n\t\t\tif (!stacksize) stacksize = 0\n\t\t\tif (stacksize > 50) {\n\t\t\t\twindow.setTimeout(() => {\n\t\t\t\t\tthis.handleScroll()\n\t\t\t\t}, 25)\n\t\t\t\treturn\n\t\t\t}\n\t\t\tthis.handleScroll(++stacksize)\n\t\t\treturn\n\t\t}\n\t}\n\tgetBPM(time) {\n\t\tlet val = 0\n\t\tif (this.song) {\n\t\t\tfor (let i = this.song.temporalData.bpms.length - 1; i >= 0; i--) {\n\t\t\t\tif (time * 1000 > this.song.temporalData.bpms[i].timestamp) {\n\t\t\t\t\tval = this.song.temporalData.bpms[i].bpm\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn val\n\t}\n\tplayTick() {\n\t\tlet currentContextTime = this.audioPlayer.getContextTime()\n\n\t\tlet delta = (currentContextTime - this.lastTime) * this.playbackSpeed\n\n\t\t//Setting doesnt exist yet. Pitch detection is too bad for a whole piano.\n\t\tthis.addMicInputNotes()\n\n\t\tthis.clearOldPlayedInputNotes()\n\n\t\t//cap max updaterate.\n\t\tif (delta < 0.0069) {\n\t\t\tthis.requestNextTick()\n\t\t\treturn\n\t\t}\n\n\t\tlet oldProgress = this.progress\n\t\tthis.lastTime = currentContextTime\n\t\tif (!this.paused && this.scrolling == 0) {\n\t\t\tthis.progress += Math.min(0.1, delta)\n\t\t} else {\n\t\t\tthis.requestNextTick()\n\t\t\treturn\n\t\t}\n\n\t\tlet soundfontName = getSetting(\"soundfontName\")\n\t\tif (soundfontName != this.soundfontName) {\n\t\t\tthis.switchSoundfont(soundfontName)\n\t\t\tthis.requestNextTick()\n\t\t\treturn\n\t\t}\n\n\t\tlet currentTime = this.getTime()\n\n\t\tif (this.isSongEnded(currentTime - 5)) {\n\t\t\tthis.pause()\n\t\t\tthis.requestNextTick()\n\t\t\treturn\n\t\t}\n\t\tif (getSetting(\"enableMetronome\")) {\n\t\t\tthis.playMetronomeBeats(currentTime)\n\t\t}\n\t\twhile (this.isNextNoteReached(currentTime)) {\n\t\t\tlet toRemove = 0\n\t\t\tforLoop: for (let i = 0; i < this.noteSequence.length; i++) {\n\t\t\t\tif (currentTime > 0.05 + this.noteSequence[i].timestamp / 1000) {\n\t\t\t\t\ttoRemove++\n\t\t\t\t} else {\n\t\t\t\t\tbreak forLoop\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (toRemove > 0) {\n\t\t\t\tthis.noteSequence.splice(0, toRemove)\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tthis.noteSequence[0] &&\n\t\t\t\t(!isTrackRequiredToPlay(this.noteSequence[0].track) ||\n\t\t\t\t\tthis.isInputKeyPressed(this.noteSequence[0].noteNumber))\n\t\t\t) {\n\t\t\t\tthis.playNote(this.noteSequence.shift())\n\t\t\t} else {\n\t\t\t\tthis.progress = oldProgress\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\n\t\tthis.requestNextTick()\n\t}\n\n\tplayMetronomeBeats(currentTime) {\n\t\tthis.playedBeats = this.playedBeats || {}\n\t\tlet beatsBySecond = getCurrentSong().temporalData.beatsBySecond\n\t\tlet secondsToCheck = [Math.floor(currentTime), Math.floor(currentTime) + 1]\n\t\tsecondsToCheck.forEach(second => {\n\t\t\tif (beatsBySecond[second]) {\n\t\t\t\tbeatsBySecond[second].forEach(beatTimestamp => {\n\t\t\t\t\tif (\n\t\t\t\t\t\t!this.playedBeats.hasOwnProperty(beatTimestamp) &&\n\t\t\t\t\t\tbeatTimestamp / 1000 < currentTime + 0.5\n\t\t\t\t\t) {\n\t\t\t\t\t\tlet newMeasure =\n\t\t\t\t\t\t\tgetCurrentSong().measureLines[Math.floor(beatTimestamp / 1000)] &&\n\t\t\t\t\t\t\tgetCurrentSong().measureLines[\n\t\t\t\t\t\t\t\tMath.floor(beatTimestamp / 1000)\n\t\t\t\t\t\t\t].includes(beatTimestamp)\n\t\t\t\t\t\t// Safety check for metronome sound existence (assuming audioPlayer handles it internally or returns null/undefined if not ready)\n\t\t\t\t\t\tconst metronomeSound = this.audioPlayer.playBeat(\n\t\t\t\t\t\t\tbeatTimestamp / 1000 - currentTime,\n\t\t\t\t\t\t\tnewMeasure\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (!metronomeSound) { \n\t\t\t\t\t\t\t// Optionally log a warning if needed\n\t\t\t\t\t\t\t// console.warn(\"Metronome sound not ready for beat:\", beatTimestamp);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.playedBeats[beatTimestamp] = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t}\n\n\tclearOldPlayedInputNotes() {\n\t\t//TODO - Clear those that arent displayed anymore.. And/Or save them somewhere for playback.\n\t}\n\n\taddMicInputNotes() {\n\t\tif (getSetting(\"micInputEnabled\")) {\n\t\t\tlet currentMicNote = getCurrentMicNote()\n\n\t\t\t// console.log(currentMicFrequency)\n\t\t\tif (this.lastMicNote != currentMicNote) {\n\t\t\t\tif (this.lastMicNote > -1) {\n\t\t\t\t\tthis.addInputNoteOff(this.lastMicNote)\n\t\t\t\t}\n\t\t\t\tif (currentMicNote > -1) {\n\t\t\t\t\tthis.addInputNoteOn(currentMicNote)\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.lastMicNote = currentMicNote\n\t\t}\n\t}\n\n\trequestNextTick() {\n\t\twindow.requestAnimationFrame(this.playTick.bind(this))\n\t}\n\n\tisInputKeyPressed(noteNumber) {\n\t\tif (\n\t\t\tthis.inputActiveNotes.hasOwnProperty(noteNumber) &&\n\t\t\t!this.inputActiveNotes[noteNumber].wasUsed\n\t\t) {\n\t\t\tthis.inputActiveNotes[noteNumber].wasUsed = true\n\t\t\treturn true\n\t\t}\n\t\treturn false\n\t}\n\tisSongEnded(currentTime) {\n\t\treturn currentTime >= this.song.getEnd() / 1000\n\t}\n\n\tisNextNoteReached(currentTime) {\n\t\tlet lookahead = isAnyTrackPlayalong()\n\t\t\t? LOOK_AHEAD_TIME_WHEN_PLAYALONG\n\t\t\t: LOOK_AHEAD_TIME\n\t\treturn (\n\t\t\tthis.noteSequence.length &&\n\t\t\tthis.noteSequence[0].timestamp / 1000 <\n\t\t\t\tcurrentTime + lookahead * this.playbackSpeed\n\t\t)\n\t}\n\n\tstop() {\n\t\tthis.progress = 0\n\t\tthis.scrollOffset = 0\n\t\tthis.playing = false\n\t\tthis.pause()\n\t}\n\tresume() {\n\t\tif (!this.song || !this.paused) return\n\t\tconsole.log(\"Resuming Song\")\n\t\tthis.paused = false\n\t\tthis.resetNoteSequence()\n\t\tthis.audioPlayer.resume()\n\t}\n\tresetNoteSequence() {\n\t\tthis.noteSequence = this.song.getNoteSequence()\n\t\tthis.noteSequence = this.noteSequence.filter(\n\t\t\tnote => note.timestamp > this.getTime()\n\t\t)\n\t\tthis.inputActiveNotes = {}\n\t\tthis.playedBeats = {}\n\t}\n\n\tpause() {\n\t\tconsole.log(\"Pausing Song\")\n\t\tthis.pauseTime = this.getTime()\n\t\tthis.paused = true\n\t}\n\n\tplayNote(note) {\n\t\tif (!note.hasOwnProperty(\"channel\") || !note.hasOwnProperty(\"noteNumber\")) {\n\t\t\treturn\n\t\t}\n\t\tlet currentTime = this.getTime()\n\n\t\tif (getMidiHandler().isOutputActive()) {\n\t\t\tgetMidiHandler().playNote(\n\t\t\t\tnote.noteNumber + 21,\n\t\t\t\tnote.velocity,\n\t\t\t\tnote.noteOffVelocity,\n\t\t\t\t(note.timestamp - currentTime * 1000) / this.playbackSpeed,\n\t\t\t\t(note.offTime - currentTime * 1000) / this.playbackSpeed\n\t\t\t)\n\t\t} else {\n\t\t\tthis.audioPlayer.playCompleteNote(\n\t\t\t\tcurrentTime,\n\t\t\t\tnote,\n\t\t\t\tthis.playbackSpeed,\n\t\t\t\tthis.getNoteVolume(note),\n\t\t\t\tisAnyTrackPlayalong()\n\t\t\t)\n\t\t}\n\t}\n\tgetNoteVolume(note) {\n\t\treturn (\n\t\t\t(this.volume / 100) *\n\t\t\t(getTrackVolume(note.track) / 100) *\n\t\t\t(note.channelVolume / 127)\n\t\t)\n\t}\n\n\taddInputNoteOn(noteNumber) {\n\t\tif (this.inputActiveNotes.hasOwnProperty(noteNumber)) {\n\t\t\tconsole.log(\"NOTE ALREADY PLAING\")\n\t\t\tthis.audioPlayer.noteOffContinuous(\n\t\t\t\tthis.inputActiveNotes[noteNumber].audioNote\n\t\t\t)\n\t\t\tdelete this.inputActiveNotes[noteNumber]\n\t\t}\n\t\tlet audioNote = this.audioPlayer.createContinuousNote(\n\t\t\tnoteNumber,\n\t\t\tthis.volume,\n\t\t\tthis.inputInstrument\n\t\t)\n\t\tlet activeNoteObj = {\n\t\t\taudioNote: audioNote,\n\t\t\twasUsed: false,\n\t\t\tnoteNumber: noteNumber,\n\t\t\ttimestamp: this.audioPlayer.getContextTime() * 1000\n\t\t}\n\n\t\tthis.inputActiveNotes[noteNumber] = activeNoteObj\n\t}\n\taddInputNoteOff(noteNumber) {\n\t\tif (!this.inputActiveNotes.hasOwnProperty(noteNumber)) {\n\t\t\tconsole.log(\"NOTE NOT PLAYING\")\n\t\t\treturn\n\t\t}\n\t\tthis.audioPlayer.noteOffContinuous(\n\t\t\tthis.inputActiveNotes[noteNumber].audioNote\n\t\t)\n\t\tthis.inputActiveNotes[noteNumber].offTime =\n\t\t\tthis.audioPlayer.getContextTime() * 1000\n\t\tthis.inputPlayedNotes.push(this.inputActiveNotes[noteNumber])\n\n\t\tdelete this.inputActiveNotes[noteNumber]\n\t}\n}\nconst thePlayer = new Player()\nexport const getPlayer = () => {\n\treturn thePlayer\n}\n\nexport const getCurrentSong = () => {\n\treturn thePlayer.song\n}\n\nexport const getPlayerState = () => {\n\treturn thePlayer.getState()\n}\n","class MicInputHandler {\n\tconstructor() {\n\t\tif (navigator.mediaDevices === undefined) {\n\t\t\tnavigator.mediaDevices = {}\n\t\t}\n\n\t\tif (navigator.mediaDevices.getUserMedia === undefined) {\n\t\t\tnavigator.mediaDevices.getUserMedia = function (constraints) {\n\t\t\t\t// First get ahold of the legacy getUserMedia, if present\n\t\t\t\tvar getUserMedia =\n\t\t\t\t\tnavigator.webkitGetUserMedia ||\n\t\t\t\t\tnavigator.mozGetUserMedia ||\n\t\t\t\t\tnavigator.msGetUserMedia\n\n\t\t\t\t// Some browsers just don't implement it - return a rejected promise with an error\n\t\t\t\t// to keep a consistent interface\n\t\t\t\tif (!getUserMedia) {\n\t\t\t\t\treturn Promise.reject(\n\t\t\t\t\t\tnew Error(\"getUserMedia is not implemented in this browser\")\n\t\t\t\t\t)\n\t\t\t\t}\n\n\t\t\t\t// Otherwise, wrap the call to the old navigator.getUserMedia with a Promise\n\t\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t\tgetUserMedia.call(navigator, constraints, resolve, reject)\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tthis.frequencies = {}\n\t\tthis.lastStrongestFrequency = 0\n\t\tlet audioContext = new (window.AudioContext || window.webkitAudioContext)({\n\t\t\tsampleRate: 8000\n\t\t})\n\t\tvar source\n\t\tvar analyser = audioContext.createAnalyser()\n\t\tanalyser.minDecibels = -90\n\t\tanalyser.maxDecibels = -10\n\t\tanalyser.smoothingTimeConstant = 0.5\n\t\tthis.audioContext = audioContext\n\t\tthis.analyser = analyser\n\n\t\tif (navigator.mediaDevices.getUserMedia) {\n\t\t\tconsole.log(\"getUserMedia supported.\")\n\t\t\tvar constraints = { audio: true }\n\t\t\tnavigator.mediaDevices\n\t\t\t\t.getUserMedia(constraints)\n\t\t\t\t.then(\n\t\t\t\t\tfunction (stream) {\n\t\t\t\t\t\tsource = audioContext.createMediaStreamSource(stream)\n\t\t\t\t\t\t// source.connect(audioContext.destination)\n\t\t\t\t\t\tsource.connect(analyser)\n\n\t\t\t\t\t\t// this.getCurrentFrequency()\n\t\t\t\t\t}.bind(this)\n\t\t\t\t)\n\t\t\t\t.catch(function (err) {\n\t\t\t\t\tconsole.log(\"The following gUM error occured: \" + err)\n\t\t\t\t})\n\t\t}\n\t}\n\tgetCurrentFrequency() {\n\t\tthis.analyser.fftSize = 2048\n\t\tvar bufferLength = this.analyser.fftSize\n\t\tvar dataArray = new Float32Array(bufferLength)\n\t\tthis.analyser.getFloatTimeDomainData(dataArray)\n\t\treturn this.autoCorrelate(dataArray, this.audioContext.sampleRate)\n\n\t\t// var dataArray = new Uint8Array(bufferLength)\n\t\t// this.analyser.getByteFrequencyData(dataArray)\n\t\t// let maxIndex = 0\n\t\t// let max = -Infinity\n\t\t// let tot = dataArray.reduce((a, b) => a + b, 0)\n\t\t// let weightedFrequency = 0\n\t\t// let strongestFrequency = 0\n\t\t// let sampleRate = this.audioContext.sampleRate\n\t\t// dataArray.forEach((value, index) => {\n\t\t// \tif (value > max && value > 50) {\n\t\t// \t\tmax = value\n\t\t// \t\tmaxIndex = index\n\n\t\t// \t\tstrongestFrequency = (sampleRate / 2) * (index / bufferLength)\n\n\t\t// \t\tif (index > 0 && index < bufferLength) {\n\t\t// \t\t\tlet nextFreq = (sampleRate / 2) * ((index + 1) / bufferLength)\n\t\t// \t\t\tlet nextVal = dataArray[index + 1]\n\t\t// \t\t\tlet nextDiff = Math.abs(nextVal - value)\n\n\t\t// \t\t\tlet prevFreq = (sampleRate / 2) * ((index - 1) / bufferLength)\n\t\t// \t\t\tlet prevVal = dataArray[index - 1]\n\t\t// \t\t\tlet prevDiff = Math.abs(prevVal - value)\n\n\t\t// \t\t\tlet totVals = value + prevVal + nextVal\n\t\t// \t\t\tlet totDiff = nextDiff + prevDiff\n\n\t\t// \t\t\tstrongestFrequency =\n\t\t// \t\t\t\t(strongestFrequency * value) / totVals +\n\t\t// \t\t\t\t(nextVal / totVals) * nextFreq +\n\t\t// \t\t\t\t(prevVal / totVals) * prevFreq\n\t\t// \t\t}\n\t\t// \t}\n\t\t// \tweightedFrequency +=\n\t\t// \t\t(value / tot) * (sampleRate / 2) * (index / bufferLength)\n\t\t// })\n\t\t// if (max > 0) {\n\t\t// \tconsole.log(strongestFrequency)\n\t\t// }\n\t\t// return strongestFrequency\n\t}\n\tautoCorrelate(buf, sampleRate) {\n\t\t// Implements the ACF2+ algorithm\n\t\tvar SIZE = buf.length\n\t\tvar rms = 0\n\n\t\tfor (var i = 0; i < SIZE; i++) {\n\t\t\tvar val = buf[i]\n\t\t\trms += val * val\n\t\t}\n\t\trms = Math.sqrt(rms / SIZE)\n\t\tif (rms < 0.01)\n\t\t\t// not enough signal\n\t\t\treturn -1\n\n\t\tvar r1 = 0,\n\t\t\tr2 = SIZE - 1,\n\t\t\tthres = 0.2\n\t\tfor (var i = 0; i < SIZE / 2; i++)\n\t\t\tif (Math.abs(buf[i]) < thres) {\n\t\t\t\tr1 = i\n\t\t\t\tbreak\n\t\t\t}\n\t\tfor (var i = 1; i < SIZE / 2; i++)\n\t\t\tif (Math.abs(buf[SIZE - i]) < thres) {\n\t\t\t\tr2 = SIZE - i\n\t\t\t\tbreak\n\t\t\t}\n\n\t\tbuf = buf.slice(r1, r2)\n\t\tSIZE = buf.length\n\n\t\tvar c = new Array(SIZE).fill(0)\n\t\tfor (var i = 0; i < SIZE; i++)\n\t\t\tfor (var j = 0; j < SIZE - i; j++) c[i] = c[i] + buf[j] * buf[j + i]\n\n\t\tvar d = 0\n\t\twhile (c[d] > c[d + 1]) d++\n\t\tvar maxval = -1,\n\t\t\tmaxpos = -1\n\t\tfor (var i = d; i < SIZE; i++) {\n\t\t\tif (c[i] > maxval) {\n\t\t\t\tmaxval = c[i]\n\t\t\t\tmaxpos = i\n\t\t\t}\n\t\t}\n\t\tvar T0 = maxpos\n\n\t\tvar x1 = c[T0 - 1],\n\t\t\tx2 = c[T0],\n\t\t\tx3 = c[T0 + 1]\n\t\tlet a = (x1 + x3 - 2 * x2) / 2\n\t\tlet b = (x3 - x1) / 2\n\t\tif (a) T0 = T0 - b / (2 * a)\n\n\t\treturn sampleRate / T0\n\t}\n\tfrequencyToNote(frequency) {\n\t\tlet note = 12 * (Math.log(frequency / 440) / Math.log(2))\n\t\treturn Math.round(note) + 48\n\t}\n\n\tsetupUserMedia() {\n\t\tif (navigator.mediaDevices === undefined) {\n\t\t\tnavigator.mediaDevices = {}\n\t\t}\n\n\t\tif (navigator.mediaDevices.getUserMedia === undefined) {\n\t\t\tnavigator.mediaDevices.getUserMedia = function (constraints) {\n\t\t\t\t// First get ahold of the legacy getUserMedia, if present\n\t\t\t\tvar getUserMedia =\n\t\t\t\t\tnavigator.webkitGetUserMedia ||\n\t\t\t\t\tnavigator.mozGetUserMedia ||\n\t\t\t\t\tnavigator.msGetUserMedia\n\n\t\t\t\t// Some browsers just don't implement it - return a rejected promise with an error\n\t\t\t\t// to keep a consistent interface\n\t\t\t\tif (!getUserMedia) {\n\t\t\t\t\treturn Promise.reject(\n\t\t\t\t\t\tnew Error(\"getUserMedia is not implemented in this browser\")\n\t\t\t\t\t)\n\t\t\t\t}\n\n\t\t\t\t// Otherwise, wrap the call to the old navigator.getUserMedia with a Promise\n\t\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t\tgetUserMedia.call(navigator, constraints, resolve, reject)\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n}\n\nvar theMicInputHandler = null // new MicInputHandler()\n\nexport const getMicInputHandler = () => {\n\treturn theMicInputHandler\n}\nexport const getCurrentMicFrequency = () => {\n\tif (!theMicInputHandler) return -1\n\treturn theMicInputHandler.getCurrentFrequency()\n}\n\nexport const getCurrentMicNote = () => {\n\tif (!theMicInputHandler) return -1\n\treturn theMidInputHandler.frequencyToNote(\n\t\ttheMicInputHandler.getCurrentFrequency()\n\t)\n}\n","import { getCurrentSong } from \"../player/Player.js\"\nimport { getSetting } from \"../settings/Settings.js\"\n\n/**\n * Class to render the markers in the midi-song\n */\nexport class InSongTextRenderer {\n\tconstructor(ctx, renderDimensions) {\n\t\tthis.ctx = ctx\n\t\tthis.renderDimensions = renderDimensions\n\t}\n\trender(time) {\n\t\tif (time > -0.7) return\n\n\t\tlet c = this.ctx\n\t\tc.fillStyle = \"rgba(255,255,255,0.8)\"\n\t\tc.strokeStyle = \"rgba(255,255,255,0.8)\"\n\t\tc.font = \"40px Arial black\"\n\t\tc.textBaseline = \"top\"\n\t\tc.lineWidth = 1.5\n\t\tlet text = getCurrentSong().name\n\t\tlet y = this.renderDimensions.getYForTime(-700 - time * 1000)\n\t\tlet txtWd = c.measureText(text).width\n\t\tc.fillText(text, this.renderDimensions.windowWidth / 2 - txtWd / 2, y + 3)\n\t}\n}\n","export class RuntimeError extends Error {\n    constructor(code, message = '') {\n        super('[RuntimeError] ' + code + ': ' + message);\n        this.code = code;\n    }\n}\nexport function globalObject() {\n    if (typeof globalThis !== 'undefined') {\n        return globalThis;\n    }\n    if (typeof self !== 'undefined') {\n        return self;\n    }\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    return Function('return this')();\n}\nexport function defined(x, code = 'undefined', message = '') {\n    if (x === undefined) {\n        throw new RuntimeError(code, message);\n    }\n    return x;\n}\nexport function log(block, ...args) {\n    if (!args)\n        return;\n    const line = Array.prototype.slice.call(args).join(' ');\n    globalObject().console.log(block + ': ' + line);\n}\nexport function warn(...args) {\n    const line = args.join(' ');\n    const err = new Error();\n    globalObject().console.log('Warning: ', line, err.stack);\n}\nfunction roundN(x, n) {\n    return x % n >= n / 2 ? parseInt(`${x / n}`, 10) * n + n : parseInt(`${x / n}`, 10) * n;\n}\nexport function midLine(a, b) {\n    let midLine = b + (a - b) / 2;\n    if (midLine % 2 > 0) {\n        midLine = roundN(midLine * 10, 5) / 10;\n    }\n    return midLine;\n}\nexport function prefix(text) {\n    return `vf-${text}`;\n}\nexport function upperFirst(s = '') {\n    return s.charAt(0).toUpperCase() + s.slice(1);\n}\nexport function normalizeAngle(a) {\n    a = a % (2 * Math.PI);\n    if (a < 0) {\n        a += 2 * Math.PI;\n    }\n    return a;\n}\nexport function sumArray(arr) {\n    return arr.reduce((a, b) => a + b, 0);\n}\n","import { RuntimeError } from './util.js';\nexport class Fraction {\n    static get CATEGORY() {\n        return \"Fraction\";\n    }\n    static GCD(a, b) {\n        if (typeof a !== 'number' || Number.isNaN(a) || typeof b !== 'number' || Number.isNaN(b)) {\n            throw new RuntimeError('BadArgument', `Invalid numbers: ${a}, ${b}`);\n        }\n        let t;\n        while (b !== 0) {\n            t = b;\n            b = a % b;\n            a = t;\n        }\n        return a;\n    }\n    static LCM(a, b) {\n        return (a * b) / Fraction.GCD(a, b);\n    }\n    static LCMM(args) {\n        if (args.length === 0) {\n            return 0;\n        }\n        else if (args.length === 1) {\n            return args[0];\n        }\n        else if (args.length === 2) {\n            return Fraction.LCM(args[0], args[1]);\n        }\n        else {\n            return Fraction.LCM(args.shift(), Fraction.LCMM(args));\n        }\n    }\n    constructor(numerator, denominator) {\n        this.numerator = 1;\n        this.denominator = 1;\n        this.set(numerator, denominator);\n    }\n    set(numerator = 1, denominator = 1) {\n        this.numerator = numerator;\n        this.denominator = denominator;\n        return this;\n    }\n    value() {\n        return this.numerator / this.denominator;\n    }\n    simplify() {\n        let u = this.numerator;\n        let d = this.denominator;\n        const gcd = Fraction.GCD(u, d);\n        u /= gcd;\n        d /= gcd;\n        if (d < 0) {\n            d = -d;\n            u = -u;\n        }\n        return this.set(u, d);\n    }\n    add(param1 = 0, param2 = 1) {\n        const [otherNumerator, otherDenominator] = getNumeratorAndDenominator(param1, param2);\n        const lcm = Fraction.LCM(this.denominator, otherDenominator);\n        const a = lcm / this.denominator;\n        const b = lcm / otherDenominator;\n        const u = this.numerator * a + otherNumerator * b;\n        return this.set(u, lcm);\n    }\n    subtract(param1 = 0, param2 = 1) {\n        const [otherNumerator, otherDenominator] = getNumeratorAndDenominator(param1, param2);\n        const lcm = Fraction.LCM(this.denominator, otherDenominator);\n        const a = lcm / this.denominator;\n        const b = lcm / otherDenominator;\n        const u = this.numerator * a - otherNumerator * b;\n        return this.set(u, lcm);\n    }\n    multiply(param1 = 1, param2 = 1) {\n        const [otherNumerator, otherDenominator] = getNumeratorAndDenominator(param1, param2);\n        return this.set(this.numerator * otherNumerator, this.denominator * otherDenominator);\n    }\n    divide(param1 = 1, param2 = 1) {\n        const [otherNumerator, otherDenominator] = getNumeratorAndDenominator(param1, param2);\n        return this.set(this.numerator * otherDenominator, this.denominator * otherNumerator);\n    }\n    equals(compare) {\n        const a = Fraction.fractionA.copy(compare).simplify();\n        const b = Fraction.fractionB.copy(this).simplify();\n        return a.numerator === b.numerator && a.denominator === b.denominator;\n    }\n    greaterThan(compare) {\n        const a = Fraction.fractionA.copy(this);\n        a.subtract(compare);\n        return a.numerator > 0;\n    }\n    greaterThanEquals(compare) {\n        const a = Fraction.fractionA.copy(this);\n        a.subtract(compare);\n        return a.numerator >= 0;\n    }\n    lessThan(compare) {\n        return !this.greaterThanEquals(compare);\n    }\n    lessThanEquals(compare) {\n        return !this.greaterThan(compare);\n    }\n    clone() {\n        return new Fraction(this.numerator, this.denominator);\n    }\n    copy(other) {\n        if (typeof other === 'number') {\n            return this.set(other);\n        }\n        else {\n            return this.set(other.numerator, other.denominator);\n        }\n    }\n    quotient() {\n        return Math.floor(this.numerator / this.denominator);\n    }\n    remainder() {\n        return this.numerator % this.denominator;\n    }\n    makeAbs() {\n        this.denominator = Math.abs(this.denominator);\n        this.numerator = Math.abs(this.numerator);\n        return this;\n    }\n    toString() {\n        return `${this.numerator}/${this.denominator}`;\n    }\n    toSimplifiedString() {\n        return Fraction.fractionA.copy(this).simplify().toString();\n    }\n    toMixedString() {\n        let s = '';\n        const q = this.quotient();\n        const f = Fraction.fractionA.copy(this);\n        if (q < 0) {\n            f.makeAbs();\n        }\n        if (q !== 0) {\n            s += q;\n            if (f.numerator !== 0) {\n                s += ` ${f.toSimplifiedString()}`;\n            }\n        }\n        else if (f.numerator === 0) {\n            s = '0';\n        }\n        else {\n            s = f.toSimplifiedString();\n        }\n        return s;\n    }\n    parse(str) {\n        const i = str.split('/');\n        const n = parseInt(i[0], 10);\n        const d = i[1] ? parseInt(i[1], 10) : 1;\n        return this.set(n, d);\n    }\n}\nFraction.fractionA = new Fraction();\nFraction.fractionB = new Fraction();\nfunction getNumeratorAndDenominator(n, d = 1) {\n    if (typeof n === 'number') {\n        return [n, d];\n    }\n    else {\n        return [n.numerator, n.denominator];\n    }\n}\n","export class Metrics {\n    static clear(key) {\n        if (key) {\n            this.cacheFont.delete(key);\n            this.cacheStyle.delete(key);\n        }\n        else {\n            this.cacheFont.clear();\n            this.cacheStyle.clear();\n        }\n    }\n    static getFontInfo(key) {\n        let font = this.cacheFont.get(key);\n        if (!font) {\n            font = {\n                family: Metrics.get(`${key}.fontFamily`),\n                size: Metrics.get(`${key}.fontSize`) * Metrics.get(`${key}.fontScale`),\n                weight: Metrics.get(`${key}.fontWeight`),\n                style: Metrics.get(`${key}.fontStyle`),\n            };\n            this.cacheFont.set(key, font);\n        }\n        return structuredClone(font);\n    }\n    static getStyle(key) {\n        let style = this.cacheStyle.get(key);\n        if (!style) {\n            style = {\n                fillStyle: Metrics.get(`${key}.fillStyle`),\n                strokeStyle: Metrics.get(`${key}.strokeStyle`),\n                lineWidth: Metrics.get(`${key}.lineWidth`),\n                lineDash: Metrics.get(`${key}.lineDash`),\n                shadowBlur: Metrics.get(`${key}.shadowBlur`),\n                shadowColor: Metrics.get(`${key}.shadowColor`),\n            };\n            this.cacheStyle.set(key, style);\n        }\n        return structuredClone(style);\n    }\n    static get(key, defaultValue) {\n        var _a;\n        const keyParts = key.split('.');\n        const lastKeyPart = keyParts.pop();\n        let curr = MetricsDefaults;\n        let retVal = defaultValue;\n        while (curr) {\n            retVal = (_a = curr[lastKeyPart]) !== null && _a !== void 0 ? _a : retVal;\n            const keyPart = keyParts.shift();\n            if (keyPart) {\n                curr = curr[keyPart];\n            }\n            else {\n                break;\n            }\n        }\n        return retVal;\n    }\n}\nMetrics.cacheStyle = new Map();\nMetrics.cacheFont = new Map();\nexport const MetricsDefaults = {\n    fontFamily: 'Bravura,Academico',\n    fontSize: 30,\n    fontScale: 1.0,\n    fontWeight: 'normal',\n    fontStyle: 'normal',\n    Accidental: {\n        cautionary: {\n            fontSize: 20,\n        },\n        grace: {\n            fontSize: 20,\n        },\n        noteheadAccidentalPadding: 1,\n        leftPadding: 2,\n        accidentalSpacing: 3,\n    },\n    Annotation: {\n        fontSize: 10,\n    },\n    Bend: {\n        fontSize: 10,\n        line: {\n            strokeStyle: '#777777',\n            lineWidth: 1,\n        },\n    },\n    ChordSymbol: {\n        fontSize: 12,\n        spacing: 0.05,\n        subscriptOffset: 0.2,\n        superscriptOffset: -0.4,\n        superSubRatio: 0.6,\n    },\n    FretHandFinger: {\n        fontSize: 9,\n        fontWeight: 'bold',\n    },\n    GraceNote: {\n        fontScale: 2 / 3,\n    },\n    GraceTabNote: {\n        fontScale: 2 / 3,\n    },\n    NoteHead: {\n        minPadding: 2,\n    },\n    PedalMarking: {\n        text: {\n            fontSize: 12,\n            fontStyle: 'italic',\n        },\n    },\n    Repetition: {\n        text: {\n            fontSize: 12,\n            fontWeight: 'bold',\n            offsetX: 12,\n            offsetY: 25,\n            spacing: 5,\n        },\n        coda: {\n            offsetY: 25,\n        },\n        segno: {\n            offsetY: 10,\n        },\n    },\n    Stave: {\n        strokeStyle: '#999999',\n        fontSize: 8,\n        padding: 12,\n        endPaddingMax: 10,\n        endPaddingMin: 5,\n        unalignedNotePadding: 10,\n    },\n    StaveConnector: {\n        text: {\n            fontSize: 16,\n        },\n    },\n    StaveLine: {\n        fontSize: 10,\n    },\n    StaveSection: {\n        fontSize: 10,\n        fontWeight: 'bold',\n        lineWidth: 2,\n        padding: 2,\n        strokeStyle: 'black',\n    },\n    StaveTempo: {\n        fontSize: 14,\n        glyph: {\n            fontSize: 25,\n        },\n        name: {\n            fontWeight: 'bold',\n        },\n    },\n    StaveText: {\n        fontSize: 16,\n    },\n    StaveTie: {\n        fontSize: 10,\n    },\n    Stem: {\n        strokeStyle: 'black',\n    },\n    StringNumber: {\n        fontSize: 10,\n        fontWeight: 'bold',\n        verticalPadding: 8,\n        stemPadding: 2,\n        leftPadding: 5,\n        rightPadding: 6,\n    },\n    Stroke: {\n        text: {\n            fontSize: 10,\n            fontStyle: 'italic',\n            fontWeight: 'bold',\n        },\n    },\n    TabNote: {\n        text: {\n            fontSize: 9,\n        },\n    },\n    TabSlide: {\n        fontSize: 10,\n        fontStyle: 'italic',\n        fontWeight: 'bold',\n    },\n    TabStave: {\n        strokeStyle: '#999999',\n        fontSize: 8,\n    },\n    TabTie: {\n        fontSize: 10,\n    },\n    TextBracket: {\n        fontSize: 15,\n        fontStyle: 'italic',\n    },\n    TextNote: {\n        text: {\n            fontSize: 12,\n        },\n    },\n    Tremolo: {\n        spacing: 7,\n    },\n    Tuplet: {\n        yOffset: 0,\n        textYOffset: 2,\n    },\n    Volta: {\n        fontSize: 9,\n        fontWeight: 'bold',\n    },\n};\n","export class BoundingBox {\n    static copy(that) {\n        return new BoundingBox(that.x, that.y, that.w, that.h);\n    }\n    constructor(x, y, w, h) {\n        this.x = x;\n        this.y = y;\n        this.w = w;\n        this.h = h;\n    }\n    getX() {\n        return this.x;\n    }\n    getY() {\n        return this.y;\n    }\n    getW() {\n        return this.w;\n    }\n    getH() {\n        return this.h;\n    }\n    setX(x) {\n        this.x = x;\n        return this;\n    }\n    setY(y) {\n        this.y = y;\n        return this;\n    }\n    setW(w) {\n        this.w = w;\n        return this;\n    }\n    setH(h) {\n        this.h = h;\n        return this;\n    }\n    move(x, y) {\n        this.x += x;\n        this.y += y;\n        return this;\n    }\n    clone() {\n        return BoundingBox.copy(this);\n    }\n    mergeWith(boundingBox) {\n        const that = boundingBox;\n        const newX = this.x < that.x ? this.x : that.x;\n        const newY = this.y < that.y ? this.y : that.y;\n        const newW = Math.max(this.x + this.w, that.x + that.w) - newX;\n        const newH = Math.max(this.y + this.h, that.y + that.h) - newY;\n        this.x = newX;\n        this.y = newY;\n        this.w = newW;\n        this.h = newH;\n        return this;\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Metrics } from './metrics.js';\nexport var FontWeight;\n(function (FontWeight) {\n    FontWeight[\"NORMAL\"] = \"normal\";\n    FontWeight[\"BOLD\"] = \"bold\";\n})(FontWeight || (FontWeight = {}));\nexport var FontStyle;\n(function (FontStyle) {\n    FontStyle[\"NORMAL\"] = \"normal\";\n    FontStyle[\"ITALIC\"] = \"italic\";\n})(FontStyle || (FontStyle = {}));\nlet fontParser;\nexport class Font {\n    static convertSizeToPixelValue(fontSize) {\n        var _a;\n        if (typeof fontSize === 'number') {\n            return fontSize * Font.scaleToPxFrom.pt;\n        }\n        else {\n            const value = parseFloat(fontSize);\n            if (isNaN(value)) {\n                return 0;\n            }\n            const unit = fontSize.replace(/[\\d.\\s]/g, '').toLowerCase();\n            const conversionFactor = (_a = Font.scaleToPxFrom[unit]) !== null && _a !== void 0 ? _a : 1;\n            return value * conversionFactor;\n        }\n    }\n    static convertSizeToPointValue(fontSize) {\n        var _a;\n        if (typeof fontSize === 'number') {\n            return fontSize;\n        }\n        else {\n            const value = parseFloat(fontSize);\n            if (isNaN(value)) {\n                return 0;\n            }\n            const unit = fontSize.replace(/[\\d.\\s]/g, '').toLowerCase();\n            const conversionFactor = ((_a = Font.scaleToPxFrom[unit]) !== null && _a !== void 0 ? _a : 1) / Font.scaleToPxFrom.pt;\n            return value * conversionFactor;\n        }\n    }\n    static validate(f, size, weight, style) {\n        if (typeof f === 'string' && size === undefined && weight === undefined && style === undefined) {\n            return Font.fromCSSString(f);\n        }\n        let family;\n        if (typeof f === 'object') {\n            family = f.family;\n            size = f.size;\n            weight = f.weight;\n            style = f.style;\n        }\n        else {\n            family = f;\n        }\n        family = family !== null && family !== void 0 ? family : Metrics.get('fontFamily');\n        size = size !== null && size !== void 0 ? size : Metrics.get('fontSize') + 'pt';\n        weight = weight !== null && weight !== void 0 ? weight : FontWeight.NORMAL;\n        style = style !== null && style !== void 0 ? style : FontStyle.NORMAL;\n        if (weight === '') {\n            weight = FontWeight.NORMAL;\n        }\n        if (style === '') {\n            style = FontStyle.NORMAL;\n        }\n        if (typeof size === 'number') {\n            size = `${size}pt`;\n        }\n        if (typeof weight === 'number') {\n            weight = weight.toString();\n        }\n        return { family, size, weight, style };\n    }\n    static fromCSSString(cssFontShorthand) {\n        if (!fontParser) {\n            fontParser = document.createElement('span');\n        }\n        fontParser.style.font = cssFontShorthand;\n        const { fontFamily, fontSize, fontWeight, fontStyle } = fontParser.style;\n        return { family: fontFamily, size: fontSize, weight: fontWeight, style: fontStyle };\n    }\n    static toCSSString(fontInfo) {\n        var _a;\n        if (!fontInfo) {\n            return '';\n        }\n        let style;\n        const st = fontInfo.style;\n        if (st === FontStyle.NORMAL || st === '' || st === undefined) {\n            style = '';\n        }\n        else {\n            style = st.trim() + ' ';\n        }\n        let weight;\n        const wt = fontInfo.weight;\n        if (wt === FontWeight.NORMAL || wt === '' || wt === undefined) {\n            weight = '';\n        }\n        else if (typeof wt === 'number') {\n            weight = wt + ' ';\n        }\n        else {\n            weight = wt.trim() + ' ';\n        }\n        let size;\n        const sz = fontInfo.size;\n        if (sz === undefined) {\n            size = Metrics.get('fontSize') + 'pt';\n        }\n        else if (typeof sz === 'number') {\n            size = sz + 'pt ';\n        }\n        else {\n            size = sz.trim() + ' ';\n        }\n        const family = (_a = fontInfo.family) !== null && _a !== void 0 ? _a : Metrics.get('fontFamily');\n        return `${style}${weight}${size}${family}`;\n    }\n    static scaleSize(fontSize, scaleFactor) {\n        if (typeof fontSize === 'number') {\n            return (fontSize * scaleFactor);\n        }\n        else {\n            const value = parseFloat(fontSize);\n            const unit = fontSize.replace(/[\\d.\\s]/g, '');\n            return `${value * scaleFactor}${unit}`;\n        }\n    }\n    static isBold(weight) {\n        if (!weight) {\n            return false;\n        }\n        else if (typeof weight === 'number') {\n            return weight >= 600;\n        }\n        else {\n            const parsedWeight = parseInt(weight, 10);\n            if (isNaN(parsedWeight)) {\n                return weight.toLowerCase() === 'bold';\n            }\n            else {\n                return parsedWeight >= 600;\n            }\n        }\n    }\n    static isItalic(style) {\n        if (!style) {\n            return false;\n        }\n        else {\n            return style.toLowerCase() === FontStyle.ITALIC;\n        }\n    }\n    static load(fontName, url, descriptors) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof FontFace === 'undefined') {\n                return Promise.reject(new Error('FontFace API is not available in this environment. Cannot load fonts.'));\n            }\n            if (url === undefined) {\n                const files = Font.FILES;\n                if (!(fontName in files)) {\n                    return Promise.reject(new Error(`Font ${fontName} not found in Font.FILES`));\n                }\n                url = Font.HOST_URL + files[fontName];\n            }\n            const fontFace = new FontFace(fontName, `url(${url})`, descriptors);\n            const fontFaceLoadPromise = fontFace.load();\n            let fontFaceSet;\n            if (typeof document !== 'undefined') {\n                fontFaceSet = document.fonts;\n            }\n            else if (typeof self !== 'undefined' && 'fonts' in self) {\n                fontFaceSet = self.fonts;\n            }\n            fontFaceSet === null || fontFaceSet === void 0 ? void 0 : fontFaceSet.add(fontFace);\n            return fontFaceLoadPromise;\n        });\n    }\n    static getURLForFont(fontName) {\n        const files = Font.FILES;\n        if (!(fontName in files)) {\n            return undefined;\n        }\n        return Font.HOST_URL + files[fontName];\n    }\n}\nFont.scaleToPxFrom = {\n    pt: 4 / 3,\n    px: 1,\n    em: 16,\n    '%': 4 / 25,\n    in: 96,\n    mm: 96 / 25.4,\n    cm: 96 / 2.54,\n};\nFont.HOST_URL = 'https://cdn.jsdelivr.net/npm/@vexflow-fonts/';\nFont.FILES = {\n    Academico: 'academico/academico.woff2',\n    Bravura: 'bravura/bravura.woff2',\n    'Bravura Text': 'bravuratext/bravuratext.woff2',\n    Edwin: 'edwin/edwin-roman.woff2',\n    'Finale Ash': 'finaleash/finaleash.woff2',\n    'Finale Ash Text': 'finaleashtext/finaleashtext.woff2',\n    'Finale Broadway': 'finalebroadway/finalebroadway.woff2',\n    'Finale Broadway Text': 'finalebroadwaytext/finalebroadwaytext.woff2',\n    'Finale Jazz': 'finalejazz/finalejazz.woff2',\n    'Finale Jazz Text': 'finalejazztext/finalejazztext.woff2',\n    'Finale Maestro': 'finalemaestro/finalemaestro.woff2',\n    'Finale Maestro Text': 'finalemaestrotext/finalemaestrotext-regular.woff2',\n    Gonville: 'gonville/gonville.woff2',\n    Gootville: 'gootville/gootville.woff2',\n    'Gootville Text': 'gootvilletext/gootvilletext.woff2',\n    Leipzig: 'leipzig/leipzig.woff2',\n    Leland: 'leland/leland.woff2',\n    'Leland Text': 'lelandtext/lelandtext.woff2',\n    MuseJazz: 'musejazz/musejazz.woff2',\n    'MuseJazz Text': 'musejazztext/musejazztext.woff2',\n    Nepomuk: 'nepomuk/nepomuk.woff2',\n    Petaluma: 'petaluma/petaluma.woff2',\n    'Petaluma Script': 'petalumascript/petalumascript.woff2',\n    'Petaluma Text': 'petalumatext/petalumatext.woff2',\n    'Roboto Slab': 'robotoslab/robotoslab-regular-400.woff2',\n    Sebastian: 'sebastian/sebastian.woff2',\n    'Sebastian Text': 'sebastiantext/sebastiantext.woff2',\n};\n","import { RuntimeError } from './util.js';\nclass Index {\n    constructor() {\n        this.id = {};\n        this.type = {};\n        this.class = {};\n    }\n}\nexport class Registry {\n    static getDefaultRegistry() {\n        return Registry.defaultRegistry;\n    }\n    static enableDefaultRegistry(registry) {\n        Registry.defaultRegistry = registry;\n    }\n    static disableDefaultRegistry() {\n        Registry.defaultRegistry = undefined;\n    }\n    constructor() {\n        this.index = new Index();\n    }\n    clear() {\n        this.index = new Index();\n        return this;\n    }\n    setIndexValue(name, value, id, elem) {\n        const index = this.index;\n        if (!index[name][value]) {\n            index[name][value] = {};\n        }\n        index[name][value][id] = elem;\n    }\n    updateIndex({ id, name, value, oldValue }) {\n        const elem = this.getElementById(id);\n        if (oldValue !== undefined && this.index[name][oldValue]) {\n            delete this.index[name][oldValue][id];\n        }\n        if (value && elem) {\n            this.setIndexValue(name, value, elem.getAttribute('id'), elem);\n        }\n    }\n    register(elem, id) {\n        id = id || elem.getAttribute('id');\n        if (!id) {\n            throw new RuntimeError(\"Can't add element without `id` attribute to registry\");\n        }\n        elem.setAttribute('id', id);\n        this.setIndexValue('id', id, id, elem);\n        this.updateIndex({ id, name: 'type', value: elem.getAttribute('type'), oldValue: undefined });\n        elem.onRegister(this);\n        return this;\n    }\n    getElementById(id) {\n        var _a, _b;\n        return (_b = (_a = this.index.id) === null || _a === void 0 ? void 0 : _a[id]) === null || _b === void 0 ? void 0 : _b[id];\n    }\n    getElementsByAttribute(attribute, value) {\n        const indexAttr = this.index[attribute];\n        if (indexAttr) {\n            const indexAttrVal = indexAttr[value];\n            if (indexAttrVal) {\n                const keys = Object.keys(indexAttrVal);\n                return keys.map((k) => indexAttrVal[k]);\n            }\n        }\n        return [];\n    }\n    getElementsByType(type) {\n        return this.getElementsByAttribute('type', type);\n    }\n    getElementsByClass(className) {\n        return this.getElementsByAttribute('class', className);\n    }\n    onUpdate(info) {\n        const allowedNames = ['id', 'type', 'class'];\n        if (allowedNames.includes(info.name)) {\n            this.updateIndex(info);\n        }\n        return this;\n    }\n}\n","import { BoundingBox } from './boundingbox.js';\nimport { Font } from './font.js';\nimport { Metrics } from './metrics.js';\nimport { Registry } from './registry.js';\nimport { defined, prefix, RuntimeError } from './util.js';\nexport class Element {\n    static get CATEGORY() {\n        return \"Element\";\n    }\n    static newID() {\n        return `auto${Element.ID++}`;\n    }\n    static setTextMeasurementCanvas(canvas) {\n        Element.txtCanvas = canvas;\n    }\n    static getTextMeasurementCanvas() {\n        let txtCanvas = Element.txtCanvas;\n        if (!txtCanvas) {\n            if (typeof document !== 'undefined') {\n                txtCanvas = document.createElement('canvas');\n            }\n            else if (typeof OffscreenCanvas !== 'undefined') {\n                txtCanvas = new OffscreenCanvas(300, 150);\n            }\n            Element.txtCanvas = txtCanvas;\n        }\n        return txtCanvas;\n    }\n    constructor(category) {\n        var _a;\n        this.children = [];\n        this.style = {};\n        this._text = '';\n        this.metricsValid = false;\n        this._textMetrics = {\n            fontBoundingBoxAscent: 0,\n            fontBoundingBoxDescent: 0,\n            actualBoundingBoxAscent: 0,\n            actualBoundingBoxDescent: 0,\n            actualBoundingBoxLeft: 0,\n            actualBoundingBoxRight: 0,\n            width: 0,\n            alphabeticBaseline: 0,\n            emHeightAscent: 0,\n            emHeightDescent: 0,\n            hangingBaseline: 0,\n            ideographicBaseline: 0,\n        };\n        this._height = 0;\n        this._width = 0;\n        this.xShift = 0;\n        this.yShift = 0;\n        this.x = 0;\n        this.y = 0;\n        this.attrs = {\n            id: Element.newID(),\n            type: category !== null && category !== void 0 ? category : this.constructor.CATEGORY,\n            class: '',\n        };\n        this.rendered = false;\n        this._fontInfo = Metrics.getFontInfo(this.attrs.type);\n        this.style = Metrics.getStyle(this.attrs.type);\n        this.fontScale = Metrics.get(`${this.attrs.type}.fontScale`);\n        (_a = Registry.getDefaultRegistry()) === null || _a === void 0 ? void 0 : _a.register(this);\n    }\n    addChild(child) {\n        if (child.parent)\n            throw new RuntimeError('Element', 'Parent already defined');\n        child.parent = this;\n        this.children.push(child);\n        return this;\n    }\n    getCategory() {\n        return this.attrs.type;\n    }\n    setStyle(style) {\n        this.style = style;\n        return this;\n    }\n    setGroupStyle(style) {\n        this.style = style;\n        this.children.forEach((child) => child.setGroupStyle(style));\n        return this;\n    }\n    getStyle() {\n        return this.style;\n    }\n    applyStyle(context = this.context, style = this.getStyle()) {\n        if (!context)\n            return this;\n        if (style.shadowColor)\n            context.setShadowColor(style.shadowColor);\n        if (style.shadowBlur)\n            context.setShadowBlur(style.shadowBlur);\n        if (style.fillStyle)\n            context.setFillStyle(style.fillStyle);\n        if (style.strokeStyle)\n            context.setStrokeStyle(style.strokeStyle);\n        if (style.lineWidth)\n            context.setLineWidth(style.lineWidth);\n        if (style.lineDash)\n            context.setLineDash(style.lineDash.split(' ').map(Number));\n        return this;\n    }\n    drawWithStyle() {\n        const ctx = this.checkContext();\n        ctx.save();\n        this.applyStyle(ctx);\n        this.draw();\n        ctx.restore();\n        return this;\n    }\n    draw() {\n        throw new RuntimeError('Element', 'Draw not defined');\n    }\n    hasClass(className) {\n        var _a;\n        if (!this.attrs.class)\n            return false;\n        return ((_a = this.attrs.class) === null || _a === void 0 ? void 0 : _a.split(' ').indexOf(className)) !== -1;\n    }\n    addClass(className) {\n        var _a;\n        if (this.hasClass(className))\n            return this;\n        if (!this.attrs.class)\n            this.attrs.class = `${className}`;\n        else\n            this.attrs.class = `${this.attrs.class} ${className}`;\n        (_a = this.registry) === null || _a === void 0 ? void 0 : _a.onUpdate({\n            id: this.attrs.id,\n            name: 'class',\n            value: className,\n            oldValue: undefined,\n        });\n        return this;\n    }\n    removeClass(className) {\n        var _a, _b;\n        if (!this.hasClass(className))\n            return this;\n        const arr = (_a = this.attrs.class) === null || _a === void 0 ? void 0 : _a.split(' ');\n        if (arr) {\n            arr.splice(arr.indexOf(className));\n            this.attrs.class = arr.join(' ');\n        }\n        (_b = this.registry) === null || _b === void 0 ? void 0 : _b.onUpdate({\n            id: this.attrs.id,\n            name: 'class',\n            value: undefined,\n            oldValue: className,\n        });\n        return this;\n    }\n    onRegister(registry) {\n        this.registry = registry;\n        return this;\n    }\n    isRendered() {\n        return this.rendered;\n    }\n    setRendered(rendered = true) {\n        this.rendered = rendered;\n        return this;\n    }\n    getAttributes() {\n        return this.attrs;\n    }\n    getAttribute(name) {\n        return this.attrs[name];\n    }\n    getSVGElement(suffix = '') {\n        const id = prefix(this.attrs.id + suffix);\n        const element = document.getElementById(id);\n        if (element)\n            return element;\n    }\n    setAttribute(name, value) {\n        var _a;\n        const oldID = this.attrs.id;\n        const oldValue = this.attrs[name];\n        this.attrs[name] = value;\n        (_a = this.registry) === null || _a === void 0 ? void 0 : _a.onUpdate({ id: oldID, name, value, oldValue });\n        return this;\n    }\n    getBoundingBox() {\n        return new BoundingBox(this.x + this.xShift, this.y + this.yShift - this.textMetrics.actualBoundingBoxAscent, this.width, this.height);\n    }\n    getContext() {\n        return this.context;\n    }\n    setContext(context) {\n        this.context = context;\n        return this;\n    }\n    checkContext() {\n        return defined(this.context, 'NoContext', 'No rendering context attached to instance.');\n    }\n    set font(f) {\n        this.setFont(f);\n    }\n    get font() {\n        return Font.toCSSString(this._fontInfo);\n    }\n    setFont(font, size, weight, style) {\n        const defaultTextFont = Metrics.getFontInfo(this.attrs.type);\n        const fontIsObject = typeof font === 'object';\n        const fontIsString = typeof font === 'string';\n        const sizeWeightStyleAreUndefined = size === undefined && weight === undefined && style === undefined;\n        this.metricsValid = false;\n        if (fontIsObject) {\n            this._fontInfo = Object.assign(Object.assign({}, defaultTextFont), font);\n        }\n        else if (fontIsString && sizeWeightStyleAreUndefined) {\n            this._fontInfo = Font.fromCSSString(font);\n        }\n        else {\n            this._fontInfo = Font.validate(font !== null && font !== void 0 ? font : defaultTextFont.family, size !== null && size !== void 0 ? size : defaultTextFont.size, weight !== null && weight !== void 0 ? weight : defaultTextFont.weight, style !== null && style !== void 0 ? style : defaultTextFont.style);\n        }\n        return this;\n    }\n    getFont() {\n        return Font.toCSSString(this._fontInfo);\n    }\n    get fontInfo() {\n        return this._fontInfo;\n    }\n    set fontInfo(fontInfo) {\n        this.setFont(fontInfo);\n    }\n    setFontSize(size) {\n        const fontInfo = this.fontInfo;\n        this.setFont(fontInfo.family, size, fontInfo.weight, fontInfo.style);\n        return this;\n    }\n    getFontSize() {\n        return this.fontSize;\n    }\n    getFontScale() {\n        return this.fontScale;\n    }\n    set fontSize(size) {\n        this.setFontSize(size);\n    }\n    get fontSize() {\n        let size = this.fontInfo.size;\n        if (typeof size === 'number') {\n            size = `${size}pt`;\n        }\n        return size;\n    }\n    get fontSizeInPoints() {\n        return Font.convertSizeToPointValue(this.fontSize);\n    }\n    get fontSizeInPixels() {\n        return Font.convertSizeToPixelValue(this.fontSize);\n    }\n    get fontStyle() {\n        return this.fontInfo.style;\n    }\n    set fontStyle(style) {\n        const fontInfo = this.fontInfo;\n        this.setFont(fontInfo.family, fontInfo.size, fontInfo.weight, style);\n    }\n    get fontWeight() {\n        return this.fontInfo.weight + '';\n    }\n    set fontWeight(weight) {\n        const fontInfo = this.fontInfo;\n        this.setFont(fontInfo.family, fontInfo.size, weight, fontInfo.style);\n    }\n    getWidth() {\n        return this.width;\n    }\n    get width() {\n        if (!this.metricsValid)\n            this.measureText();\n        return this._width;\n    }\n    setWidth(width) {\n        this.width = width;\n        return this;\n    }\n    set width(width) {\n        if (!this.metricsValid)\n            this.measureText();\n        this._width = width;\n    }\n    setX(x) {\n        this.x = x;\n        return this;\n    }\n    getX() {\n        return this.x;\n    }\n    getY() {\n        return this.y;\n    }\n    setY(y) {\n        this.y = y;\n        return this;\n    }\n    setYShift(yShift) {\n        this.yShift = yShift;\n        return this;\n    }\n    getYShift() {\n        return this.yShift;\n    }\n    setXShift(xShift) {\n        this.xShift = xShift;\n        return this;\n    }\n    getXShift() {\n        return this.xShift;\n    }\n    setText(text) {\n        this.text = text;\n        return this;\n    }\n    set text(text) {\n        this.metricsValid = false;\n        this._text = text;\n    }\n    getText() {\n        return this._text;\n    }\n    get text() {\n        return this._text;\n    }\n    renderText(ctx, xPos, yPos) {\n        ctx.setFont(this._fontInfo);\n        ctx.fillText(this._text, xPos + this.x + this.xShift, yPos + this.y + this.yShift);\n        this.children.forEach((child) => {\n            ctx.setFont(child.fontInfo);\n            ctx.fillText(child.text, xPos + child.x + child.xShift, yPos + child.y + child.yShift);\n        });\n    }\n    measureText() {\n        var _a;\n        const context = (_a = Element.getTextMeasurementCanvas()) === null || _a === void 0 ? void 0 : _a.getContext('2d');\n        if (!context) {\n            console.warn('Element: No context for txtCanvas. Returning empty text metrics.');\n            return this._textMetrics;\n        }\n        context.font = Font.toCSSString(Font.validate(this.fontInfo));\n        this._textMetrics = context.measureText(this.text);\n        this._height = this._textMetrics.actualBoundingBoxAscent + this._textMetrics.actualBoundingBoxDescent;\n        this._width = this._textMetrics.width;\n        this.metricsValid = true;\n        return this._textMetrics;\n    }\n    static measureWidth(text, key = '') {\n        var _a;\n        const context = (_a = Element.getTextMeasurementCanvas()) === null || _a === void 0 ? void 0 : _a.getContext('2d');\n        if (!context) {\n            console.warn('Element: No context for txtCanvas. Returning empty text metrics.');\n            return 0;\n        }\n        context.font = Font.toCSSString(Metrics.getFontInfo(key));\n        return context.measureText(text).width;\n    }\n    getTextMetrics() {\n        return this.textMetrics;\n    }\n    get textMetrics() {\n        if (!this.metricsValid)\n            this.measureText();\n        return this._textMetrics;\n    }\n    getHeight() {\n        return this.height;\n    }\n    get height() {\n        if (!this.metricsValid)\n            this.measureText();\n        return this._height;\n    }\n    set height(height) {\n        if (!this.metricsValid)\n            this.measureText();\n        this._height = height;\n    }\n    setOriginX(x) {\n        const bbox = this.getBoundingBox();\n        const originX = Math.abs((bbox.getX() - this.xShift) / bbox.getW());\n        const xShift = (x - originX) * bbox.getW();\n        this.xShift = -xShift;\n    }\n    setOriginY(y) {\n        const bbox = this.getBoundingBox();\n        const originY = Math.abs((bbox.getY() - this.yShift) / bbox.getH());\n        const yShift = (y - originY) * bbox.getH();\n        this.yShift = -yShift;\n    }\n    setOrigin(x, y) {\n        this.setOriginX(x);\n        this.setOriginY(y);\n    }\n}\nElement.ID = 1000;\n","import { Element } from './element.js';\nimport { defined, RuntimeError } from './util.js';\nexport var ModifierPosition;\n(function (ModifierPosition) {\n    ModifierPosition[ModifierPosition[\"CENTER\"] = 0] = \"CENTER\";\n    ModifierPosition[ModifierPosition[\"LEFT\"] = 1] = \"LEFT\";\n    ModifierPosition[ModifierPosition[\"RIGHT\"] = 2] = \"RIGHT\";\n    ModifierPosition[ModifierPosition[\"ABOVE\"] = 3] = \"ABOVE\";\n    ModifierPosition[ModifierPosition[\"BELOW\"] = 4] = \"BELOW\";\n})(ModifierPosition || (ModifierPosition = {}));\nexport class Modifier extends Element {\n    static get CATEGORY() {\n        return \"Modifier\";\n    }\n    static get Position() {\n        return ModifierPosition;\n    }\n    static get PositionString() {\n        return {\n            center: ModifierPosition.CENTER,\n            above: ModifierPosition.ABOVE,\n            below: ModifierPosition.BELOW,\n            left: ModifierPosition.LEFT,\n            right: ModifierPosition.RIGHT,\n        };\n    }\n    constructor() {\n        super();\n        this.width = 0;\n        this.textLine = 0;\n        this.position = Modifier.Position.LEFT;\n        this.spacingFromNextModifier = 0;\n    }\n    reset() {\n    }\n    getNote() {\n        return defined(this.note, 'NoNote', 'Modifier has no note.');\n    }\n    checkAttachedNote() {\n        const category = this.getCategory();\n        defined(this.index, 'NoIndex', `Can't draw ${category} without an index.`);\n        return defined(this.note, 'NoNote', `Can't draw ${category} without a note.`);\n    }\n    setNote(note) {\n        this.note = note;\n        return this;\n    }\n    getIndex() {\n        return this.index;\n    }\n    checkIndex() {\n        return defined(this.index, 'NoIndex', 'Modifier has an invalid index.');\n    }\n    setIndex(index) {\n        this.index = index;\n        return this;\n    }\n    getModifierContext() {\n        return this.modifierContext;\n    }\n    checkModifierContext() {\n        return defined(this.modifierContext, 'NoModifierContext', 'Modifier Context Required');\n    }\n    setModifierContext(c) {\n        this.modifierContext = c;\n        return this;\n    }\n    getPosition() {\n        return this.position;\n    }\n    setPosition(position) {\n        this.position = typeof position === 'string' ? Modifier.PositionString[position] : position;\n        this.reset();\n        return this;\n    }\n    setTextLine(line) {\n        this.textLine = line;\n        return this;\n    }\n    setYShift(y) {\n        this.yShift = y;\n        return this;\n    }\n    setSpacingFromNextModifier(x) {\n        this.spacingFromNextModifier = x;\n    }\n    getSpacingFromNextModifier() {\n        return this.spacingFromNextModifier;\n    }\n    setXShift(x) {\n        this.xShift = 0;\n        if (this.position === Modifier.Position.LEFT) {\n            this.xShift -= x;\n        }\n        else {\n            this.xShift += x;\n        }\n        return this;\n    }\n    getXShift() {\n        return this.xShift;\n    }\n    draw() {\n        this.checkContext();\n        throw new RuntimeError('NotImplemented', 'draw() not implemented for this modifier.');\n    }\n    alignSubNotesWithNote(subNotes, note, position = Modifier.Position.LEFT) {\n        const tickContext = note.getTickContext();\n        const metrics = tickContext.getMetrics();\n        const stave = note.getStave();\n        const subNoteXOffset = position === Modifier.Position.RIGHT\n            ? tickContext.getX() + this.getSpacingFromNextModifier() * subNotes.length + 10\n            : tickContext.getX() - metrics.modLeftPx - metrics.modRightPx + this.getSpacingFromNextModifier();\n        subNotes.forEach((subNote) => {\n            const subTickContext = subNote.getTickContext();\n            if (stave)\n                subNote.setStave(stave);\n            subTickContext.setXOffset(subNoteXOffset);\n        });\n    }\n}\n","export var Glyphs;\n(function (Glyphs) {\n    Glyphs[\"null\"] = \"\\0\";\n    Glyphs[\"fourStringTabClef\"] = \"\\uE06E\";\n    Glyphs[\"sixStringTabClef\"] = \"\\uE06D\";\n    Glyphs[\"accSagittal11LargeDiesisDown\"] = \"\\uE30D\";\n    Glyphs[\"accSagittal11LargeDiesisUp\"] = \"\\uE30C\";\n    Glyphs[\"accSagittal11MediumDiesisDown\"] = \"\\uE30B\";\n    Glyphs[\"accSagittal11MediumDiesisUp\"] = \"\\uE30A\";\n    Glyphs[\"accSagittal11v19LargeDiesisDown\"] = \"\\uE3AB\";\n    Glyphs[\"accSagittal11v19LargeDiesisUp\"] = \"\\uE3AA\";\n    Glyphs[\"accSagittal11v19MediumDiesisDown\"] = \"\\uE3A3\";\n    Glyphs[\"accSagittal11v19MediumDiesisUp\"] = \"\\uE3A2\";\n    Glyphs[\"accSagittal11v49CommaDown\"] = \"\\uE397\";\n    Glyphs[\"accSagittal11v49CommaUp\"] = \"\\uE396\";\n    Glyphs[\"accSagittal143CommaDown\"] = \"\\uE395\";\n    Glyphs[\"accSagittal143CommaUp\"] = \"\\uE394\";\n    Glyphs[\"accSagittal17CommaDown\"] = \"\\uE343\";\n    Glyphs[\"accSagittal17CommaUp\"] = \"\\uE342\";\n    Glyphs[\"accSagittal17KleismaDown\"] = \"\\uE393\";\n    Glyphs[\"accSagittal17KleismaUp\"] = \"\\uE392\";\n    Glyphs[\"accSagittal19CommaDown\"] = \"\\uE399\";\n    Glyphs[\"accSagittal19CommaUp\"] = \"\\uE398\";\n    Glyphs[\"accSagittal19SchismaDown\"] = \"\\uE391\";\n    Glyphs[\"accSagittal19SchismaUp\"] = \"\\uE390\";\n    Glyphs[\"accSagittal1MinaDown\"] = \"\\uE3F5\";\n    Glyphs[\"accSagittal1MinaUp\"] = \"\\uE3F4\";\n    Glyphs[\"accSagittal1TinaDown\"] = \"\\uE3F9\";\n    Glyphs[\"accSagittal1TinaUp\"] = \"\\uE3F8\";\n    Glyphs[\"accSagittal23CommaDown\"] = \"\\uE371\";\n    Glyphs[\"accSagittal23CommaUp\"] = \"\\uE370\";\n    Glyphs[\"accSagittal23SmallDiesisDown\"] = \"\\uE39F\";\n    Glyphs[\"accSagittal23SmallDiesisUp\"] = \"\\uE39E\";\n    Glyphs[\"accSagittal25SmallDiesisDown\"] = \"\\uE307\";\n    Glyphs[\"accSagittal25SmallDiesisUp\"] = \"\\uE306\";\n    Glyphs[\"accSagittal2MinasDown\"] = \"\\uE3F7\";\n    Glyphs[\"accSagittal2MinasUp\"] = \"\\uE3F6\";\n    Glyphs[\"accSagittal2TinasDown\"] = \"\\uE3FB\";\n    Glyphs[\"accSagittal2TinasUp\"] = \"\\uE3FA\";\n    Glyphs[\"accSagittal35LargeDiesisDown\"] = \"\\uE30F\";\n    Glyphs[\"accSagittal35LargeDiesisUp\"] = \"\\uE30E\";\n    Glyphs[\"accSagittal35MediumDiesisDown\"] = \"\\uE309\";\n    Glyphs[\"accSagittal35MediumDiesisUp\"] = \"\\uE308\";\n    Glyphs[\"accSagittal3TinasDown\"] = \"\\uE3FD\";\n    Glyphs[\"accSagittal3TinasUp\"] = \"\\uE3FC\";\n    Glyphs[\"accSagittal49LargeDiesisDown\"] = \"\\uE3A9\";\n    Glyphs[\"accSagittal49LargeDiesisUp\"] = \"\\uE3A8\";\n    Glyphs[\"accSagittal49MediumDiesisDown\"] = \"\\uE3A5\";\n    Glyphs[\"accSagittal49MediumDiesisUp\"] = \"\\uE3A4\";\n    Glyphs[\"accSagittal49SmallDiesisDown\"] = \"\\uE39D\";\n    Glyphs[\"accSagittal49SmallDiesisUp\"] = \"\\uE39C\";\n    Glyphs[\"accSagittal4TinasDown\"] = \"\\uE3FF\";\n    Glyphs[\"accSagittal4TinasUp\"] = \"\\uE3FE\";\n    Glyphs[\"accSagittal55CommaDown\"] = \"\\uE345\";\n    Glyphs[\"accSagittal55CommaUp\"] = \"\\uE344\";\n    Glyphs[\"accSagittal5CommaDown\"] = \"\\uE303\";\n    Glyphs[\"accSagittal5CommaUp\"] = \"\\uE302\";\n    Glyphs[\"accSagittal5TinasDown\"] = \"\\uE401\";\n    Glyphs[\"accSagittal5TinasUp\"] = \"\\uE400\";\n    Glyphs[\"accSagittal5v11SmallDiesisDown\"] = \"\\uE349\";\n    Glyphs[\"accSagittal5v11SmallDiesisUp\"] = \"\\uE348\";\n    Glyphs[\"accSagittal5v13LargeDiesisDown\"] = \"\\uE3AD\";\n    Glyphs[\"accSagittal5v13LargeDiesisUp\"] = \"\\uE3AC\";\n    Glyphs[\"accSagittal5v13MediumDiesisDown\"] = \"\\uE3A1\";\n    Glyphs[\"accSagittal5v13MediumDiesisUp\"] = \"\\uE3A0\";\n    Glyphs[\"accSagittal5v19CommaDown\"] = \"\\uE373\";\n    Glyphs[\"accSagittal5v19CommaUp\"] = \"\\uE372\";\n    Glyphs[\"accSagittal5v23SmallDiesisDown\"] = \"\\uE375\";\n    Glyphs[\"accSagittal5v23SmallDiesisUp\"] = \"\\uE374\";\n    Glyphs[\"accSagittal5v49MediumDiesisDown\"] = \"\\uE3A7\";\n    Glyphs[\"accSagittal5v49MediumDiesisUp\"] = \"\\uE3A6\";\n    Glyphs[\"accSagittal5v7KleismaDown\"] = \"\\uE301\";\n    Glyphs[\"accSagittal5v7KleismaUp\"] = \"\\uE300\";\n    Glyphs[\"accSagittal6TinasDown\"] = \"\\uE403\";\n    Glyphs[\"accSagittal6TinasUp\"] = \"\\uE402\";\n    Glyphs[\"accSagittal7CommaDown\"] = \"\\uE305\";\n    Glyphs[\"accSagittal7CommaUp\"] = \"\\uE304\";\n    Glyphs[\"accSagittal7TinasDown\"] = \"\\uE405\";\n    Glyphs[\"accSagittal7TinasUp\"] = \"\\uE404\";\n    Glyphs[\"accSagittal7v11CommaDown\"] = \"\\uE347\";\n    Glyphs[\"accSagittal7v11CommaUp\"] = \"\\uE346\";\n    Glyphs[\"accSagittal7v11KleismaDown\"] = \"\\uE341\";\n    Glyphs[\"accSagittal7v11KleismaUp\"] = \"\\uE340\";\n    Glyphs[\"accSagittal7v19CommaDown\"] = \"\\uE39B\";\n    Glyphs[\"accSagittal7v19CommaUp\"] = \"\\uE39A\";\n    Glyphs[\"accSagittal8TinasDown\"] = \"\\uE407\";\n    Glyphs[\"accSagittal8TinasUp\"] = \"\\uE406\";\n    Glyphs[\"accSagittal9TinasDown\"] = \"\\uE409\";\n    Glyphs[\"accSagittal9TinasUp\"] = \"\\uE408\";\n    Glyphs[\"accSagittalAcute\"] = \"\\uE3F2\";\n    Glyphs[\"accSagittalDoubleFlat\"] = \"\\uE335\";\n    Glyphs[\"accSagittalDoubleFlat11v49CUp\"] = \"\\uE3E9\";\n    Glyphs[\"accSagittalDoubleFlat143CUp\"] = \"\\uE3EB\";\n    Glyphs[\"accSagittalDoubleFlat17CUp\"] = \"\\uE365\";\n    Glyphs[\"accSagittalDoubleFlat17kUp\"] = \"\\uE3ED\";\n    Glyphs[\"accSagittalDoubleFlat19CUp\"] = \"\\uE3E7\";\n    Glyphs[\"accSagittalDoubleFlat19sUp\"] = \"\\uE3EF\";\n    Glyphs[\"accSagittalDoubleFlat23CUp\"] = \"\\uE387\";\n    Glyphs[\"accSagittalDoubleFlat23SUp\"] = \"\\uE3E1\";\n    Glyphs[\"accSagittalDoubleFlat25SUp\"] = \"\\uE32D\";\n    Glyphs[\"accSagittalDoubleFlat49SUp\"] = \"\\uE3E3\";\n    Glyphs[\"accSagittalDoubleFlat55CUp\"] = \"\\uE363\";\n    Glyphs[\"accSagittalDoubleFlat5CUp\"] = \"\\uE331\";\n    Glyphs[\"accSagittalDoubleFlat5v11SUp\"] = \"\\uE35F\";\n    Glyphs[\"accSagittalDoubleFlat5v19CUp\"] = \"\\uE385\";\n    Glyphs[\"accSagittalDoubleFlat5v23SUp\"] = \"\\uE383\";\n    Glyphs[\"accSagittalDoubleFlat5v7kUp\"] = \"\\uE333\";\n    Glyphs[\"accSagittalDoubleFlat7CUp\"] = \"\\uE32F\";\n    Glyphs[\"accSagittalDoubleFlat7v11CUp\"] = \"\\uE361\";\n    Glyphs[\"accSagittalDoubleFlat7v11kUp\"] = \"\\uE367\";\n    Glyphs[\"accSagittalDoubleFlat7v19CUp\"] = \"\\uE3E5\";\n    Glyphs[\"accSagittalDoubleSharp\"] = \"\\uE334\";\n    Glyphs[\"accSagittalDoubleSharp11v49CDown\"] = \"\\uE3E8\";\n    Glyphs[\"accSagittalDoubleSharp143CDown\"] = \"\\uE3EA\";\n    Glyphs[\"accSagittalDoubleSharp17CDown\"] = \"\\uE364\";\n    Glyphs[\"accSagittalDoubleSharp17kDown\"] = \"\\uE3EC\";\n    Glyphs[\"accSagittalDoubleSharp19CDown\"] = \"\\uE3E6\";\n    Glyphs[\"accSagittalDoubleSharp19sDown\"] = \"\\uE3EE\";\n    Glyphs[\"accSagittalDoubleSharp23CDown\"] = \"\\uE386\";\n    Glyphs[\"accSagittalDoubleSharp23SDown\"] = \"\\uE3E0\";\n    Glyphs[\"accSagittalDoubleSharp25SDown\"] = \"\\uE32C\";\n    Glyphs[\"accSagittalDoubleSharp49SDown\"] = \"\\uE3E2\";\n    Glyphs[\"accSagittalDoubleSharp55CDown\"] = \"\\uE362\";\n    Glyphs[\"accSagittalDoubleSharp5CDown\"] = \"\\uE330\";\n    Glyphs[\"accSagittalDoubleSharp5v11SDown\"] = \"\\uE35E\";\n    Glyphs[\"accSagittalDoubleSharp5v19CDown\"] = \"\\uE384\";\n    Glyphs[\"accSagittalDoubleSharp5v23SDown\"] = \"\\uE382\";\n    Glyphs[\"accSagittalDoubleSharp5v7kDown\"] = \"\\uE332\";\n    Glyphs[\"accSagittalDoubleSharp7CDown\"] = \"\\uE32E\";\n    Glyphs[\"accSagittalDoubleSharp7v11CDown\"] = \"\\uE360\";\n    Glyphs[\"accSagittalDoubleSharp7v11kDown\"] = \"\\uE366\";\n    Glyphs[\"accSagittalDoubleSharp7v19CDown\"] = \"\\uE3E4\";\n    Glyphs[\"accSagittalFlat\"] = \"\\uE319\";\n    Glyphs[\"accSagittalFlat11LDown\"] = \"\\uE329\";\n    Glyphs[\"accSagittalFlat11MDown\"] = \"\\uE327\";\n    Glyphs[\"accSagittalFlat11v19LDown\"] = \"\\uE3DB\";\n    Glyphs[\"accSagittalFlat11v19MDown\"] = \"\\uE3D3\";\n    Glyphs[\"accSagittalFlat11v49CDown\"] = \"\\uE3C7\";\n    Glyphs[\"accSagittalFlat11v49CUp\"] = \"\\uE3B9\";\n    Glyphs[\"accSagittalFlat143CDown\"] = \"\\uE3C5\";\n    Glyphs[\"accSagittalFlat143CUp\"] = \"\\uE3BB\";\n    Glyphs[\"accSagittalFlat17CDown\"] = \"\\uE357\";\n    Glyphs[\"accSagittalFlat17CUp\"] = \"\\uE351\";\n    Glyphs[\"accSagittalFlat17kDown\"] = \"\\uE3C3\";\n    Glyphs[\"accSagittalFlat17kUp\"] = \"\\uE3BD\";\n    Glyphs[\"accSagittalFlat19CDown\"] = \"\\uE3C9\";\n    Glyphs[\"accSagittalFlat19CUp\"] = \"\\uE3B7\";\n    Glyphs[\"accSagittalFlat19sDown\"] = \"\\uE3C1\";\n    Glyphs[\"accSagittalFlat19sUp\"] = \"\\uE3BF\";\n    Glyphs[\"accSagittalFlat23CDown\"] = \"\\uE37D\";\n    Glyphs[\"accSagittalFlat23CUp\"] = \"\\uE37B\";\n    Glyphs[\"accSagittalFlat23SDown\"] = \"\\uE3CF\";\n    Glyphs[\"accSagittalFlat23SUp\"] = \"\\uE3B1\";\n    Glyphs[\"accSagittalFlat25SDown\"] = \"\\uE323\";\n    Glyphs[\"accSagittalFlat25SUp\"] = \"\\uE311\";\n    Glyphs[\"accSagittalFlat35LDown\"] = \"\\uE32B\";\n    Glyphs[\"accSagittalFlat35MDown\"] = \"\\uE325\";\n    Glyphs[\"accSagittalFlat49LDown\"] = \"\\uE3D9\";\n    Glyphs[\"accSagittalFlat49MDown\"] = \"\\uE3D5\";\n    Glyphs[\"accSagittalFlat49SDown\"] = \"\\uE3CD\";\n    Glyphs[\"accSagittalFlat49SUp\"] = \"\\uE3B3\";\n    Glyphs[\"accSagittalFlat55CDown\"] = \"\\uE359\";\n    Glyphs[\"accSagittalFlat55CUp\"] = \"\\uE34F\";\n    Glyphs[\"accSagittalFlat5CDown\"] = \"\\uE31F\";\n    Glyphs[\"accSagittalFlat5CUp\"] = \"\\uE315\";\n    Glyphs[\"accSagittalFlat5v11SDown\"] = \"\\uE35D\";\n    Glyphs[\"accSagittalFlat5v11SUp\"] = \"\\uE34B\";\n    Glyphs[\"accSagittalFlat5v13LDown\"] = \"\\uE3DD\";\n    Glyphs[\"accSagittalFlat5v13MDown\"] = \"\\uE3D1\";\n    Glyphs[\"accSagittalFlat5v19CDown\"] = \"\\uE37F\";\n    Glyphs[\"accSagittalFlat5v19CUp\"] = \"\\uE379\";\n    Glyphs[\"accSagittalFlat5v23SDown\"] = \"\\uE381\";\n    Glyphs[\"accSagittalFlat5v23SUp\"] = \"\\uE377\";\n    Glyphs[\"accSagittalFlat5v49MDown\"] = \"\\uE3D7\";\n    Glyphs[\"accSagittalFlat5v7kDown\"] = \"\\uE31D\";\n    Glyphs[\"accSagittalFlat5v7kUp\"] = \"\\uE317\";\n    Glyphs[\"accSagittalFlat7CDown\"] = \"\\uE321\";\n    Glyphs[\"accSagittalFlat7CUp\"] = \"\\uE313\";\n    Glyphs[\"accSagittalFlat7v11CDown\"] = \"\\uE35B\";\n    Glyphs[\"accSagittalFlat7v11CUp\"] = \"\\uE34D\";\n    Glyphs[\"accSagittalFlat7v11kDown\"] = \"\\uE355\";\n    Glyphs[\"accSagittalFlat7v11kUp\"] = \"\\uE353\";\n    Glyphs[\"accSagittalFlat7v19CDown\"] = \"\\uE3CB\";\n    Glyphs[\"accSagittalFlat7v19CUp\"] = \"\\uE3B5\";\n    Glyphs[\"accSagittalFractionalTinaDown\"] = \"\\uE40B\";\n    Glyphs[\"accSagittalFractionalTinaUp\"] = \"\\uE40A\";\n    Glyphs[\"accSagittalGrave\"] = \"\\uE3F3\";\n    Glyphs[\"accSagittalShaftDown\"] = \"\\uE3F1\";\n    Glyphs[\"accSagittalShaftUp\"] = \"\\uE3F0\";\n    Glyphs[\"accSagittalSharp\"] = \"\\uE318\";\n    Glyphs[\"accSagittalSharp11LUp\"] = \"\\uE328\";\n    Glyphs[\"accSagittalSharp11MUp\"] = \"\\uE326\";\n    Glyphs[\"accSagittalSharp11v19LUp\"] = \"\\uE3DA\";\n    Glyphs[\"accSagittalSharp11v19MUp\"] = \"\\uE3D2\";\n    Glyphs[\"accSagittalSharp11v49CDown\"] = \"\\uE3B8\";\n    Glyphs[\"accSagittalSharp11v49CUp\"] = \"\\uE3C6\";\n    Glyphs[\"accSagittalSharp143CDown\"] = \"\\uE3BA\";\n    Glyphs[\"accSagittalSharp143CUp\"] = \"\\uE3C4\";\n    Glyphs[\"accSagittalSharp17CDown\"] = \"\\uE350\";\n    Glyphs[\"accSagittalSharp17CUp\"] = \"\\uE356\";\n    Glyphs[\"accSagittalSharp17kDown\"] = \"\\uE3BC\";\n    Glyphs[\"accSagittalSharp17kUp\"] = \"\\uE3C2\";\n    Glyphs[\"accSagittalSharp19CDown\"] = \"\\uE3B6\";\n    Glyphs[\"accSagittalSharp19CUp\"] = \"\\uE3C8\";\n    Glyphs[\"accSagittalSharp19sDown\"] = \"\\uE3BE\";\n    Glyphs[\"accSagittalSharp19sUp\"] = \"\\uE3C0\";\n    Glyphs[\"accSagittalSharp23CDown\"] = \"\\uE37A\";\n    Glyphs[\"accSagittalSharp23CUp\"] = \"\\uE37C\";\n    Glyphs[\"accSagittalSharp23SDown\"] = \"\\uE3B0\";\n    Glyphs[\"accSagittalSharp23SUp\"] = \"\\uE3CE\";\n    Glyphs[\"accSagittalSharp25SDown\"] = \"\\uE310\";\n    Glyphs[\"accSagittalSharp25SUp\"] = \"\\uE322\";\n    Glyphs[\"accSagittalSharp35LUp\"] = \"\\uE32A\";\n    Glyphs[\"accSagittalSharp35MUp\"] = \"\\uE324\";\n    Glyphs[\"accSagittalSharp49LUp\"] = \"\\uE3D8\";\n    Glyphs[\"accSagittalSharp49MUp\"] = \"\\uE3D4\";\n    Glyphs[\"accSagittalSharp49SDown\"] = \"\\uE3B2\";\n    Glyphs[\"accSagittalSharp49SUp\"] = \"\\uE3CC\";\n    Glyphs[\"accSagittalSharp55CDown\"] = \"\\uE34E\";\n    Glyphs[\"accSagittalSharp55CUp\"] = \"\\uE358\";\n    Glyphs[\"accSagittalSharp5CDown\"] = \"\\uE314\";\n    Glyphs[\"accSagittalSharp5CUp\"] = \"\\uE31E\";\n    Glyphs[\"accSagittalSharp5v11SDown\"] = \"\\uE34A\";\n    Glyphs[\"accSagittalSharp5v11SUp\"] = \"\\uE35C\";\n    Glyphs[\"accSagittalSharp5v13LUp\"] = \"\\uE3DC\";\n    Glyphs[\"accSagittalSharp5v13MUp\"] = \"\\uE3D0\";\n    Glyphs[\"accSagittalSharp5v19CDown\"] = \"\\uE378\";\n    Glyphs[\"accSagittalSharp5v19CUp\"] = \"\\uE37E\";\n    Glyphs[\"accSagittalSharp5v23SDown\"] = \"\\uE376\";\n    Glyphs[\"accSagittalSharp5v23SUp\"] = \"\\uE380\";\n    Glyphs[\"accSagittalSharp5v49MUp\"] = \"\\uE3D6\";\n    Glyphs[\"accSagittalSharp5v7kDown\"] = \"\\uE316\";\n    Glyphs[\"accSagittalSharp5v7kUp\"] = \"\\uE31C\";\n    Glyphs[\"accSagittalSharp7CDown\"] = \"\\uE312\";\n    Glyphs[\"accSagittalSharp7CUp\"] = \"\\uE320\";\n    Glyphs[\"accSagittalSharp7v11CDown\"] = \"\\uE34C\";\n    Glyphs[\"accSagittalSharp7v11CUp\"] = \"\\uE35A\";\n    Glyphs[\"accSagittalSharp7v11kDown\"] = \"\\uE352\";\n    Glyphs[\"accSagittalSharp7v11kUp\"] = \"\\uE354\";\n    Glyphs[\"accSagittalSharp7v19CDown\"] = \"\\uE3B4\";\n    Glyphs[\"accSagittalSharp7v19CUp\"] = \"\\uE3CA\";\n    Glyphs[\"accSagittalUnused1\"] = \"\\uE31A\";\n    Glyphs[\"accSagittalUnused2\"] = \"\\uE31B\";\n    Glyphs[\"accSagittalUnused3\"] = \"\\uE3DE\";\n    Glyphs[\"accSagittalUnused4\"] = \"\\uE3DF\";\n    Glyphs[\"accdnCombDot\"] = \"\\uE8CA\";\n    Glyphs[\"accdnCombLH2RanksEmpty\"] = \"\\uE8C8\";\n    Glyphs[\"accdnCombLH3RanksEmptySquare\"] = \"\\uE8C9\";\n    Glyphs[\"accdnCombRH3RanksEmpty\"] = \"\\uE8C6\";\n    Glyphs[\"accdnCombRH4RanksEmpty\"] = \"\\uE8C7\";\n    Glyphs[\"accdnDiatonicClef\"] = \"\\uE079\";\n    Glyphs[\"accdnLH2Ranks16Round\"] = \"\\uE8BC\";\n    Glyphs[\"accdnLH2Ranks8Plus16Round\"] = \"\\uE8BD\";\n    Glyphs[\"accdnLH2Ranks8Round\"] = \"\\uE8BB\";\n    Glyphs[\"accdnLH2RanksFullMasterRound\"] = \"\\uE8C0\";\n    Glyphs[\"accdnLH2RanksMasterPlus16Round\"] = \"\\uE8BF\";\n    Glyphs[\"accdnLH2RanksMasterRound\"] = \"\\uE8BE\";\n    Glyphs[\"accdnLH3Ranks2Plus8Square\"] = \"\\uE8C4\";\n    Glyphs[\"accdnLH3Ranks2Square\"] = \"\\uE8C2\";\n    Glyphs[\"accdnLH3Ranks8Square\"] = \"\\uE8C1\";\n    Glyphs[\"accdnLH3RanksDouble8Square\"] = \"\\uE8C3\";\n    Glyphs[\"accdnLH3RanksTuttiSquare\"] = \"\\uE8C5\";\n    Glyphs[\"accdnPull\"] = \"\\uE8CC\";\n    Glyphs[\"accdnPush\"] = \"\\uE8CB\";\n    Glyphs[\"accdnRH3RanksAccordion\"] = \"\\uE8AC\";\n    Glyphs[\"accdnRH3RanksAuthenticMusette\"] = \"\\uE8A8\";\n    Glyphs[\"accdnRH3RanksBandoneon\"] = \"\\uE8AB\";\n    Glyphs[\"accdnRH3RanksBassoon\"] = \"\\uE8A4\";\n    Glyphs[\"accdnRH3RanksClarinet\"] = \"\\uE8A1\";\n    Glyphs[\"accdnRH3RanksDoubleTremoloLower8ve\"] = \"\\uE8B1\";\n    Glyphs[\"accdnRH3RanksDoubleTremoloUpper8ve\"] = \"\\uE8B2\";\n    Glyphs[\"accdnRH3RanksFullFactory\"] = \"\\uE8B3\";\n    Glyphs[\"accdnRH3RanksHarmonium\"] = \"\\uE8AA\";\n    Glyphs[\"accdnRH3RanksImitationMusette\"] = \"\\uE8A7\";\n    Glyphs[\"accdnRH3RanksLowerTremolo8\"] = \"\\uE8A3\";\n    Glyphs[\"accdnRH3RanksMaster\"] = \"\\uE8AD\";\n    Glyphs[\"accdnRH3RanksOboe\"] = \"\\uE8A5\";\n    Glyphs[\"accdnRH3RanksOrgan\"] = \"\\uE8A9\";\n    Glyphs[\"accdnRH3RanksPiccolo\"] = \"\\uE8A0\";\n    Glyphs[\"accdnRH3RanksTremoloLower8ve\"] = \"\\uE8AF\";\n    Glyphs[\"accdnRH3RanksTremoloUpper8ve\"] = \"\\uE8B0\";\n    Glyphs[\"accdnRH3RanksTwoChoirs\"] = \"\\uE8AE\";\n    Glyphs[\"accdnRH3RanksUpperTremolo8\"] = \"\\uE8A2\";\n    Glyphs[\"accdnRH3RanksViolin\"] = \"\\uE8A6\";\n    Glyphs[\"accdnRH4RanksAlto\"] = \"\\uE8B5\";\n    Glyphs[\"accdnRH4RanksBassAlto\"] = \"\\uE8BA\";\n    Glyphs[\"accdnRH4RanksMaster\"] = \"\\uE8B7\";\n    Glyphs[\"accdnRH4RanksSoftBass\"] = \"\\uE8B8\";\n    Glyphs[\"accdnRH4RanksSoftTenor\"] = \"\\uE8B9\";\n    Glyphs[\"accdnRH4RanksSoprano\"] = \"\\uE8B4\";\n    Glyphs[\"accdnRH4RanksTenor\"] = \"\\uE8B6\";\n    Glyphs[\"accdnRicochet2\"] = \"\\uE8CD\";\n    Glyphs[\"accdnRicochet3\"] = \"\\uE8CE\";\n    Glyphs[\"accdnRicochet4\"] = \"\\uE8CF\";\n    Glyphs[\"accdnRicochet5\"] = \"\\uE8D0\";\n    Glyphs[\"accdnRicochet6\"] = \"\\uE8D1\";\n    Glyphs[\"accdnRicochetStem2\"] = \"\\uE8D2\";\n    Glyphs[\"accdnRicochetStem3\"] = \"\\uE8D3\";\n    Glyphs[\"accdnRicochetStem4\"] = \"\\uE8D4\";\n    Glyphs[\"accdnRicochetStem5\"] = \"\\uE8D5\";\n    Glyphs[\"accdnRicochetStem6\"] = \"\\uE8D6\";\n    Glyphs[\"accidental1CommaFlat\"] = \"\\uE454\";\n    Glyphs[\"accidental1CommaSharp\"] = \"\\uE450\";\n    Glyphs[\"accidental2CommaFlat\"] = \"\\uE455\";\n    Glyphs[\"accidental2CommaSharp\"] = \"\\uE451\";\n    Glyphs[\"accidental3CommaFlat\"] = \"\\uE456\";\n    Glyphs[\"accidental3CommaSharp\"] = \"\\uE452\";\n    Glyphs[\"accidental4CommaFlat\"] = \"\\uE457\";\n    Glyphs[\"accidental5CommaSharp\"] = \"\\uE453\";\n    Glyphs[\"accidentalArrowDown\"] = \"\\uE27B\";\n    Glyphs[\"accidentalArrowUp\"] = \"\\uE27A\";\n    Glyphs[\"accidentalBakiyeFlat\"] = \"\\uE442\";\n    Glyphs[\"accidentalBakiyeSharp\"] = \"\\uE445\";\n    Glyphs[\"accidentalBracketLeft\"] = \"\\uE26C\";\n    Glyphs[\"accidentalBracketRight\"] = \"\\uE26D\";\n    Glyphs[\"accidentalBuyukMucennebFlat\"] = \"\\uE440\";\n    Glyphs[\"accidentalBuyukMucennebSharp\"] = \"\\uE447\";\n    Glyphs[\"accidentalCombiningCloseCurlyBrace\"] = \"\\uE2EF\";\n    Glyphs[\"accidentalCombiningLower17Schisma\"] = \"\\uE2E6\";\n    Glyphs[\"accidentalCombiningLower19Schisma\"] = \"\\uE2E8\";\n    Glyphs[\"accidentalCombiningLower23Limit29LimitComma\"] = \"\\uE2EA\";\n    Glyphs[\"accidentalCombiningLower29LimitComma\"] = \"\\uEE50\";\n    Glyphs[\"accidentalCombiningLower31Schisma\"] = \"\\uE2EC\";\n    Glyphs[\"accidentalCombiningLower37Quartertone\"] = \"\\uEE52\";\n    Glyphs[\"accidentalCombiningLower41Comma\"] = \"\\uEE54\";\n    Glyphs[\"accidentalCombiningLower43Comma\"] = \"\\uEE56\";\n    Glyphs[\"accidentalCombiningLower47Quartertone\"] = \"\\uEE58\";\n    Glyphs[\"accidentalCombiningLower53LimitComma\"] = \"\\uE2F7\";\n    Glyphs[\"accidentalCombiningOpenCurlyBrace\"] = \"\\uE2EE\";\n    Glyphs[\"accidentalCombiningRaise17Schisma\"] = \"\\uE2E7\";\n    Glyphs[\"accidentalCombiningRaise19Schisma\"] = \"\\uE2E9\";\n    Glyphs[\"accidentalCombiningRaise23Limit29LimitComma\"] = \"\\uE2EB\";\n    Glyphs[\"accidentalCombiningRaise29LimitComma\"] = \"\\uEE51\";\n    Glyphs[\"accidentalCombiningRaise31Schisma\"] = \"\\uE2ED\";\n    Glyphs[\"accidentalCombiningRaise37Quartertone\"] = \"\\uEE53\";\n    Glyphs[\"accidentalCombiningRaise41Comma\"] = \"\\uEE55\";\n    Glyphs[\"accidentalCombiningRaise43Comma\"] = \"\\uEE57\";\n    Glyphs[\"accidentalCombiningRaise47Quartertone\"] = \"\\uEE59\";\n    Glyphs[\"accidentalCombiningRaise53LimitComma\"] = \"\\uE2F8\";\n    Glyphs[\"accidentalCommaSlashDown\"] = \"\\uE47A\";\n    Glyphs[\"accidentalCommaSlashUp\"] = \"\\uE479\";\n    Glyphs[\"accidentalDoubleFlat\"] = \"\\uE264\";\n    Glyphs[\"accidentalDoubleFlatArabic\"] = \"\\uED30\";\n    Glyphs[\"accidentalDoubleFlatEqualTempered\"] = \"\\uE2F0\";\n    Glyphs[\"accidentalDoubleFlatOneArrowDown\"] = \"\\uE2C0\";\n    Glyphs[\"accidentalDoubleFlatOneArrowUp\"] = \"\\uE2C5\";\n    Glyphs[\"accidentalDoubleFlatReversed\"] = \"\\uE483\";\n    Glyphs[\"accidentalDoubleFlatThreeArrowsDown\"] = \"\\uE2D4\";\n    Glyphs[\"accidentalDoubleFlatThreeArrowsUp\"] = \"\\uE2D9\";\n    Glyphs[\"accidentalDoubleFlatTurned\"] = \"\\uE485\";\n    Glyphs[\"accidentalDoubleFlatTwoArrowsDown\"] = \"\\uE2CA\";\n    Glyphs[\"accidentalDoubleFlatTwoArrowsUp\"] = \"\\uE2CF\";\n    Glyphs[\"accidentalDoubleSharp\"] = \"\\uE263\";\n    Glyphs[\"accidentalDoubleSharpArabic\"] = \"\\uED38\";\n    Glyphs[\"accidentalDoubleSharpEqualTempered\"] = \"\\uE2F4\";\n    Glyphs[\"accidentalDoubleSharpOneArrowDown\"] = \"\\uE2C4\";\n    Glyphs[\"accidentalDoubleSharpOneArrowUp\"] = \"\\uE2C9\";\n    Glyphs[\"accidentalDoubleSharpThreeArrowsDown\"] = \"\\uE2D8\";\n    Glyphs[\"accidentalDoubleSharpThreeArrowsUp\"] = \"\\uE2DD\";\n    Glyphs[\"accidentalDoubleSharpTwoArrowsDown\"] = \"\\uE2CE\";\n    Glyphs[\"accidentalDoubleSharpTwoArrowsUp\"] = \"\\uE2D3\";\n    Glyphs[\"accidentalEnharmonicAlmostEqualTo\"] = \"\\uE2FA\";\n    Glyphs[\"accidentalEnharmonicEquals\"] = \"\\uE2FB\";\n    Glyphs[\"accidentalEnharmonicTilde\"] = \"\\uE2F9\";\n    Glyphs[\"accidentalFilledReversedFlatAndFlat\"] = \"\\uE296\";\n    Glyphs[\"accidentalFilledReversedFlatAndFlatArrowDown\"] = \"\\uE298\";\n    Glyphs[\"accidentalFilledReversedFlatAndFlatArrowUp\"] = \"\\uE297\";\n    Glyphs[\"accidentalFilledReversedFlatArrowDown\"] = \"\\uE293\";\n    Glyphs[\"accidentalFilledReversedFlatArrowUp\"] = \"\\uE292\";\n    Glyphs[\"accidentalFiveQuarterTonesFlatArrowDown\"] = \"\\uE279\";\n    Glyphs[\"accidentalFiveQuarterTonesSharpArrowUp\"] = \"\\uE276\";\n    Glyphs[\"accidentalFlat\"] = \"\\uE260\";\n    Glyphs[\"accidentalFlatArabic\"] = \"\\uED32\";\n    Glyphs[\"accidentalFlatEqualTempered\"] = \"\\uE2F1\";\n    Glyphs[\"accidentalFlatLoweredStockhausen\"] = \"\\uED53\";\n    Glyphs[\"accidentalFlatOneArrowDown\"] = \"\\uE2C1\";\n    Glyphs[\"accidentalFlatOneArrowUp\"] = \"\\uE2C6\";\n    Glyphs[\"accidentalFlatRaisedStockhausen\"] = \"\\uED52\";\n    Glyphs[\"accidentalFlatRepeatedLineStockhausen\"] = \"\\uED5C\";\n    Glyphs[\"accidentalFlatRepeatedSpaceStockhausen\"] = \"\\uED5B\";\n    Glyphs[\"accidentalFlatThreeArrowsDown\"] = \"\\uE2D5\";\n    Glyphs[\"accidentalFlatThreeArrowsUp\"] = \"\\uE2DA\";\n    Glyphs[\"accidentalFlatTurned\"] = \"\\uE484\";\n    Glyphs[\"accidentalFlatTwoArrowsDown\"] = \"\\uE2CB\";\n    Glyphs[\"accidentalFlatTwoArrowsUp\"] = \"\\uE2D0\";\n    Glyphs[\"accidentalHabaFlatQuarterToneHigher\"] = \"\\uEE65\";\n    Glyphs[\"accidentalHabaFlatThreeQuarterTonesLower\"] = \"\\uEE69\";\n    Glyphs[\"accidentalHabaQuarterToneHigher\"] = \"\\uEE64\";\n    Glyphs[\"accidentalHabaQuarterToneLower\"] = \"\\uEE67\";\n    Glyphs[\"accidentalHabaSharpQuarterToneLower\"] = \"\\uEE68\";\n    Glyphs[\"accidentalHabaSharpThreeQuarterTonesHigher\"] = \"\\uEE66\";\n    Glyphs[\"accidentalHalfSharpArrowDown\"] = \"\\uE29A\";\n    Glyphs[\"accidentalHalfSharpArrowUp\"] = \"\\uE299\";\n    Glyphs[\"accidentalJohnston13\"] = \"\\uE2B6\";\n    Glyphs[\"accidentalJohnston31\"] = \"\\uE2B7\";\n    Glyphs[\"accidentalJohnstonDown\"] = \"\\uE2B5\";\n    Glyphs[\"accidentalJohnstonEl\"] = \"\\uE2B2\";\n    Glyphs[\"accidentalJohnstonMinus\"] = \"\\uE2B1\";\n    Glyphs[\"accidentalJohnstonPlus\"] = \"\\uE2B0\";\n    Glyphs[\"accidentalJohnstonSeven\"] = \"\\uE2B3\";\n    Glyphs[\"accidentalJohnstonUp\"] = \"\\uE2B4\";\n    Glyphs[\"accidentalKomaFlat\"] = \"\\uE443\";\n    Glyphs[\"accidentalKomaSharp\"] = \"\\uE444\";\n    Glyphs[\"accidentalKoron\"] = \"\\uE460\";\n    Glyphs[\"accidentalKucukMucennebFlat\"] = \"\\uE441\";\n    Glyphs[\"accidentalKucukMucennebSharp\"] = \"\\uE446\";\n    Glyphs[\"accidentalLargeDoubleSharp\"] = \"\\uE47D\";\n    Glyphs[\"accidentalLowerOneSeptimalComma\"] = \"\\uE2DE\";\n    Glyphs[\"accidentalLowerOneTridecimalQuartertone\"] = \"\\uE2E4\";\n    Glyphs[\"accidentalLowerOneUndecimalQuartertone\"] = \"\\uE2E2\";\n    Glyphs[\"accidentalLowerTwoSeptimalCommas\"] = \"\\uE2E0\";\n    Glyphs[\"accidentalLoweredStockhausen\"] = \"\\uED51\";\n    Glyphs[\"accidentalNarrowReversedFlat\"] = \"\\uE284\";\n    Glyphs[\"accidentalNarrowReversedFlatAndFlat\"] = \"\\uE285\";\n    Glyphs[\"accidentalNatural\"] = \"\\uE261\";\n    Glyphs[\"accidentalNaturalArabic\"] = \"\\uED34\";\n    Glyphs[\"accidentalNaturalEqualTempered\"] = \"\\uE2F2\";\n    Glyphs[\"accidentalNaturalFlat\"] = \"\\uE267\";\n    Glyphs[\"accidentalNaturalLoweredStockhausen\"] = \"\\uED55\";\n    Glyphs[\"accidentalNaturalOneArrowDown\"] = \"\\uE2C2\";\n    Glyphs[\"accidentalNaturalOneArrowUp\"] = \"\\uE2C7\";\n    Glyphs[\"accidentalNaturalRaisedStockhausen\"] = \"\\uED54\";\n    Glyphs[\"accidentalNaturalReversed\"] = \"\\uE482\";\n    Glyphs[\"accidentalNaturalSharp\"] = \"\\uE268\";\n    Glyphs[\"accidentalNaturalThreeArrowsDown\"] = \"\\uE2D6\";\n    Glyphs[\"accidentalNaturalThreeArrowsUp\"] = \"\\uE2DB\";\n    Glyphs[\"accidentalNaturalTwoArrowsDown\"] = \"\\uE2CC\";\n    Glyphs[\"accidentalNaturalTwoArrowsUp\"] = \"\\uE2D1\";\n    Glyphs[\"accidentalOneAndAHalfSharpsArrowDown\"] = \"\\uE29C\";\n    Glyphs[\"accidentalOneAndAHalfSharpsArrowUp\"] = \"\\uE29B\";\n    Glyphs[\"accidentalOneQuarterToneFlatFerneyhough\"] = \"\\uE48F\";\n    Glyphs[\"accidentalOneQuarterToneFlatStockhausen\"] = \"\\uED59\";\n    Glyphs[\"accidentalOneQuarterToneSharpFerneyhough\"] = \"\\uE48E\";\n    Glyphs[\"accidentalOneQuarterToneSharpStockhausen\"] = \"\\uED58\";\n    Glyphs[\"accidentalOneThirdToneFlatFerneyhough\"] = \"\\uE48B\";\n    Glyphs[\"accidentalOneThirdToneSharpFerneyhough\"] = \"\\uE48A\";\n    Glyphs[\"accidentalParensLeft\"] = \"\\uE26A\";\n    Glyphs[\"accidentalParensRight\"] = \"\\uE26B\";\n    Glyphs[\"accidentalQuarterFlatEqualTempered\"] = \"\\uE2F5\";\n    Glyphs[\"accidentalQuarterSharpEqualTempered\"] = \"\\uE2F6\";\n    Glyphs[\"accidentalQuarterToneFlat4\"] = \"\\uE47F\";\n    Glyphs[\"accidentalQuarterToneFlatArabic\"] = \"\\uED33\";\n    Glyphs[\"accidentalQuarterToneFlatArrowUp\"] = \"\\uE270\";\n    Glyphs[\"accidentalQuarterToneFlatFilledReversed\"] = \"\\uE480\";\n    Glyphs[\"accidentalQuarterToneFlatNaturalArrowDown\"] = \"\\uE273\";\n    Glyphs[\"accidentalQuarterToneFlatPenderecki\"] = \"\\uE478\";\n    Glyphs[\"accidentalQuarterToneFlatStein\"] = \"\\uE280\";\n    Glyphs[\"accidentalQuarterToneFlatVanBlankenburg\"] = \"\\uE488\";\n    Glyphs[\"accidentalQuarterToneSharp4\"] = \"\\uE47E\";\n    Glyphs[\"accidentalQuarterToneSharpArabic\"] = \"\\uED35\";\n    Glyphs[\"accidentalQuarterToneSharpArrowDown\"] = \"\\uE275\";\n    Glyphs[\"accidentalQuarterToneSharpBusotti\"] = \"\\uE472\";\n    Glyphs[\"accidentalQuarterToneSharpNaturalArrowUp\"] = \"\\uE272\";\n    Glyphs[\"accidentalQuarterToneSharpStein\"] = \"\\uE282\";\n    Glyphs[\"accidentalQuarterToneSharpWiggle\"] = \"\\uE475\";\n    Glyphs[\"accidentalRaiseOneSeptimalComma\"] = \"\\uE2DF\";\n    Glyphs[\"accidentalRaiseOneTridecimalQuartertone\"] = \"\\uE2E5\";\n    Glyphs[\"accidentalRaiseOneUndecimalQuartertone\"] = \"\\uE2E3\";\n    Glyphs[\"accidentalRaiseTwoSeptimalCommas\"] = \"\\uE2E1\";\n    Glyphs[\"accidentalRaisedStockhausen\"] = \"\\uED50\";\n    Glyphs[\"accidentalReversedFlatAndFlatArrowDown\"] = \"\\uE295\";\n    Glyphs[\"accidentalReversedFlatAndFlatArrowUp\"] = \"\\uE294\";\n    Glyphs[\"accidentalReversedFlatArrowDown\"] = \"\\uE291\";\n    Glyphs[\"accidentalReversedFlatArrowUp\"] = \"\\uE290\";\n    Glyphs[\"accidentalSharp\"] = \"\\uE262\";\n    Glyphs[\"accidentalSharpArabic\"] = \"\\uED36\";\n    Glyphs[\"accidentalSharpEqualTempered\"] = \"\\uE2F3\";\n    Glyphs[\"accidentalSharpLoweredStockhausen\"] = \"\\uED57\";\n    Glyphs[\"accidentalSharpOneArrowDown\"] = \"\\uE2C3\";\n    Glyphs[\"accidentalSharpOneArrowUp\"] = \"\\uE2C8\";\n    Glyphs[\"accidentalSharpOneHorizontalStroke\"] = \"\\uE473\";\n    Glyphs[\"accidentalSharpRaisedStockhausen\"] = \"\\uED56\";\n    Glyphs[\"accidentalSharpRepeatedLineStockhausen\"] = \"\\uED5E\";\n    Glyphs[\"accidentalSharpRepeatedSpaceStockhausen\"] = \"\\uED5D\";\n    Glyphs[\"accidentalSharpReversed\"] = \"\\uE481\";\n    Glyphs[\"accidentalSharpSharp\"] = \"\\uE269\";\n    Glyphs[\"accidentalSharpThreeArrowsDown\"] = \"\\uE2D7\";\n    Glyphs[\"accidentalSharpThreeArrowsUp\"] = \"\\uE2DC\";\n    Glyphs[\"accidentalSharpTwoArrowsDown\"] = \"\\uE2CD\";\n    Glyphs[\"accidentalSharpTwoArrowsUp\"] = \"\\uE2D2\";\n    Glyphs[\"accidentalSims12Down\"] = \"\\uE2A0\";\n    Glyphs[\"accidentalSims12Up\"] = \"\\uE2A3\";\n    Glyphs[\"accidentalSims4Down\"] = \"\\uE2A2\";\n    Glyphs[\"accidentalSims4Up\"] = \"\\uE2A5\";\n    Glyphs[\"accidentalSims6Down\"] = \"\\uE2A1\";\n    Glyphs[\"accidentalSims6Up\"] = \"\\uE2A4\";\n    Glyphs[\"accidentalSori\"] = \"\\uE461\";\n    Glyphs[\"accidentalTavenerFlat\"] = \"\\uE477\";\n    Glyphs[\"accidentalTavenerSharp\"] = \"\\uE476\";\n    Glyphs[\"accidentalThreeQuarterTonesFlatArabic\"] = \"\\uED31\";\n    Glyphs[\"accidentalThreeQuarterTonesFlatArrowDown\"] = \"\\uE271\";\n    Glyphs[\"accidentalThreeQuarterTonesFlatArrowUp\"] = \"\\uE278\";\n    Glyphs[\"accidentalThreeQuarterTonesFlatCouper\"] = \"\\uE489\";\n    Glyphs[\"accidentalThreeQuarterTonesFlatGrisey\"] = \"\\uE486\";\n    Glyphs[\"accidentalThreeQuarterTonesFlatTartini\"] = \"\\uE487\";\n    Glyphs[\"accidentalThreeQuarterTonesFlatZimmermann\"] = \"\\uE281\";\n    Glyphs[\"accidentalThreeQuarterTonesSharpArabic\"] = \"\\uED37\";\n    Glyphs[\"accidentalThreeQuarterTonesSharpArrowDown\"] = \"\\uE277\";\n    Glyphs[\"accidentalThreeQuarterTonesSharpArrowUp\"] = \"\\uE274\";\n    Glyphs[\"accidentalThreeQuarterTonesSharpBusotti\"] = \"\\uE474\";\n    Glyphs[\"accidentalThreeQuarterTonesSharpStein\"] = \"\\uE283\";\n    Glyphs[\"accidentalThreeQuarterTonesSharpStockhausen\"] = \"\\uED5A\";\n    Glyphs[\"accidentalTripleFlat\"] = \"\\uE266\";\n    Glyphs[\"accidentalTripleSharp\"] = \"\\uE265\";\n    Glyphs[\"accidentalTwoThirdTonesFlatFerneyhough\"] = \"\\uE48D\";\n    Glyphs[\"accidentalTwoThirdTonesSharpFerneyhough\"] = \"\\uE48C\";\n    Glyphs[\"accidentalUpsAndDownsDown\"] = \"\\uEE61\";\n    Glyphs[\"accidentalUpsAndDownsLess\"] = \"\\uEE63\";\n    Glyphs[\"accidentalUpsAndDownsMore\"] = \"\\uEE62\";\n    Glyphs[\"accidentalUpsAndDownsUp\"] = \"\\uEE60\";\n    Glyphs[\"accidentalWilsonMinus\"] = \"\\uE47C\";\n    Glyphs[\"accidentalWilsonPlus\"] = \"\\uE47B\";\n    Glyphs[\"accidentalWyschnegradsky10TwelfthsFlat\"] = \"\\uE434\";\n    Glyphs[\"accidentalWyschnegradsky10TwelfthsSharp\"] = \"\\uE429\";\n    Glyphs[\"accidentalWyschnegradsky11TwelfthsFlat\"] = \"\\uE435\";\n    Glyphs[\"accidentalWyschnegradsky11TwelfthsSharp\"] = \"\\uE42A\";\n    Glyphs[\"accidentalWyschnegradsky1TwelfthsFlat\"] = \"\\uE42B\";\n    Glyphs[\"accidentalWyschnegradsky1TwelfthsSharp\"] = \"\\uE420\";\n    Glyphs[\"accidentalWyschnegradsky2TwelfthsFlat\"] = \"\\uE42C\";\n    Glyphs[\"accidentalWyschnegradsky2TwelfthsSharp\"] = \"\\uE421\";\n    Glyphs[\"accidentalWyschnegradsky3TwelfthsFlat\"] = \"\\uE42D\";\n    Glyphs[\"accidentalWyschnegradsky3TwelfthsSharp\"] = \"\\uE422\";\n    Glyphs[\"accidentalWyschnegradsky4TwelfthsFlat\"] = \"\\uE42E\";\n    Glyphs[\"accidentalWyschnegradsky4TwelfthsSharp\"] = \"\\uE423\";\n    Glyphs[\"accidentalWyschnegradsky5TwelfthsFlat\"] = \"\\uE42F\";\n    Glyphs[\"accidentalWyschnegradsky5TwelfthsSharp\"] = \"\\uE424\";\n    Glyphs[\"accidentalWyschnegradsky6TwelfthsFlat\"] = \"\\uE430\";\n    Glyphs[\"accidentalWyschnegradsky6TwelfthsSharp\"] = \"\\uE425\";\n    Glyphs[\"accidentalWyschnegradsky7TwelfthsFlat\"] = \"\\uE431\";\n    Glyphs[\"accidentalWyschnegradsky7TwelfthsSharp\"] = \"\\uE426\";\n    Glyphs[\"accidentalWyschnegradsky8TwelfthsFlat\"] = \"\\uE432\";\n    Glyphs[\"accidentalWyschnegradsky8TwelfthsSharp\"] = \"\\uE427\";\n    Glyphs[\"accidentalWyschnegradsky9TwelfthsFlat\"] = \"\\uE433\";\n    Glyphs[\"accidentalWyschnegradsky9TwelfthsSharp\"] = \"\\uE428\";\n    Glyphs[\"accidentalXenakisOneThirdToneSharp\"] = \"\\uE470\";\n    Glyphs[\"accidentalXenakisTwoThirdTonesSharp\"] = \"\\uE471\";\n    Glyphs[\"analyticsChoralmelodie\"] = \"\\uE86A\";\n    Glyphs[\"analyticsEndStimme\"] = \"\\uE863\";\n    Glyphs[\"analyticsHauptrhythmus\"] = \"\\uE86B\";\n    Glyphs[\"analyticsHauptstimme\"] = \"\\uE860\";\n    Glyphs[\"analyticsInversion1\"] = \"\\uE869\";\n    Glyphs[\"analyticsNebenstimme\"] = \"\\uE861\";\n    Glyphs[\"analyticsStartStimme\"] = \"\\uE862\";\n    Glyphs[\"analyticsTheme\"] = \"\\uE864\";\n    Glyphs[\"analyticsTheme1\"] = \"\\uE868\";\n    Glyphs[\"analyticsThemeInversion\"] = \"\\uE867\";\n    Glyphs[\"analyticsThemeRetrograde\"] = \"\\uE865\";\n    Glyphs[\"analyticsThemeRetrogradeInversion\"] = \"\\uE866\";\n    Glyphs[\"arpeggiato\"] = \"\\uE63C\";\n    Glyphs[\"arpeggiatoDown\"] = \"\\uE635\";\n    Glyphs[\"arpeggiatoUp\"] = \"\\uE634\";\n    Glyphs[\"arrowBlackDown\"] = \"\\uEB64\";\n    Glyphs[\"arrowBlackDownLeft\"] = \"\\uEB65\";\n    Glyphs[\"arrowBlackDownRight\"] = \"\\uEB63\";\n    Glyphs[\"arrowBlackLeft\"] = \"\\uEB66\";\n    Glyphs[\"arrowBlackRight\"] = \"\\uEB62\";\n    Glyphs[\"arrowBlackUp\"] = \"\\uEB60\";\n    Glyphs[\"arrowBlackUpLeft\"] = \"\\uEB67\";\n    Glyphs[\"arrowBlackUpRight\"] = \"\\uEB61\";\n    Glyphs[\"arrowOpenDown\"] = \"\\uEB74\";\n    Glyphs[\"arrowOpenDownLeft\"] = \"\\uEB75\";\n    Glyphs[\"arrowOpenDownRight\"] = \"\\uEB73\";\n    Glyphs[\"arrowOpenLeft\"] = \"\\uEB76\";\n    Glyphs[\"arrowOpenRight\"] = \"\\uEB72\";\n    Glyphs[\"arrowOpenUp\"] = \"\\uEB70\";\n    Glyphs[\"arrowOpenUpLeft\"] = \"\\uEB77\";\n    Glyphs[\"arrowOpenUpRight\"] = \"\\uEB71\";\n    Glyphs[\"arrowWhiteDown\"] = \"\\uEB6C\";\n    Glyphs[\"arrowWhiteDownLeft\"] = \"\\uEB6D\";\n    Glyphs[\"arrowWhiteDownRight\"] = \"\\uEB6B\";\n    Glyphs[\"arrowWhiteLeft\"] = \"\\uEB6E\";\n    Glyphs[\"arrowWhiteRight\"] = \"\\uEB6A\";\n    Glyphs[\"arrowWhiteUp\"] = \"\\uEB68\";\n    Glyphs[\"arrowWhiteUpLeft\"] = \"\\uEB6F\";\n    Glyphs[\"arrowWhiteUpRight\"] = \"\\uEB69\";\n    Glyphs[\"arrowheadBlackDown\"] = \"\\uEB7C\";\n    Glyphs[\"arrowheadBlackDownLeft\"] = \"\\uEB7D\";\n    Glyphs[\"arrowheadBlackDownRight\"] = \"\\uEB7B\";\n    Glyphs[\"arrowheadBlackLeft\"] = \"\\uEB7E\";\n    Glyphs[\"arrowheadBlackRight\"] = \"\\uEB7A\";\n    Glyphs[\"arrowheadBlackUp\"] = \"\\uEB78\";\n    Glyphs[\"arrowheadBlackUpLeft\"] = \"\\uEB7F\";\n    Glyphs[\"arrowheadBlackUpRight\"] = \"\\uEB79\";\n    Glyphs[\"arrowheadOpenDown\"] = \"\\uEB8C\";\n    Glyphs[\"arrowheadOpenDownLeft\"] = \"\\uEB8D\";\n    Glyphs[\"arrowheadOpenDownRight\"] = \"\\uEB8B\";\n    Glyphs[\"arrowheadOpenLeft\"] = \"\\uEB8E\";\n    Glyphs[\"arrowheadOpenRight\"] = \"\\uEB8A\";\n    Glyphs[\"arrowheadOpenUp\"] = \"\\uEB88\";\n    Glyphs[\"arrowheadOpenUpLeft\"] = \"\\uEB8F\";\n    Glyphs[\"arrowheadOpenUpRight\"] = \"\\uEB89\";\n    Glyphs[\"arrowheadWhiteDown\"] = \"\\uEB84\";\n    Glyphs[\"arrowheadWhiteDownLeft\"] = \"\\uEB85\";\n    Glyphs[\"arrowheadWhiteDownRight\"] = \"\\uEB83\";\n    Glyphs[\"arrowheadWhiteLeft\"] = \"\\uEB86\";\n    Glyphs[\"arrowheadWhiteRight\"] = \"\\uEB82\";\n    Glyphs[\"arrowheadWhiteUp\"] = \"\\uEB80\";\n    Glyphs[\"arrowheadWhiteUpLeft\"] = \"\\uEB87\";\n    Glyphs[\"arrowheadWhiteUpRight\"] = \"\\uEB81\";\n    Glyphs[\"articAccentAbove\"] = \"\\uE4A0\";\n    Glyphs[\"articAccentBelow\"] = \"\\uE4A1\";\n    Glyphs[\"articAccentStaccatoAbove\"] = \"\\uE4B0\";\n    Glyphs[\"articAccentStaccatoBelow\"] = \"\\uE4B1\";\n    Glyphs[\"articLaissezVibrerAbove\"] = \"\\uE4BA\";\n    Glyphs[\"articLaissezVibrerBelow\"] = \"\\uE4BB\";\n    Glyphs[\"articMarcatoAbove\"] = \"\\uE4AC\";\n    Glyphs[\"articMarcatoBelow\"] = \"\\uE4AD\";\n    Glyphs[\"articMarcatoStaccatoAbove\"] = \"\\uE4AE\";\n    Glyphs[\"articMarcatoStaccatoBelow\"] = \"\\uE4AF\";\n    Glyphs[\"articMarcatoTenutoAbove\"] = \"\\uE4BC\";\n    Glyphs[\"articMarcatoTenutoBelow\"] = \"\\uE4BD\";\n    Glyphs[\"articSoftAccentAbove\"] = \"\\uED40\";\n    Glyphs[\"articSoftAccentBelow\"] = \"\\uED41\";\n    Glyphs[\"articSoftAccentStaccatoAbove\"] = \"\\uED42\";\n    Glyphs[\"articSoftAccentStaccatoBelow\"] = \"\\uED43\";\n    Glyphs[\"articSoftAccentTenutoAbove\"] = \"\\uED44\";\n    Glyphs[\"articSoftAccentTenutoBelow\"] = \"\\uED45\";\n    Glyphs[\"articSoftAccentTenutoStaccatoAbove\"] = \"\\uED46\";\n    Glyphs[\"articSoftAccentTenutoStaccatoBelow\"] = \"\\uED47\";\n    Glyphs[\"articStaccatissimoAbove\"] = \"\\uE4A6\";\n    Glyphs[\"articStaccatissimoBelow\"] = \"\\uE4A7\";\n    Glyphs[\"articStaccatissimoStrokeAbove\"] = \"\\uE4AA\";\n    Glyphs[\"articStaccatissimoStrokeBelow\"] = \"\\uE4AB\";\n    Glyphs[\"articStaccatissimoWedgeAbove\"] = \"\\uE4A8\";\n    Glyphs[\"articStaccatissimoWedgeBelow\"] = \"\\uE4A9\";\n    Glyphs[\"articStaccatoAbove\"] = \"\\uE4A2\";\n    Glyphs[\"articStaccatoBelow\"] = \"\\uE4A3\";\n    Glyphs[\"articStressAbove\"] = \"\\uE4B6\";\n    Glyphs[\"articStressBelow\"] = \"\\uE4B7\";\n    Glyphs[\"articTenutoAbove\"] = \"\\uE4A4\";\n    Glyphs[\"articTenutoAccentAbove\"] = \"\\uE4B4\";\n    Glyphs[\"articTenutoAccentBelow\"] = \"\\uE4B5\";\n    Glyphs[\"articTenutoBelow\"] = \"\\uE4A5\";\n    Glyphs[\"articTenutoStaccatoAbove\"] = \"\\uE4B2\";\n    Glyphs[\"articTenutoStaccatoBelow\"] = \"\\uE4B3\";\n    Glyphs[\"articUnstressAbove\"] = \"\\uE4B8\";\n    Glyphs[\"articUnstressBelow\"] = \"\\uE4B9\";\n    Glyphs[\"augmentationDot\"] = \"\\uE1E7\";\n    Glyphs[\"barlineDashed\"] = \"\\uE036\";\n    Glyphs[\"barlineDotted\"] = \"\\uE037\";\n    Glyphs[\"barlineDouble\"] = \"\\uE031\";\n    Glyphs[\"barlineFinal\"] = \"\\uE032\";\n    Glyphs[\"barlineHeavy\"] = \"\\uE034\";\n    Glyphs[\"barlineHeavyHeavy\"] = \"\\uE035\";\n    Glyphs[\"barlineReverseFinal\"] = \"\\uE033\";\n    Glyphs[\"barlineShort\"] = \"\\uE038\";\n    Glyphs[\"barlineSingle\"] = \"\\uE030\";\n    Glyphs[\"barlineTick\"] = \"\\uE039\";\n    Glyphs[\"beamAccelRit1\"] = \"\\uEAF4\";\n    Glyphs[\"beamAccelRit10\"] = \"\\uEAFD\";\n    Glyphs[\"beamAccelRit11\"] = \"\\uEAFE\";\n    Glyphs[\"beamAccelRit12\"] = \"\\uEAFF\";\n    Glyphs[\"beamAccelRit13\"] = \"\\uEB00\";\n    Glyphs[\"beamAccelRit14\"] = \"\\uEB01\";\n    Glyphs[\"beamAccelRit15\"] = \"\\uEB02\";\n    Glyphs[\"beamAccelRit2\"] = \"\\uEAF5\";\n    Glyphs[\"beamAccelRit3\"] = \"\\uEAF6\";\n    Glyphs[\"beamAccelRit4\"] = \"\\uEAF7\";\n    Glyphs[\"beamAccelRit5\"] = \"\\uEAF8\";\n    Glyphs[\"beamAccelRit6\"] = \"\\uEAF9\";\n    Glyphs[\"beamAccelRit7\"] = \"\\uEAFA\";\n    Glyphs[\"beamAccelRit8\"] = \"\\uEAFB\";\n    Glyphs[\"beamAccelRit9\"] = \"\\uEAFC\";\n    Glyphs[\"beamAccelRitFinal\"] = \"\\uEB03\";\n    Glyphs[\"brace\"] = \"\\uE000\";\n    Glyphs[\"bracket\"] = \"\\uE002\";\n    Glyphs[\"bracketBottom\"] = \"\\uE004\";\n    Glyphs[\"bracketTop\"] = \"\\uE003\";\n    Glyphs[\"brassBend\"] = \"\\uE5E3\";\n    Glyphs[\"brassDoitLong\"] = \"\\uE5D6\";\n    Glyphs[\"brassDoitMedium\"] = \"\\uE5D5\";\n    Glyphs[\"brassDoitShort\"] = \"\\uE5D4\";\n    Glyphs[\"brassFallLipLong\"] = \"\\uE5D9\";\n    Glyphs[\"brassFallLipMedium\"] = \"\\uE5D8\";\n    Glyphs[\"brassFallLipShort\"] = \"\\uE5D7\";\n    Glyphs[\"brassFallRoughLong\"] = \"\\uE5DF\";\n    Glyphs[\"brassFallRoughMedium\"] = \"\\uE5DE\";\n    Glyphs[\"brassFallRoughShort\"] = \"\\uE5DD\";\n    Glyphs[\"brassFallSmoothLong\"] = \"\\uE5DC\";\n    Glyphs[\"brassFallSmoothMedium\"] = \"\\uE5DB\";\n    Glyphs[\"brassFallSmoothShort\"] = \"\\uE5DA\";\n    Glyphs[\"brassFlip\"] = \"\\uE5E1\";\n    Glyphs[\"brassHarmonMuteClosed\"] = \"\\uE5E8\";\n    Glyphs[\"brassHarmonMuteStemHalfLeft\"] = \"\\uE5E9\";\n    Glyphs[\"brassHarmonMuteStemHalfRight\"] = \"\\uE5EA\";\n    Glyphs[\"brassHarmonMuteStemOpen\"] = \"\\uE5EB\";\n    Glyphs[\"brassJazzTurn\"] = \"\\uE5E4\";\n    Glyphs[\"brassLiftLong\"] = \"\\uE5D3\";\n    Glyphs[\"brassLiftMedium\"] = \"\\uE5D2\";\n    Glyphs[\"brassLiftShort\"] = \"\\uE5D1\";\n    Glyphs[\"brassLiftSmoothLong\"] = \"\\uE5EE\";\n    Glyphs[\"brassLiftSmoothMedium\"] = \"\\uE5ED\";\n    Glyphs[\"brassLiftSmoothShort\"] = \"\\uE5EC\";\n    Glyphs[\"brassMuteClosed\"] = \"\\uE5E5\";\n    Glyphs[\"brassMuteHalfClosed\"] = \"\\uE5E6\";\n    Glyphs[\"brassMuteOpen\"] = \"\\uE5E7\";\n    Glyphs[\"brassPlop\"] = \"\\uE5E0\";\n    Glyphs[\"brassScoop\"] = \"\\uE5D0\";\n    Glyphs[\"brassSmear\"] = \"\\uE5E2\";\n    Glyphs[\"brassValveTrill\"] = \"\\uE5EF\";\n    Glyphs[\"breathMarkComma\"] = \"\\uE4CE\";\n    Glyphs[\"breathMarkSalzedo\"] = \"\\uE4D5\";\n    Glyphs[\"breathMarkTick\"] = \"\\uE4CF\";\n    Glyphs[\"breathMarkUpbow\"] = \"\\uE4D0\";\n    Glyphs[\"bridgeClef\"] = \"\\uE078\";\n    Glyphs[\"buzzRoll\"] = \"\\uE22A\";\n    Glyphs[\"cClef\"] = \"\\uE05C\";\n    Glyphs[\"cClef8vb\"] = \"\\uE05D\";\n    Glyphs[\"cClefArrowDown\"] = \"\\uE05F\";\n    Glyphs[\"cClefArrowUp\"] = \"\\uE05E\";\n    Glyphs[\"cClefChange\"] = \"\\uE07B\";\n    Glyphs[\"cClefCombining\"] = \"\\uE061\";\n    Glyphs[\"cClefReversed\"] = \"\\uE075\";\n    Glyphs[\"cClefSquare\"] = \"\\uE060\";\n    Glyphs[\"caesura\"] = \"\\uE4D1\";\n    Glyphs[\"caesuraCurved\"] = \"\\uE4D4\";\n    Glyphs[\"caesuraShort\"] = \"\\uE4D3\";\n    Glyphs[\"caesuraSingleStroke\"] = \"\\uE4D7\";\n    Glyphs[\"caesuraThick\"] = \"\\uE4D2\";\n    Glyphs[\"chantAccentusAbove\"] = \"\\uE9D6\";\n    Glyphs[\"chantAccentusBelow\"] = \"\\uE9D7\";\n    Glyphs[\"chantAuctumAsc\"] = \"\\uE994\";\n    Glyphs[\"chantAuctumDesc\"] = \"\\uE995\";\n    Glyphs[\"chantAugmentum\"] = \"\\uE9D9\";\n    Glyphs[\"chantCaesura\"] = \"\\uE8F8\";\n    Glyphs[\"chantCclef\"] = \"\\uE906\";\n    Glyphs[\"chantCirculusAbove\"] = \"\\uE9D2\";\n    Glyphs[\"chantCirculusBelow\"] = \"\\uE9D3\";\n    Glyphs[\"chantConnectingLineAsc2nd\"] = \"\\uE9BD\";\n    Glyphs[\"chantConnectingLineAsc3rd\"] = \"\\uE9BE\";\n    Glyphs[\"chantConnectingLineAsc4th\"] = \"\\uE9BF\";\n    Glyphs[\"chantConnectingLineAsc5th\"] = \"\\uE9C0\";\n    Glyphs[\"chantConnectingLineAsc6th\"] = \"\\uE9C1\";\n    Glyphs[\"chantCustosStemDownPosHigh\"] = \"\\uEA08\";\n    Glyphs[\"chantCustosStemDownPosHighest\"] = \"\\uEA09\";\n    Glyphs[\"chantCustosStemDownPosMiddle\"] = \"\\uEA07\";\n    Glyphs[\"chantCustosStemUpPosLow\"] = \"\\uEA05\";\n    Glyphs[\"chantCustosStemUpPosLowest\"] = \"\\uEA04\";\n    Glyphs[\"chantCustosStemUpPosMiddle\"] = \"\\uEA06\";\n    Glyphs[\"chantDeminutumLower\"] = \"\\uE9B3\";\n    Glyphs[\"chantDeminutumUpper\"] = \"\\uE9B2\";\n    Glyphs[\"chantDivisioFinalis\"] = \"\\uE8F6\";\n    Glyphs[\"chantDivisioMaior\"] = \"\\uE8F4\";\n    Glyphs[\"chantDivisioMaxima\"] = \"\\uE8F5\";\n    Glyphs[\"chantDivisioMinima\"] = \"\\uE8F3\";\n    Glyphs[\"chantEntryLineAsc2nd\"] = \"\\uE9B4\";\n    Glyphs[\"chantEntryLineAsc3rd\"] = \"\\uE9B5\";\n    Glyphs[\"chantEntryLineAsc4th\"] = \"\\uE9B6\";\n    Glyphs[\"chantEntryLineAsc5th\"] = \"\\uE9B7\";\n    Glyphs[\"chantEntryLineAsc6th\"] = \"\\uE9B8\";\n    Glyphs[\"chantEpisema\"] = \"\\uE9D8\";\n    Glyphs[\"chantFclef\"] = \"\\uE902\";\n    Glyphs[\"chantIctusAbove\"] = \"\\uE9D0\";\n    Glyphs[\"chantIctusBelow\"] = \"\\uE9D1\";\n    Glyphs[\"chantLigaturaDesc2nd\"] = \"\\uE9B9\";\n    Glyphs[\"chantLigaturaDesc3rd\"] = \"\\uE9BA\";\n    Glyphs[\"chantLigaturaDesc4th\"] = \"\\uE9BB\";\n    Glyphs[\"chantLigaturaDesc5th\"] = \"\\uE9BC\";\n    Glyphs[\"chantOriscusAscending\"] = \"\\uE99C\";\n    Glyphs[\"chantOriscusDescending\"] = \"\\uE99D\";\n    Glyphs[\"chantOriscusLiquescens\"] = \"\\uE99E\";\n    Glyphs[\"chantPodatusLower\"] = \"\\uE9B0\";\n    Glyphs[\"chantPodatusUpper\"] = \"\\uE9B1\";\n    Glyphs[\"chantPunctum\"] = \"\\uE990\";\n    Glyphs[\"chantPunctumCavum\"] = \"\\uE998\";\n    Glyphs[\"chantPunctumDeminutum\"] = \"\\uE9A1\";\n    Glyphs[\"chantPunctumInclinatum\"] = \"\\uE991\";\n    Glyphs[\"chantPunctumInclinatumAuctum\"] = \"\\uE992\";\n    Glyphs[\"chantPunctumInclinatumDeminutum\"] = \"\\uE993\";\n    Glyphs[\"chantPunctumLinea\"] = \"\\uE999\";\n    Glyphs[\"chantPunctumLineaCavum\"] = \"\\uE99A\";\n    Glyphs[\"chantPunctumVirga\"] = \"\\uE996\";\n    Glyphs[\"chantPunctumVirgaReversed\"] = \"\\uE997\";\n    Glyphs[\"chantQuilisma\"] = \"\\uE99B\";\n    Glyphs[\"chantSemicirculusAbove\"] = \"\\uE9D4\";\n    Glyphs[\"chantSemicirculusBelow\"] = \"\\uE9D5\";\n    Glyphs[\"chantStaff\"] = \"\\uE8F0\";\n    Glyphs[\"chantStaffNarrow\"] = \"\\uE8F2\";\n    Glyphs[\"chantStaffWide\"] = \"\\uE8F1\";\n    Glyphs[\"chantStrophicus\"] = \"\\uE99F\";\n    Glyphs[\"chantStrophicusAuctus\"] = \"\\uE9A0\";\n    Glyphs[\"chantStrophicusLiquescens2nd\"] = \"\\uE9C2\";\n    Glyphs[\"chantStrophicusLiquescens3rd\"] = \"\\uE9C3\";\n    Glyphs[\"chantStrophicusLiquescens4th\"] = \"\\uE9C4\";\n    Glyphs[\"chantStrophicusLiquescens5th\"] = \"\\uE9C5\";\n    Glyphs[\"chantVirgula\"] = \"\\uE8F7\";\n    Glyphs[\"clef15\"] = \"\\uE07E\";\n    Glyphs[\"clef8\"] = \"\\uE07D\";\n    Glyphs[\"clefChangeCombining\"] = \"\\uE07F\";\n    Glyphs[\"coda\"] = \"\\uE048\";\n    Glyphs[\"codaSquare\"] = \"\\uE049\";\n    Glyphs[\"conductorBeat2Compound\"] = \"\\uE897\";\n    Glyphs[\"conductorBeat2Simple\"] = \"\\uE894\";\n    Glyphs[\"conductorBeat3Compound\"] = \"\\uE898\";\n    Glyphs[\"conductorBeat3Simple\"] = \"\\uE895\";\n    Glyphs[\"conductorBeat4Compound\"] = \"\\uE899\";\n    Glyphs[\"conductorBeat4Simple\"] = \"\\uE896\";\n    Glyphs[\"conductorLeftBeat\"] = \"\\uE891\";\n    Glyphs[\"conductorRightBeat\"] = \"\\uE892\";\n    Glyphs[\"conductorStrongBeat\"] = \"\\uE890\";\n    Glyphs[\"conductorUnconducted\"] = \"\\uE89A\";\n    Glyphs[\"conductorWeakBeat\"] = \"\\uE893\";\n    Glyphs[\"controlBeginBeam\"] = \"\\uE8E0\";\n    Glyphs[\"controlBeginPhrase\"] = \"\\uE8E6\";\n    Glyphs[\"controlBeginSlur\"] = \"\\uE8E4\";\n    Glyphs[\"controlBeginTie\"] = \"\\uE8E2\";\n    Glyphs[\"controlEndBeam\"] = \"\\uE8E1\";\n    Glyphs[\"controlEndPhrase\"] = \"\\uE8E7\";\n    Glyphs[\"controlEndSlur\"] = \"\\uE8E5\";\n    Glyphs[\"controlEndTie\"] = \"\\uE8E3\";\n    Glyphs[\"csymAccidentalDoubleFlat\"] = \"\\uED64\";\n    Glyphs[\"csymAccidentalDoubleSharp\"] = \"\\uED63\";\n    Glyphs[\"csymAccidentalFlat\"] = \"\\uED60\";\n    Glyphs[\"csymAccidentalNatural\"] = \"\\uED61\";\n    Glyphs[\"csymAccidentalSharp\"] = \"\\uED62\";\n    Glyphs[\"csymAccidentalTripleFlat\"] = \"\\uED66\";\n    Glyphs[\"csymAccidentalTripleSharp\"] = \"\\uED65\";\n    Glyphs[\"csymAlteredBassSlash\"] = \"\\uE87B\";\n    Glyphs[\"csymAugmented\"] = \"\\uE872\";\n    Glyphs[\"csymBracketLeftTall\"] = \"\\uE877\";\n    Glyphs[\"csymBracketRightTall\"] = \"\\uE878\";\n    Glyphs[\"csymDiagonalArrangementSlash\"] = \"\\uE87C\";\n    Glyphs[\"csymDiminished\"] = \"\\uE870\";\n    Glyphs[\"csymHalfDiminished\"] = \"\\uE871\";\n    Glyphs[\"csymMajorSeventh\"] = \"\\uE873\";\n    Glyphs[\"csymMinor\"] = \"\\uE874\";\n    Glyphs[\"csymParensLeftTall\"] = \"\\uE875\";\n    Glyphs[\"csymParensLeftVeryTall\"] = \"\\uE879\";\n    Glyphs[\"csymParensRightTall\"] = \"\\uE876\";\n    Glyphs[\"csymParensRightVeryTall\"] = \"\\uE87A\";\n    Glyphs[\"curlewSign\"] = \"\\uE4D6\";\n    Glyphs[\"daCapo\"] = \"\\uE046\";\n    Glyphs[\"dalSegno\"] = \"\\uE045\";\n    Glyphs[\"daseianExcellentes1\"] = \"\\uEA3C\";\n    Glyphs[\"daseianExcellentes2\"] = \"\\uEA3D\";\n    Glyphs[\"daseianExcellentes3\"] = \"\\uEA3E\";\n    Glyphs[\"daseianExcellentes4\"] = \"\\uEA3F\";\n    Glyphs[\"daseianFinales1\"] = \"\\uEA34\";\n    Glyphs[\"daseianFinales2\"] = \"\\uEA35\";\n    Glyphs[\"daseianFinales3\"] = \"\\uEA36\";\n    Glyphs[\"daseianFinales4\"] = \"\\uEA37\";\n    Glyphs[\"daseianGraves1\"] = \"\\uEA30\";\n    Glyphs[\"daseianGraves2\"] = \"\\uEA31\";\n    Glyphs[\"daseianGraves3\"] = \"\\uEA32\";\n    Glyphs[\"daseianGraves4\"] = \"\\uEA33\";\n    Glyphs[\"daseianResidua1\"] = \"\\uEA40\";\n    Glyphs[\"daseianResidua2\"] = \"\\uEA41\";\n    Glyphs[\"daseianSuperiores1\"] = \"\\uEA38\";\n    Glyphs[\"daseianSuperiores2\"] = \"\\uEA39\";\n    Glyphs[\"daseianSuperiores3\"] = \"\\uEA3A\";\n    Glyphs[\"daseianSuperiores4\"] = \"\\uEA3B\";\n    Glyphs[\"doubleLateralRollStevens\"] = \"\\uE234\";\n    Glyphs[\"doubleTongueAbove\"] = \"\\uE5F0\";\n    Glyphs[\"doubleTongueBelow\"] = \"\\uE5F1\";\n    Glyphs[\"dynamicCombinedSeparatorColon\"] = \"\\uE546\";\n    Glyphs[\"dynamicCombinedSeparatorHyphen\"] = \"\\uE547\";\n    Glyphs[\"dynamicCombinedSeparatorSlash\"] = \"\\uE549\";\n    Glyphs[\"dynamicCombinedSeparatorSpace\"] = \"\\uE548\";\n    Glyphs[\"dynamicCrescendoHairpin\"] = \"\\uE53E\";\n    Glyphs[\"dynamicDiminuendoHairpin\"] = \"\\uE53F\";\n    Glyphs[\"dynamicFF\"] = \"\\uE52F\";\n    Glyphs[\"dynamicFFF\"] = \"\\uE530\";\n    Glyphs[\"dynamicFFFF\"] = \"\\uE531\";\n    Glyphs[\"dynamicFFFFF\"] = \"\\uE532\";\n    Glyphs[\"dynamicFFFFFF\"] = \"\\uE533\";\n    Glyphs[\"dynamicForte\"] = \"\\uE522\";\n    Glyphs[\"dynamicFortePiano\"] = \"\\uE534\";\n    Glyphs[\"dynamicForzando\"] = \"\\uE535\";\n    Glyphs[\"dynamicHairpinBracketLeft\"] = \"\\uE544\";\n    Glyphs[\"dynamicHairpinBracketRight\"] = \"\\uE545\";\n    Glyphs[\"dynamicHairpinParenthesisLeft\"] = \"\\uE542\";\n    Glyphs[\"dynamicHairpinParenthesisRight\"] = \"\\uE543\";\n    Glyphs[\"dynamicMF\"] = \"\\uE52D\";\n    Glyphs[\"dynamicMP\"] = \"\\uE52C\";\n    Glyphs[\"dynamicMessaDiVoce\"] = \"\\uE540\";\n    Glyphs[\"dynamicMezzo\"] = \"\\uE521\";\n    Glyphs[\"dynamicNiente\"] = \"\\uE526\";\n    Glyphs[\"dynamicNienteForHairpin\"] = \"\\uE541\";\n    Glyphs[\"dynamicPF\"] = \"\\uE52E\";\n    Glyphs[\"dynamicPP\"] = \"\\uE52B\";\n    Glyphs[\"dynamicPPP\"] = \"\\uE52A\";\n    Glyphs[\"dynamicPPPP\"] = \"\\uE529\";\n    Glyphs[\"dynamicPPPPP\"] = \"\\uE528\";\n    Glyphs[\"dynamicPPPPPP\"] = \"\\uE527\";\n    Glyphs[\"dynamicPiano\"] = \"\\uE520\";\n    Glyphs[\"dynamicRinforzando\"] = \"\\uE523\";\n    Glyphs[\"dynamicRinforzando1\"] = \"\\uE53C\";\n    Glyphs[\"dynamicRinforzando2\"] = \"\\uE53D\";\n    Glyphs[\"dynamicSforzando\"] = \"\\uE524\";\n    Glyphs[\"dynamicSforzando1\"] = \"\\uE536\";\n    Glyphs[\"dynamicSforzandoPianissimo\"] = \"\\uE538\";\n    Glyphs[\"dynamicSforzandoPiano\"] = \"\\uE537\";\n    Glyphs[\"dynamicSforzato\"] = \"\\uE539\";\n    Glyphs[\"dynamicSforzatoFF\"] = \"\\uE53B\";\n    Glyphs[\"dynamicSforzatoPiano\"] = \"\\uE53A\";\n    Glyphs[\"dynamicZ\"] = \"\\uE525\";\n    Glyphs[\"elecAudioChannelsEight\"] = \"\\uEB46\";\n    Glyphs[\"elecAudioChannelsFive\"] = \"\\uEB43\";\n    Glyphs[\"elecAudioChannelsFour\"] = \"\\uEB42\";\n    Glyphs[\"elecAudioChannelsOne\"] = \"\\uEB3E\";\n    Glyphs[\"elecAudioChannelsSeven\"] = \"\\uEB45\";\n    Glyphs[\"elecAudioChannelsSix\"] = \"\\uEB44\";\n    Glyphs[\"elecAudioChannelsThreeFrontal\"] = \"\\uEB40\";\n    Glyphs[\"elecAudioChannelsThreeSurround\"] = \"\\uEB41\";\n    Glyphs[\"elecAudioChannelsTwo\"] = \"\\uEB3F\";\n    Glyphs[\"elecAudioIn\"] = \"\\uEB49\";\n    Glyphs[\"elecAudioMono\"] = \"\\uEB3C\";\n    Glyphs[\"elecAudioOut\"] = \"\\uEB4A\";\n    Glyphs[\"elecAudioStereo\"] = \"\\uEB3D\";\n    Glyphs[\"elecCamera\"] = \"\\uEB1B\";\n    Glyphs[\"elecDataIn\"] = \"\\uEB4D\";\n    Glyphs[\"elecDataOut\"] = \"\\uEB4E\";\n    Glyphs[\"elecDisc\"] = \"\\uEB13\";\n    Glyphs[\"elecDownload\"] = \"\\uEB4F\";\n    Glyphs[\"elecEject\"] = \"\\uEB2B\";\n    Glyphs[\"elecFastForward\"] = \"\\uEB1F\";\n    Glyphs[\"elecHeadphones\"] = \"\\uEB11\";\n    Glyphs[\"elecHeadset\"] = \"\\uEB12\";\n    Glyphs[\"elecLineIn\"] = \"\\uEB47\";\n    Glyphs[\"elecLineOut\"] = \"\\uEB48\";\n    Glyphs[\"elecLoop\"] = \"\\uEB23\";\n    Glyphs[\"elecLoudspeaker\"] = \"\\uEB1A\";\n    Glyphs[\"elecMIDIController0\"] = \"\\uEB36\";\n    Glyphs[\"elecMIDIController100\"] = \"\\uEB3B\";\n    Glyphs[\"elecMIDIController20\"] = \"\\uEB37\";\n    Glyphs[\"elecMIDIController40\"] = \"\\uEB38\";\n    Glyphs[\"elecMIDIController60\"] = \"\\uEB39\";\n    Glyphs[\"elecMIDIController80\"] = \"\\uEB3A\";\n    Glyphs[\"elecMIDIIn\"] = \"\\uEB34\";\n    Glyphs[\"elecMIDIOut\"] = \"\\uEB35\";\n    Glyphs[\"elecMicrophone\"] = \"\\uEB10\";\n    Glyphs[\"elecMicrophoneMute\"] = \"\\uEB28\";\n    Glyphs[\"elecMicrophoneUnmute\"] = \"\\uEB29\";\n    Glyphs[\"elecMixingConsole\"] = \"\\uEB15\";\n    Glyphs[\"elecMonitor\"] = \"\\uEB18\";\n    Glyphs[\"elecMute\"] = \"\\uEB26\";\n    Glyphs[\"elecPause\"] = \"\\uEB1E\";\n    Glyphs[\"elecPlay\"] = \"\\uEB1C\";\n    Glyphs[\"elecPowerOnOff\"] = \"\\uEB2A\";\n    Glyphs[\"elecProjector\"] = \"\\uEB19\";\n    Glyphs[\"elecReplay\"] = \"\\uEB24\";\n    Glyphs[\"elecRewind\"] = \"\\uEB20\";\n    Glyphs[\"elecShuffle\"] = \"\\uEB25\";\n    Glyphs[\"elecSkipBackwards\"] = \"\\uEB22\";\n    Glyphs[\"elecSkipForwards\"] = \"\\uEB21\";\n    Glyphs[\"elecStop\"] = \"\\uEB1D\";\n    Glyphs[\"elecTape\"] = \"\\uEB14\";\n    Glyphs[\"elecUSB\"] = \"\\uEB16\";\n    Glyphs[\"elecUnmute\"] = \"\\uEB27\";\n    Glyphs[\"elecUpload\"] = \"\\uEB50\";\n    Glyphs[\"elecVideoCamera\"] = \"\\uEB17\";\n    Glyphs[\"elecVideoIn\"] = \"\\uEB4B\";\n    Glyphs[\"elecVideoOut\"] = \"\\uEB4C\";\n    Glyphs[\"elecVolumeFader\"] = \"\\uEB2C\";\n    Glyphs[\"elecVolumeFaderThumb\"] = \"\\uEB2D\";\n    Glyphs[\"elecVolumeLevel0\"] = \"\\uEB2E\";\n    Glyphs[\"elecVolumeLevel100\"] = \"\\uEB33\";\n    Glyphs[\"elecVolumeLevel20\"] = \"\\uEB2F\";\n    Glyphs[\"elecVolumeLevel40\"] = \"\\uEB30\";\n    Glyphs[\"elecVolumeLevel60\"] = \"\\uEB31\";\n    Glyphs[\"elecVolumeLevel80\"] = \"\\uEB32\";\n    Glyphs[\"fClef\"] = \"\\uE062\";\n    Glyphs[\"fClef15ma\"] = \"\\uE066\";\n    Glyphs[\"fClef15mb\"] = \"\\uE063\";\n    Glyphs[\"fClef8va\"] = \"\\uE065\";\n    Glyphs[\"fClef8vb\"] = \"\\uE064\";\n    Glyphs[\"fClefArrowDown\"] = \"\\uE068\";\n    Glyphs[\"fClefArrowUp\"] = \"\\uE067\";\n    Glyphs[\"fClefChange\"] = \"\\uE07C\";\n    Glyphs[\"fClefReversed\"] = \"\\uE076\";\n    Glyphs[\"fClefTurned\"] = \"\\uE077\";\n    Glyphs[\"fermataAbove\"] = \"\\uE4C0\";\n    Glyphs[\"fermataBelow\"] = \"\\uE4C1\";\n    Glyphs[\"fermataLongAbove\"] = \"\\uE4C6\";\n    Glyphs[\"fermataLongBelow\"] = \"\\uE4C7\";\n    Glyphs[\"fermataLongHenzeAbove\"] = \"\\uE4CA\";\n    Glyphs[\"fermataLongHenzeBelow\"] = \"\\uE4CB\";\n    Glyphs[\"fermataShortAbove\"] = \"\\uE4C4\";\n    Glyphs[\"fermataShortBelow\"] = \"\\uE4C5\";\n    Glyphs[\"fermataShortHenzeAbove\"] = \"\\uE4CC\";\n    Glyphs[\"fermataShortHenzeBelow\"] = \"\\uE4CD\";\n    Glyphs[\"fermataVeryLongAbove\"] = \"\\uE4C8\";\n    Glyphs[\"fermataVeryLongBelow\"] = \"\\uE4C9\";\n    Glyphs[\"fermataVeryShortAbove\"] = \"\\uE4C2\";\n    Glyphs[\"fermataVeryShortBelow\"] = \"\\uE4C3\";\n    Glyphs[\"figbass0\"] = \"\\uEA50\";\n    Glyphs[\"figbass1\"] = \"\\uEA51\";\n    Glyphs[\"figbass2\"] = \"\\uEA52\";\n    Glyphs[\"figbass2Raised\"] = \"\\uEA53\";\n    Glyphs[\"figbass3\"] = \"\\uEA54\";\n    Glyphs[\"figbass4\"] = \"\\uEA55\";\n    Glyphs[\"figbass4Raised\"] = \"\\uEA56\";\n    Glyphs[\"figbass5\"] = \"\\uEA57\";\n    Glyphs[\"figbass5Raised1\"] = \"\\uEA58\";\n    Glyphs[\"figbass5Raised2\"] = \"\\uEA59\";\n    Glyphs[\"figbass5Raised3\"] = \"\\uEA5A\";\n    Glyphs[\"figbass6\"] = \"\\uEA5B\";\n    Glyphs[\"figbass6Raised\"] = \"\\uEA5C\";\n    Glyphs[\"figbass6Raised2\"] = \"\\uEA6F\";\n    Glyphs[\"figbass7\"] = \"\\uEA5D\";\n    Glyphs[\"figbass7Diminished\"] = \"\\uECC0\";\n    Glyphs[\"figbass7Raised1\"] = \"\\uEA5E\";\n    Glyphs[\"figbass7Raised2\"] = \"\\uEA5F\";\n    Glyphs[\"figbass8\"] = \"\\uEA60\";\n    Glyphs[\"figbass9\"] = \"\\uEA61\";\n    Glyphs[\"figbass9Raised\"] = \"\\uEA62\";\n    Glyphs[\"figbassBracketLeft\"] = \"\\uEA68\";\n    Glyphs[\"figbassBracketRight\"] = \"\\uEA69\";\n    Glyphs[\"figbassCombiningLowering\"] = \"\\uEA6E\";\n    Glyphs[\"figbassCombiningRaising\"] = \"\\uEA6D\";\n    Glyphs[\"figbassDoubleFlat\"] = \"\\uEA63\";\n    Glyphs[\"figbassDoubleSharp\"] = \"\\uEA67\";\n    Glyphs[\"figbassFlat\"] = \"\\uEA64\";\n    Glyphs[\"figbassNatural\"] = \"\\uEA65\";\n    Glyphs[\"figbassParensLeft\"] = \"\\uEA6A\";\n    Glyphs[\"figbassParensRight\"] = \"\\uEA6B\";\n    Glyphs[\"figbassPlus\"] = \"\\uEA6C\";\n    Glyphs[\"figbassSharp\"] = \"\\uEA66\";\n    Glyphs[\"figbassTripleFlat\"] = \"\\uECC1\";\n    Glyphs[\"figbassTripleSharp\"] = \"\\uECC2\";\n    Glyphs[\"fingering0\"] = \"\\uED10\";\n    Glyphs[\"fingering0Italic\"] = \"\\uED80\";\n    Glyphs[\"fingering1\"] = \"\\uED11\";\n    Glyphs[\"fingering1Italic\"] = \"\\uED81\";\n    Glyphs[\"fingering2\"] = \"\\uED12\";\n    Glyphs[\"fingering2Italic\"] = \"\\uED82\";\n    Glyphs[\"fingering3\"] = \"\\uED13\";\n    Glyphs[\"fingering3Italic\"] = \"\\uED83\";\n    Glyphs[\"fingering4\"] = \"\\uED14\";\n    Glyphs[\"fingering4Italic\"] = \"\\uED84\";\n    Glyphs[\"fingering5\"] = \"\\uED15\";\n    Glyphs[\"fingering5Italic\"] = \"\\uED85\";\n    Glyphs[\"fingering6\"] = \"\\uED24\";\n    Glyphs[\"fingering6Italic\"] = \"\\uED86\";\n    Glyphs[\"fingering7\"] = \"\\uED25\";\n    Glyphs[\"fingering7Italic\"] = \"\\uED87\";\n    Glyphs[\"fingering8\"] = \"\\uED26\";\n    Glyphs[\"fingering8Italic\"] = \"\\uED88\";\n    Glyphs[\"fingering9\"] = \"\\uED27\";\n    Glyphs[\"fingering9Italic\"] = \"\\uED89\";\n    Glyphs[\"fingeringALower\"] = \"\\uED1B\";\n    Glyphs[\"fingeringCLower\"] = \"\\uED1C\";\n    Glyphs[\"fingeringELower\"] = \"\\uED1E\";\n    Glyphs[\"fingeringILower\"] = \"\\uED19\";\n    Glyphs[\"fingeringLeftBracket\"] = \"\\uED2A\";\n    Glyphs[\"fingeringLeftBracketItalic\"] = \"\\uED8C\";\n    Glyphs[\"fingeringLeftParenthesis\"] = \"\\uED28\";\n    Glyphs[\"fingeringLeftParenthesisItalic\"] = \"\\uED8A\";\n    Glyphs[\"fingeringMLower\"] = \"\\uED1A\";\n    Glyphs[\"fingeringMultipleNotes\"] = \"\\uED23\";\n    Glyphs[\"fingeringOLower\"] = \"\\uED1F\";\n    Glyphs[\"fingeringPLower\"] = \"\\uED17\";\n    Glyphs[\"fingeringQLower\"] = \"\\uED8E\";\n    Glyphs[\"fingeringRightBracket\"] = \"\\uED2B\";\n    Glyphs[\"fingeringRightBracketItalic\"] = \"\\uED8D\";\n    Glyphs[\"fingeringRightParenthesis\"] = \"\\uED29\";\n    Glyphs[\"fingeringRightParenthesisItalic\"] = \"\\uED8B\";\n    Glyphs[\"fingeringSLower\"] = \"\\uED8F\";\n    Glyphs[\"fingeringSeparatorMiddleDot\"] = \"\\uED2C\";\n    Glyphs[\"fingeringSeparatorMiddleDotWhite\"] = \"\\uED2D\";\n    Glyphs[\"fingeringSeparatorSlash\"] = \"\\uED2E\";\n    Glyphs[\"fingeringSubstitutionAbove\"] = \"\\uED20\";\n    Glyphs[\"fingeringSubstitutionBelow\"] = \"\\uED21\";\n    Glyphs[\"fingeringSubstitutionDash\"] = \"\\uED22\";\n    Glyphs[\"fingeringTLower\"] = \"\\uED18\";\n    Glyphs[\"fingeringTUpper\"] = \"\\uED16\";\n    Glyphs[\"fingeringXLower\"] = \"\\uED1D\";\n    Glyphs[\"flag1024thDown\"] = \"\\uE24F\";\n    Glyphs[\"flag1024thUp\"] = \"\\uE24E\";\n    Glyphs[\"flag128thDown\"] = \"\\uE249\";\n    Glyphs[\"flag128thUp\"] = \"\\uE248\";\n    Glyphs[\"flag16thDown\"] = \"\\uE243\";\n    Glyphs[\"flag16thUp\"] = \"\\uE242\";\n    Glyphs[\"flag256thDown\"] = \"\\uE24B\";\n    Glyphs[\"flag256thUp\"] = \"\\uE24A\";\n    Glyphs[\"flag32ndDown\"] = \"\\uE245\";\n    Glyphs[\"flag32ndUp\"] = \"\\uE244\";\n    Glyphs[\"flag512thDown\"] = \"\\uE24D\";\n    Glyphs[\"flag512thUp\"] = \"\\uE24C\";\n    Glyphs[\"flag64thDown\"] = \"\\uE247\";\n    Glyphs[\"flag64thUp\"] = \"\\uE246\";\n    Glyphs[\"flag8thDown\"] = \"\\uE241\";\n    Glyphs[\"flag8thUp\"] = \"\\uE240\";\n    Glyphs[\"flagInternalDown\"] = \"\\uE251\";\n    Glyphs[\"flagInternalUp\"] = \"\\uE250\";\n    Glyphs[\"fretboard3String\"] = \"\\uE850\";\n    Glyphs[\"fretboard3StringNut\"] = \"\\uE851\";\n    Glyphs[\"fretboard4String\"] = \"\\uE852\";\n    Glyphs[\"fretboard4StringNut\"] = \"\\uE853\";\n    Glyphs[\"fretboard5String\"] = \"\\uE854\";\n    Glyphs[\"fretboard5StringNut\"] = \"\\uE855\";\n    Glyphs[\"fretboard6String\"] = \"\\uE856\";\n    Glyphs[\"fretboard6StringNut\"] = \"\\uE857\";\n    Glyphs[\"fretboardFilledCircle\"] = \"\\uE858\";\n    Glyphs[\"fretboardO\"] = \"\\uE85A\";\n    Glyphs[\"fretboardX\"] = \"\\uE859\";\n    Glyphs[\"functionAngleLeft\"] = \"\\uEA93\";\n    Glyphs[\"functionAngleRight\"] = \"\\uEA94\";\n    Glyphs[\"functionBracketLeft\"] = \"\\uEA8F\";\n    Glyphs[\"functionBracketRight\"] = \"\\uEA90\";\n    Glyphs[\"functionDD\"] = \"\\uEA81\";\n    Glyphs[\"functionDLower\"] = \"\\uEA80\";\n    Glyphs[\"functionDUpper\"] = \"\\uEA7F\";\n    Glyphs[\"functionEight\"] = \"\\uEA78\";\n    Glyphs[\"functionFUpper\"] = \"\\uEA99\";\n    Glyphs[\"functionFive\"] = \"\\uEA75\";\n    Glyphs[\"functionFour\"] = \"\\uEA74\";\n    Glyphs[\"functionGLower\"] = \"\\uEA84\";\n    Glyphs[\"functionGUpper\"] = \"\\uEA83\";\n    Glyphs[\"functionGreaterThan\"] = \"\\uEA7C\";\n    Glyphs[\"functionILower\"] = \"\\uEA9B\";\n    Glyphs[\"functionIUpper\"] = \"\\uEA9A\";\n    Glyphs[\"functionKLower\"] = \"\\uEA9D\";\n    Glyphs[\"functionKUpper\"] = \"\\uEA9C\";\n    Glyphs[\"functionLLower\"] = \"\\uEA9F\";\n    Glyphs[\"functionLUpper\"] = \"\\uEA9E\";\n    Glyphs[\"functionLessThan\"] = \"\\uEA7A\";\n    Glyphs[\"functionMLower\"] = \"\\uED01\";\n    Glyphs[\"functionMUpper\"] = \"\\uED00\";\n    Glyphs[\"functionMinus\"] = \"\\uEA7B\";\n    Glyphs[\"functionNLower\"] = \"\\uEA86\";\n    Glyphs[\"functionNUpper\"] = \"\\uEA85\";\n    Glyphs[\"functionNUpperSuperscript\"] = \"\\uED02\";\n    Glyphs[\"functionNine\"] = \"\\uEA79\";\n    Glyphs[\"functionOne\"] = \"\\uEA71\";\n    Glyphs[\"functionPLower\"] = \"\\uEA88\";\n    Glyphs[\"functionPUpper\"] = \"\\uEA87\";\n    Glyphs[\"functionParensLeft\"] = \"\\uEA91\";\n    Glyphs[\"functionParensRight\"] = \"\\uEA92\";\n    Glyphs[\"functionPlus\"] = \"\\uEA98\";\n    Glyphs[\"functionRLower\"] = \"\\uED03\";\n    Glyphs[\"functionRepetition1\"] = \"\\uEA95\";\n    Glyphs[\"functionRepetition2\"] = \"\\uEA96\";\n    Glyphs[\"functionRing\"] = \"\\uEA97\";\n    Glyphs[\"functionSLower\"] = \"\\uEA8A\";\n    Glyphs[\"functionSSLower\"] = \"\\uEA7E\";\n    Glyphs[\"functionSSUpper\"] = \"\\uEA7D\";\n    Glyphs[\"functionSUpper\"] = \"\\uEA89\";\n    Glyphs[\"functionSeven\"] = \"\\uEA77\";\n    Glyphs[\"functionSix\"] = \"\\uEA76\";\n    Glyphs[\"functionSlashedDD\"] = \"\\uEA82\";\n    Glyphs[\"functionTLower\"] = \"\\uEA8C\";\n    Glyphs[\"functionTUpper\"] = \"\\uEA8B\";\n    Glyphs[\"functionThree\"] = \"\\uEA73\";\n    Glyphs[\"functionTwo\"] = \"\\uEA72\";\n    Glyphs[\"functionVLower\"] = \"\\uEA8E\";\n    Glyphs[\"functionVUpper\"] = \"\\uEA8D\";\n    Glyphs[\"functionZero\"] = \"\\uEA70\";\n    Glyphs[\"gClef\"] = \"\\uE050\";\n    Glyphs[\"gClef15ma\"] = \"\\uE054\";\n    Glyphs[\"gClef15mb\"] = \"\\uE051\";\n    Glyphs[\"gClef8va\"] = \"\\uE053\";\n    Glyphs[\"gClef8vb\"] = \"\\uE052\";\n    Glyphs[\"gClef8vbCClef\"] = \"\\uE056\";\n    Glyphs[\"gClef8vbOld\"] = \"\\uE055\";\n    Glyphs[\"gClef8vbParens\"] = \"\\uE057\";\n    Glyphs[\"gClefArrowDown\"] = \"\\uE05B\";\n    Glyphs[\"gClefArrowUp\"] = \"\\uE05A\";\n    Glyphs[\"gClefChange\"] = \"\\uE07A\";\n    Glyphs[\"gClefLigatedNumberAbove\"] = \"\\uE059\";\n    Glyphs[\"gClefLigatedNumberBelow\"] = \"\\uE058\";\n    Glyphs[\"gClefReversed\"] = \"\\uE073\";\n    Glyphs[\"gClefTurned\"] = \"\\uE074\";\n    Glyphs[\"glissandoDown\"] = \"\\uE586\";\n    Glyphs[\"glissandoUp\"] = \"\\uE585\";\n    Glyphs[\"graceNoteAcciaccaturaStemDown\"] = \"\\uE561\";\n    Glyphs[\"graceNoteAcciaccaturaStemUp\"] = \"\\uE560\";\n    Glyphs[\"graceNoteAppoggiaturaStemDown\"] = \"\\uE563\";\n    Glyphs[\"graceNoteAppoggiaturaStemUp\"] = \"\\uE562\";\n    Glyphs[\"graceNoteSlashStemDown\"] = \"\\uE565\";\n    Glyphs[\"graceNoteSlashStemUp\"] = \"\\uE564\";\n    Glyphs[\"guitarBarreFull\"] = \"\\uE848\";\n    Glyphs[\"guitarBarreHalf\"] = \"\\uE849\";\n    Glyphs[\"guitarClosePedal\"] = \"\\uE83F\";\n    Glyphs[\"guitarFadeIn\"] = \"\\uE843\";\n    Glyphs[\"guitarFadeOut\"] = \"\\uE844\";\n    Glyphs[\"guitarGolpe\"] = \"\\uE842\";\n    Glyphs[\"guitarHalfOpenPedal\"] = \"\\uE83E\";\n    Glyphs[\"guitarLeftHandTapping\"] = \"\\uE840\";\n    Glyphs[\"guitarOpenPedal\"] = \"\\uE83D\";\n    Glyphs[\"guitarRightHandTapping\"] = \"\\uE841\";\n    Glyphs[\"guitarShake\"] = \"\\uE832\";\n    Glyphs[\"guitarString0\"] = \"\\uE833\";\n    Glyphs[\"guitarString1\"] = \"\\uE834\";\n    Glyphs[\"guitarString10\"] = \"\\uE84A\";\n    Glyphs[\"guitarString11\"] = \"\\uE84B\";\n    Glyphs[\"guitarString12\"] = \"\\uE84C\";\n    Glyphs[\"guitarString13\"] = \"\\uE84D\";\n    Glyphs[\"guitarString2\"] = \"\\uE835\";\n    Glyphs[\"guitarString3\"] = \"\\uE836\";\n    Glyphs[\"guitarString4\"] = \"\\uE837\";\n    Glyphs[\"guitarString5\"] = \"\\uE838\";\n    Glyphs[\"guitarString6\"] = \"\\uE839\";\n    Glyphs[\"guitarString7\"] = \"\\uE83A\";\n    Glyphs[\"guitarString8\"] = \"\\uE83B\";\n    Glyphs[\"guitarString9\"] = \"\\uE83C\";\n    Glyphs[\"guitarStrumDown\"] = \"\\uE847\";\n    Glyphs[\"guitarStrumUp\"] = \"\\uE846\";\n    Glyphs[\"guitarVibratoBarDip\"] = \"\\uE831\";\n    Glyphs[\"guitarVibratoBarScoop\"] = \"\\uE830\";\n    Glyphs[\"guitarVibratoStroke\"] = \"\\uEAB2\";\n    Glyphs[\"guitarVolumeSwell\"] = \"\\uE845\";\n    Glyphs[\"guitarWideVibratoStroke\"] = \"\\uEAB3\";\n    Glyphs[\"handbellsBelltree\"] = \"\\uE81F\";\n    Glyphs[\"handbellsDamp3\"] = \"\\uE81E\";\n    Glyphs[\"handbellsEcho1\"] = \"\\uE81B\";\n    Glyphs[\"handbellsEcho2\"] = \"\\uE81C\";\n    Glyphs[\"handbellsGyro\"] = \"\\uE81D\";\n    Glyphs[\"handbellsHandMartellato\"] = \"\\uE812\";\n    Glyphs[\"handbellsMalletBellOnTable\"] = \"\\uE815\";\n    Glyphs[\"handbellsMalletBellSuspended\"] = \"\\uE814\";\n    Glyphs[\"handbellsMalletLft\"] = \"\\uE816\";\n    Glyphs[\"handbellsMartellato\"] = \"\\uE810\";\n    Glyphs[\"handbellsMartellatoLift\"] = \"\\uE811\";\n    Glyphs[\"handbellsMutedMartellato\"] = \"\\uE813\";\n    Glyphs[\"handbellsPluckLift\"] = \"\\uE817\";\n    Glyphs[\"handbellsSwing\"] = \"\\uE81A\";\n    Glyphs[\"handbellsSwingDown\"] = \"\\uE819\";\n    Glyphs[\"handbellsSwingUp\"] = \"\\uE818\";\n    Glyphs[\"handbellsTablePairBells\"] = \"\\uE821\";\n    Glyphs[\"handbellsTableSingleBell\"] = \"\\uE820\";\n    Glyphs[\"harpMetalRod\"] = \"\\uE68F\";\n    Glyphs[\"harpPedalCentered\"] = \"\\uE681\";\n    Glyphs[\"harpPedalDivider\"] = \"\\uE683\";\n    Glyphs[\"harpPedalLowered\"] = \"\\uE682\";\n    Glyphs[\"harpPedalRaised\"] = \"\\uE680\";\n    Glyphs[\"harpSalzedoAeolianAscending\"] = \"\\uE695\";\n    Glyphs[\"harpSalzedoAeolianDescending\"] = \"\\uE696\";\n    Glyphs[\"harpSalzedoDampAbove\"] = \"\\uE69A\";\n    Glyphs[\"harpSalzedoDampBelow\"] = \"\\uE699\";\n    Glyphs[\"harpSalzedoDampBothHands\"] = \"\\uE698\";\n    Glyphs[\"harpSalzedoDampLowStrings\"] = \"\\uE697\";\n    Glyphs[\"harpSalzedoFluidicSoundsLeft\"] = \"\\uE68D\";\n    Glyphs[\"harpSalzedoFluidicSoundsRight\"] = \"\\uE68E\";\n    Glyphs[\"harpSalzedoIsolatedSounds\"] = \"\\uE69C\";\n    Glyphs[\"harpSalzedoMetallicSounds\"] = \"\\uE688\";\n    Glyphs[\"harpSalzedoMetallicSoundsOneString\"] = \"\\uE69B\";\n    Glyphs[\"harpSalzedoMuffleTotally\"] = \"\\uE68C\";\n    Glyphs[\"harpSalzedoOboicFlux\"] = \"\\uE685\";\n    Glyphs[\"harpSalzedoPlayUpperEnd\"] = \"\\uE68A\";\n    Glyphs[\"harpSalzedoSlideWithSuppleness\"] = \"\\uE684\";\n    Glyphs[\"harpSalzedoSnareDrum\"] = \"\\uE69D\";\n    Glyphs[\"harpSalzedoTamTamSounds\"] = \"\\uE689\";\n    Glyphs[\"harpSalzedoThunderEffect\"] = \"\\uE686\";\n    Glyphs[\"harpSalzedoTimpanicSounds\"] = \"\\uE68B\";\n    Glyphs[\"harpSalzedoWhistlingSounds\"] = \"\\uE687\";\n    Glyphs[\"harpStringNoiseStem\"] = \"\\uE694\";\n    Glyphs[\"harpTuningKey\"] = \"\\uE690\";\n    Glyphs[\"harpTuningKeyGlissando\"] = \"\\uE693\";\n    Glyphs[\"harpTuningKeyHandle\"] = \"\\uE691\";\n    Glyphs[\"harpTuningKeyShank\"] = \"\\uE692\";\n    Glyphs[\"indianDrumClef\"] = \"\\uED70\";\n    Glyphs[\"kahnBackChug\"] = \"\\uEDE2\";\n    Glyphs[\"kahnBackFlap\"] = \"\\uEDD8\";\n    Glyphs[\"kahnBackRiff\"] = \"\\uEDE1\";\n    Glyphs[\"kahnBackRip\"] = \"\\uEDDA\";\n    Glyphs[\"kahnBallChange\"] = \"\\uEDC6\";\n    Glyphs[\"kahnBallDig\"] = \"\\uEDCD\";\n    Glyphs[\"kahnBrushBackward\"] = \"\\uEDA7\";\n    Glyphs[\"kahnBrushForward\"] = \"\\uEDA6\";\n    Glyphs[\"kahnChug\"] = \"\\uEDDD\";\n    Glyphs[\"kahnClap\"] = \"\\uEDB8\";\n    Glyphs[\"kahnDoubleSnap\"] = \"\\uEDBA\";\n    Glyphs[\"kahnDoubleWing\"] = \"\\uEDEB\";\n    Glyphs[\"kahnDrawStep\"] = \"\\uEDB2\";\n    Glyphs[\"kahnDrawTap\"] = \"\\uEDB3\";\n    Glyphs[\"kahnFlam\"] = \"\\uEDCF\";\n    Glyphs[\"kahnFlap\"] = \"\\uEDD5\";\n    Glyphs[\"kahnFlapStep\"] = \"\\uEDD7\";\n    Glyphs[\"kahnFlat\"] = \"\\uEDA9\";\n    Glyphs[\"kahnFleaHop\"] = \"\\uEDB0\";\n    Glyphs[\"kahnFleaTap\"] = \"\\uEDB1\";\n    Glyphs[\"kahnGraceTap\"] = \"\\uEDA8\";\n    Glyphs[\"kahnGraceTapChange\"] = \"\\uEDD1\";\n    Glyphs[\"kahnGraceTapHop\"] = \"\\uEDD0\";\n    Glyphs[\"kahnGraceTapStamp\"] = \"\\uEDD3\";\n    Glyphs[\"kahnHeel\"] = \"\\uEDAA\";\n    Glyphs[\"kahnHeelChange\"] = \"\\uEDC9\";\n    Glyphs[\"kahnHeelClick\"] = \"\\uEDBB\";\n    Glyphs[\"kahnHeelDrop\"] = \"\\uEDB6\";\n    Glyphs[\"kahnHeelStep\"] = \"\\uEDC4\";\n    Glyphs[\"kahnHeelTap\"] = \"\\uEDCB\";\n    Glyphs[\"kahnHop\"] = \"\\uEDA2\";\n    Glyphs[\"kahnJumpApart\"] = \"\\uEDA5\";\n    Glyphs[\"kahnJumpTogether\"] = \"\\uEDA4\";\n    Glyphs[\"kahnKneeInward\"] = \"\\uEDAD\";\n    Glyphs[\"kahnKneeOutward\"] = \"\\uEDAC\";\n    Glyphs[\"kahnLeap\"] = \"\\uEDA3\";\n    Glyphs[\"kahnLeapFlatFoot\"] = \"\\uEDD2\";\n    Glyphs[\"kahnLeapHeelClick\"] = \"\\uEDD4\";\n    Glyphs[\"kahnLeftCatch\"] = \"\\uEDBF\";\n    Glyphs[\"kahnLeftCross\"] = \"\\uEDBD\";\n    Glyphs[\"kahnLeftFoot\"] = \"\\uEDEE\";\n    Glyphs[\"kahnLeftToeStrike\"] = \"\\uEDC1\";\n    Glyphs[\"kahnLeftTurn\"] = \"\\uEDF0\";\n    Glyphs[\"kahnOverTheTop\"] = \"\\uEDEC\";\n    Glyphs[\"kahnOverTheTopTap\"] = \"\\uEDED\";\n    Glyphs[\"kahnPull\"] = \"\\uEDE3\";\n    Glyphs[\"kahnPush\"] = \"\\uEDDE\";\n    Glyphs[\"kahnRiff\"] = \"\\uEDE0\";\n    Glyphs[\"kahnRiffle\"] = \"\\uEDE7\";\n    Glyphs[\"kahnRightCatch\"] = \"\\uEDC0\";\n    Glyphs[\"kahnRightCross\"] = \"\\uEDBE\";\n    Glyphs[\"kahnRightFoot\"] = \"\\uEDEF\";\n    Glyphs[\"kahnRightToeStrike\"] = \"\\uEDC2\";\n    Glyphs[\"kahnRightTurn\"] = \"\\uEDF1\";\n    Glyphs[\"kahnRip\"] = \"\\uEDD6\";\n    Glyphs[\"kahnRipple\"] = \"\\uEDE8\";\n    Glyphs[\"kahnScrape\"] = \"\\uEDAE\";\n    Glyphs[\"kahnScuff\"] = \"\\uEDDC\";\n    Glyphs[\"kahnScuffle\"] = \"\\uEDE6\";\n    Glyphs[\"kahnShuffle\"] = \"\\uEDE5\";\n    Glyphs[\"kahnSlam\"] = \"\\uEDCE\";\n    Glyphs[\"kahnSlap\"] = \"\\uEDD9\";\n    Glyphs[\"kahnSlideStep\"] = \"\\uEDB4\";\n    Glyphs[\"kahnSlideTap\"] = \"\\uEDB5\";\n    Glyphs[\"kahnSnap\"] = \"\\uEDB9\";\n    Glyphs[\"kahnStamp\"] = \"\\uEDC3\";\n    Glyphs[\"kahnStampStamp\"] = \"\\uEDC8\";\n    Glyphs[\"kahnStep\"] = \"\\uEDA0\";\n    Glyphs[\"kahnStepStamp\"] = \"\\uEDC7\";\n    Glyphs[\"kahnStomp\"] = \"\\uEDCA\";\n    Glyphs[\"kahnStompBrush\"] = \"\\uEDDB\";\n    Glyphs[\"kahnTap\"] = \"\\uEDA1\";\n    Glyphs[\"kahnToe\"] = \"\\uEDAB\";\n    Glyphs[\"kahnToeClick\"] = \"\\uEDBC\";\n    Glyphs[\"kahnToeDrop\"] = \"\\uEDB7\";\n    Glyphs[\"kahnToeStep\"] = \"\\uEDC5\";\n    Glyphs[\"kahnToeTap\"] = \"\\uEDCC\";\n    Glyphs[\"kahnTrench\"] = \"\\uEDAF\";\n    Glyphs[\"kahnWing\"] = \"\\uEDE9\";\n    Glyphs[\"kahnWingChange\"] = \"\\uEDEA\";\n    Glyphs[\"kahnZank\"] = \"\\uEDE4\";\n    Glyphs[\"kahnZink\"] = \"\\uEDDF\";\n    Glyphs[\"keyboardBebung2DotsAbove\"] = \"\\uE668\";\n    Glyphs[\"keyboardBebung2DotsBelow\"] = \"\\uE669\";\n    Glyphs[\"keyboardBebung3DotsAbove\"] = \"\\uE66A\";\n    Glyphs[\"keyboardBebung3DotsBelow\"] = \"\\uE66B\";\n    Glyphs[\"keyboardBebung4DotsAbove\"] = \"\\uE66C\";\n    Glyphs[\"keyboardBebung4DotsBelow\"] = \"\\uE66D\";\n    Glyphs[\"keyboardLeftPedalPictogram\"] = \"\\uE65E\";\n    Glyphs[\"keyboardMiddlePedalPictogram\"] = \"\\uE65F\";\n    Glyphs[\"keyboardPedalD\"] = \"\\uE653\";\n    Glyphs[\"keyboardPedalDot\"] = \"\\uE654\";\n    Glyphs[\"keyboardPedalE\"] = \"\\uE652\";\n    Glyphs[\"keyboardPedalHalf\"] = \"\\uE656\";\n    Glyphs[\"keyboardPedalHalf2\"] = \"\\uE65B\";\n    Glyphs[\"keyboardPedalHalf3\"] = \"\\uE65C\";\n    Glyphs[\"keyboardPedalHeel1\"] = \"\\uE661\";\n    Glyphs[\"keyboardPedalHeel2\"] = \"\\uE662\";\n    Glyphs[\"keyboardPedalHeel3\"] = \"\\uE663\";\n    Glyphs[\"keyboardPedalHeelToToe\"] = \"\\uE674\";\n    Glyphs[\"keyboardPedalHeelToe\"] = \"\\uE666\";\n    Glyphs[\"keyboardPedalHookEnd\"] = \"\\uE673\";\n    Glyphs[\"keyboardPedalHookStart\"] = \"\\uE672\";\n    Glyphs[\"keyboardPedalHyphen\"] = \"\\uE658\";\n    Glyphs[\"keyboardPedalP\"] = \"\\uE651\";\n    Glyphs[\"keyboardPedalParensLeft\"] = \"\\uE676\";\n    Glyphs[\"keyboardPedalParensRight\"] = \"\\uE677\";\n    Glyphs[\"keyboardPedalPed\"] = \"\\uE650\";\n    Glyphs[\"keyboardPedalS\"] = \"\\uE65A\";\n    Glyphs[\"keyboardPedalSost\"] = \"\\uE659\";\n    Glyphs[\"keyboardPedalToe1\"] = \"\\uE664\";\n    Glyphs[\"keyboardPedalToe2\"] = \"\\uE665\";\n    Glyphs[\"keyboardPedalToeToHeel\"] = \"\\uE675\";\n    Glyphs[\"keyboardPedalUp\"] = \"\\uE655\";\n    Glyphs[\"keyboardPedalUpNotch\"] = \"\\uE657\";\n    Glyphs[\"keyboardPedalUpSpecial\"] = \"\\uE65D\";\n    Glyphs[\"keyboardPlayWithLH\"] = \"\\uE670\";\n    Glyphs[\"keyboardPlayWithLHEnd\"] = \"\\uE671\";\n    Glyphs[\"keyboardPlayWithRH\"] = \"\\uE66E\";\n    Glyphs[\"keyboardPlayWithRHEnd\"] = \"\\uE66F\";\n    Glyphs[\"keyboardPluckInside\"] = \"\\uE667\";\n    Glyphs[\"keyboardRightPedalPictogram\"] = \"\\uE660\";\n    Glyphs[\"kievanAccidentalFlat\"] = \"\\uEC3E\";\n    Glyphs[\"kievanAccidentalSharp\"] = \"\\uEC3D\";\n    Glyphs[\"kievanAugmentationDot\"] = \"\\uEC3C\";\n    Glyphs[\"kievanCClef\"] = \"\\uEC30\";\n    Glyphs[\"kievanEndingSymbol\"] = \"\\uEC31\";\n    Glyphs[\"kievanNote8thStemDown\"] = \"\\uEC3A\";\n    Glyphs[\"kievanNote8thStemUp\"] = \"\\uEC39\";\n    Glyphs[\"kievanNoteBeam\"] = \"\\uEC3B\";\n    Glyphs[\"kievanNoteHalfStaffLine\"] = \"\\uEC35\";\n    Glyphs[\"kievanNoteHalfStaffSpace\"] = \"\\uEC36\";\n    Glyphs[\"kievanNoteQuarterStemDown\"] = \"\\uEC38\";\n    Glyphs[\"kievanNoteQuarterStemUp\"] = \"\\uEC37\";\n    Glyphs[\"kievanNoteReciting\"] = \"\\uEC32\";\n    Glyphs[\"kievanNoteWhole\"] = \"\\uEC33\";\n    Glyphs[\"kievanNoteWholeFinal\"] = \"\\uEC34\";\n    Glyphs[\"kodalyHandDo\"] = \"\\uEC40\";\n    Glyphs[\"kodalyHandFa\"] = \"\\uEC43\";\n    Glyphs[\"kodalyHandLa\"] = \"\\uEC45\";\n    Glyphs[\"kodalyHandMi\"] = \"\\uEC42\";\n    Glyphs[\"kodalyHandRe\"] = \"\\uEC41\";\n    Glyphs[\"kodalyHandSo\"] = \"\\uEC44\";\n    Glyphs[\"kodalyHandTi\"] = \"\\uEC46\";\n    Glyphs[\"leftRepeatSmall\"] = \"\\uE04C\";\n    Glyphs[\"legerLine\"] = \"\\uE022\";\n    Glyphs[\"legerLineNarrow\"] = \"\\uE024\";\n    Glyphs[\"legerLineWide\"] = \"\\uE023\";\n    Glyphs[\"luteBarlineEndRepeat\"] = \"\\uEBA4\";\n    Glyphs[\"luteBarlineFinal\"] = \"\\uEBA5\";\n    Glyphs[\"luteBarlineStartRepeat\"] = \"\\uEBA3\";\n    Glyphs[\"luteDuration16th\"] = \"\\uEBAB\";\n    Glyphs[\"luteDuration32nd\"] = \"\\uEBAC\";\n    Glyphs[\"luteDuration8th\"] = \"\\uEBAA\";\n    Glyphs[\"luteDurationDoubleWhole\"] = \"\\uEBA6\";\n    Glyphs[\"luteDurationHalf\"] = \"\\uEBA8\";\n    Glyphs[\"luteDurationQuarter\"] = \"\\uEBA9\";\n    Glyphs[\"luteDurationWhole\"] = \"\\uEBA7\";\n    Glyphs[\"luteFingeringRHFirst\"] = \"\\uEBAE\";\n    Glyphs[\"luteFingeringRHSecond\"] = \"\\uEBAF\";\n    Glyphs[\"luteFingeringRHThird\"] = \"\\uEBB0\";\n    Glyphs[\"luteFingeringRHThumb\"] = \"\\uEBAD\";\n    Glyphs[\"luteFrench10thCourse\"] = \"\\uEBD0\";\n    Glyphs[\"luteFrench7thCourse\"] = \"\\uEBCD\";\n    Glyphs[\"luteFrench8thCourse\"] = \"\\uEBCE\";\n    Glyphs[\"luteFrench9thCourse\"] = \"\\uEBCF\";\n    Glyphs[\"luteFrenchAppoggiaturaAbove\"] = \"\\uEBD5\";\n    Glyphs[\"luteFrenchAppoggiaturaBelow\"] = \"\\uEBD4\";\n    Glyphs[\"luteFrenchFretA\"] = \"\\uEBC0\";\n    Glyphs[\"luteFrenchFretB\"] = \"\\uEBC1\";\n    Glyphs[\"luteFrenchFretC\"] = \"\\uEBC2\";\n    Glyphs[\"luteFrenchFretD\"] = \"\\uEBC3\";\n    Glyphs[\"luteFrenchFretE\"] = \"\\uEBC4\";\n    Glyphs[\"luteFrenchFretF\"] = \"\\uEBC5\";\n    Glyphs[\"luteFrenchFretG\"] = \"\\uEBC6\";\n    Glyphs[\"luteFrenchFretH\"] = \"\\uEBC7\";\n    Glyphs[\"luteFrenchFretI\"] = \"\\uEBC8\";\n    Glyphs[\"luteFrenchFretK\"] = \"\\uEBC9\";\n    Glyphs[\"luteFrenchFretL\"] = \"\\uEBCA\";\n    Glyphs[\"luteFrenchFretM\"] = \"\\uEBCB\";\n    Glyphs[\"luteFrenchFretN\"] = \"\\uEBCC\";\n    Glyphs[\"luteFrenchMordentInverted\"] = \"\\uEBD3\";\n    Glyphs[\"luteFrenchMordentLower\"] = \"\\uEBD2\";\n    Glyphs[\"luteFrenchMordentUpper\"] = \"\\uEBD1\";\n    Glyphs[\"luteGermanALower\"] = \"\\uEC00\";\n    Glyphs[\"luteGermanAUpper\"] = \"\\uEC17\";\n    Glyphs[\"luteGermanBLower\"] = \"\\uEC01\";\n    Glyphs[\"luteGermanBUpper\"] = \"\\uEC18\";\n    Glyphs[\"luteGermanCLower\"] = \"\\uEC02\";\n    Glyphs[\"luteGermanCUpper\"] = \"\\uEC19\";\n    Glyphs[\"luteGermanDLower\"] = \"\\uEC03\";\n    Glyphs[\"luteGermanDUpper\"] = \"\\uEC1A\";\n    Glyphs[\"luteGermanELower\"] = \"\\uEC04\";\n    Glyphs[\"luteGermanEUpper\"] = \"\\uEC1B\";\n    Glyphs[\"luteGermanFLower\"] = \"\\uEC05\";\n    Glyphs[\"luteGermanFUpper\"] = \"\\uEC1C\";\n    Glyphs[\"luteGermanGLower\"] = \"\\uEC06\";\n    Glyphs[\"luteGermanGUpper\"] = \"\\uEC1D\";\n    Glyphs[\"luteGermanHLower\"] = \"\\uEC07\";\n    Glyphs[\"luteGermanHUpper\"] = \"\\uEC1E\";\n    Glyphs[\"luteGermanILower\"] = \"\\uEC08\";\n    Glyphs[\"luteGermanIUpper\"] = \"\\uEC1F\";\n    Glyphs[\"luteGermanKLower\"] = \"\\uEC09\";\n    Glyphs[\"luteGermanKUpper\"] = \"\\uEC20\";\n    Glyphs[\"luteGermanLLower\"] = \"\\uEC0A\";\n    Glyphs[\"luteGermanLUpper\"] = \"\\uEC21\";\n    Glyphs[\"luteGermanMLower\"] = \"\\uEC0B\";\n    Glyphs[\"luteGermanMUpper\"] = \"\\uEC22\";\n    Glyphs[\"luteGermanNLower\"] = \"\\uEC0C\";\n    Glyphs[\"luteGermanNUpper\"] = \"\\uEC23\";\n    Glyphs[\"luteGermanOLower\"] = \"\\uEC0D\";\n    Glyphs[\"luteGermanPLower\"] = \"\\uEC0E\";\n    Glyphs[\"luteGermanQLower\"] = \"\\uEC0F\";\n    Glyphs[\"luteGermanRLower\"] = \"\\uEC10\";\n    Glyphs[\"luteGermanSLower\"] = \"\\uEC11\";\n    Glyphs[\"luteGermanTLower\"] = \"\\uEC12\";\n    Glyphs[\"luteGermanVLower\"] = \"\\uEC13\";\n    Glyphs[\"luteGermanXLower\"] = \"\\uEC14\";\n    Glyphs[\"luteGermanYLower\"] = \"\\uEC15\";\n    Glyphs[\"luteGermanZLower\"] = \"\\uEC16\";\n    Glyphs[\"luteItalianClefCSolFaUt\"] = \"\\uEBF1\";\n    Glyphs[\"luteItalianClefFFaUt\"] = \"\\uEBF0\";\n    Glyphs[\"luteItalianFret0\"] = \"\\uEBE0\";\n    Glyphs[\"luteItalianFret1\"] = \"\\uEBE1\";\n    Glyphs[\"luteItalianFret2\"] = \"\\uEBE2\";\n    Glyphs[\"luteItalianFret3\"] = \"\\uEBE3\";\n    Glyphs[\"luteItalianFret4\"] = \"\\uEBE4\";\n    Glyphs[\"luteItalianFret5\"] = \"\\uEBE5\";\n    Glyphs[\"luteItalianFret6\"] = \"\\uEBE6\";\n    Glyphs[\"luteItalianFret7\"] = \"\\uEBE7\";\n    Glyphs[\"luteItalianFret8\"] = \"\\uEBE8\";\n    Glyphs[\"luteItalianFret9\"] = \"\\uEBE9\";\n    Glyphs[\"luteItalianHoldFinger\"] = \"\\uEBF4\";\n    Glyphs[\"luteItalianHoldNote\"] = \"\\uEBF3\";\n    Glyphs[\"luteItalianReleaseFinger\"] = \"\\uEBF5\";\n    Glyphs[\"luteItalianTempoFast\"] = \"\\uEBEA\";\n    Glyphs[\"luteItalianTempoNeitherFastNorSlow\"] = \"\\uEBEC\";\n    Glyphs[\"luteItalianTempoSlow\"] = \"\\uEBED\";\n    Glyphs[\"luteItalianTempoSomewhatFast\"] = \"\\uEBEB\";\n    Glyphs[\"luteItalianTempoVerySlow\"] = \"\\uEBEE\";\n    Glyphs[\"luteItalianTimeTriple\"] = \"\\uEBEF\";\n    Glyphs[\"luteItalianTremolo\"] = \"\\uEBF2\";\n    Glyphs[\"luteItalianVibrato\"] = \"\\uEBF6\";\n    Glyphs[\"luteStaff6Lines\"] = \"\\uEBA0\";\n    Glyphs[\"luteStaff6LinesNarrow\"] = \"\\uEBA2\";\n    Glyphs[\"luteStaff6LinesWide\"] = \"\\uEBA1\";\n    Glyphs[\"lyricsElision\"] = \"\\uE551\";\n    Glyphs[\"lyricsElisionNarrow\"] = \"\\uE550\";\n    Glyphs[\"lyricsElisionWide\"] = \"\\uE552\";\n    Glyphs[\"lyricsHyphenBaseline\"] = \"\\uE553\";\n    Glyphs[\"lyricsHyphenBaselineNonBreaking\"] = \"\\uE554\";\n    Glyphs[\"lyricsTextRepeat\"] = \"\\uE555\";\n    Glyphs[\"medRenFlatHardB\"] = \"\\uE9E1\";\n    Glyphs[\"medRenFlatSoftB\"] = \"\\uE9E0\";\n    Glyphs[\"medRenFlatWithDot\"] = \"\\uE9E4\";\n    Glyphs[\"medRenGClefCMN\"] = \"\\uEA24\";\n    Glyphs[\"medRenLiquescenceCMN\"] = \"\\uEA22\";\n    Glyphs[\"medRenLiquescentAscCMN\"] = \"\\uEA26\";\n    Glyphs[\"medRenLiquescentDescCMN\"] = \"\\uEA27\";\n    Glyphs[\"medRenNatural\"] = \"\\uE9E2\";\n    Glyphs[\"medRenNaturalWithCross\"] = \"\\uE9E5\";\n    Glyphs[\"medRenOriscusCMN\"] = \"\\uEA2A\";\n    Glyphs[\"medRenPlicaCMN\"] = \"\\uEA23\";\n    Glyphs[\"medRenPunctumCMN\"] = \"\\uEA25\";\n    Glyphs[\"medRenQuilismaCMN\"] = \"\\uEA28\";\n    Glyphs[\"medRenSharpCroix\"] = \"\\uE9E3\";\n    Glyphs[\"medRenStrophicusCMN\"] = \"\\uEA29\";\n    Glyphs[\"mensuralAlterationSign\"] = \"\\uEA10\";\n    Glyphs[\"mensuralBlackBrevis\"] = \"\\uE952\";\n    Glyphs[\"mensuralBlackBrevisVoid\"] = \"\\uE956\";\n    Glyphs[\"mensuralBlackDragma\"] = \"\\uE95A\";\n    Glyphs[\"mensuralBlackLonga\"] = \"\\uE951\";\n    Glyphs[\"mensuralBlackMaxima\"] = \"\\uE950\";\n    Glyphs[\"mensuralBlackMinima\"] = \"\\uE954\";\n    Glyphs[\"mensuralBlackMinimaVoid\"] = \"\\uE958\";\n    Glyphs[\"mensuralBlackSemibrevis\"] = \"\\uE953\";\n    Glyphs[\"mensuralBlackSemibrevisCaudata\"] = \"\\uE959\";\n    Glyphs[\"mensuralBlackSemibrevisOblique\"] = \"\\uE95B\";\n    Glyphs[\"mensuralBlackSemibrevisVoid\"] = \"\\uE957\";\n    Glyphs[\"mensuralBlackSemiminima\"] = \"\\uE955\";\n    Glyphs[\"mensuralCclef\"] = \"\\uE905\";\n    Glyphs[\"mensuralCclefPetrucciPosHigh\"] = \"\\uE90A\";\n    Glyphs[\"mensuralCclefPetrucciPosHighest\"] = \"\\uE90B\";\n    Glyphs[\"mensuralCclefPetrucciPosLow\"] = \"\\uE908\";\n    Glyphs[\"mensuralCclefPetrucciPosLowest\"] = \"\\uE907\";\n    Glyphs[\"mensuralCclefPetrucciPosMiddle\"] = \"\\uE909\";\n    Glyphs[\"mensuralColorationEndRound\"] = \"\\uEA0F\";\n    Glyphs[\"mensuralColorationEndSquare\"] = \"\\uEA0D\";\n    Glyphs[\"mensuralColorationStartRound\"] = \"\\uEA0E\";\n    Glyphs[\"mensuralColorationStartSquare\"] = \"\\uEA0C\";\n    Glyphs[\"mensuralCombStemDiagonal\"] = \"\\uE940\";\n    Glyphs[\"mensuralCombStemDown\"] = \"\\uE93F\";\n    Glyphs[\"mensuralCombStemDownFlagExtended\"] = \"\\uE948\";\n    Glyphs[\"mensuralCombStemDownFlagFlared\"] = \"\\uE946\";\n    Glyphs[\"mensuralCombStemDownFlagFusa\"] = \"\\uE94C\";\n    Glyphs[\"mensuralCombStemDownFlagLeft\"] = \"\\uE944\";\n    Glyphs[\"mensuralCombStemDownFlagRight\"] = \"\\uE942\";\n    Glyphs[\"mensuralCombStemDownFlagSemiminima\"] = \"\\uE94A\";\n    Glyphs[\"mensuralCombStemUp\"] = \"\\uE93E\";\n    Glyphs[\"mensuralCombStemUpFlagExtended\"] = \"\\uE947\";\n    Glyphs[\"mensuralCombStemUpFlagFlared\"] = \"\\uE945\";\n    Glyphs[\"mensuralCombStemUpFlagFusa\"] = \"\\uE94B\";\n    Glyphs[\"mensuralCombStemUpFlagLeft\"] = \"\\uE943\";\n    Glyphs[\"mensuralCombStemUpFlagRight\"] = \"\\uE941\";\n    Glyphs[\"mensuralCombStemUpFlagSemiminima\"] = \"\\uE949\";\n    Glyphs[\"mensuralCustosCheckmark\"] = \"\\uEA0A\";\n    Glyphs[\"mensuralCustosDown\"] = \"\\uEA03\";\n    Glyphs[\"mensuralCustosTurn\"] = \"\\uEA0B\";\n    Glyphs[\"mensuralCustosUp\"] = \"\\uEA02\";\n    Glyphs[\"mensuralFclef\"] = \"\\uE903\";\n    Glyphs[\"mensuralFclefPetrucci\"] = \"\\uE904\";\n    Glyphs[\"mensuralGclef\"] = \"\\uE900\";\n    Glyphs[\"mensuralGclefPetrucci\"] = \"\\uE901\";\n    Glyphs[\"mensuralModusImperfectumVert\"] = \"\\uE92D\";\n    Glyphs[\"mensuralModusPerfectumVert\"] = \"\\uE92C\";\n    Glyphs[\"mensuralNoteheadLongaBlack\"] = \"\\uE934\";\n    Glyphs[\"mensuralNoteheadLongaBlackVoid\"] = \"\\uE936\";\n    Glyphs[\"mensuralNoteheadLongaVoid\"] = \"\\uE935\";\n    Glyphs[\"mensuralNoteheadLongaWhite\"] = \"\\uE937\";\n    Glyphs[\"mensuralNoteheadMaximaBlack\"] = \"\\uE930\";\n    Glyphs[\"mensuralNoteheadMaximaBlackVoid\"] = \"\\uE932\";\n    Glyphs[\"mensuralNoteheadMaximaVoid\"] = \"\\uE931\";\n    Glyphs[\"mensuralNoteheadMaximaWhite\"] = \"\\uE933\";\n    Glyphs[\"mensuralNoteheadMinimaWhite\"] = \"\\uE93C\";\n    Glyphs[\"mensuralNoteheadSemibrevisBlack\"] = \"\\uE938\";\n    Glyphs[\"mensuralNoteheadSemibrevisBlackVoid\"] = \"\\uE93A\";\n    Glyphs[\"mensuralNoteheadSemibrevisBlackVoidTurned\"] = \"\\uE93B\";\n    Glyphs[\"mensuralNoteheadSemibrevisVoid\"] = \"\\uE939\";\n    Glyphs[\"mensuralNoteheadSemiminimaWhite\"] = \"\\uE93D\";\n    Glyphs[\"mensuralObliqueAsc2ndBlack\"] = \"\\uE970\";\n    Glyphs[\"mensuralObliqueAsc2ndBlackVoid\"] = \"\\uE972\";\n    Glyphs[\"mensuralObliqueAsc2ndVoid\"] = \"\\uE971\";\n    Glyphs[\"mensuralObliqueAsc2ndWhite\"] = \"\\uE973\";\n    Glyphs[\"mensuralObliqueAsc3rdBlack\"] = \"\\uE974\";\n    Glyphs[\"mensuralObliqueAsc3rdBlackVoid\"] = \"\\uE976\";\n    Glyphs[\"mensuralObliqueAsc3rdVoid\"] = \"\\uE975\";\n    Glyphs[\"mensuralObliqueAsc3rdWhite\"] = \"\\uE977\";\n    Glyphs[\"mensuralObliqueAsc4thBlack\"] = \"\\uE978\";\n    Glyphs[\"mensuralObliqueAsc4thBlackVoid\"] = \"\\uE97A\";\n    Glyphs[\"mensuralObliqueAsc4thVoid\"] = \"\\uE979\";\n    Glyphs[\"mensuralObliqueAsc4thWhite\"] = \"\\uE97B\";\n    Glyphs[\"mensuralObliqueAsc5thBlack\"] = \"\\uE97C\";\n    Glyphs[\"mensuralObliqueAsc5thBlackVoid\"] = \"\\uE97E\";\n    Glyphs[\"mensuralObliqueAsc5thVoid\"] = \"\\uE97D\";\n    Glyphs[\"mensuralObliqueAsc5thWhite\"] = \"\\uE97F\";\n    Glyphs[\"mensuralObliqueDesc2ndBlack\"] = \"\\uE980\";\n    Glyphs[\"mensuralObliqueDesc2ndBlackVoid\"] = \"\\uE982\";\n    Glyphs[\"mensuralObliqueDesc2ndVoid\"] = \"\\uE981\";\n    Glyphs[\"mensuralObliqueDesc2ndWhite\"] = \"\\uE983\";\n    Glyphs[\"mensuralObliqueDesc3rdBlack\"] = \"\\uE984\";\n    Glyphs[\"mensuralObliqueDesc3rdBlackVoid\"] = \"\\uE986\";\n    Glyphs[\"mensuralObliqueDesc3rdVoid\"] = \"\\uE985\";\n    Glyphs[\"mensuralObliqueDesc3rdWhite\"] = \"\\uE987\";\n    Glyphs[\"mensuralObliqueDesc4thBlack\"] = \"\\uE988\";\n    Glyphs[\"mensuralObliqueDesc4thBlackVoid\"] = \"\\uE98A\";\n    Glyphs[\"mensuralObliqueDesc4thVoid\"] = \"\\uE989\";\n    Glyphs[\"mensuralObliqueDesc4thWhite\"] = \"\\uE98B\";\n    Glyphs[\"mensuralObliqueDesc5thBlack\"] = \"\\uE98C\";\n    Glyphs[\"mensuralObliqueDesc5thBlackVoid\"] = \"\\uE98E\";\n    Glyphs[\"mensuralObliqueDesc5thVoid\"] = \"\\uE98D\";\n    Glyphs[\"mensuralObliqueDesc5thWhite\"] = \"\\uE98F\";\n    Glyphs[\"mensuralProlation1\"] = \"\\uE910\";\n    Glyphs[\"mensuralProlation10\"] = \"\\uE919\";\n    Glyphs[\"mensuralProlation11\"] = \"\\uE91A\";\n    Glyphs[\"mensuralProlation2\"] = \"\\uE911\";\n    Glyphs[\"mensuralProlation3\"] = \"\\uE912\";\n    Glyphs[\"mensuralProlation4\"] = \"\\uE913\";\n    Glyphs[\"mensuralProlation5\"] = \"\\uE914\";\n    Glyphs[\"mensuralProlation6\"] = \"\\uE915\";\n    Glyphs[\"mensuralProlation7\"] = \"\\uE916\";\n    Glyphs[\"mensuralProlation8\"] = \"\\uE917\";\n    Glyphs[\"mensuralProlation9\"] = \"\\uE918\";\n    Glyphs[\"mensuralProlationCombiningDot\"] = \"\\uE920\";\n    Glyphs[\"mensuralProlationCombiningDotVoid\"] = \"\\uE924\";\n    Glyphs[\"mensuralProlationCombiningStroke\"] = \"\\uE925\";\n    Glyphs[\"mensuralProlationCombiningThreeDots\"] = \"\\uE922\";\n    Glyphs[\"mensuralProlationCombiningThreeDotsTri\"] = \"\\uE923\";\n    Glyphs[\"mensuralProlationCombiningTwoDots\"] = \"\\uE921\";\n    Glyphs[\"mensuralProportion1\"] = \"\\uE926\";\n    Glyphs[\"mensuralProportion2\"] = \"\\uE927\";\n    Glyphs[\"mensuralProportion3\"] = \"\\uE928\";\n    Glyphs[\"mensuralProportion4\"] = \"\\uE929\";\n    Glyphs[\"mensuralProportion5\"] = \"\\uEE90\";\n    Glyphs[\"mensuralProportion6\"] = \"\\uEE91\";\n    Glyphs[\"mensuralProportion7\"] = \"\\uEE92\";\n    Glyphs[\"mensuralProportion8\"] = \"\\uEE93\";\n    Glyphs[\"mensuralProportion9\"] = \"\\uEE94\";\n    Glyphs[\"mensuralProportionMajor\"] = \"\\uE92B\";\n    Glyphs[\"mensuralProportionMinor\"] = \"\\uE92A\";\n    Glyphs[\"mensuralProportionProportioDupla1\"] = \"\\uE91C\";\n    Glyphs[\"mensuralProportionProportioDupla2\"] = \"\\uE91D\";\n    Glyphs[\"mensuralProportionProportioQuadrupla\"] = \"\\uE91F\";\n    Glyphs[\"mensuralProportionProportioTripla\"] = \"\\uE91E\";\n    Glyphs[\"mensuralProportionTempusPerfectum\"] = \"\\uE91B\";\n    Glyphs[\"mensuralRestBrevis\"] = \"\\uE9F3\";\n    Glyphs[\"mensuralRestFusa\"] = \"\\uE9F7\";\n    Glyphs[\"mensuralRestLongaImperfecta\"] = \"\\uE9F2\";\n    Glyphs[\"mensuralRestLongaPerfecta\"] = \"\\uE9F1\";\n    Glyphs[\"mensuralRestMaxima\"] = \"\\uE9F0\";\n    Glyphs[\"mensuralRestMinima\"] = \"\\uE9F5\";\n    Glyphs[\"mensuralRestSemibrevis\"] = \"\\uE9F4\";\n    Glyphs[\"mensuralRestSemifusa\"] = \"\\uE9F8\";\n    Glyphs[\"mensuralRestSemiminima\"] = \"\\uE9F6\";\n    Glyphs[\"mensuralSignumDown\"] = \"\\uEA01\";\n    Glyphs[\"mensuralSignumUp\"] = \"\\uEA00\";\n    Glyphs[\"mensuralTempusImperfectumHoriz\"] = \"\\uE92F\";\n    Glyphs[\"mensuralTempusPerfectumHoriz\"] = \"\\uE92E\";\n    Glyphs[\"mensuralWhiteBrevis\"] = \"\\uE95E\";\n    Glyphs[\"mensuralWhiteFusa\"] = \"\\uE961\";\n    Glyphs[\"mensuralWhiteLonga\"] = \"\\uE95D\";\n    Glyphs[\"mensuralWhiteMaxima\"] = \"\\uE95C\";\n    Glyphs[\"mensuralWhiteMinima\"] = \"\\uE95F\";\n    Glyphs[\"mensuralWhiteSemibrevis\"] = \"\\uE962\";\n    Glyphs[\"mensuralWhiteSemiminima\"] = \"\\uE960\";\n    Glyphs[\"metAugmentationDot\"] = \"\\uECB7\";\n    Glyphs[\"metNote1024thDown\"] = \"\\uECB6\";\n    Glyphs[\"metNote1024thUp\"] = \"\\uECB5\";\n    Glyphs[\"metNote128thDown\"] = \"\\uECB0\";\n    Glyphs[\"metNote128thUp\"] = \"\\uECAF\";\n    Glyphs[\"metNote16thDown\"] = \"\\uECAA\";\n    Glyphs[\"metNote16thUp\"] = \"\\uECA9\";\n    Glyphs[\"metNote256thDown\"] = \"\\uECB2\";\n    Glyphs[\"metNote256thUp\"] = \"\\uECB1\";\n    Glyphs[\"metNote32ndDown\"] = \"\\uECAC\";\n    Glyphs[\"metNote32ndUp\"] = \"\\uECAB\";\n    Glyphs[\"metNote512thDown\"] = \"\\uECB4\";\n    Glyphs[\"metNote512thUp\"] = \"\\uECB3\";\n    Glyphs[\"metNote64thDown\"] = \"\\uECAE\";\n    Glyphs[\"metNote64thUp\"] = \"\\uECAD\";\n    Glyphs[\"metNote8thDown\"] = \"\\uECA8\";\n    Glyphs[\"metNote8thUp\"] = \"\\uECA7\";\n    Glyphs[\"metNoteDoubleWhole\"] = \"\\uECA0\";\n    Glyphs[\"metNoteDoubleWholeSquare\"] = \"\\uECA1\";\n    Glyphs[\"metNoteHalfDown\"] = \"\\uECA4\";\n    Glyphs[\"metNoteHalfUp\"] = \"\\uECA3\";\n    Glyphs[\"metNoteQuarterDown\"] = \"\\uECA6\";\n    Glyphs[\"metNoteQuarterUp\"] = \"\\uECA5\";\n    Glyphs[\"metNoteWhole\"] = \"\\uECA2\";\n    Glyphs[\"metricModulationArrowLeft\"] = \"\\uEC63\";\n    Glyphs[\"metricModulationArrowRight\"] = \"\\uEC64\";\n    Glyphs[\"miscDoNotCopy\"] = \"\\uEC61\";\n    Glyphs[\"miscDoNotPhotocopy\"] = \"\\uEC60\";\n    Glyphs[\"miscEyeglasses\"] = \"\\uEC62\";\n    Glyphs[\"note1024thDown\"] = \"\\uE1E6\";\n    Glyphs[\"note1024thUp\"] = \"\\uE1E5\";\n    Glyphs[\"note128thDown\"] = \"\\uE1E0\";\n    Glyphs[\"note128thUp\"] = \"\\uE1DF\";\n    Glyphs[\"note16thDown\"] = \"\\uE1DA\";\n    Glyphs[\"note16thUp\"] = \"\\uE1D9\";\n    Glyphs[\"note256thDown\"] = \"\\uE1E2\";\n    Glyphs[\"note256thUp\"] = \"\\uE1E1\";\n    Glyphs[\"note32ndDown\"] = \"\\uE1DC\";\n    Glyphs[\"note32ndUp\"] = \"\\uE1DB\";\n    Glyphs[\"note512thDown\"] = \"\\uE1E4\";\n    Glyphs[\"note512thUp\"] = \"\\uE1E3\";\n    Glyphs[\"note64thDown\"] = \"\\uE1DE\";\n    Glyphs[\"note64thUp\"] = \"\\uE1DD\";\n    Glyphs[\"note8thDown\"] = \"\\uE1D8\";\n    Glyphs[\"note8thUp\"] = \"\\uE1D7\";\n    Glyphs[\"noteABlack\"] = \"\\uE197\";\n    Glyphs[\"noteAFlatBlack\"] = \"\\uE196\";\n    Glyphs[\"noteAFlatHalf\"] = \"\\uE17F\";\n    Glyphs[\"noteAFlatWhole\"] = \"\\uE168\";\n    Glyphs[\"noteAHalf\"] = \"\\uE180\";\n    Glyphs[\"noteASharpBlack\"] = \"\\uE198\";\n    Glyphs[\"noteASharpHalf\"] = \"\\uE181\";\n    Glyphs[\"noteASharpWhole\"] = \"\\uE16A\";\n    Glyphs[\"noteAWhole\"] = \"\\uE169\";\n    Glyphs[\"noteBBlack\"] = \"\\uE19A\";\n    Glyphs[\"noteBFlatBlack\"] = \"\\uE199\";\n    Glyphs[\"noteBFlatHalf\"] = \"\\uE182\";\n    Glyphs[\"noteBFlatWhole\"] = \"\\uE16B\";\n    Glyphs[\"noteBHalf\"] = \"\\uE183\";\n    Glyphs[\"noteBSharpBlack\"] = \"\\uE19B\";\n    Glyphs[\"noteBSharpHalf\"] = \"\\uE184\";\n    Glyphs[\"noteBSharpWhole\"] = \"\\uE16D\";\n    Glyphs[\"noteBWhole\"] = \"\\uE16C\";\n    Glyphs[\"noteCBlack\"] = \"\\uE19D\";\n    Glyphs[\"noteCFlatBlack\"] = \"\\uE19C\";\n    Glyphs[\"noteCFlatHalf\"] = \"\\uE185\";\n    Glyphs[\"noteCFlatWhole\"] = \"\\uE16E\";\n    Glyphs[\"noteCHalf\"] = \"\\uE186\";\n    Glyphs[\"noteCSharpBlack\"] = \"\\uE19E\";\n    Glyphs[\"noteCSharpHalf\"] = \"\\uE187\";\n    Glyphs[\"noteCSharpWhole\"] = \"\\uE170\";\n    Glyphs[\"noteCWhole\"] = \"\\uE16F\";\n    Glyphs[\"noteDBlack\"] = \"\\uE1A0\";\n    Glyphs[\"noteDFlatBlack\"] = \"\\uE19F\";\n    Glyphs[\"noteDFlatHalf\"] = \"\\uE188\";\n    Glyphs[\"noteDFlatWhole\"] = \"\\uE171\";\n    Glyphs[\"noteDHalf\"] = \"\\uE189\";\n    Glyphs[\"noteDSharpBlack\"] = \"\\uE1A1\";\n    Glyphs[\"noteDSharpHalf\"] = \"\\uE18A\";\n    Glyphs[\"noteDSharpWhole\"] = \"\\uE173\";\n    Glyphs[\"noteDWhole\"] = \"\\uE172\";\n    Glyphs[\"noteDiBlack\"] = \"\\uEEF2\";\n    Glyphs[\"noteDiHalf\"] = \"\\uEEE9\";\n    Glyphs[\"noteDiWhole\"] = \"\\uEEE0\";\n    Glyphs[\"noteDoBlack\"] = \"\\uE160\";\n    Glyphs[\"noteDoHalf\"] = \"\\uE158\";\n    Glyphs[\"noteDoWhole\"] = \"\\uE150\";\n    Glyphs[\"noteDoubleWhole\"] = \"\\uE1D0\";\n    Glyphs[\"noteDoubleWholeSquare\"] = \"\\uE1D1\";\n    Glyphs[\"noteEBlack\"] = \"\\uE1A3\";\n    Glyphs[\"noteEFlatBlack\"] = \"\\uE1A2\";\n    Glyphs[\"noteEFlatHalf\"] = \"\\uE18B\";\n    Glyphs[\"noteEFlatWhole\"] = \"\\uE174\";\n    Glyphs[\"noteEHalf\"] = \"\\uE18C\";\n    Glyphs[\"noteESharpBlack\"] = \"\\uE1A4\";\n    Glyphs[\"noteESharpHalf\"] = \"\\uE18D\";\n    Glyphs[\"noteESharpWhole\"] = \"\\uE176\";\n    Glyphs[\"noteEWhole\"] = \"\\uE175\";\n    Glyphs[\"noteEmptyBlack\"] = \"\\uE1AF\";\n    Glyphs[\"noteEmptyHalf\"] = \"\\uE1AE\";\n    Glyphs[\"noteEmptyWhole\"] = \"\\uE1AD\";\n    Glyphs[\"noteFBlack\"] = \"\\uE1A6\";\n    Glyphs[\"noteFFlatBlack\"] = \"\\uE1A5\";\n    Glyphs[\"noteFFlatHalf\"] = \"\\uE18E\";\n    Glyphs[\"noteFFlatWhole\"] = \"\\uE177\";\n    Glyphs[\"noteFHalf\"] = \"\\uE18F\";\n    Glyphs[\"noteFSharpBlack\"] = \"\\uE1A7\";\n    Glyphs[\"noteFSharpHalf\"] = \"\\uE190\";\n    Glyphs[\"noteFSharpWhole\"] = \"\\uE179\";\n    Glyphs[\"noteFWhole\"] = \"\\uE178\";\n    Glyphs[\"noteFaBlack\"] = \"\\uE163\";\n    Glyphs[\"noteFaHalf\"] = \"\\uE15B\";\n    Glyphs[\"noteFaWhole\"] = \"\\uE153\";\n    Glyphs[\"noteFiBlack\"] = \"\\uEEF6\";\n    Glyphs[\"noteFiHalf\"] = \"\\uEEED\";\n    Glyphs[\"noteFiWhole\"] = \"\\uEEE4\";\n    Glyphs[\"noteGBlack\"] = \"\\uE1A9\";\n    Glyphs[\"noteGFlatBlack\"] = \"\\uE1A8\";\n    Glyphs[\"noteGFlatHalf\"] = \"\\uE191\";\n    Glyphs[\"noteGFlatWhole\"] = \"\\uE17A\";\n    Glyphs[\"noteGHalf\"] = \"\\uE192\";\n    Glyphs[\"noteGSharpBlack\"] = \"\\uE1AA\";\n    Glyphs[\"noteGSharpHalf\"] = \"\\uE193\";\n    Glyphs[\"noteGSharpWhole\"] = \"\\uE17C\";\n    Glyphs[\"noteGWhole\"] = \"\\uE17B\";\n    Glyphs[\"noteHBlack\"] = \"\\uE1AB\";\n    Glyphs[\"noteHHalf\"] = \"\\uE194\";\n    Glyphs[\"noteHSharpBlack\"] = \"\\uE1AC\";\n    Glyphs[\"noteHSharpHalf\"] = \"\\uE195\";\n    Glyphs[\"noteHSharpWhole\"] = \"\\uE17E\";\n    Glyphs[\"noteHWhole\"] = \"\\uE17D\";\n    Glyphs[\"noteHalfDown\"] = \"\\uE1D4\";\n    Glyphs[\"noteHalfUp\"] = \"\\uE1D3\";\n    Glyphs[\"noteLaBlack\"] = \"\\uE165\";\n    Glyphs[\"noteLaHalf\"] = \"\\uE15D\";\n    Glyphs[\"noteLaWhole\"] = \"\\uE155\";\n    Glyphs[\"noteLeBlack\"] = \"\\uEEF9\";\n    Glyphs[\"noteLeHalf\"] = \"\\uEEF0\";\n    Glyphs[\"noteLeWhole\"] = \"\\uEEE7\";\n    Glyphs[\"noteLiBlack\"] = \"\\uEEF8\";\n    Glyphs[\"noteLiHalf\"] = \"\\uEEEF\";\n    Glyphs[\"noteLiWhole\"] = \"\\uEEE6\";\n    Glyphs[\"noteMeBlack\"] = \"\\uEEF5\";\n    Glyphs[\"noteMeHalf\"] = \"\\uEEEC\";\n    Glyphs[\"noteMeWhole\"] = \"\\uEEE3\";\n    Glyphs[\"noteMiBlack\"] = \"\\uE162\";\n    Glyphs[\"noteMiHalf\"] = \"\\uE15A\";\n    Glyphs[\"noteMiWhole\"] = \"\\uE152\";\n    Glyphs[\"noteQuarterDown\"] = \"\\uE1D6\";\n    Glyphs[\"noteQuarterUp\"] = \"\\uE1D5\";\n    Glyphs[\"noteRaBlack\"] = \"\\uEEF4\";\n    Glyphs[\"noteRaHalf\"] = \"\\uEEEB\";\n    Glyphs[\"noteRaWhole\"] = \"\\uEEE2\";\n    Glyphs[\"noteReBlack\"] = \"\\uE161\";\n    Glyphs[\"noteReHalf\"] = \"\\uE159\";\n    Glyphs[\"noteReWhole\"] = \"\\uE151\";\n    Glyphs[\"noteRiBlack\"] = \"\\uEEF3\";\n    Glyphs[\"noteRiHalf\"] = \"\\uEEEA\";\n    Glyphs[\"noteRiWhole\"] = \"\\uEEE1\";\n    Glyphs[\"noteSeBlack\"] = \"\\uEEF7\";\n    Glyphs[\"noteSeHalf\"] = \"\\uEEEE\";\n    Glyphs[\"noteSeWhole\"] = \"\\uEEE5\";\n    Glyphs[\"noteShapeArrowheadLeftBlack\"] = \"\\uE1C9\";\n    Glyphs[\"noteShapeArrowheadLeftDoubleWhole\"] = \"\\uECDC\";\n    Glyphs[\"noteShapeArrowheadLeftWhite\"] = \"\\uE1C8\";\n    Glyphs[\"noteShapeDiamondBlack\"] = \"\\uE1B9\";\n    Glyphs[\"noteShapeDiamondDoubleWhole\"] = \"\\uECD4\";\n    Glyphs[\"noteShapeDiamondWhite\"] = \"\\uE1B8\";\n    Glyphs[\"noteShapeIsoscelesTriangleBlack\"] = \"\\uE1C5\";\n    Glyphs[\"noteShapeIsoscelesTriangleDoubleWhole\"] = \"\\uECDA\";\n    Glyphs[\"noteShapeIsoscelesTriangleWhite\"] = \"\\uE1C4\";\n    Glyphs[\"noteShapeKeystoneBlack\"] = \"\\uE1C1\";\n    Glyphs[\"noteShapeKeystoneDoubleWhole\"] = \"\\uECD8\";\n    Glyphs[\"noteShapeKeystoneWhite\"] = \"\\uE1C0\";\n    Glyphs[\"noteShapeMoonBlack\"] = \"\\uE1BD\";\n    Glyphs[\"noteShapeMoonDoubleWhole\"] = \"\\uECD6\";\n    Glyphs[\"noteShapeMoonLeftBlack\"] = \"\\uE1C7\";\n    Glyphs[\"noteShapeMoonLeftDoubleWhole\"] = \"\\uECDB\";\n    Glyphs[\"noteShapeMoonLeftWhite\"] = \"\\uE1C6\";\n    Glyphs[\"noteShapeMoonWhite\"] = \"\\uE1BC\";\n    Glyphs[\"noteShapeQuarterMoonBlack\"] = \"\\uE1C3\";\n    Glyphs[\"noteShapeQuarterMoonDoubleWhole\"] = \"\\uECD9\";\n    Glyphs[\"noteShapeQuarterMoonWhite\"] = \"\\uE1C2\";\n    Glyphs[\"noteShapeRoundBlack\"] = \"\\uE1B1\";\n    Glyphs[\"noteShapeRoundDoubleWhole\"] = \"\\uECD0\";\n    Glyphs[\"noteShapeRoundWhite\"] = \"\\uE1B0\";\n    Glyphs[\"noteShapeSquareBlack\"] = \"\\uE1B3\";\n    Glyphs[\"noteShapeSquareDoubleWhole\"] = \"\\uECD1\";\n    Glyphs[\"noteShapeSquareWhite\"] = \"\\uE1B2\";\n    Glyphs[\"noteShapeTriangleLeftBlack\"] = \"\\uE1B7\";\n    Glyphs[\"noteShapeTriangleLeftDoubleWhole\"] = \"\\uECD3\";\n    Glyphs[\"noteShapeTriangleLeftWhite\"] = \"\\uE1B6\";\n    Glyphs[\"noteShapeTriangleRightBlack\"] = \"\\uE1B5\";\n    Glyphs[\"noteShapeTriangleRightDoubleWhole\"] = \"\\uECD2\";\n    Glyphs[\"noteShapeTriangleRightWhite\"] = \"\\uE1B4\";\n    Glyphs[\"noteShapeTriangleRoundBlack\"] = \"\\uE1BF\";\n    Glyphs[\"noteShapeTriangleRoundDoubleWhole\"] = \"\\uECD7\";\n    Glyphs[\"noteShapeTriangleRoundLeftBlack\"] = \"\\uE1CB\";\n    Glyphs[\"noteShapeTriangleRoundLeftDoubleWhole\"] = \"\\uECDD\";\n    Glyphs[\"noteShapeTriangleRoundLeftWhite\"] = \"\\uE1CA\";\n    Glyphs[\"noteShapeTriangleRoundWhite\"] = \"\\uE1BE\";\n    Glyphs[\"noteShapeTriangleUpBlack\"] = \"\\uE1BB\";\n    Glyphs[\"noteShapeTriangleUpDoubleWhole\"] = \"\\uECD5\";\n    Glyphs[\"noteShapeTriangleUpWhite\"] = \"\\uE1BA\";\n    Glyphs[\"noteSiBlack\"] = \"\\uE167\";\n    Glyphs[\"noteSiHalf\"] = \"\\uE15F\";\n    Glyphs[\"noteSiWhole\"] = \"\\uE157\";\n    Glyphs[\"noteSoBlack\"] = \"\\uE164\";\n    Glyphs[\"noteSoHalf\"] = \"\\uE15C\";\n    Glyphs[\"noteSoWhole\"] = \"\\uE154\";\n    Glyphs[\"noteTeBlack\"] = \"\\uEEFA\";\n    Glyphs[\"noteTeHalf\"] = \"\\uEEF1\";\n    Glyphs[\"noteTeWhole\"] = \"\\uEEE8\";\n    Glyphs[\"noteTiBlack\"] = \"\\uE166\";\n    Glyphs[\"noteTiHalf\"] = \"\\uE15E\";\n    Glyphs[\"noteTiWhole\"] = \"\\uE156\";\n    Glyphs[\"noteWhole\"] = \"\\uE1D2\";\n    Glyphs[\"noteheadBlack\"] = \"\\uE0A4\";\n    Glyphs[\"noteheadCircleSlash\"] = \"\\uE0F7\";\n    Glyphs[\"noteheadCircleX\"] = \"\\uE0B3\";\n    Glyphs[\"noteheadCircleXDoubleWhole\"] = \"\\uE0B0\";\n    Glyphs[\"noteheadCircleXHalf\"] = \"\\uE0B2\";\n    Glyphs[\"noteheadCircleXWhole\"] = \"\\uE0B1\";\n    Glyphs[\"noteheadCircledBlack\"] = \"\\uE0E4\";\n    Glyphs[\"noteheadCircledBlackLarge\"] = \"\\uE0E8\";\n    Glyphs[\"noteheadCircledDoubleWhole\"] = \"\\uE0E7\";\n    Glyphs[\"noteheadCircledDoubleWholeLarge\"] = \"\\uE0EB\";\n    Glyphs[\"noteheadCircledHalf\"] = \"\\uE0E5\";\n    Glyphs[\"noteheadCircledHalfLarge\"] = \"\\uE0E9\";\n    Glyphs[\"noteheadCircledWhole\"] = \"\\uE0E6\";\n    Glyphs[\"noteheadCircledWholeLarge\"] = \"\\uE0EA\";\n    Glyphs[\"noteheadCircledXLarge\"] = \"\\uE0EC\";\n    Glyphs[\"noteheadClusterDoubleWhole2nd\"] = \"\\uE124\";\n    Glyphs[\"noteheadClusterDoubleWhole3rd\"] = \"\\uE128\";\n    Glyphs[\"noteheadClusterDoubleWholeBottom\"] = \"\\uE12E\";\n    Glyphs[\"noteheadClusterDoubleWholeMiddle\"] = \"\\uE12D\";\n    Glyphs[\"noteheadClusterDoubleWholeTop\"] = \"\\uE12C\";\n    Glyphs[\"noteheadClusterHalf2nd\"] = \"\\uE126\";\n    Glyphs[\"noteheadClusterHalf3rd\"] = \"\\uE12A\";\n    Glyphs[\"noteheadClusterHalfBottom\"] = \"\\uE134\";\n    Glyphs[\"noteheadClusterHalfMiddle\"] = \"\\uE133\";\n    Glyphs[\"noteheadClusterHalfTop\"] = \"\\uE132\";\n    Glyphs[\"noteheadClusterQuarter2nd\"] = \"\\uE127\";\n    Glyphs[\"noteheadClusterQuarter3rd\"] = \"\\uE12B\";\n    Glyphs[\"noteheadClusterQuarterBottom\"] = \"\\uE137\";\n    Glyphs[\"noteheadClusterQuarterMiddle\"] = \"\\uE136\";\n    Glyphs[\"noteheadClusterQuarterTop\"] = \"\\uE135\";\n    Glyphs[\"noteheadClusterRoundBlack\"] = \"\\uE123\";\n    Glyphs[\"noteheadClusterRoundWhite\"] = \"\\uE122\";\n    Glyphs[\"noteheadClusterSquareBlack\"] = \"\\uE121\";\n    Glyphs[\"noteheadClusterSquareWhite\"] = \"\\uE120\";\n    Glyphs[\"noteheadClusterWhole2nd\"] = \"\\uE125\";\n    Glyphs[\"noteheadClusterWhole3rd\"] = \"\\uE129\";\n    Glyphs[\"noteheadClusterWholeBottom\"] = \"\\uE131\";\n    Glyphs[\"noteheadClusterWholeMiddle\"] = \"\\uE130\";\n    Glyphs[\"noteheadClusterWholeTop\"] = \"\\uE12F\";\n    Glyphs[\"noteheadCowellEleventhNoteSeriesHalf\"] = \"\\uEEAE\";\n    Glyphs[\"noteheadCowellEleventhNoteSeriesWhole\"] = \"\\uEEAD\";\n    Glyphs[\"noteheadCowellEleventhSeriesBlack\"] = \"\\uEEAF\";\n    Glyphs[\"noteheadCowellFifteenthNoteSeriesBlack\"] = \"\\uEEB5\";\n    Glyphs[\"noteheadCowellFifteenthNoteSeriesHalf\"] = \"\\uEEB4\";\n    Glyphs[\"noteheadCowellFifteenthNoteSeriesWhole\"] = \"\\uEEB3\";\n    Glyphs[\"noteheadCowellFifthNoteSeriesBlack\"] = \"\\uEEA6\";\n    Glyphs[\"noteheadCowellFifthNoteSeriesHalf\"] = \"\\uEEA5\";\n    Glyphs[\"noteheadCowellFifthNoteSeriesWhole\"] = \"\\uEEA4\";\n    Glyphs[\"noteheadCowellNinthNoteSeriesBlack\"] = \"\\uEEAC\";\n    Glyphs[\"noteheadCowellNinthNoteSeriesHalf\"] = \"\\uEEAB\";\n    Glyphs[\"noteheadCowellNinthNoteSeriesWhole\"] = \"\\uEEAA\";\n    Glyphs[\"noteheadCowellSeventhNoteSeriesBlack\"] = \"\\uEEA9\";\n    Glyphs[\"noteheadCowellSeventhNoteSeriesHalf\"] = \"\\uEEA8\";\n    Glyphs[\"noteheadCowellSeventhNoteSeriesWhole\"] = \"\\uEEA7\";\n    Glyphs[\"noteheadCowellThirdNoteSeriesBlack\"] = \"\\uEEA3\";\n    Glyphs[\"noteheadCowellThirdNoteSeriesHalf\"] = \"\\uEEA2\";\n    Glyphs[\"noteheadCowellThirdNoteSeriesWhole\"] = \"\\uEEA1\";\n    Glyphs[\"noteheadCowellThirteenthNoteSeriesBlack\"] = \"\\uEEB2\";\n    Glyphs[\"noteheadCowellThirteenthNoteSeriesHalf\"] = \"\\uEEB1\";\n    Glyphs[\"noteheadCowellThirteenthNoteSeriesWhole\"] = \"\\uEEB0\";\n    Glyphs[\"noteheadDiamondBlack\"] = \"\\uE0DB\";\n    Glyphs[\"noteheadDiamondBlackOld\"] = \"\\uE0E2\";\n    Glyphs[\"noteheadDiamondBlackWide\"] = \"\\uE0DC\";\n    Glyphs[\"noteheadDiamondClusterBlack2nd\"] = \"\\uE139\";\n    Glyphs[\"noteheadDiamondClusterBlack3rd\"] = \"\\uE13B\";\n    Glyphs[\"noteheadDiamondClusterBlackBottom\"] = \"\\uE141\";\n    Glyphs[\"noteheadDiamondClusterBlackMiddle\"] = \"\\uE140\";\n    Glyphs[\"noteheadDiamondClusterBlackTop\"] = \"\\uE13F\";\n    Glyphs[\"noteheadDiamondClusterWhite2nd\"] = \"\\uE138\";\n    Glyphs[\"noteheadDiamondClusterWhite3rd\"] = \"\\uE13A\";\n    Glyphs[\"noteheadDiamondClusterWhiteBottom\"] = \"\\uE13E\";\n    Glyphs[\"noteheadDiamondClusterWhiteMiddle\"] = \"\\uE13D\";\n    Glyphs[\"noteheadDiamondClusterWhiteTop\"] = \"\\uE13C\";\n    Glyphs[\"noteheadDiamondDoubleWhole\"] = \"\\uE0D7\";\n    Glyphs[\"noteheadDiamondDoubleWholeOld\"] = \"\\uE0DF\";\n    Glyphs[\"noteheadDiamondHalf\"] = \"\\uE0D9\";\n    Glyphs[\"noteheadDiamondHalfFilled\"] = \"\\uE0E3\";\n    Glyphs[\"noteheadDiamondHalfOld\"] = \"\\uE0E1\";\n    Glyphs[\"noteheadDiamondHalfWide\"] = \"\\uE0DA\";\n    Glyphs[\"noteheadDiamondOpen\"] = \"\\uE0FC\";\n    Glyphs[\"noteheadDiamondWhite\"] = \"\\uE0DD\";\n    Glyphs[\"noteheadDiamondWhiteWide\"] = \"\\uE0DE\";\n    Glyphs[\"noteheadDiamondWhole\"] = \"\\uE0D8\";\n    Glyphs[\"noteheadDiamondWholeOld\"] = \"\\uE0E0\";\n    Glyphs[\"noteheadDoubleWhole\"] = \"\\uE0A0\";\n    Glyphs[\"noteheadDoubleWholeSquare\"] = \"\\uE0A1\";\n    Glyphs[\"noteheadDoubleWholeWithX\"] = \"\\uE0B4\";\n    Glyphs[\"noteheadHalf\"] = \"\\uE0A3\";\n    Glyphs[\"noteheadHalfFilled\"] = \"\\uE0FB\";\n    Glyphs[\"noteheadHalfWithX\"] = \"\\uE0B6\";\n    Glyphs[\"noteheadHeavyX\"] = \"\\uE0F8\";\n    Glyphs[\"noteheadHeavyXHat\"] = \"\\uE0F9\";\n    Glyphs[\"noteheadLargeArrowDownBlack\"] = \"\\uE0F4\";\n    Glyphs[\"noteheadLargeArrowDownDoubleWhole\"] = \"\\uE0F1\";\n    Glyphs[\"noteheadLargeArrowDownHalf\"] = \"\\uE0F3\";\n    Glyphs[\"noteheadLargeArrowDownWhole\"] = \"\\uE0F2\";\n    Glyphs[\"noteheadLargeArrowUpBlack\"] = \"\\uE0F0\";\n    Glyphs[\"noteheadLargeArrowUpDoubleWhole\"] = \"\\uE0ED\";\n    Glyphs[\"noteheadLargeArrowUpHalf\"] = \"\\uE0EF\";\n    Glyphs[\"noteheadLargeArrowUpWhole\"] = \"\\uE0EE\";\n    Glyphs[\"noteheadMoonBlack\"] = \"\\uE0CB\";\n    Glyphs[\"noteheadMoonWhite\"] = \"\\uE0CA\";\n    Glyphs[\"noteheadNancarrowSine\"] = \"\\uEEA0\";\n    Glyphs[\"noteheadNull\"] = \"\\uE0A5\";\n    Glyphs[\"noteheadParenthesis\"] = \"\\uE0CE\";\n    Glyphs[\"noteheadParenthesisLeft\"] = \"\\uE0F5\";\n    Glyphs[\"noteheadParenthesisRight\"] = \"\\uE0F6\";\n    Glyphs[\"noteheadPlusBlack\"] = \"\\uE0AF\";\n    Glyphs[\"noteheadPlusDoubleWhole\"] = \"\\uE0AC\";\n    Glyphs[\"noteheadPlusHalf\"] = \"\\uE0AE\";\n    Glyphs[\"noteheadPlusWhole\"] = \"\\uE0AD\";\n    Glyphs[\"noteheadRectangularClusterBlackBottom\"] = \"\\uE144\";\n    Glyphs[\"noteheadRectangularClusterBlackMiddle\"] = \"\\uE143\";\n    Glyphs[\"noteheadRectangularClusterBlackTop\"] = \"\\uE142\";\n    Glyphs[\"noteheadRectangularClusterWhiteBottom\"] = \"\\uE147\";\n    Glyphs[\"noteheadRectangularClusterWhiteMiddle\"] = \"\\uE146\";\n    Glyphs[\"noteheadRectangularClusterWhiteTop\"] = \"\\uE145\";\n    Glyphs[\"noteheadRoundBlack\"] = \"\\uE113\";\n    Glyphs[\"noteheadRoundBlackDoubleSlashed\"] = \"\\uE11C\";\n    Glyphs[\"noteheadRoundBlackLarge\"] = \"\\uE110\";\n    Glyphs[\"noteheadRoundBlackSlashed\"] = \"\\uE118\";\n    Glyphs[\"noteheadRoundBlackSlashedLarge\"] = \"\\uE116\";\n    Glyphs[\"noteheadRoundWhite\"] = \"\\uE114\";\n    Glyphs[\"noteheadRoundWhiteDoubleSlashed\"] = \"\\uE11D\";\n    Glyphs[\"noteheadRoundWhiteLarge\"] = \"\\uE111\";\n    Glyphs[\"noteheadRoundWhiteSlashed\"] = \"\\uE119\";\n    Glyphs[\"noteheadRoundWhiteSlashedLarge\"] = \"\\uE117\";\n    Glyphs[\"noteheadRoundWhiteWithDot\"] = \"\\uE115\";\n    Glyphs[\"noteheadRoundWhiteWithDotLarge\"] = \"\\uE112\";\n    Glyphs[\"noteheadSlashDiamondWhite\"] = \"\\uE104\";\n    Glyphs[\"noteheadSlashHorizontalEnds\"] = \"\\uE101\";\n    Glyphs[\"noteheadSlashHorizontalEndsMuted\"] = \"\\uE108\";\n    Glyphs[\"noteheadSlashVerticalEnds\"] = \"\\uE100\";\n    Glyphs[\"noteheadSlashVerticalEndsMuted\"] = \"\\uE107\";\n    Glyphs[\"noteheadSlashVerticalEndsSmall\"] = \"\\uE105\";\n    Glyphs[\"noteheadSlashWhiteDoubleWhole\"] = \"\\uE10A\";\n    Glyphs[\"noteheadSlashWhiteHalf\"] = \"\\uE103\";\n    Glyphs[\"noteheadSlashWhiteMuted\"] = \"\\uE109\";\n    Glyphs[\"noteheadSlashWhiteWhole\"] = \"\\uE102\";\n    Glyphs[\"noteheadSlashX\"] = \"\\uE106\";\n    Glyphs[\"noteheadSlashedBlack1\"] = \"\\uE0CF\";\n    Glyphs[\"noteheadSlashedBlack2\"] = \"\\uE0D0\";\n    Glyphs[\"noteheadSlashedDoubleWhole1\"] = \"\\uE0D5\";\n    Glyphs[\"noteheadSlashedDoubleWhole2\"] = \"\\uE0D6\";\n    Glyphs[\"noteheadSlashedHalf1\"] = \"\\uE0D1\";\n    Glyphs[\"noteheadSlashedHalf2\"] = \"\\uE0D2\";\n    Glyphs[\"noteheadSlashedWhole1\"] = \"\\uE0D3\";\n    Glyphs[\"noteheadSlashedWhole2\"] = \"\\uE0D4\";\n    Glyphs[\"noteheadSquareBlack\"] = \"\\uE0B9\";\n    Glyphs[\"noteheadSquareBlackLarge\"] = \"\\uE11A\";\n    Glyphs[\"noteheadSquareBlackWhite\"] = \"\\uE11B\";\n    Glyphs[\"noteheadSquareWhite\"] = \"\\uE0B8\";\n    Glyphs[\"noteheadTriangleDownBlack\"] = \"\\uE0C7\";\n    Glyphs[\"noteheadTriangleDownDoubleWhole\"] = \"\\uE0C3\";\n    Glyphs[\"noteheadTriangleDownHalf\"] = \"\\uE0C5\";\n    Glyphs[\"noteheadTriangleDownWhite\"] = \"\\uE0C6\";\n    Glyphs[\"noteheadTriangleDownWhole\"] = \"\\uE0C4\";\n    Glyphs[\"noteheadTriangleLeftBlack\"] = \"\\uE0C0\";\n    Glyphs[\"noteheadTriangleLeftWhite\"] = \"\\uE0BF\";\n    Glyphs[\"noteheadTriangleRightBlack\"] = \"\\uE0C2\";\n    Glyphs[\"noteheadTriangleRightWhite\"] = \"\\uE0C1\";\n    Glyphs[\"noteheadTriangleRoundDownBlack\"] = \"\\uE0CD\";\n    Glyphs[\"noteheadTriangleRoundDownWhite\"] = \"\\uE0CC\";\n    Glyphs[\"noteheadTriangleUpBlack\"] = \"\\uE0BE\";\n    Glyphs[\"noteheadTriangleUpDoubleWhole\"] = \"\\uE0BA\";\n    Glyphs[\"noteheadTriangleUpHalf\"] = \"\\uE0BC\";\n    Glyphs[\"noteheadTriangleUpRightBlack\"] = \"\\uE0C9\";\n    Glyphs[\"noteheadTriangleUpRightWhite\"] = \"\\uE0C8\";\n    Glyphs[\"noteheadTriangleUpWhite\"] = \"\\uE0BD\";\n    Glyphs[\"noteheadTriangleUpWhole\"] = \"\\uE0BB\";\n    Glyphs[\"noteheadVoidWithX\"] = \"\\uE0B7\";\n    Glyphs[\"noteheadWhole\"] = \"\\uE0A2\";\n    Glyphs[\"noteheadWholeFilled\"] = \"\\uE0FA\";\n    Glyphs[\"noteheadWholeWithX\"] = \"\\uE0B5\";\n    Glyphs[\"noteheadXBlack\"] = \"\\uE0A9\";\n    Glyphs[\"noteheadXDoubleWhole\"] = \"\\uE0A6\";\n    Glyphs[\"noteheadXHalf\"] = \"\\uE0A8\";\n    Glyphs[\"noteheadXOrnate\"] = \"\\uE0AA\";\n    Glyphs[\"noteheadXOrnateEllipse\"] = \"\\uE0AB\";\n    Glyphs[\"noteheadXWhole\"] = \"\\uE0A7\";\n    Glyphs[\"octaveBaselineA\"] = \"\\uEC91\";\n    Glyphs[\"octaveBaselineB\"] = \"\\uEC93\";\n    Glyphs[\"octaveBaselineM\"] = \"\\uEC95\";\n    Glyphs[\"octaveBaselineV\"] = \"\\uEC97\";\n    Glyphs[\"octaveBassa\"] = \"\\uE51F\";\n    Glyphs[\"octaveLoco\"] = \"\\uEC90\";\n    Glyphs[\"octaveParensLeft\"] = \"\\uE51A\";\n    Glyphs[\"octaveParensRight\"] = \"\\uE51B\";\n    Glyphs[\"octaveSuperscriptA\"] = \"\\uEC92\";\n    Glyphs[\"octaveSuperscriptB\"] = \"\\uEC94\";\n    Glyphs[\"octaveSuperscriptM\"] = \"\\uEC96\";\n    Glyphs[\"octaveSuperscriptV\"] = \"\\uEC98\";\n    Glyphs[\"oneHandedRollStevens\"] = \"\\uE233\";\n    Glyphs[\"organGerman2Fusae\"] = \"\\uEE2E\";\n    Glyphs[\"organGerman2Minimae\"] = \"\\uEE2C\";\n    Glyphs[\"organGerman2OctaveUp\"] = \"\\uEE19\";\n    Glyphs[\"organGerman2Semifusae\"] = \"\\uEE2F\";\n    Glyphs[\"organGerman2Semiminimae\"] = \"\\uEE2D\";\n    Glyphs[\"organGerman3Fusae\"] = \"\\uEE32\";\n    Glyphs[\"organGerman3Minimae\"] = \"\\uEE30\";\n    Glyphs[\"organGerman3Semifusae\"] = \"\\uEE33\";\n    Glyphs[\"organGerman3Semiminimae\"] = \"\\uEE31\";\n    Glyphs[\"organGerman4Fusae\"] = \"\\uEE36\";\n    Glyphs[\"organGerman4Minimae\"] = \"\\uEE34\";\n    Glyphs[\"organGerman4Semifusae\"] = \"\\uEE37\";\n    Glyphs[\"organGerman4Semiminimae\"] = \"\\uEE35\";\n    Glyphs[\"organGerman5Fusae\"] = \"\\uEE3A\";\n    Glyphs[\"organGerman5Minimae\"] = \"\\uEE38\";\n    Glyphs[\"organGerman5Semifusae\"] = \"\\uEE3B\";\n    Glyphs[\"organGerman5Semiminimae\"] = \"\\uEE39\";\n    Glyphs[\"organGerman6Fusae\"] = \"\\uEE3E\";\n    Glyphs[\"organGerman6Minimae\"] = \"\\uEE3C\";\n    Glyphs[\"organGerman6Semifusae\"] = \"\\uEE3F\";\n    Glyphs[\"organGerman6Semiminimae\"] = \"\\uEE3D\";\n    Glyphs[\"organGermanALower\"] = \"\\uEE15\";\n    Glyphs[\"organGermanAUpper\"] = \"\\uEE09\";\n    Glyphs[\"organGermanAugmentationDot\"] = \"\\uEE1C\";\n    Glyphs[\"organGermanBLower\"] = \"\\uEE16\";\n    Glyphs[\"organGermanBUpper\"] = \"\\uEE0A\";\n    Glyphs[\"organGermanBuxheimerBrevis2\"] = \"\\uEE25\";\n    Glyphs[\"organGermanBuxheimerBrevis3\"] = \"\\uEE24\";\n    Glyphs[\"organGermanBuxheimerMinimaRest\"] = \"\\uEE1E\";\n    Glyphs[\"organGermanBuxheimerSemibrevis\"] = \"\\uEE26\";\n    Glyphs[\"organGermanBuxheimerSemibrevisRest\"] = \"\\uEE1D\";\n    Glyphs[\"organGermanCLower\"] = \"\\uEE0C\";\n    Glyphs[\"organGermanCUpper\"] = \"\\uEE00\";\n    Glyphs[\"organGermanCisLower\"] = \"\\uEE0D\";\n    Glyphs[\"organGermanCisUpper\"] = \"\\uEE01\";\n    Glyphs[\"organGermanDLower\"] = \"\\uEE0E\";\n    Glyphs[\"organGermanDUpper\"] = \"\\uEE02\";\n    Glyphs[\"organGermanDisLower\"] = \"\\uEE0F\";\n    Glyphs[\"organGermanDisUpper\"] = \"\\uEE03\";\n    Glyphs[\"organGermanELower\"] = \"\\uEE10\";\n    Glyphs[\"organGermanEUpper\"] = \"\\uEE04\";\n    Glyphs[\"organGermanFLower\"] = \"\\uEE11\";\n    Glyphs[\"organGermanFUpper\"] = \"\\uEE05\";\n    Glyphs[\"organGermanFisLower\"] = \"\\uEE12\";\n    Glyphs[\"organGermanFisUpper\"] = \"\\uEE06\";\n    Glyphs[\"organGermanFusa\"] = \"\\uEE2A\";\n    Glyphs[\"organGermanFusaRest\"] = \"\\uEE22\";\n    Glyphs[\"organGermanGLower\"] = \"\\uEE13\";\n    Glyphs[\"organGermanGUpper\"] = \"\\uEE07\";\n    Glyphs[\"organGermanGisLower\"] = \"\\uEE14\";\n    Glyphs[\"organGermanGisUpper\"] = \"\\uEE08\";\n    Glyphs[\"organGermanHLower\"] = \"\\uEE17\";\n    Glyphs[\"organGermanHUpper\"] = \"\\uEE0B\";\n    Glyphs[\"organGermanMinima\"] = \"\\uEE28\";\n    Glyphs[\"organGermanMinimaRest\"] = \"\\uEE20\";\n    Glyphs[\"organGermanOctaveDown\"] = \"\\uEE1A\";\n    Glyphs[\"organGermanOctaveUp\"] = \"\\uEE18\";\n    Glyphs[\"organGermanSemibrevis\"] = \"\\uEE27\";\n    Glyphs[\"organGermanSemibrevisRest\"] = \"\\uEE1F\";\n    Glyphs[\"organGermanSemifusa\"] = \"\\uEE2B\";\n    Glyphs[\"organGermanSemifusaRest\"] = \"\\uEE23\";\n    Glyphs[\"organGermanSemiminima\"] = \"\\uEE29\";\n    Glyphs[\"organGermanSemiminimaRest\"] = \"\\uEE21\";\n    Glyphs[\"organGermanTie\"] = \"\\uEE1B\";\n    Glyphs[\"ornamentBottomLeftConcaveStroke\"] = \"\\uE59A\";\n    Glyphs[\"ornamentBottomLeftConcaveStrokeLarge\"] = \"\\uE59B\";\n    Glyphs[\"ornamentBottomLeftConvexStroke\"] = \"\\uE59C\";\n    Glyphs[\"ornamentBottomRightConcaveStroke\"] = \"\\uE5A7\";\n    Glyphs[\"ornamentBottomRightConvexStroke\"] = \"\\uE5A8\";\n    Glyphs[\"ornamentComma\"] = \"\\uE581\";\n    Glyphs[\"ornamentDoubleObliqueLinesAfterNote\"] = \"\\uE57E\";\n    Glyphs[\"ornamentDoubleObliqueLinesBeforeNote\"] = \"\\uE57D\";\n    Glyphs[\"ornamentDownCurve\"] = \"\\uE578\";\n    Glyphs[\"ornamentHaydn\"] = \"\\uE56F\";\n    Glyphs[\"ornamentHighLeftConcaveStroke\"] = \"\\uE592\";\n    Glyphs[\"ornamentHighLeftConvexStroke\"] = \"\\uE593\";\n    Glyphs[\"ornamentHighRightConcaveStroke\"] = \"\\uE5A2\";\n    Glyphs[\"ornamentHighRightConvexStroke\"] = \"\\uE5A3\";\n    Glyphs[\"ornamentHookAfterNote\"] = \"\\uE576\";\n    Glyphs[\"ornamentHookBeforeNote\"] = \"\\uE575\";\n    Glyphs[\"ornamentLeftFacingHalfCircle\"] = \"\\uE572\";\n    Glyphs[\"ornamentLeftFacingHook\"] = \"\\uE574\";\n    Glyphs[\"ornamentLeftPlus\"] = \"\\uE597\";\n    Glyphs[\"ornamentLeftShakeT\"] = \"\\uE596\";\n    Glyphs[\"ornamentLeftVerticalStroke\"] = \"\\uE594\";\n    Glyphs[\"ornamentLeftVerticalStrokeWithCross\"] = \"\\uE595\";\n    Glyphs[\"ornamentLowLeftConcaveStroke\"] = \"\\uE598\";\n    Glyphs[\"ornamentLowLeftConvexStroke\"] = \"\\uE599\";\n    Glyphs[\"ornamentLowRightConcaveStroke\"] = \"\\uE5A5\";\n    Glyphs[\"ornamentLowRightConvexStroke\"] = \"\\uE5A6\";\n    Glyphs[\"ornamentMiddleVerticalStroke\"] = \"\\uE59F\";\n    Glyphs[\"ornamentMordent\"] = \"\\uE56D\";\n    Glyphs[\"ornamentObliqueLineAfterNote\"] = \"\\uE57C\";\n    Glyphs[\"ornamentObliqueLineBeforeNote\"] = \"\\uE57B\";\n    Glyphs[\"ornamentObliqueLineHorizAfterNote\"] = \"\\uE580\";\n    Glyphs[\"ornamentObliqueLineHorizBeforeNote\"] = \"\\uE57F\";\n    Glyphs[\"ornamentOriscus\"] = \"\\uEA21\";\n    Glyphs[\"ornamentPinceCouperin\"] = \"\\uE588\";\n    Glyphs[\"ornamentPortDeVoixV\"] = \"\\uE570\";\n    Glyphs[\"ornamentPrecompAppoggTrill\"] = \"\\uE5B2\";\n    Glyphs[\"ornamentPrecompAppoggTrillSuffix\"] = \"\\uE5B3\";\n    Glyphs[\"ornamentPrecompCadence\"] = \"\\uE5BE\";\n    Glyphs[\"ornamentPrecompCadenceUpperPrefix\"] = \"\\uE5C1\";\n    Glyphs[\"ornamentPrecompCadenceUpperPrefixTurn\"] = \"\\uE5C2\";\n    Glyphs[\"ornamentPrecompCadenceWithTurn\"] = \"\\uE5BF\";\n    Glyphs[\"ornamentPrecompDescendingSlide\"] = \"\\uE5B1\";\n    Glyphs[\"ornamentPrecompDoubleCadenceLowerPrefix\"] = \"\\uE5C0\";\n    Glyphs[\"ornamentPrecompDoubleCadenceUpperPrefix\"] = \"\\uE5C3\";\n    Glyphs[\"ornamentPrecompDoubleCadenceUpperPrefixTurn\"] = \"\\uE5C4\";\n    Glyphs[\"ornamentPrecompInvertedMordentUpperPrefix\"] = \"\\uE5C7\";\n    Glyphs[\"ornamentPrecompMordentRelease\"] = \"\\uE5C5\";\n    Glyphs[\"ornamentPrecompMordentUpperPrefix\"] = \"\\uE5C6\";\n    Glyphs[\"ornamentPrecompPortDeVoixMordent\"] = \"\\uE5BC\";\n    Glyphs[\"ornamentPrecompSlide\"] = \"\\uE5B0\";\n    Glyphs[\"ornamentPrecompSlideTrillBach\"] = \"\\uE5B8\";\n    Glyphs[\"ornamentPrecompSlideTrillDAnglebert\"] = \"\\uE5B5\";\n    Glyphs[\"ornamentPrecompSlideTrillMarpurg\"] = \"\\uE5B6\";\n    Glyphs[\"ornamentPrecompSlideTrillMuffat\"] = \"\\uE5B9\";\n    Glyphs[\"ornamentPrecompSlideTrillSuffixMuffat\"] = \"\\uE5BA\";\n    Glyphs[\"ornamentPrecompTrillLowerSuffix\"] = \"\\uE5C8\";\n    Glyphs[\"ornamentPrecompTrillSuffixDandrieu\"] = \"\\uE5BB\";\n    Glyphs[\"ornamentPrecompTrillWithMordent\"] = \"\\uE5BD\";\n    Glyphs[\"ornamentPrecompTurnTrillBach\"] = \"\\uE5B7\";\n    Glyphs[\"ornamentPrecompTurnTrillDAnglebert\"] = \"\\uE5B4\";\n    Glyphs[\"ornamentQuilisma\"] = \"\\uEA20\";\n    Glyphs[\"ornamentRightFacingHalfCircle\"] = \"\\uE571\";\n    Glyphs[\"ornamentRightFacingHook\"] = \"\\uE573\";\n    Glyphs[\"ornamentRightVerticalStroke\"] = \"\\uE5A4\";\n    Glyphs[\"ornamentSchleifer\"] = \"\\uE587\";\n    Glyphs[\"ornamentShake3\"] = \"\\uE582\";\n    Glyphs[\"ornamentShakeMuffat1\"] = \"\\uE584\";\n    Glyphs[\"ornamentShortObliqueLineAfterNote\"] = \"\\uE57A\";\n    Glyphs[\"ornamentShortObliqueLineBeforeNote\"] = \"\\uE579\";\n    Glyphs[\"ornamentShortTrill\"] = \"\\uE56C\";\n    Glyphs[\"ornamentTopLeftConcaveStroke\"] = \"\\uE590\";\n    Glyphs[\"ornamentTopLeftConvexStroke\"] = \"\\uE591\";\n    Glyphs[\"ornamentTopRightConcaveStroke\"] = \"\\uE5A0\";\n    Glyphs[\"ornamentTopRightConvexStroke\"] = \"\\uE5A1\";\n    Glyphs[\"ornamentTremblement\"] = \"\\uE56E\";\n    Glyphs[\"ornamentTremblementCouperin\"] = \"\\uE589\";\n    Glyphs[\"ornamentTrill\"] = \"\\uE566\";\n    Glyphs[\"ornamentTurn\"] = \"\\uE567\";\n    Glyphs[\"ornamentTurnInverted\"] = \"\\uE568\";\n    Glyphs[\"ornamentTurnSlash\"] = \"\\uE569\";\n    Glyphs[\"ornamentTurnUp\"] = \"\\uE56A\";\n    Glyphs[\"ornamentTurnUpS\"] = \"\\uE56B\";\n    Glyphs[\"ornamentUpCurve\"] = \"\\uE577\";\n    Glyphs[\"ornamentVerticalLine\"] = \"\\uE583\";\n    Glyphs[\"ornamentZigZagLineNoRightEnd\"] = \"\\uE59D\";\n    Glyphs[\"ornamentZigZagLineWithRightEnd\"] = \"\\uE59E\";\n    Glyphs[\"ottava\"] = \"\\uE510\";\n    Glyphs[\"ottavaAlta\"] = \"\\uE511\";\n    Glyphs[\"ottavaBassa\"] = \"\\uE512\";\n    Glyphs[\"ottavaBassaBa\"] = \"\\uE513\";\n    Glyphs[\"ottavaBassaVb\"] = \"\\uE51C\";\n    Glyphs[\"pendereckiTremolo\"] = \"\\uE22B\";\n    Glyphs[\"pictAgogo\"] = \"\\uE717\";\n    Glyphs[\"pictAlmglocken\"] = \"\\uE712\";\n    Glyphs[\"pictAnvil\"] = \"\\uE701\";\n    Glyphs[\"pictBambooChimes\"] = \"\\uE6C3\";\n    Glyphs[\"pictBambooScraper\"] = \"\\uE6FB\";\n    Glyphs[\"pictBassDrum\"] = \"\\uE6D4\";\n    Glyphs[\"pictBassDrumOnSide\"] = \"\\uE6D5\";\n    Glyphs[\"pictBeaterBow\"] = \"\\uE7DE\";\n    Glyphs[\"pictBeaterBox\"] = \"\\uE7EB\";\n    Glyphs[\"pictBeaterBrassMalletsDown\"] = \"\\uE7DA\";\n    Glyphs[\"pictBeaterBrassMalletsLeft\"] = \"\\uE7EE\";\n    Glyphs[\"pictBeaterBrassMalletsRight\"] = \"\\uE7ED\";\n    Glyphs[\"pictBeaterBrassMalletsUp\"] = \"\\uE7D9\";\n    Glyphs[\"pictBeaterCombiningDashedCircle\"] = \"\\uE7EA\";\n    Glyphs[\"pictBeaterCombiningParentheses\"] = \"\\uE7E9\";\n    Glyphs[\"pictBeaterDoubleBassDrumDown\"] = \"\\uE7A1\";\n    Glyphs[\"pictBeaterDoubleBassDrumUp\"] = \"\\uE7A0\";\n    Glyphs[\"pictBeaterFinger\"] = \"\\uE7E4\";\n    Glyphs[\"pictBeaterFingernails\"] = \"\\uE7E6\";\n    Glyphs[\"pictBeaterFist\"] = \"\\uE7E5\";\n    Glyphs[\"pictBeaterGuiroScraper\"] = \"\\uE7DD\";\n    Glyphs[\"pictBeaterHammer\"] = \"\\uE7E1\";\n    Glyphs[\"pictBeaterHammerMetalDown\"] = \"\\uE7D0\";\n    Glyphs[\"pictBeaterHammerMetalUp\"] = \"\\uE7CF\";\n    Glyphs[\"pictBeaterHammerPlasticDown\"] = \"\\uE7CE\";\n    Glyphs[\"pictBeaterHammerPlasticUp\"] = \"\\uE7CD\";\n    Glyphs[\"pictBeaterHammerWoodDown\"] = \"\\uE7CC\";\n    Glyphs[\"pictBeaterHammerWoodUp\"] = \"\\uE7CB\";\n    Glyphs[\"pictBeaterHand\"] = \"\\uE7E3\";\n    Glyphs[\"pictBeaterHardBassDrumDown\"] = \"\\uE79D\";\n    Glyphs[\"pictBeaterHardBassDrumUp\"] = \"\\uE79C\";\n    Glyphs[\"pictBeaterHardGlockenspielDown\"] = \"\\uE785\";\n    Glyphs[\"pictBeaterHardGlockenspielLeft\"] = \"\\uE787\";\n    Glyphs[\"pictBeaterHardGlockenspielRight\"] = \"\\uE786\";\n    Glyphs[\"pictBeaterHardGlockenspielUp\"] = \"\\uE784\";\n    Glyphs[\"pictBeaterHardTimpaniDown\"] = \"\\uE791\";\n    Glyphs[\"pictBeaterHardTimpaniLeft\"] = \"\\uE793\";\n    Glyphs[\"pictBeaterHardTimpaniRight\"] = \"\\uE792\";\n    Glyphs[\"pictBeaterHardTimpaniUp\"] = \"\\uE790\";\n    Glyphs[\"pictBeaterHardXylophoneDown\"] = \"\\uE779\";\n    Glyphs[\"pictBeaterHardXylophoneLeft\"] = \"\\uE77B\";\n    Glyphs[\"pictBeaterHardXylophoneRight\"] = \"\\uE77A\";\n    Glyphs[\"pictBeaterHardXylophoneUp\"] = \"\\uE778\";\n    Glyphs[\"pictBeaterHardYarnDown\"] = \"\\uE7AB\";\n    Glyphs[\"pictBeaterHardYarnLeft\"] = \"\\uE7AD\";\n    Glyphs[\"pictBeaterHardYarnRight\"] = \"\\uE7AC\";\n    Glyphs[\"pictBeaterHardYarnUp\"] = \"\\uE7AA\";\n    Glyphs[\"pictBeaterJazzSticksDown\"] = \"\\uE7D4\";\n    Glyphs[\"pictBeaterJazzSticksUp\"] = \"\\uE7D3\";\n    Glyphs[\"pictBeaterKnittingNeedle\"] = \"\\uE7E2\";\n    Glyphs[\"pictBeaterMallet\"] = \"\\uE7DF\";\n    Glyphs[\"pictBeaterMalletDown\"] = \"\\uE7EC\";\n    Glyphs[\"pictBeaterMediumBassDrumDown\"] = \"\\uE79B\";\n    Glyphs[\"pictBeaterMediumBassDrumUp\"] = \"\\uE79A\";\n    Glyphs[\"pictBeaterMediumTimpaniDown\"] = \"\\uE78D\";\n    Glyphs[\"pictBeaterMediumTimpaniLeft\"] = \"\\uE78F\";\n    Glyphs[\"pictBeaterMediumTimpaniRight\"] = \"\\uE78E\";\n    Glyphs[\"pictBeaterMediumTimpaniUp\"] = \"\\uE78C\";\n    Glyphs[\"pictBeaterMediumXylophoneDown\"] = \"\\uE775\";\n    Glyphs[\"pictBeaterMediumXylophoneLeft\"] = \"\\uE777\";\n    Glyphs[\"pictBeaterMediumXylophoneRight\"] = \"\\uE776\";\n    Glyphs[\"pictBeaterMediumXylophoneUp\"] = \"\\uE774\";\n    Glyphs[\"pictBeaterMediumYarnDown\"] = \"\\uE7A7\";\n    Glyphs[\"pictBeaterMediumYarnLeft\"] = \"\\uE7A9\";\n    Glyphs[\"pictBeaterMediumYarnRight\"] = \"\\uE7A8\";\n    Glyphs[\"pictBeaterMediumYarnUp\"] = \"\\uE7A6\";\n    Glyphs[\"pictBeaterMetalBassDrumDown\"] = \"\\uE79F\";\n    Glyphs[\"pictBeaterMetalBassDrumUp\"] = \"\\uE79E\";\n    Glyphs[\"pictBeaterMetalDown\"] = \"\\uE7C8\";\n    Glyphs[\"pictBeaterMetalHammer\"] = \"\\uE7E0\";\n    Glyphs[\"pictBeaterMetalLeft\"] = \"\\uE7CA\";\n    Glyphs[\"pictBeaterMetalRight\"] = \"\\uE7C9\";\n    Glyphs[\"pictBeaterMetalUp\"] = \"\\uE7C7\";\n    Glyphs[\"pictBeaterSnareSticksDown\"] = \"\\uE7D2\";\n    Glyphs[\"pictBeaterSnareSticksUp\"] = \"\\uE7D1\";\n    Glyphs[\"pictBeaterSoftBassDrumDown\"] = \"\\uE799\";\n    Glyphs[\"pictBeaterSoftBassDrumUp\"] = \"\\uE798\";\n    Glyphs[\"pictBeaterSoftGlockenspielDown\"] = \"\\uE781\";\n    Glyphs[\"pictBeaterSoftGlockenspielLeft\"] = \"\\uE783\";\n    Glyphs[\"pictBeaterSoftGlockenspielRight\"] = \"\\uE782\";\n    Glyphs[\"pictBeaterSoftGlockenspielUp\"] = \"\\uE780\";\n    Glyphs[\"pictBeaterSoftTimpaniDown\"] = \"\\uE789\";\n    Glyphs[\"pictBeaterSoftTimpaniLeft\"] = \"\\uE78B\";\n    Glyphs[\"pictBeaterSoftTimpaniRight\"] = \"\\uE78A\";\n    Glyphs[\"pictBeaterSoftTimpaniUp\"] = \"\\uE788\";\n    Glyphs[\"pictBeaterSoftXylophone\"] = \"\\uE7DB\";\n    Glyphs[\"pictBeaterSoftXylophoneDown\"] = \"\\uE771\";\n    Glyphs[\"pictBeaterSoftXylophoneLeft\"] = \"\\uE773\";\n    Glyphs[\"pictBeaterSoftXylophoneRight\"] = \"\\uE772\";\n    Glyphs[\"pictBeaterSoftXylophoneUp\"] = \"\\uE770\";\n    Glyphs[\"pictBeaterSoftYarnDown\"] = \"\\uE7A3\";\n    Glyphs[\"pictBeaterSoftYarnLeft\"] = \"\\uE7A5\";\n    Glyphs[\"pictBeaterSoftYarnRight\"] = \"\\uE7A4\";\n    Glyphs[\"pictBeaterSoftYarnUp\"] = \"\\uE7A2\";\n    Glyphs[\"pictBeaterSpoonWoodenMallet\"] = \"\\uE7DC\";\n    Glyphs[\"pictBeaterSuperballDown\"] = \"\\uE7AF\";\n    Glyphs[\"pictBeaterSuperballLeft\"] = \"\\uE7B1\";\n    Glyphs[\"pictBeaterSuperballRight\"] = \"\\uE7B0\";\n    Glyphs[\"pictBeaterSuperballUp\"] = \"\\uE7AE\";\n    Glyphs[\"pictBeaterTriangleDown\"] = \"\\uE7D6\";\n    Glyphs[\"pictBeaterTrianglePlain\"] = \"\\uE7EF\";\n    Glyphs[\"pictBeaterTriangleUp\"] = \"\\uE7D5\";\n    Glyphs[\"pictBeaterWireBrushesDown\"] = \"\\uE7D8\";\n    Glyphs[\"pictBeaterWireBrushesUp\"] = \"\\uE7D7\";\n    Glyphs[\"pictBeaterWoodTimpaniDown\"] = \"\\uE795\";\n    Glyphs[\"pictBeaterWoodTimpaniLeft\"] = \"\\uE797\";\n    Glyphs[\"pictBeaterWoodTimpaniRight\"] = \"\\uE796\";\n    Glyphs[\"pictBeaterWoodTimpaniUp\"] = \"\\uE794\";\n    Glyphs[\"pictBeaterWoodXylophoneDown\"] = \"\\uE77D\";\n    Glyphs[\"pictBeaterWoodXylophoneLeft\"] = \"\\uE77F\";\n    Glyphs[\"pictBeaterWoodXylophoneRight\"] = \"\\uE77E\";\n    Glyphs[\"pictBeaterWoodXylophoneUp\"] = \"\\uE77C\";\n    Glyphs[\"pictBell\"] = \"\\uE714\";\n    Glyphs[\"pictBellOfCymbal\"] = \"\\uE72A\";\n    Glyphs[\"pictBellPlate\"] = \"\\uE713\";\n    Glyphs[\"pictBellTree\"] = \"\\uE71A\";\n    Glyphs[\"pictBirdWhistle\"] = \"\\uE751\";\n    Glyphs[\"pictBoardClapper\"] = \"\\uE6F7\";\n    Glyphs[\"pictBongos\"] = \"\\uE6DD\";\n    Glyphs[\"pictBrakeDrum\"] = \"\\uE6E1\";\n    Glyphs[\"pictCabasa\"] = \"\\uE743\";\n    Glyphs[\"pictCannon\"] = \"\\uE761\";\n    Glyphs[\"pictCarHorn\"] = \"\\uE755\";\n    Glyphs[\"pictCastanets\"] = \"\\uE6F8\";\n    Glyphs[\"pictCastanetsWithHandle\"] = \"\\uE6F9\";\n    Glyphs[\"pictCelesta\"] = \"\\uE6B0\";\n    Glyphs[\"pictCencerro\"] = \"\\uE716\";\n    Glyphs[\"pictCenter1\"] = \"\\uE7FE\";\n    Glyphs[\"pictCenter2\"] = \"\\uE7FF\";\n    Glyphs[\"pictCenter3\"] = \"\\uE800\";\n    Glyphs[\"pictChainRattle\"] = \"\\uE748\";\n    Glyphs[\"pictChimes\"] = \"\\uE6C2\";\n    Glyphs[\"pictChineseCymbal\"] = \"\\uE726\";\n    Glyphs[\"pictChokeCymbal\"] = \"\\uE805\";\n    Glyphs[\"pictClaves\"] = \"\\uE6F2\";\n    Glyphs[\"pictCoins\"] = \"\\uE7E7\";\n    Glyphs[\"pictConga\"] = \"\\uE6DE\";\n    Glyphs[\"pictCowBell\"] = \"\\uE711\";\n    Glyphs[\"pictCrashCymbals\"] = \"\\uE720\";\n    Glyphs[\"pictCrotales\"] = \"\\uE6AE\";\n    Glyphs[\"pictCrushStem\"] = \"\\uE80C\";\n    Glyphs[\"pictCuica\"] = \"\\uE6E4\";\n    Glyphs[\"pictCymbalTongs\"] = \"\\uE728\";\n    Glyphs[\"pictDamp1\"] = \"\\uE7F9\";\n    Glyphs[\"pictDamp2\"] = \"\\uE7FA\";\n    Glyphs[\"pictDamp3\"] = \"\\uE7FB\";\n    Glyphs[\"pictDamp4\"] = \"\\uE7FC\";\n    Glyphs[\"pictDeadNoteStem\"] = \"\\uE80D\";\n    Glyphs[\"pictDrumStick\"] = \"\\uE7E8\";\n    Glyphs[\"pictDuckCall\"] = \"\\uE757\";\n    Glyphs[\"pictEdgeOfCymbal\"] = \"\\uE729\";\n    Glyphs[\"pictEmptyTrap\"] = \"\\uE6A9\";\n    Glyphs[\"pictFingerCymbals\"] = \"\\uE727\";\n    Glyphs[\"pictFlexatone\"] = \"\\uE740\";\n    Glyphs[\"pictFootballRatchet\"] = \"\\uE6F5\";\n    Glyphs[\"pictGlassHarmonica\"] = \"\\uE765\";\n    Glyphs[\"pictGlassHarp\"] = \"\\uE764\";\n    Glyphs[\"pictGlassPlateChimes\"] = \"\\uE6C6\";\n    Glyphs[\"pictGlassTubeChimes\"] = \"\\uE6C5\";\n    Glyphs[\"pictGlsp\"] = \"\\uE6A0\";\n    Glyphs[\"pictGlspSmithBrindle\"] = \"\\uE6AA\";\n    Glyphs[\"pictGobletDrum\"] = \"\\uE6E2\";\n    Glyphs[\"pictGong\"] = \"\\uE732\";\n    Glyphs[\"pictGongWithButton\"] = \"\\uE733\";\n    Glyphs[\"pictGuiro\"] = \"\\uE6F3\";\n    Glyphs[\"pictGumHardDown\"] = \"\\uE7C4\";\n    Glyphs[\"pictGumHardLeft\"] = \"\\uE7C6\";\n    Glyphs[\"pictGumHardRight\"] = \"\\uE7C5\";\n    Glyphs[\"pictGumHardUp\"] = \"\\uE7C3\";\n    Glyphs[\"pictGumMediumDown\"] = \"\\uE7C0\";\n    Glyphs[\"pictGumMediumLeft\"] = \"\\uE7C2\";\n    Glyphs[\"pictGumMediumRight\"] = \"\\uE7C1\";\n    Glyphs[\"pictGumMediumUp\"] = \"\\uE7BF\";\n    Glyphs[\"pictGumSoftDown\"] = \"\\uE7BC\";\n    Glyphs[\"pictGumSoftLeft\"] = \"\\uE7BE\";\n    Glyphs[\"pictGumSoftRight\"] = \"\\uE7BD\";\n    Glyphs[\"pictGumSoftUp\"] = \"\\uE7BB\";\n    Glyphs[\"pictHalfOpen1\"] = \"\\uE7F6\";\n    Glyphs[\"pictHalfOpen2\"] = \"\\uE7F7\";\n    Glyphs[\"pictHandbell\"] = \"\\uE715\";\n    Glyphs[\"pictHiHat\"] = \"\\uE722\";\n    Glyphs[\"pictHiHatOnStand\"] = \"\\uE723\";\n    Glyphs[\"pictJawHarp\"] = \"\\uE767\";\n    Glyphs[\"pictJingleBells\"] = \"\\uE719\";\n    Glyphs[\"pictKlaxonHorn\"] = \"\\uE756\";\n    Glyphs[\"pictLeftHandCircle\"] = \"\\uE807\";\n    Glyphs[\"pictLionsRoar\"] = \"\\uE763\";\n    Glyphs[\"pictLithophone\"] = \"\\uE6B1\";\n    Glyphs[\"pictLogDrum\"] = \"\\uE6DF\";\n    Glyphs[\"pictLotusFlute\"] = \"\\uE75A\";\n    Glyphs[\"pictMar\"] = \"\\uE6A6\";\n    Glyphs[\"pictMarSmithBrindle\"] = \"\\uE6AC\";\n    Glyphs[\"pictMaraca\"] = \"\\uE741\";\n    Glyphs[\"pictMaracas\"] = \"\\uE742\";\n    Glyphs[\"pictMegaphone\"] = \"\\uE759\";\n    Glyphs[\"pictMetalPlateChimes\"] = \"\\uE6C8\";\n    Glyphs[\"pictMetalTubeChimes\"] = \"\\uE6C7\";\n    Glyphs[\"pictMusicalSaw\"] = \"\\uE766\";\n    Glyphs[\"pictNormalPosition\"] = \"\\uE804\";\n    Glyphs[\"pictOnRim\"] = \"\\uE7F4\";\n    Glyphs[\"pictOpen\"] = \"\\uE7F8\";\n    Glyphs[\"pictOpenRimShot\"] = \"\\uE7F5\";\n    Glyphs[\"pictPistolShot\"] = \"\\uE760\";\n    Glyphs[\"pictPoliceWhistle\"] = \"\\uE752\";\n    Glyphs[\"pictQuijada\"] = \"\\uE6FA\";\n    Glyphs[\"pictRainstick\"] = \"\\uE747\";\n    Glyphs[\"pictRatchet\"] = \"\\uE6F4\";\n    Glyphs[\"pictRecoReco\"] = \"\\uE6FC\";\n    Glyphs[\"pictRightHandSquare\"] = \"\\uE806\";\n    Glyphs[\"pictRim1\"] = \"\\uE801\";\n    Glyphs[\"pictRim2\"] = \"\\uE802\";\n    Glyphs[\"pictRim3\"] = \"\\uE803\";\n    Glyphs[\"pictRimShotOnStem\"] = \"\\uE7FD\";\n    Glyphs[\"pictSandpaperBlocks\"] = \"\\uE762\";\n    Glyphs[\"pictScrapeAroundRim\"] = \"\\uE7F3\";\n    Glyphs[\"pictScrapeAroundRimClockwise\"] = \"\\uE80E\";\n    Glyphs[\"pictScrapeCenterToEdge\"] = \"\\uE7F1\";\n    Glyphs[\"pictScrapeEdgeToCenter\"] = \"\\uE7F2\";\n    Glyphs[\"pictShellBells\"] = \"\\uE718\";\n    Glyphs[\"pictShellChimes\"] = \"\\uE6C4\";\n    Glyphs[\"pictSiren\"] = \"\\uE753\";\n    Glyphs[\"pictSistrum\"] = \"\\uE746\";\n    Glyphs[\"pictSizzleCymbal\"] = \"\\uE724\";\n    Glyphs[\"pictSleighBell\"] = \"\\uE710\";\n    Glyphs[\"pictSlideBrushOnGong\"] = \"\\uE734\";\n    Glyphs[\"pictSlideWhistle\"] = \"\\uE750\";\n    Glyphs[\"pictSlitDrum\"] = \"\\uE6E0\";\n    Glyphs[\"pictSnareDrum\"] = \"\\uE6D1\";\n    Glyphs[\"pictSnareDrumMilitary\"] = \"\\uE6D3\";\n    Glyphs[\"pictSnareDrumSnaresOff\"] = \"\\uE6D2\";\n    Glyphs[\"pictSteelDrums\"] = \"\\uE6AF\";\n    Glyphs[\"pictStickShot\"] = \"\\uE7F0\";\n    Glyphs[\"pictSuperball\"] = \"\\uE7B2\";\n    Glyphs[\"pictSuspendedCymbal\"] = \"\\uE721\";\n    Glyphs[\"pictSwishStem\"] = \"\\uE808\";\n    Glyphs[\"pictTabla\"] = \"\\uE6E3\";\n    Glyphs[\"pictTamTam\"] = \"\\uE730\";\n    Glyphs[\"pictTamTamWithBeater\"] = \"\\uE731\";\n    Glyphs[\"pictTambourine\"] = \"\\uE6DB\";\n    Glyphs[\"pictTempleBlocks\"] = \"\\uE6F1\";\n    Glyphs[\"pictTenorDrum\"] = \"\\uE6D6\";\n    Glyphs[\"pictThundersheet\"] = \"\\uE744\";\n    Glyphs[\"pictTimbales\"] = \"\\uE6DC\";\n    Glyphs[\"pictTimpani\"] = \"\\uE6D0\";\n    Glyphs[\"pictTomTom\"] = \"\\uE6D7\";\n    Glyphs[\"pictTomTomChinese\"] = \"\\uE6D8\";\n    Glyphs[\"pictTomTomIndoAmerican\"] = \"\\uE6DA\";\n    Glyphs[\"pictTomTomJapanese\"] = \"\\uE6D9\";\n    Glyphs[\"pictTriangle\"] = \"\\uE700\";\n    Glyphs[\"pictTubaphone\"] = \"\\uE6B2\";\n    Glyphs[\"pictTubularBells\"] = \"\\uE6C0\";\n    Glyphs[\"pictTurnLeftStem\"] = \"\\uE80A\";\n    Glyphs[\"pictTurnRightLeftStem\"] = \"\\uE80B\";\n    Glyphs[\"pictTurnRightStem\"] = \"\\uE809\";\n    Glyphs[\"pictVib\"] = \"\\uE6A7\";\n    Glyphs[\"pictVibMotorOff\"] = \"\\uE6A8\";\n    Glyphs[\"pictVibSmithBrindle\"] = \"\\uE6AD\";\n    Glyphs[\"pictVibraslap\"] = \"\\uE745\";\n    Glyphs[\"pictVietnameseHat\"] = \"\\uE725\";\n    Glyphs[\"pictWhip\"] = \"\\uE6F6\";\n    Glyphs[\"pictWindChimesGlass\"] = \"\\uE6C1\";\n    Glyphs[\"pictWindMachine\"] = \"\\uE754\";\n    Glyphs[\"pictWindWhistle\"] = \"\\uE758\";\n    Glyphs[\"pictWoodBlock\"] = \"\\uE6F0\";\n    Glyphs[\"pictWoundHardDown\"] = \"\\uE7B4\";\n    Glyphs[\"pictWoundHardLeft\"] = \"\\uE7B6\";\n    Glyphs[\"pictWoundHardRight\"] = \"\\uE7B5\";\n    Glyphs[\"pictWoundHardUp\"] = \"\\uE7B3\";\n    Glyphs[\"pictWoundSoftDown\"] = \"\\uE7B8\";\n    Glyphs[\"pictWoundSoftLeft\"] = \"\\uE7BA\";\n    Glyphs[\"pictWoundSoftRight\"] = \"\\uE7B9\";\n    Glyphs[\"pictWoundSoftUp\"] = \"\\uE7B7\";\n    Glyphs[\"pictXyl\"] = \"\\uE6A1\";\n    Glyphs[\"pictXylBass\"] = \"\\uE6A3\";\n    Glyphs[\"pictXylSmithBrindle\"] = \"\\uE6AB\";\n    Glyphs[\"pictXylTenor\"] = \"\\uE6A2\";\n    Glyphs[\"pictXylTenorTrough\"] = \"\\uE6A5\";\n    Glyphs[\"pictXylTrough\"] = \"\\uE6A4\";\n    Glyphs[\"pluckedBuzzPizzicato\"] = \"\\uE632\";\n    Glyphs[\"pluckedDamp\"] = \"\\uE638\";\n    Glyphs[\"pluckedDampAll\"] = \"\\uE639\";\n    Glyphs[\"pluckedDampOnStem\"] = \"\\uE63B\";\n    Glyphs[\"pluckedFingernailFlick\"] = \"\\uE637\";\n    Glyphs[\"pluckedLeftHandPizzicato\"] = \"\\uE633\";\n    Glyphs[\"pluckedPlectrum\"] = \"\\uE63A\";\n    Glyphs[\"pluckedSnapPizzicatoAbove\"] = \"\\uE631\";\n    Glyphs[\"pluckedSnapPizzicatoBelow\"] = \"\\uE630\";\n    Glyphs[\"pluckedWithFingernails\"] = \"\\uE636\";\n    Glyphs[\"quindicesima\"] = \"\\uE514\";\n    Glyphs[\"quindicesimaAlta\"] = \"\\uE515\";\n    Glyphs[\"quindicesimaBassa\"] = \"\\uE516\";\n    Glyphs[\"quindicesimaBassaMb\"] = \"\\uE51D\";\n    Glyphs[\"repeat1Bar\"] = \"\\uE500\";\n    Glyphs[\"repeat2Bars\"] = \"\\uE501\";\n    Glyphs[\"repeat4Bars\"] = \"\\uE502\";\n    Glyphs[\"repeatBarLowerDot\"] = \"\\uE505\";\n    Glyphs[\"repeatBarSlash\"] = \"\\uE504\";\n    Glyphs[\"repeatBarUpperDot\"] = \"\\uE503\";\n    Glyphs[\"repeatDot\"] = \"\\uE044\";\n    Glyphs[\"repeatDots\"] = \"\\uE043\";\n    Glyphs[\"repeatLeft\"] = \"\\uE040\";\n    Glyphs[\"repeatRight\"] = \"\\uE041\";\n    Glyphs[\"repeatRightLeft\"] = \"\\uE042\";\n    Glyphs[\"rest1024th\"] = \"\\uE4ED\";\n    Glyphs[\"rest128th\"] = \"\\uE4EA\";\n    Glyphs[\"rest16th\"] = \"\\uE4E7\";\n    Glyphs[\"rest256th\"] = \"\\uE4EB\";\n    Glyphs[\"rest32nd\"] = \"\\uE4E8\";\n    Glyphs[\"rest512th\"] = \"\\uE4EC\";\n    Glyphs[\"rest64th\"] = \"\\uE4E9\";\n    Glyphs[\"rest8th\"] = \"\\uE4E6\";\n    Glyphs[\"restDoubleWhole\"] = \"\\uE4E2\";\n    Glyphs[\"restDoubleWholeLegerLine\"] = \"\\uE4F3\";\n    Glyphs[\"restHBar\"] = \"\\uE4EE\";\n    Glyphs[\"restHBarLeft\"] = \"\\uE4EF\";\n    Glyphs[\"restHBarMiddle\"] = \"\\uE4F0\";\n    Glyphs[\"restHBarRight\"] = \"\\uE4F1\";\n    Glyphs[\"restHalf\"] = \"\\uE4E4\";\n    Glyphs[\"restHalfLegerLine\"] = \"\\uE4F5\";\n    Glyphs[\"restLonga\"] = \"\\uE4E1\";\n    Glyphs[\"restMaxima\"] = \"\\uE4E0\";\n    Glyphs[\"restQuarter\"] = \"\\uE4E5\";\n    Glyphs[\"restQuarterOld\"] = \"\\uE4F2\";\n    Glyphs[\"restQuarterZ\"] = \"\\uE4F6\";\n    Glyphs[\"restWhole\"] = \"\\uE4E3\";\n    Glyphs[\"restWholeLegerLine\"] = \"\\uE4F4\";\n    Glyphs[\"reversedBrace\"] = \"\\uE001\";\n    Glyphs[\"reversedBracketBottom\"] = \"\\uE006\";\n    Glyphs[\"reversedBracketTop\"] = \"\\uE005\";\n    Glyphs[\"rightRepeatSmall\"] = \"\\uE04D\";\n    Glyphs[\"scaleDegree1\"] = \"\\uEF00\";\n    Glyphs[\"scaleDegree2\"] = \"\\uEF01\";\n    Glyphs[\"scaleDegree3\"] = \"\\uEF02\";\n    Glyphs[\"scaleDegree4\"] = \"\\uEF03\";\n    Glyphs[\"scaleDegree5\"] = \"\\uEF04\";\n    Glyphs[\"scaleDegree6\"] = \"\\uEF05\";\n    Glyphs[\"scaleDegree7\"] = \"\\uEF06\";\n    Glyphs[\"scaleDegree8\"] = \"\\uEF07\";\n    Glyphs[\"scaleDegree9\"] = \"\\uEF08\";\n    Glyphs[\"schaefferClef\"] = \"\\uE06F\";\n    Glyphs[\"schaefferFClefToGClef\"] = \"\\uE072\";\n    Glyphs[\"schaefferGClefToFClef\"] = \"\\uE071\";\n    Glyphs[\"schaefferPreviousClef\"] = \"\\uE070\";\n    Glyphs[\"segno\"] = \"\\uE047\";\n    Glyphs[\"segnoSerpent1\"] = \"\\uE04A\";\n    Glyphs[\"segnoSerpent2\"] = \"\\uE04B\";\n    Glyphs[\"semipitchedPercussionClef1\"] = \"\\uE06B\";\n    Glyphs[\"semipitchedPercussionClef2\"] = \"\\uE06C\";\n    Glyphs[\"smnFlat\"] = \"\\uEC52\";\n    Glyphs[\"smnFlatWhite\"] = \"\\uEC53\";\n    Glyphs[\"smnHistoryDoubleFlat\"] = \"\\uEC57\";\n    Glyphs[\"smnHistoryDoubleSharp\"] = \"\\uEC55\";\n    Glyphs[\"smnHistoryFlat\"] = \"\\uEC56\";\n    Glyphs[\"smnHistorySharp\"] = \"\\uEC54\";\n    Glyphs[\"smnNatural\"] = \"\\uEC58\";\n    Glyphs[\"smnSharp\"] = \"\\uEC50\";\n    Glyphs[\"smnSharpDown\"] = \"\\uEC59\";\n    Glyphs[\"smnSharpWhite\"] = \"\\uEC51\";\n    Glyphs[\"smnSharpWhiteDown\"] = \"\\uEC5A\";\n    Glyphs[\"splitBarDivider\"] = \"\\uE00A\";\n    Glyphs[\"staff1Line\"] = \"\\uE010\";\n    Glyphs[\"staff1LineNarrow\"] = \"\\uE01C\";\n    Glyphs[\"staff1LineWide\"] = \"\\uE016\";\n    Glyphs[\"staff2Lines\"] = \"\\uE011\";\n    Glyphs[\"staff2LinesNarrow\"] = \"\\uE01D\";\n    Glyphs[\"staff2LinesWide\"] = \"\\uE017\";\n    Glyphs[\"staff3Lines\"] = \"\\uE012\";\n    Glyphs[\"staff3LinesNarrow\"] = \"\\uE01E\";\n    Glyphs[\"staff3LinesWide\"] = \"\\uE018\";\n    Glyphs[\"staff4Lines\"] = \"\\uE013\";\n    Glyphs[\"staff4LinesNarrow\"] = \"\\uE01F\";\n    Glyphs[\"staff4LinesWide\"] = \"\\uE019\";\n    Glyphs[\"staff5Lines\"] = \"\\uE014\";\n    Glyphs[\"staff5LinesNarrow\"] = \"\\uE020\";\n    Glyphs[\"staff5LinesWide\"] = \"\\uE01A\";\n    Glyphs[\"staff6Lines\"] = \"\\uE015\";\n    Glyphs[\"staff6LinesNarrow\"] = \"\\uE021\";\n    Glyphs[\"staff6LinesWide\"] = \"\\uE01B\";\n    Glyphs[\"staffDivideArrowDown\"] = \"\\uE00B\";\n    Glyphs[\"staffDivideArrowUp\"] = \"\\uE00C\";\n    Glyphs[\"staffDivideArrowUpDown\"] = \"\\uE00D\";\n    Glyphs[\"staffPosLower1\"] = \"\\uEB98\";\n    Glyphs[\"staffPosLower2\"] = \"\\uEB99\";\n    Glyphs[\"staffPosLower3\"] = \"\\uEB9A\";\n    Glyphs[\"staffPosLower4\"] = \"\\uEB9B\";\n    Glyphs[\"staffPosLower5\"] = \"\\uEB9C\";\n    Glyphs[\"staffPosLower6\"] = \"\\uEB9D\";\n    Glyphs[\"staffPosLower7\"] = \"\\uEB9E\";\n    Glyphs[\"staffPosLower8\"] = \"\\uEB9F\";\n    Glyphs[\"staffPosRaise1\"] = \"\\uEB90\";\n    Glyphs[\"staffPosRaise2\"] = \"\\uEB91\";\n    Glyphs[\"staffPosRaise3\"] = \"\\uEB92\";\n    Glyphs[\"staffPosRaise4\"] = \"\\uEB93\";\n    Glyphs[\"staffPosRaise5\"] = \"\\uEB94\";\n    Glyphs[\"staffPosRaise6\"] = \"\\uEB95\";\n    Glyphs[\"staffPosRaise7\"] = \"\\uEB96\";\n    Glyphs[\"staffPosRaise8\"] = \"\\uEB97\";\n    Glyphs[\"stem\"] = \"\\uE210\";\n    Glyphs[\"stemBowOnBridge\"] = \"\\uE215\";\n    Glyphs[\"stemBowOnTailpiece\"] = \"\\uE216\";\n    Glyphs[\"stemBuzzRoll\"] = \"\\uE217\";\n    Glyphs[\"stemDamp\"] = \"\\uE218\";\n    Glyphs[\"stemHarpStringNoise\"] = \"\\uE21F\";\n    Glyphs[\"stemMultiphonicsBlack\"] = \"\\uE21A\";\n    Glyphs[\"stemMultiphonicsBlackWhite\"] = \"\\uE21C\";\n    Glyphs[\"stemMultiphonicsWhite\"] = \"\\uE21B\";\n    Glyphs[\"stemPendereckiTremolo\"] = \"\\uE213\";\n    Glyphs[\"stemRimShot\"] = \"\\uE21E\";\n    Glyphs[\"stemSprechgesang\"] = \"\\uE211\";\n    Glyphs[\"stemSulPonticello\"] = \"\\uE214\";\n    Glyphs[\"stemSussurando\"] = \"\\uE21D\";\n    Glyphs[\"stemSwished\"] = \"\\uE212\";\n    Glyphs[\"stemVibratoPulse\"] = \"\\uE219\";\n    Glyphs[\"stockhausenTremolo\"] = \"\\uE232\";\n    Glyphs[\"stringsBowBehindBridge\"] = \"\\uE618\";\n    Glyphs[\"stringsBowBehindBridgeFourStrings\"] = \"\\uE62A\";\n    Glyphs[\"stringsBowBehindBridgeOneString\"] = \"\\uE627\";\n    Glyphs[\"stringsBowBehindBridgeThreeStrings\"] = \"\\uE629\";\n    Glyphs[\"stringsBowBehindBridgeTwoStrings\"] = \"\\uE628\";\n    Glyphs[\"stringsBowOnBridge\"] = \"\\uE619\";\n    Glyphs[\"stringsBowOnTailpiece\"] = \"\\uE61A\";\n    Glyphs[\"stringsChangeBowDirection\"] = \"\\uE626\";\n    Glyphs[\"stringsDownBow\"] = \"\\uE610\";\n    Glyphs[\"stringsDownBowAwayFromBody\"] = \"\\uEE82\";\n    Glyphs[\"stringsDownBowBeyondBridge\"] = \"\\uEE84\";\n    Glyphs[\"stringsDownBowTowardsBody\"] = \"\\uEE80\";\n    Glyphs[\"stringsDownBowTurned\"] = \"\\uE611\";\n    Glyphs[\"stringsFouette\"] = \"\\uE622\";\n    Glyphs[\"stringsHalfHarmonic\"] = \"\\uE615\";\n    Glyphs[\"stringsHarmonic\"] = \"\\uE614\";\n    Glyphs[\"stringsJeteAbove\"] = \"\\uE620\";\n    Glyphs[\"stringsJeteBelow\"] = \"\\uE621\";\n    Glyphs[\"stringsMuteOff\"] = \"\\uE617\";\n    Glyphs[\"stringsMuteOn\"] = \"\\uE616\";\n    Glyphs[\"stringsOverpressureDownBow\"] = \"\\uE61B\";\n    Glyphs[\"stringsOverpressureNoDirection\"] = \"\\uE61F\";\n    Glyphs[\"stringsOverpressurePossibileDownBow\"] = \"\\uE61D\";\n    Glyphs[\"stringsOverpressurePossibileUpBow\"] = \"\\uE61E\";\n    Glyphs[\"stringsOverpressureUpBow\"] = \"\\uE61C\";\n    Glyphs[\"stringsScrapeCircularClockwise\"] = \"\\uEE88\";\n    Glyphs[\"stringsScrapeCircularCounterclockwise\"] = \"\\uEE89\";\n    Glyphs[\"stringsScrapeParallelInward\"] = \"\\uEE86\";\n    Glyphs[\"stringsScrapeParallelOutward\"] = \"\\uEE87\";\n    Glyphs[\"stringsThumbPosition\"] = \"\\uE624\";\n    Glyphs[\"stringsThumbPositionTurned\"] = \"\\uE625\";\n    Glyphs[\"stringsTripleChopInward\"] = \"\\uEE8A\";\n    Glyphs[\"stringsTripleChopOutward\"] = \"\\uEE8B\";\n    Glyphs[\"stringsUpBow\"] = \"\\uE612\";\n    Glyphs[\"stringsUpBowAwayFromBody\"] = \"\\uEE83\";\n    Glyphs[\"stringsUpBowBeyondBridge\"] = \"\\uEE85\";\n    Glyphs[\"stringsUpBowTowardsBody\"] = \"\\uEE81\";\n    Glyphs[\"stringsUpBowTurned\"] = \"\\uE613\";\n    Glyphs[\"stringsVibratoPulse\"] = \"\\uE623\";\n    Glyphs[\"swissRudimentsNoteheadBlackDouble\"] = \"\\uEE72\";\n    Glyphs[\"swissRudimentsNoteheadBlackFlam\"] = \"\\uEE70\";\n    Glyphs[\"swissRudimentsNoteheadHalfDouble\"] = \"\\uEE73\";\n    Glyphs[\"swissRudimentsNoteheadHalfFlam\"] = \"\\uEE71\";\n    Glyphs[\"systemDivider\"] = \"\\uE007\";\n    Glyphs[\"systemDividerExtraLong\"] = \"\\uE009\";\n    Glyphs[\"systemDividerLong\"] = \"\\uE008\";\n    Glyphs[\"textAugmentationDot\"] = \"\\uE1FC\";\n    Glyphs[\"textBlackNoteFrac16thLongStem\"] = \"\\uE1F5\";\n    Glyphs[\"textBlackNoteFrac16thShortStem\"] = \"\\uE1F4\";\n    Glyphs[\"textBlackNoteFrac32ndLongStem\"] = \"\\uE1F6\";\n    Glyphs[\"textBlackNoteFrac8thLongStem\"] = \"\\uE1F3\";\n    Glyphs[\"textBlackNoteFrac8thShortStem\"] = \"\\uE1F2\";\n    Glyphs[\"textBlackNoteLongStem\"] = \"\\uE1F1\";\n    Glyphs[\"textBlackNoteShortStem\"] = \"\\uE1F0\";\n    Glyphs[\"textCont16thBeamLongStem\"] = \"\\uE1FA\";\n    Glyphs[\"textCont16thBeamShortStem\"] = \"\\uE1F9\";\n    Glyphs[\"textCont32ndBeamLongStem\"] = \"\\uE1FB\";\n    Glyphs[\"textCont8thBeamLongStem\"] = \"\\uE1F8\";\n    Glyphs[\"textCont8thBeamShortStem\"] = \"\\uE1F7\";\n    Glyphs[\"textHeadlessBlackNoteFrac16thLongStem\"] = \"\\uE209\";\n    Glyphs[\"textHeadlessBlackNoteFrac16thShortStem\"] = \"\\uE208\";\n    Glyphs[\"textHeadlessBlackNoteFrac32ndLongStem\"] = \"\\uE20A\";\n    Glyphs[\"textHeadlessBlackNoteFrac8thLongStem\"] = \"\\uE207\";\n    Glyphs[\"textHeadlessBlackNoteFrac8thShortStem\"] = \"\\uE206\";\n    Glyphs[\"textHeadlessBlackNoteLongStem\"] = \"\\uE205\";\n    Glyphs[\"textHeadlessBlackNoteShortStem\"] = \"\\uE204\";\n    Glyphs[\"textTie\"] = \"\\uE1FD\";\n    Glyphs[\"textTuplet3LongStem\"] = \"\\uE202\";\n    Glyphs[\"textTuplet3ShortStem\"] = \"\\uE1FF\";\n    Glyphs[\"textTupletBracketEndLongStem\"] = \"\\uE203\";\n    Glyphs[\"textTupletBracketEndShortStem\"] = \"\\uE200\";\n    Glyphs[\"textTupletBracketStartLongStem\"] = \"\\uE201\";\n    Glyphs[\"textTupletBracketStartShortStem\"] = \"\\uE1FE\";\n    Glyphs[\"timeSig0\"] = \"\\uE080\";\n    Glyphs[\"timeSig0Reversed\"] = \"\\uECF0\";\n    Glyphs[\"timeSig0Turned\"] = \"\\uECE0\";\n    Glyphs[\"timeSig1\"] = \"\\uE081\";\n    Glyphs[\"timeSig1Reversed\"] = \"\\uECF1\";\n    Glyphs[\"timeSig1Turned\"] = \"\\uECE1\";\n    Glyphs[\"timeSig2\"] = \"\\uE082\";\n    Glyphs[\"timeSig2Reversed\"] = \"\\uECF2\";\n    Glyphs[\"timeSig2Turned\"] = \"\\uECE2\";\n    Glyphs[\"timeSig3\"] = \"\\uE083\";\n    Glyphs[\"timeSig3Reversed\"] = \"\\uECF3\";\n    Glyphs[\"timeSig3Turned\"] = \"\\uECE3\";\n    Glyphs[\"timeSig4\"] = \"\\uE084\";\n    Glyphs[\"timeSig4Reversed\"] = \"\\uECF4\";\n    Glyphs[\"timeSig4Turned\"] = \"\\uECE4\";\n    Glyphs[\"timeSig5\"] = \"\\uE085\";\n    Glyphs[\"timeSig5Reversed\"] = \"\\uECF5\";\n    Glyphs[\"timeSig5Turned\"] = \"\\uECE5\";\n    Glyphs[\"timeSig6\"] = \"\\uE086\";\n    Glyphs[\"timeSig6Reversed\"] = \"\\uECF6\";\n    Glyphs[\"timeSig6Turned\"] = \"\\uECE6\";\n    Glyphs[\"timeSig7\"] = \"\\uE087\";\n    Glyphs[\"timeSig7Reversed\"] = \"\\uECF7\";\n    Glyphs[\"timeSig7Turned\"] = \"\\uECE7\";\n    Glyphs[\"timeSig8\"] = \"\\uE088\";\n    Glyphs[\"timeSig8Reversed\"] = \"\\uECF8\";\n    Glyphs[\"timeSig8Turned\"] = \"\\uECE8\";\n    Glyphs[\"timeSig9\"] = \"\\uE089\";\n    Glyphs[\"timeSig9Reversed\"] = \"\\uECF9\";\n    Glyphs[\"timeSig9Turned\"] = \"\\uECE9\";\n    Glyphs[\"timeSigBracketLeft\"] = \"\\uEC80\";\n    Glyphs[\"timeSigBracketLeftSmall\"] = \"\\uEC82\";\n    Glyphs[\"timeSigBracketRight\"] = \"\\uEC81\";\n    Glyphs[\"timeSigBracketRightSmall\"] = \"\\uEC83\";\n    Glyphs[\"timeSigCombDenominator\"] = \"\\uE09F\";\n    Glyphs[\"timeSigCombNumerator\"] = \"\\uE09E\";\n    Glyphs[\"timeSigComma\"] = \"\\uE096\";\n    Glyphs[\"timeSigCommon\"] = \"\\uE08A\";\n    Glyphs[\"timeSigCommonReversed\"] = \"\\uECFA\";\n    Glyphs[\"timeSigCommonTurned\"] = \"\\uECEA\";\n    Glyphs[\"timeSigCut2\"] = \"\\uEC85\";\n    Glyphs[\"timeSigCut3\"] = \"\\uEC86\";\n    Glyphs[\"timeSigCutCommon\"] = \"\\uE08B\";\n    Glyphs[\"timeSigCutCommonReversed\"] = \"\\uECFB\";\n    Glyphs[\"timeSigCutCommonTurned\"] = \"\\uECEB\";\n    Glyphs[\"timeSigEquals\"] = \"\\uE08F\";\n    Glyphs[\"timeSigFractionHalf\"] = \"\\uE098\";\n    Glyphs[\"timeSigFractionOneThird\"] = \"\\uE09A\";\n    Glyphs[\"timeSigFractionQuarter\"] = \"\\uE097\";\n    Glyphs[\"timeSigFractionThreeQuarters\"] = \"\\uE099\";\n    Glyphs[\"timeSigFractionTwoThirds\"] = \"\\uE09B\";\n    Glyphs[\"timeSigFractionalSlash\"] = \"\\uE08E\";\n    Glyphs[\"timeSigMinus\"] = \"\\uE090\";\n    Glyphs[\"timeSigMultiply\"] = \"\\uE091\";\n    Glyphs[\"timeSigOpenPenderecki\"] = \"\\uE09D\";\n    Glyphs[\"timeSigParensLeft\"] = \"\\uE094\";\n    Glyphs[\"timeSigParensLeftSmall\"] = \"\\uE092\";\n    Glyphs[\"timeSigParensRight\"] = \"\\uE095\";\n    Glyphs[\"timeSigParensRightSmall\"] = \"\\uE093\";\n    Glyphs[\"timeSigPlus\"] = \"\\uE08C\";\n    Glyphs[\"timeSigPlusSmall\"] = \"\\uE08D\";\n    Glyphs[\"timeSigSlash\"] = \"\\uEC84\";\n    Glyphs[\"timeSigX\"] = \"\\uE09C\";\n    Glyphs[\"tremolo1\"] = \"\\uE220\";\n    Glyphs[\"tremolo2\"] = \"\\uE221\";\n    Glyphs[\"tremolo3\"] = \"\\uE222\";\n    Glyphs[\"tremolo4\"] = \"\\uE223\";\n    Glyphs[\"tremolo5\"] = \"\\uE224\";\n    Glyphs[\"tremoloDivisiDots2\"] = \"\\uE22E\";\n    Glyphs[\"tremoloDivisiDots3\"] = \"\\uE22F\";\n    Glyphs[\"tremoloDivisiDots4\"] = \"\\uE230\";\n    Glyphs[\"tremoloDivisiDots6\"] = \"\\uE231\";\n    Glyphs[\"tremoloFingered1\"] = \"\\uE225\";\n    Glyphs[\"tremoloFingered2\"] = \"\\uE226\";\n    Glyphs[\"tremoloFingered3\"] = \"\\uE227\";\n    Glyphs[\"tremoloFingered4\"] = \"\\uE228\";\n    Glyphs[\"tremoloFingered5\"] = \"\\uE229\";\n    Glyphs[\"tripleTongueAbove\"] = \"\\uE5F2\";\n    Glyphs[\"tripleTongueBelow\"] = \"\\uE5F3\";\n    Glyphs[\"tuplet0\"] = \"\\uE880\";\n    Glyphs[\"tuplet1\"] = \"\\uE881\";\n    Glyphs[\"tuplet2\"] = \"\\uE882\";\n    Glyphs[\"tuplet3\"] = \"\\uE883\";\n    Glyphs[\"tuplet4\"] = \"\\uE884\";\n    Glyphs[\"tuplet5\"] = \"\\uE885\";\n    Glyphs[\"tuplet6\"] = \"\\uE886\";\n    Glyphs[\"tuplet7\"] = \"\\uE887\";\n    Glyphs[\"tuplet8\"] = \"\\uE888\";\n    Glyphs[\"tuplet9\"] = \"\\uE889\";\n    Glyphs[\"tupletColon\"] = \"\\uE88A\";\n    Glyphs[\"unmeasuredTremolo\"] = \"\\uE22C\";\n    Glyphs[\"unmeasuredTremoloSimple\"] = \"\\uE22D\";\n    Glyphs[\"unpitchedPercussionClef1\"] = \"\\uE069\";\n    Glyphs[\"unpitchedPercussionClef2\"] = \"\\uE06A\";\n    Glyphs[\"ventiduesima\"] = \"\\uE517\";\n    Glyphs[\"ventiduesimaAlta\"] = \"\\uE518\";\n    Glyphs[\"ventiduesimaBassa\"] = \"\\uE519\";\n    Glyphs[\"ventiduesimaBassaMb\"] = \"\\uE51E\";\n    Glyphs[\"vocalFingerClickStockhausen\"] = \"\\uE649\";\n    Glyphs[\"vocalHalbGesungen\"] = \"\\uE64B\";\n    Glyphs[\"vocalMouthClosed\"] = \"\\uE640\";\n    Glyphs[\"vocalMouthOpen\"] = \"\\uE642\";\n    Glyphs[\"vocalMouthPursed\"] = \"\\uE644\";\n    Glyphs[\"vocalMouthSlightlyOpen\"] = \"\\uE641\";\n    Glyphs[\"vocalMouthWideOpen\"] = \"\\uE643\";\n    Glyphs[\"vocalNasalVoice\"] = \"\\uE647\";\n    Glyphs[\"vocalSprechgesang\"] = \"\\uE645\";\n    Glyphs[\"vocalTongueClickStockhausen\"] = \"\\uE648\";\n    Glyphs[\"vocalTongueFingerClickStockhausen\"] = \"\\uE64A\";\n    Glyphs[\"vocalsSussurando\"] = \"\\uE646\";\n    Glyphs[\"wiggleArpeggiatoDown\"] = \"\\uEAAA\";\n    Glyphs[\"wiggleArpeggiatoDownArrow\"] = \"\\uEAAE\";\n    Glyphs[\"wiggleArpeggiatoDownSwash\"] = \"\\uEAAC\";\n    Glyphs[\"wiggleArpeggiatoUp\"] = \"\\uEAA9\";\n    Glyphs[\"wiggleArpeggiatoUpArrow\"] = \"\\uEAAD\";\n    Glyphs[\"wiggleArpeggiatoUpSwash\"] = \"\\uEAAB\";\n    Glyphs[\"wiggleCircular\"] = \"\\uEAC9\";\n    Glyphs[\"wiggleCircularConstant\"] = \"\\uEAC0\";\n    Glyphs[\"wiggleCircularConstantFlipped\"] = \"\\uEAC1\";\n    Glyphs[\"wiggleCircularConstantFlippedLarge\"] = \"\\uEAC3\";\n    Glyphs[\"wiggleCircularConstantLarge\"] = \"\\uEAC2\";\n    Glyphs[\"wiggleCircularEnd\"] = \"\\uEACB\";\n    Glyphs[\"wiggleCircularLarge\"] = \"\\uEAC8\";\n    Glyphs[\"wiggleCircularLarger\"] = \"\\uEAC7\";\n    Glyphs[\"wiggleCircularLargerStill\"] = \"\\uEAC6\";\n    Glyphs[\"wiggleCircularLargest\"] = \"\\uEAC5\";\n    Glyphs[\"wiggleCircularSmall\"] = \"\\uEACA\";\n    Glyphs[\"wiggleCircularStart\"] = \"\\uEAC4\";\n    Glyphs[\"wiggleGlissando\"] = \"\\uEAAF\";\n    Glyphs[\"wiggleGlissandoGroup1\"] = \"\\uEABD\";\n    Glyphs[\"wiggleGlissandoGroup2\"] = \"\\uEABE\";\n    Glyphs[\"wiggleGlissandoGroup3\"] = \"\\uEABF\";\n    Glyphs[\"wiggleRandom1\"] = \"\\uEAF0\";\n    Glyphs[\"wiggleRandom2\"] = \"\\uEAF1\";\n    Glyphs[\"wiggleRandom3\"] = \"\\uEAF2\";\n    Glyphs[\"wiggleRandom4\"] = \"\\uEAF3\";\n    Glyphs[\"wiggleSawtooth\"] = \"\\uEABB\";\n    Glyphs[\"wiggleSawtoothNarrow\"] = \"\\uEABA\";\n    Glyphs[\"wiggleSawtoothWide\"] = \"\\uEABC\";\n    Glyphs[\"wiggleSquareWave\"] = \"\\uEAB8\";\n    Glyphs[\"wiggleSquareWaveNarrow\"] = \"\\uEAB7\";\n    Glyphs[\"wiggleSquareWaveWide\"] = \"\\uEAB9\";\n    Glyphs[\"wiggleTrill\"] = \"\\uEAA4\";\n    Glyphs[\"wiggleTrillFast\"] = \"\\uEAA3\";\n    Glyphs[\"wiggleTrillFaster\"] = \"\\uEAA2\";\n    Glyphs[\"wiggleTrillFasterStill\"] = \"\\uEAA1\";\n    Glyphs[\"wiggleTrillFastest\"] = \"\\uEAA0\";\n    Glyphs[\"wiggleTrillSlow\"] = \"\\uEAA5\";\n    Glyphs[\"wiggleTrillSlower\"] = \"\\uEAA6\";\n    Glyphs[\"wiggleTrillSlowerStill\"] = \"\\uEAA7\";\n    Glyphs[\"wiggleTrillSlowest\"] = \"\\uEAA8\";\n    Glyphs[\"wiggleVIbratoLargestSlower\"] = \"\\uEAEE\";\n    Glyphs[\"wiggleVIbratoMediumSlower\"] = \"\\uEAE0\";\n    Glyphs[\"wiggleVibrato\"] = \"\\uEAB0\";\n    Glyphs[\"wiggleVibratoLargeFast\"] = \"\\uEAE5\";\n    Glyphs[\"wiggleVibratoLargeFaster\"] = \"\\uEAE4\";\n    Glyphs[\"wiggleVibratoLargeFasterStill\"] = \"\\uEAE3\";\n    Glyphs[\"wiggleVibratoLargeFastest\"] = \"\\uEAE2\";\n    Glyphs[\"wiggleVibratoLargeSlow\"] = \"\\uEAE6\";\n    Glyphs[\"wiggleVibratoLargeSlower\"] = \"\\uEAE7\";\n    Glyphs[\"wiggleVibratoLargeSlowest\"] = \"\\uEAE8\";\n    Glyphs[\"wiggleVibratoLargestFast\"] = \"\\uEAEC\";\n    Glyphs[\"wiggleVibratoLargestFaster\"] = \"\\uEAEB\";\n    Glyphs[\"wiggleVibratoLargestFasterStill\"] = \"\\uEAEA\";\n    Glyphs[\"wiggleVibratoLargestFastest\"] = \"\\uEAE9\";\n    Glyphs[\"wiggleVibratoLargestSlow\"] = \"\\uEAED\";\n    Glyphs[\"wiggleVibratoLargestSlowest\"] = \"\\uEAEF\";\n    Glyphs[\"wiggleVibratoMediumFast\"] = \"\\uEADE\";\n    Glyphs[\"wiggleVibratoMediumFaster\"] = \"\\uEADD\";\n    Glyphs[\"wiggleVibratoMediumFasterStill\"] = \"\\uEADC\";\n    Glyphs[\"wiggleVibratoMediumFastest\"] = \"\\uEADB\";\n    Glyphs[\"wiggleVibratoMediumSlow\"] = \"\\uEADF\";\n    Glyphs[\"wiggleVibratoMediumSlowest\"] = \"\\uEAE1\";\n    Glyphs[\"wiggleVibratoSmallFast\"] = \"\\uEAD7\";\n    Glyphs[\"wiggleVibratoSmallFaster\"] = \"\\uEAD6\";\n    Glyphs[\"wiggleVibratoSmallFasterStill\"] = \"\\uEAD5\";\n    Glyphs[\"wiggleVibratoSmallFastest\"] = \"\\uEAD4\";\n    Glyphs[\"wiggleVibratoSmallSlow\"] = \"\\uEAD8\";\n    Glyphs[\"wiggleVibratoSmallSlower\"] = \"\\uEAD9\";\n    Glyphs[\"wiggleVibratoSmallSlowest\"] = \"\\uEADA\";\n    Glyphs[\"wiggleVibratoSmallestFast\"] = \"\\uEAD0\";\n    Glyphs[\"wiggleVibratoSmallestFaster\"] = \"\\uEACF\";\n    Glyphs[\"wiggleVibratoSmallestFasterStill\"] = \"\\uEACE\";\n    Glyphs[\"wiggleVibratoSmallestFastest\"] = \"\\uEACD\";\n    Glyphs[\"wiggleVibratoSmallestSlow\"] = \"\\uEAD1\";\n    Glyphs[\"wiggleVibratoSmallestSlower\"] = \"\\uEAD2\";\n    Glyphs[\"wiggleVibratoSmallestSlowest\"] = \"\\uEAD3\";\n    Glyphs[\"wiggleVibratoStart\"] = \"\\uEACC\";\n    Glyphs[\"wiggleVibratoWide\"] = \"\\uEAB1\";\n    Glyphs[\"wiggleWavy\"] = \"\\uEAB5\";\n    Glyphs[\"wiggleWavyNarrow\"] = \"\\uEAB4\";\n    Glyphs[\"wiggleWavyWide\"] = \"\\uEAB6\";\n    Glyphs[\"windClosedHole\"] = \"\\uE5F4\";\n    Glyphs[\"windFlatEmbouchure\"] = \"\\uE5FB\";\n    Glyphs[\"windHalfClosedHole1\"] = \"\\uE5F6\";\n    Glyphs[\"windHalfClosedHole2\"] = \"\\uE5F7\";\n    Glyphs[\"windHalfClosedHole3\"] = \"\\uE5F8\";\n    Glyphs[\"windLessRelaxedEmbouchure\"] = \"\\uE5FE\";\n    Glyphs[\"windLessTightEmbouchure\"] = \"\\uE600\";\n    Glyphs[\"windMouthpiecePop\"] = \"\\uE60A\";\n    Glyphs[\"windMultiphonicsBlackStem\"] = \"\\uE607\";\n    Glyphs[\"windMultiphonicsBlackWhiteStem\"] = \"\\uE609\";\n    Glyphs[\"windMultiphonicsWhiteStem\"] = \"\\uE608\";\n    Glyphs[\"windOpenHole\"] = \"\\uE5F9\";\n    Glyphs[\"windReedPositionIn\"] = \"\\uE606\";\n    Glyphs[\"windReedPositionNormal\"] = \"\\uE604\";\n    Glyphs[\"windReedPositionOut\"] = \"\\uE605\";\n    Glyphs[\"windRelaxedEmbouchure\"] = \"\\uE5FD\";\n    Glyphs[\"windRimOnly\"] = \"\\uE60B\";\n    Glyphs[\"windSharpEmbouchure\"] = \"\\uE5FC\";\n    Glyphs[\"windStrongAirPressure\"] = \"\\uE603\";\n    Glyphs[\"windThreeQuartersClosedHole\"] = \"\\uE5F5\";\n    Glyphs[\"windTightEmbouchure\"] = \"\\uE5FF\";\n    Glyphs[\"windTrillKey\"] = \"\\uE5FA\";\n    Glyphs[\"windVeryTightEmbouchure\"] = \"\\uE601\";\n    Glyphs[\"windWeakAirPressure\"] = \"\\uE602\";\n})(Glyphs || (Glyphs = {}));\n","import { RuntimeError } from './util.js';\nexport class Music {\n    static get NUM_TONES() {\n        return this.canonicalNotes.length;\n    }\n    static get roots() {\n        return ['c', 'd', 'e', 'f', 'g', 'a', 'b'];\n    }\n    static get rootValues() {\n        return [0, 2, 4, 5, 7, 9, 11];\n    }\n    static get rootIndexes() {\n        return {\n            c: 0,\n            d: 1,\n            e: 2,\n            f: 3,\n            g: 4,\n            a: 5,\n            b: 6,\n        };\n    }\n    static get canonicalNotes() {\n        return ['c', 'c#', 'd', 'd#', 'e', 'f', 'f#', 'g', 'g#', 'a', 'a#', 'b'];\n    }\n    static get diatonicIntervals() {\n        return ['unison', 'm2', 'M2', 'm3', 'M3', 'p4', 'dim5', 'p5', 'm6', 'M6', 'b7', 'M7', 'octave'];\n    }\n    static get diatonicAccidentals() {\n        return {\n            unison: { note: 0, accidental: 0 },\n            m2: { note: 1, accidental: -1 },\n            M2: { note: 1, accidental: 0 },\n            m3: { note: 2, accidental: -1 },\n            M3: { note: 2, accidental: 0 },\n            p4: { note: 3, accidental: 0 },\n            dim5: { note: 4, accidental: -1 },\n            p5: { note: 4, accidental: 0 },\n            m6: { note: 5, accidental: -1 },\n            M6: { note: 5, accidental: 0 },\n            b7: { note: 6, accidental: -1 },\n            M7: { note: 6, accidental: 0 },\n            octave: { note: 7, accidental: 0 },\n        };\n    }\n    static get intervals() {\n        return {\n            u: 0,\n            unison: 0,\n            m2: 1,\n            b2: 1,\n            min2: 1,\n            S: 1,\n            H: 1,\n            2: 2,\n            M2: 2,\n            maj2: 2,\n            T: 2,\n            W: 2,\n            m3: 3,\n            b3: 3,\n            min3: 3,\n            M3: 4,\n            3: 4,\n            maj3: 4,\n            4: 5,\n            p4: 5,\n            '#4': 6,\n            b5: 6,\n            aug4: 6,\n            dim5: 6,\n            5: 7,\n            p5: 7,\n            '#5': 8,\n            b6: 8,\n            aug5: 8,\n            6: 9,\n            M6: 9,\n            maj6: 9,\n            b7: 10,\n            m7: 10,\n            min7: 10,\n            dom7: 10,\n            M7: 11,\n            maj7: 11,\n            8: 12,\n            octave: 12,\n        };\n    }\n    static get scales() {\n        return {\n            major: [2, 2, 1, 2, 2, 2, 1],\n            minor: [2, 1, 2, 2, 1, 2, 2],\n            ionian: [2, 2, 1, 2, 2, 2, 1],\n            dorian: [2, 1, 2, 2, 2, 1, 2],\n            phyrgian: [1, 2, 2, 2, 1, 2, 2],\n            lydian: [2, 2, 2, 1, 2, 2, 1],\n            mixolydian: [2, 2, 1, 2, 2, 1, 2],\n            aeolian: [2, 1, 2, 2, 1, 2, 2],\n            locrian: [1, 2, 2, 1, 2, 2, 2],\n        };\n    }\n    static get scaleTypes() {\n        return {\n            M: Music.scales.major,\n            m: Music.scales.minor,\n        };\n    }\n    static get accidentals() {\n        return ['bb', 'b', 'n', '#', '##'];\n    }\n    static get noteValues() {\n        return {\n            c: { rootIndex: 0, intVal: 0 },\n            cn: { rootIndex: 0, intVal: 0 },\n            'c#': { rootIndex: 0, intVal: 1 },\n            'c##': { rootIndex: 0, intVal: 2 },\n            cb: { rootIndex: 0, intVal: 11 },\n            cbb: { rootIndex: 0, intVal: 10 },\n            d: { rootIndex: 1, intVal: 2 },\n            dn: { rootIndex: 1, intVal: 2 },\n            'd#': { rootIndex: 1, intVal: 3 },\n            'd##': { rootIndex: 1, intVal: 4 },\n            db: { rootIndex: 1, intVal: 1 },\n            dbb: { rootIndex: 1, intVal: 0 },\n            e: { rootIndex: 2, intVal: 4 },\n            en: { rootIndex: 2, intVal: 4 },\n            'e#': { rootIndex: 2, intVal: 5 },\n            'e##': { rootIndex: 2, intVal: 6 },\n            eb: { rootIndex: 2, intVal: 3 },\n            ebb: { rootIndex: 2, intVal: 2 },\n            f: { rootIndex: 3, intVal: 5 },\n            fn: { rootIndex: 3, intVal: 5 },\n            'f#': { rootIndex: 3, intVal: 6 },\n            'f##': { rootIndex: 3, intVal: 7 },\n            fb: { rootIndex: 3, intVal: 4 },\n            fbb: { rootIndex: 3, intVal: 3 },\n            g: { rootIndex: 4, intVal: 7 },\n            gn: { rootIndex: 4, intVal: 7 },\n            'g#': { rootIndex: 4, intVal: 8 },\n            'g##': { rootIndex: 4, intVal: 9 },\n            gb: { rootIndex: 4, intVal: 6 },\n            gbb: { rootIndex: 4, intVal: 5 },\n            a: { rootIndex: 5, intVal: 9 },\n            an: { rootIndex: 5, intVal: 9 },\n            'a#': { rootIndex: 5, intVal: 10 },\n            'a##': { rootIndex: 5, intVal: 11 },\n            ab: { rootIndex: 5, intVal: 8 },\n            abb: { rootIndex: 5, intVal: 7 },\n            b: { rootIndex: 6, intVal: 11 },\n            bn: { rootIndex: 6, intVal: 11 },\n            'b#': { rootIndex: 6, intVal: 0 },\n            'b##': { rootIndex: 6, intVal: 1 },\n            bb: { rootIndex: 6, intVal: 10 },\n            bbb: { rootIndex: 6, intVal: 9 },\n        };\n    }\n    isValidNoteValue(note) {\n        return note >= 0 && note < Music.canonicalNotes.length;\n    }\n    isValidIntervalValue(interval) {\n        return interval >= 0 && interval < Music.diatonicIntervals.length;\n    }\n    getNoteParts(noteString) {\n        if (!noteString || noteString.length < 1) {\n            throw new RuntimeError('BadArguments', 'Invalid note name: ' + noteString);\n        }\n        if (noteString.length > 3) {\n            throw new RuntimeError('BadArguments', 'Invalid note name: ' + noteString);\n        }\n        const note = noteString.toLowerCase();\n        const regex = /^([cdefgab])(b|bb|n|#|##)?$/;\n        const match = regex.exec(note);\n        if (match !== null) {\n            const root = match[1];\n            const accidental = match[2];\n            return {\n                root,\n                accidental,\n            };\n        }\n        else {\n            throw new RuntimeError('BadArguments', 'Invalid note name: ' + noteString);\n        }\n    }\n    getKeyParts(keyString) {\n        if (!keyString || keyString.length < 1) {\n            throw new RuntimeError('BadArguments', 'Invalid key: ' + keyString);\n        }\n        const key = keyString.toLowerCase();\n        const regex = /^([cdefgab])(b|#)?(mel|harm|m|M)?$/;\n        const match = regex.exec(key);\n        if (match !== null) {\n            const root = match[1];\n            const accidental = match[2];\n            let type = match[3];\n            if (!type)\n                type = 'M';\n            return {\n                root,\n                accidental,\n                type,\n            };\n        }\n        else {\n            throw new RuntimeError('BadArguments', `Invalid key: ${keyString}`);\n        }\n    }\n    getNoteValue(noteString) {\n        const value = Music.noteValues[noteString];\n        if (value === undefined) {\n            throw new RuntimeError('BadArguments', `Invalid note name: ${noteString}`);\n        }\n        return value.intVal;\n    }\n    getIntervalValue(intervalString) {\n        const value = Music.intervals[intervalString];\n        if (value === undefined) {\n            throw new RuntimeError('BadArguments', `Invalid interval name: ${intervalString}`);\n        }\n        return value;\n    }\n    getCanonicalNoteName(noteValue) {\n        if (!this.isValidNoteValue(noteValue)) {\n            throw new RuntimeError('BadArguments', `Invalid note value: ${noteValue}`);\n        }\n        return Music.canonicalNotes[noteValue];\n    }\n    getCanonicalIntervalName(intervalValue) {\n        if (!this.isValidIntervalValue(intervalValue)) {\n            throw new RuntimeError('BadArguments', `Invalid interval value: ${intervalValue}`);\n        }\n        return Music.diatonicIntervals[intervalValue];\n    }\n    getRelativeNoteValue(noteValue, intervalValue, direction = 1) {\n        if (direction !== 1 && direction !== -1) {\n            throw new RuntimeError('BadArguments', `Invalid direction: ${direction}`);\n        }\n        let sum = (noteValue + direction * intervalValue) % Music.NUM_TONES;\n        if (sum < 0)\n            sum += Music.NUM_TONES;\n        return sum;\n    }\n    getRelativeNoteName(root, noteValue) {\n        const parts = this.getNoteParts(root);\n        const rootValue = this.getNoteValue(parts.root);\n        let interval = noteValue - rootValue;\n        if (Math.abs(interval) > Music.NUM_TONES - 3) {\n            let multiplier = 1;\n            if (interval > 0)\n                multiplier = -1;\n            const reverseInterval = ((noteValue + 1 + (rootValue + 1)) % Music.NUM_TONES) * multiplier;\n            if (Math.abs(reverseInterval) > 2) {\n                throw new RuntimeError('BadArguments', `Notes not related: ${root}, ${noteValue})`);\n            }\n            else {\n                interval = reverseInterval;\n            }\n        }\n        if (Math.abs(interval) > 2) {\n            throw new RuntimeError('BadArguments', `Notes not related: ${root}, ${noteValue})`);\n        }\n        let relativeNoteName = parts.root;\n        if (interval > 0) {\n            for (let i = 1; i <= interval; ++i) {\n                relativeNoteName += '#';\n            }\n        }\n        else if (interval < 0) {\n            for (let i = -1; i >= interval; --i) {\n                relativeNoteName += 'b';\n            }\n        }\n        return relativeNoteName;\n    }\n    getScaleTones(key, intervals) {\n        const tones = [key];\n        let nextNote = key;\n        for (let i = 0; i < intervals.length; i++) {\n            nextNote = this.getRelativeNoteValue(nextNote, intervals[i]);\n            if (nextNote !== key)\n                tones.push(nextNote);\n        }\n        return tones;\n    }\n    getIntervalBetween(note1, note2, direction = 1) {\n        if (direction !== 1 && direction !== -1) {\n            throw new RuntimeError('BadArguments', `Invalid direction: ${direction}`);\n        }\n        if (!this.isValidNoteValue(note1) || !this.isValidNoteValue(note2)) {\n            throw new RuntimeError('BadArguments', `Invalid notes: ${note1}, ${note2}`);\n        }\n        let difference = direction === 1 ? note2 - note1 : note1 - note2;\n        if (difference < 0)\n            difference += Music.NUM_TONES;\n        return difference;\n    }\n    createScaleMap(keySignature) {\n        const keySigParts = this.getKeyParts(keySignature);\n        if (!keySigParts.type)\n            throw new RuntimeError('BadArguments', 'Unsupported key type: undefined');\n        const scaleName = Music.scaleTypes[keySigParts.type];\n        let keySigString = keySigParts.root;\n        if (keySigParts.accidental)\n            keySigString += keySigParts.accidental;\n        if (!scaleName)\n            throw new RuntimeError('BadArguments', 'Unsupported key type: ' + keySignature);\n        const scale = this.getScaleTones(this.getNoteValue(keySigString), scaleName);\n        const noteLocation = Music.rootIndexes[keySigParts.root];\n        const scaleMap = {};\n        for (let i = 0; i < Music.roots.length; ++i) {\n            const index = (noteLocation + i) % Music.roots.length;\n            const rootName = Music.roots[index];\n            let noteName = this.getRelativeNoteName(rootName, scale[i]);\n            if (noteName.length === 1) {\n                noteName += 'n';\n            }\n            scaleMap[rootName] = noteName;\n        }\n        return scaleMap;\n    }\n}\n","import { Fraction } from './fraction.js';\nimport { Glyphs } from './glyphs.js';\nimport { RuntimeError } from './util.js';\nconst RESOLUTION = 16384;\nconst durations = {\n    '1/2': RESOLUTION * 2,\n    1: RESOLUTION / 1,\n    2: RESOLUTION / 2,\n    4: RESOLUTION / 4,\n    8: RESOLUTION / 8,\n    16: RESOLUTION / 16,\n    32: RESOLUTION / 32,\n    64: RESOLUTION / 64,\n    128: RESOLUTION / 128,\n    256: RESOLUTION / 256,\n};\nconst durationAliases = {\n    w: '1',\n    h: '2',\n    q: '4',\n    b: '256',\n};\nconst keySignatures = {\n    C: { num: 0 },\n    Am: { num: 0 },\n    F: { accidental: 'b', num: 1 },\n    Dm: { accidental: 'b', num: 1 },\n    Bb: { accidental: 'b', num: 2 },\n    Gm: { accidental: 'b', num: 2 },\n    Eb: { accidental: 'b', num: 3 },\n    Cm: { accidental: 'b', num: 3 },\n    Ab: { accidental: 'b', num: 4 },\n    Fm: { accidental: 'b', num: 4 },\n    Db: { accidental: 'b', num: 5 },\n    Bbm: { accidental: 'b', num: 5 },\n    Gb: { accidental: 'b', num: 6 },\n    Ebm: { accidental: 'b', num: 6 },\n    Cb: { accidental: 'b', num: 7 },\n    Abm: { accidental: 'b', num: 7 },\n    G: { accidental: '#', num: 1 },\n    Em: { accidental: '#', num: 1 },\n    D: { accidental: '#', num: 2 },\n    Bm: { accidental: '#', num: 2 },\n    A: { accidental: '#', num: 3 },\n    'F#m': { accidental: '#', num: 3 },\n    E: { accidental: '#', num: 4 },\n    'C#m': { accidental: '#', num: 4 },\n    B: { accidental: '#', num: 5 },\n    'G#m': { accidental: '#', num: 5 },\n    'F#': { accidental: '#', num: 6 },\n    'D#m': { accidental: '#', num: 6 },\n    'C#': { accidental: '#', num: 7 },\n    'A#m': { accidental: '#', num: 7 },\n};\nconst clefs = {\n    treble: { lineShift: 0 },\n    bass: { lineShift: 6 },\n    tenor: { lineShift: 4 },\n    alto: { lineShift: 3 },\n    soprano: { lineShift: 1 },\n    percussion: { lineShift: 0 },\n    'mezzo-soprano': { lineShift: 2 },\n    'baritone-c': { lineShift: 5 },\n    'baritone-f': { lineShift: 5 },\n    subbass: { lineShift: 7 },\n    french: { lineShift: -1 },\n};\nconst notesInfo = {\n    C: { index: 0, intVal: 0 },\n    CN: { index: 0, intVal: 0 },\n    'C#': { index: 0, intVal: 1 },\n    'C##': { index: 0, intVal: 2 },\n    CB: { index: 0, intVal: 11 },\n    CBB: { index: 0, intVal: 10 },\n    D: { index: 1, intVal: 2 },\n    DN: { index: 1, intVal: 2 },\n    'D#': { index: 1, intVal: 3 },\n    'D##': { index: 1, intVal: 4 },\n    DB: { index: 1, intVal: 1 },\n    DBB: { index: 1, intVal: 0 },\n    E: { index: 2, intVal: 4 },\n    EN: { index: 2, intVal: 4 },\n    'E#': { index: 2, intVal: 5 },\n    'E##': { index: 2, intVal: 6 },\n    EB: { index: 2, intVal: 3 },\n    EBB: { index: 2, intVal: 2 },\n    F: { index: 3, intVal: 5 },\n    FN: { index: 3, intVal: 5 },\n    'F#': { index: 3, intVal: 6 },\n    'F##': { index: 3, intVal: 7 },\n    FB: { index: 3, intVal: 4 },\n    FBB: { index: 3, intVal: 3 },\n    G: { index: 4, intVal: 7 },\n    GN: { index: 4, intVal: 7 },\n    'G#': { index: 4, intVal: 8 },\n    'G##': { index: 4, intVal: 9 },\n    GB: { index: 4, intVal: 6 },\n    GBB: { index: 4, intVal: 5 },\n    A: { index: 5, intVal: 9 },\n    AN: { index: 5, intVal: 9 },\n    'A#': { index: 5, intVal: 10 },\n    'A##': { index: 5, intVal: 11 },\n    AB: { index: 5, intVal: 8 },\n    ABB: { index: 5, intVal: 7 },\n    B: { index: 6, intVal: 11 },\n    BN: { index: 6, intVal: 11 },\n    'B#': { index: 6, intVal: 12 },\n    'B##': { index: 6, intVal: 13 },\n    BB: { index: 6, intVal: 10 },\n    BBB: { index: 6, intVal: 9 },\n    R: { index: 6 },\n    X: { index: 6 },\n};\nconst validNoteTypes = {\n    n: { name: 'note' },\n    r: { name: 'rest' },\n    h: { name: 'harmonic' },\n    m: { name: 'muted' },\n    s: { name: 'slash' },\n    g: { name: 'ghost' },\n    d: { name: 'diamond' },\n    x: { name: 'x' },\n    ci: { name: 'circled' },\n    cx: { name: 'circle x' },\n    sf: { name: 'slashed' },\n    sb: { name: 'slashed backward' },\n    sq: { name: 'square' },\n    tu: { name: 'triangle up' },\n    td: { name: 'triangle down' },\n};\nconst accidentals = {\n    '#': Glyphs.accidentalSharp,\n    '##': Glyphs.accidentalDoubleSharp,\n    b: Glyphs.accidentalFlat,\n    bb: Glyphs.accidentalDoubleFlat,\n    n: Glyphs.accidentalNatural,\n    '{': Glyphs.accidentalParensLeft,\n    '}': Glyphs.accidentalParensRight,\n    db: Glyphs.accidentalThreeQuarterTonesFlatZimmermann,\n    d: Glyphs.accidentalQuarterToneFlatStein,\n    '++': Glyphs.accidentalThreeQuarterTonesSharpStein,\n    '+': Glyphs.accidentalQuarterToneSharpStein,\n    '+-': Glyphs.accidentalKucukMucennebSharp,\n    bs: Glyphs.accidentalBakiyeFlat,\n    bss: Glyphs.accidentalBuyukMucennebFlat,\n    o: Glyphs.accidentalSori,\n    k: Glyphs.accidentalKoron,\n    bbs: Glyphs.accidentalBuyukMucennebSharp,\n    '++-': Glyphs.accidentalBuyukMucennebSharp,\n    ashs: Glyphs.accidentalBuyukMucennebSharp,\n    afhf: Glyphs.accidentalBuyukMucennebSharp,\n};\nconst accidentalColumns = {\n    1: {\n        a: [1],\n        b: [1],\n    },\n    2: {\n        a: [1, 2],\n    },\n    3: {\n        a: [1, 3, 2],\n        b: [1, 2, 1],\n        secondOnBottom: [1, 2, 3],\n    },\n    4: {\n        a: [1, 3, 4, 2],\n        b: [1, 2, 3, 1],\n        spacedOutTetrachord: [1, 2, 1, 2],\n    },\n    5: {\n        a: [1, 3, 5, 4, 2],\n        b: [1, 2, 4, 3, 1],\n        spacedOutPentachord: [1, 2, 3, 2, 1],\n        verySpacedOutPentachord: [1, 2, 1, 2, 1],\n    },\n    6: {\n        a: [1, 3, 5, 6, 4, 2],\n        b: [1, 2, 4, 5, 3, 1],\n        spacedOutHexachord: [1, 3, 2, 1, 3, 2],\n        verySpacedOutHexachord: [1, 2, 1, 2, 1, 2],\n    },\n};\nconst articulations = {\n    'a.': { code: Glyphs.augmentationDot, betweenLines: true },\n    av: {\n        aboveCode: Glyphs.articStaccatissimoAbove,\n        belowCode: Glyphs.articStaccatissimoBelow,\n        betweenLines: true,\n    },\n    'a>': {\n        aboveCode: Glyphs.articAccentAbove,\n        belowCode: Glyphs.articAccentBelow,\n        betweenLines: true,\n    },\n    'a-': {\n        aboveCode: Glyphs.articTenutoAbove,\n        belowCode: Glyphs.articTenutoBelow,\n        betweenLines: true,\n    },\n    'a^': {\n        aboveCode: Glyphs.articMarcatoAbove,\n        belowCode: Glyphs.articMarcatoBelow,\n        betweenLines: false,\n    },\n    'a+': { code: Glyphs.pluckedLeftHandPizzicato, betweenLines: false },\n    ao: {\n        aboveCode: Glyphs.pluckedSnapPizzicatoAbove,\n        belowCode: Glyphs.pluckedSnapPizzicatoBelow,\n        betweenLines: false,\n    },\n    ah: { code: Glyphs.stringsHarmonic, betweenLines: false },\n    'a@': { aboveCode: Glyphs.fermataAbove, belowCode: Glyphs.fermataBelow, betweenLines: false },\n    'a@a': { code: Glyphs.fermataAbove, betweenLines: false },\n    'a@u': { code: Glyphs.fermataBelow, betweenLines: false },\n    'a@s': { aboveCode: Glyphs.fermataShortAbove, belowCode: Glyphs.fermataShortBelow, betweenLines: false },\n    'a@as': { code: Glyphs.fermataShortAbove, betweenLines: false },\n    'a@us': { code: Glyphs.fermataShortBelow, betweenLines: false },\n    'a@l': { aboveCode: Glyphs.fermataLongAbove, belowCode: Glyphs.fermataLongBelow, betweenLines: false },\n    'a@al': { code: Glyphs.fermataLongAbove, betweenLines: false },\n    'a@ul': { code: Glyphs.fermataLongBelow, betweenLines: false },\n    'a@vl': {\n        aboveCode: Glyphs.fermataVeryLongAbove,\n        belowCode: Glyphs.fermataVeryLongBelow,\n        betweenLines: false,\n    },\n    'a@avl': { code: Glyphs.fermataVeryLongAbove, betweenLines: false },\n    'a@uvl': { code: Glyphs.fermataVeryLongBelow, betweenLines: false },\n    'a|': { code: Glyphs.stringsUpBow, betweenLines: false },\n    am: { code: Glyphs.stringsDownBow, betweenLines: false },\n    'a,': { code: Glyphs.pictChokeCymbal, betweenLines: false },\n};\nconst ornaments = {\n    mordent: Glyphs.ornamentShortTrill,\n    mordentInverted: Glyphs.ornamentMordent,\n    turn: Glyphs.ornamentTurn,\n    turnInverted: Glyphs.ornamentTurnSlash,\n    tr: Glyphs.ornamentTrill,\n    upprall: Glyphs.ornamentPrecompSlideTrillDAnglebert,\n    downprall: Glyphs.ornamentPrecompDoubleCadenceUpperPrefix,\n    prallup: Glyphs.ornamentPrecompTrillSuffixDandrieu,\n    pralldown: Glyphs.ornamentPrecompTrillLowerSuffix,\n    upmordent: Glyphs.ornamentPrecompSlideTrillBach,\n    downmordent: Glyphs.ornamentPrecompDoubleCadenceUpperPrefixTurn,\n    lineprall: Glyphs.ornamentPrecompAppoggTrill,\n    prallprall: Glyphs.ornamentTremblement,\n    scoop: Glyphs.brassScoop,\n    doit: Glyphs.brassDoitMedium,\n    fall: Glyphs.brassFallLipShort,\n    doitLong: Glyphs.brassLiftMedium,\n    fallLong: Glyphs.brassFallRoughMedium,\n    bend: Glyphs.brassBend,\n    plungerClosed: Glyphs.brassMuteClosed,\n    plungerOpen: Glyphs.brassMuteOpen,\n    flip: Glyphs.brassFlip,\n    jazzTurn: Glyphs.brassJazzTurn,\n    smear: Glyphs.brassSmear,\n};\nexport class Tables {\n    static clefProperties(clef) {\n        if (!clef || !(clef in clefs))\n            throw new RuntimeError('BadArgument', 'Invalid clef: ' + clef);\n        return clefs[clef];\n    }\n    static keyProperties(keyOctaveGlyph, clef = 'treble', type = 'N', params) {\n        let options = { octaveShift: 0, duration: '4' };\n        if (typeof params === 'object') {\n            options = Object.assign(Object.assign({}, options), params);\n        }\n        const duration = Tables.sanitizeDuration(options.duration);\n        const pieces = keyOctaveGlyph.split('/');\n        if (pieces.length < 2) {\n            throw new RuntimeError('BadArguments', `First argument must be note/octave or note/octave/glyph-code: ${keyOctaveGlyph}`);\n        }\n        const key = pieces[0].toUpperCase();\n        type = type.toUpperCase();\n        const value = notesInfo[key];\n        if (!value)\n            throw new RuntimeError('BadArguments', 'Invalid key name: ' + key);\n        let octave = parseInt(pieces[1], 10);\n        octave -= options.octaveShift;\n        const baseIndex = octave * 7 - 4 * 7;\n        let line = (baseIndex + value.index) / 2;\n        line += Tables.clefProperties(clef).lineShift;\n        const intValue = typeof value.intVal !== 'undefined' ? octave * 12 + value.intVal : undefined;\n        let code = '';\n        let glyphName = 'N';\n        if (pieces.length > 2 && pieces[2]) {\n            glyphName = pieces[2].toUpperCase();\n        }\n        else if (type !== 'N') {\n            glyphName = type;\n        }\n        else\n            glyphName = key;\n        code = this.codeNoteHead(glyphName, duration);\n        return {\n            key,\n            octave,\n            line,\n            intValue,\n            code,\n            displaced: false,\n        };\n    }\n    static integerToNote(integer) {\n        if (typeof integer === 'undefined' || integer < 0 || integer > 11) {\n            throw new RuntimeError('BadArguments', `integerToNote() requires an integer in the range [0, 11]: ${integer}`);\n        }\n        const table = {\n            0: 'C',\n            1: 'C#',\n            2: 'D',\n            3: 'D#',\n            4: 'E',\n            5: 'F',\n            6: 'F#',\n            7: 'G',\n            8: 'G#',\n            9: 'A',\n            10: 'A#',\n            11: 'B',\n        };\n        const noteValue = table[integer];\n        if (!noteValue) {\n            throw new RuntimeError('BadArguments', `Unknown note value for integer: ${integer}`);\n        }\n        return noteValue;\n    }\n    static textWidth(text) {\n        return 7 * text.toString().length;\n    }\n    static articulationCodes(artic) {\n        return articulations[artic];\n    }\n    static accidentalCodes(accidental) {\n        var _a;\n        return (_a = accidentals[accidental]) !== null && _a !== void 0 ? _a : accidental;\n    }\n    static ornamentCodes(ornament) {\n        var _a;\n        return (_a = ornaments[ornament]) !== null && _a !== void 0 ? _a : ornament;\n    }\n    static keySignature(spec) {\n        const keySpec = keySignatures[spec];\n        if (!keySpec) {\n            throw new RuntimeError('BadKeySignature', `Bad key signature spec: '${spec}'`);\n        }\n        if (!keySpec.accidental) {\n            return [];\n        }\n        const accidentalList = {\n            b: [2, 0.5, 2.5, 1, 3, 1.5, 3.5],\n            '#': [0, 1.5, -0.5, 1, 2.5, 0.5, 2],\n        };\n        const notes = accidentalList[keySpec.accidental];\n        const accList = [];\n        for (let i = 0; i < keySpec.num; ++i) {\n            const line = notes[i];\n            accList.push({ type: keySpec.accidental, line });\n        }\n        return accList;\n    }\n    static getKeySignatures() {\n        return keySignatures;\n    }\n    static hasKeySignature(spec) {\n        return spec in keySignatures;\n    }\n    static sanitizeDuration(duration) {\n        const durationNumber = durationAliases[duration];\n        if (durationNumber !== undefined) {\n            duration = durationNumber;\n        }\n        if (durations[duration] === undefined) {\n            throw new RuntimeError('BadArguments', `The provided duration is not valid: ${duration}`);\n        }\n        return duration;\n    }\n    static durationToFraction(duration) {\n        return new Fraction().parse(Tables.sanitizeDuration(duration));\n    }\n    static durationToNumber(duration) {\n        return Tables.durationToFraction(duration).value();\n    }\n    static durationToTicks(duration) {\n        duration = Tables.sanitizeDuration(duration);\n        const ticks = durations[duration];\n        if (ticks === undefined) {\n            throw new RuntimeError('InvalidDuration');\n        }\n        return ticks;\n    }\n    static codeNoteHead(type, duration) {\n        switch (type) {\n            case 'D0':\n                return Glyphs.noteheadDiamondWhole;\n            case 'D1':\n                return Glyphs.noteheadDiamondHalf;\n            case 'D2':\n                return Glyphs.noteheadDiamondBlack;\n            case 'D3':\n                return Glyphs.noteheadDiamondBlack;\n            case 'T0':\n                return Glyphs.noteheadTriangleUpWhole;\n            case 'T1':\n                return Glyphs.noteheadTriangleUpHalf;\n            case 'T2':\n                return Glyphs.noteheadTriangleUpBlack;\n            case 'T3':\n                return Glyphs.noteheadTriangleUpBlack;\n            case 'X0':\n                return Glyphs.noteheadXWhole;\n            case 'X1':\n                return Glyphs.noteheadXHalf;\n            case 'X2':\n                return Glyphs.noteheadXBlack;\n            case 'X3':\n                return Glyphs.noteheadCircleX;\n            case 'S1':\n                return Glyphs.noteheadSquareWhite;\n            case 'S2':\n                return Glyphs.noteheadSquareBlack;\n            case 'R1':\n                return Glyphs.noteheadSquareWhite;\n            case 'R2':\n                return Glyphs.noteheadSquareWhite;\n            case 'DO':\n                return Glyphs.noteheadTriangleUpBlack;\n            case 'RE':\n                return Glyphs.noteheadMoonBlack;\n            case 'MI':\n                return Glyphs.noteheadDiamondBlack;\n            case 'FA':\n                return Glyphs.noteheadTriangleLeftBlack;\n            case 'FAUP':\n                return Glyphs.noteheadTriangleRightBlack;\n            case 'SO':\n                return Glyphs.noteheadBlack;\n            case 'LA':\n                return Glyphs.noteheadSquareBlack;\n            case 'TI':\n                return Glyphs.noteheadTriangleRoundDownBlack;\n            case 'DI':\n            case 'H':\n                switch (duration) {\n                    case '1/2':\n                        return Glyphs.noteheadDiamondDoubleWhole;\n                    case '1':\n                        return Glyphs.noteheadDiamondWhole;\n                    case '2':\n                        return Glyphs.noteheadDiamondHalf;\n                    default:\n                        return Glyphs.noteheadDiamondBlack;\n                }\n            case 'X':\n            case 'M':\n                switch (duration) {\n                    case '1/2':\n                        return Glyphs.noteheadXDoubleWhole;\n                    case '1':\n                        return Glyphs.noteheadXWhole;\n                    case '2':\n                        return Glyphs.noteheadXHalf;\n                    default:\n                        return Glyphs.noteheadXBlack;\n                }\n            case 'CX':\n                switch (duration) {\n                    case '1/2':\n                        return Glyphs.noteheadCircleXDoubleWhole;\n                    case '1':\n                        return Glyphs.noteheadCircleXWhole;\n                    case '2':\n                        return Glyphs.noteheadCircleXHalf;\n                    default:\n                        return Glyphs.noteheadCircleX;\n                }\n            case 'CI':\n                switch (duration) {\n                    case '1/2':\n                        return Glyphs.noteheadCircledDoubleWhole;\n                    case '1':\n                        return Glyphs.noteheadCircledWhole;\n                    case '2':\n                        return Glyphs.noteheadCircledHalf;\n                    default:\n                        return Glyphs.noteheadCircledBlack;\n                }\n            case 'SQ':\n                switch (duration) {\n                    case '1/2':\n                        return Glyphs.noteheadDoubleWholeSquare;\n                    case '1':\n                        return Glyphs.noteheadSquareWhite;\n                    case '2':\n                        return Glyphs.noteheadSquareWhite;\n                    default:\n                        return Glyphs.noteheadSquareBlack;\n                }\n            case 'TU':\n                switch (duration) {\n                    case '1/2':\n                        return Glyphs.noteheadTriangleUpDoubleWhole;\n                    case '1':\n                        return Glyphs.noteheadTriangleUpWhole;\n                    case '2':\n                        return Glyphs.noteheadTriangleUpHalf;\n                    default:\n                        return Glyphs.noteheadTriangleUpBlack;\n                }\n            case 'TD':\n                switch (duration) {\n                    case '1/2':\n                        return Glyphs.noteheadTriangleDownDoubleWhole;\n                    case '1':\n                        return Glyphs.noteheadTriangleDownWhole;\n                    case '2':\n                        return Glyphs.noteheadTriangleDownHalf;\n                    default:\n                        return Glyphs.noteheadTriangleDownBlack;\n                }\n            case 'SF':\n                switch (duration) {\n                    case '1/2':\n                        return Glyphs.noteheadSlashedDoubleWhole1;\n                    case '1':\n                        return Glyphs.noteheadSlashedWhole1;\n                    case '2':\n                        return Glyphs.noteheadSlashedHalf1;\n                    default:\n                        return Glyphs.noteheadSlashedBlack1;\n                }\n            case 'SB':\n                switch (duration) {\n                    case '1/2':\n                        return Glyphs.noteheadSlashedDoubleWhole2;\n                    case '1':\n                        return Glyphs.noteheadSlashedWhole2;\n                    case '2':\n                        return Glyphs.noteheadSlashedHalf2;\n                    default:\n                        return Glyphs.noteheadSlashedBlack2;\n                }\n            case 'R':\n                switch (duration) {\n                    case '1/2':\n                        return Glyphs.restDoubleWhole;\n                    case '1':\n                        return Glyphs.restWhole;\n                    case '2':\n                        return Glyphs.restHalf;\n                    case '4':\n                        return Glyphs.restQuarter;\n                    case '8':\n                        return Glyphs.rest8th;\n                    case '16':\n                        return Glyphs.rest16th;\n                    case '32':\n                        return Glyphs.rest32nd;\n                    case '64':\n                        return Glyphs.rest64th;\n                    case '128':\n                        return Glyphs.rest128th;\n                }\n                break;\n            case 'S':\n                switch (duration) {\n                    case '1/2':\n                        return Glyphs.noteheadSlashWhiteDoubleWhole;\n                    case '1':\n                        return Glyphs.noteheadSlashWhiteWhole;\n                    case '2':\n                        return Glyphs.noteheadSlashWhiteHalf;\n                    default:\n                        return Glyphs.noteheadSlashVerticalEnds;\n                }\n            default:\n                switch (duration) {\n                    case '1/2':\n                        return Glyphs.noteheadDoubleWhole;\n                    case '1':\n                        return Glyphs.noteheadWhole;\n                    case '2':\n                        return Glyphs.noteheadHalf;\n                    default:\n                        return Glyphs.noteheadBlack;\n                }\n        }\n        return Glyphs.null;\n    }\n}\nTables.UNISON = true;\nTables.SOFTMAX_FACTOR = 10;\nTables.STEM_WIDTH = 1.5;\nTables.STEM_HEIGHT = 35;\nTables.STAVE_LINE_THICKNESS = 1;\nTables.RENDER_PRECISION_PLACES = 3;\nTables.RESOLUTION = RESOLUTION;\nTables.durationCodes = {\n    '1/2': {\n        stem: false,\n    },\n    1: {\n        stem: false,\n    },\n    2: {\n        stem: true,\n    },\n    4: {\n        stem: true,\n    },\n    8: {\n        stem: true,\n        beamCount: 1,\n        stemBeamExtension: 0,\n        codeFlagUp: Glyphs.flag8thUp,\n    },\n    16: {\n        beamCount: 2,\n        stemBeamExtension: 0,\n        stem: true,\n        codeFlagUp: Glyphs.flag16thUp,\n    },\n    32: {\n        beamCount: 3,\n        stemBeamExtension: 7.5,\n        stem: true,\n        codeFlagUp: Glyphs.flag32ndUp,\n    },\n    64: {\n        beamCount: 4,\n        stemBeamExtension: 15,\n        stem: true,\n        codeFlagUp: Glyphs.flag64thUp,\n    },\n    128: {\n        beamCount: 5,\n        stemBeamExtension: 22.5,\n        stem: true,\n        codeFlagUp: Glyphs.flag128thUp,\n    },\n};\nTables.NOTATION_FONT_SCALE = 39;\nTables.TABLATURE_FONT_SCALE = 39;\nTables.SLASH_NOTEHEAD_WIDTH = 15;\nTables.STAVE_LINE_DISTANCE = 10;\nTables.TEXT_HEIGHT_OFFSET_HACK = 1;\nTables.accidentalColumnsTable = accidentalColumns;\nTables.unicode = {\n    sharp: '\\u266f',\n    flat: '\\u266d',\n    natural: '\\u266e',\n    triangle: '\\u25b3',\n    'o-with-slash': '\\u00f8',\n    degrees: '\\u00b0',\n    circle: '\\u25cb',\n};\nTables.validTypes = validNoteTypes;\nTables.TIME4_4 = {\n    numBeats: 4,\n    beatValue: 4,\n    resolution: RESOLUTION,\n};\n","export function isCategory(obj, category, checkAncestors = true) {\n    if (typeof obj !== 'object' || obj === null) {\n        return false;\n    }\n    let constructorFcn = obj.constructor;\n    if (checkAncestors) {\n        while (obj !== null) {\n            constructorFcn = obj.constructor;\n            if ('CATEGORY' in constructorFcn && constructorFcn.CATEGORY === category) {\n                return true;\n            }\n            obj = Object.getPrototypeOf(obj);\n        }\n        return false;\n    }\n    else {\n        return 'CATEGORY' in constructorFcn && constructorFcn.CATEGORY === category;\n    }\n}\nexport const isAccidental = (obj) => isCategory(obj, \"Accidental\");\nexport const isAnnotation = (obj) => isCategory(obj, \"Annotation\");\nexport const isBarline = (obj) => isCategory(obj, \"Barline\");\nexport const isDot = (obj) => isCategory(obj, \"Dot\");\nexport const isGraceNote = (obj) => isCategory(obj, \"GraceNote\");\nexport const isGraceNoteGroup = (obj) => isCategory(obj, \"GraceNoteGroup\");\nexport const isNote = (obj) => isCategory(obj, \"Note\");\nexport const isRenderContext = (obj) => isCategory(obj, \"RenderContext\");\nexport const isStaveNote = (obj) => isCategory(obj, \"StaveNote\");\nexport const isStemmableNote = (obj) => isCategory(obj, \"StemmableNote\");\nexport const isTabNote = (obj) => isCategory(obj, \"TabNote\");\n","import { Fraction } from './fraction.js';\nimport { Metrics } from './metrics.js';\nimport { Modifier } from './modifier.js';\nimport { Music } from './music.js';\nimport { Tables } from './tables.js';\nimport { isAccidental, isGraceNote, isGraceNoteGroup, isStaveNote } from './typeguard.js';\nimport { defined, log } from './util.js';\nfunction L(...args) {\n    if (Accidental.DEBUG)\n        log('VexFlow.Accidental', args);\n}\nexport class Accidental extends Modifier {\n    static get CATEGORY() {\n        return \"Accidental\";\n    }\n    static format(accidentals, state) {\n        if (!accidentals || accidentals.length === 0)\n            return;\n        const noteheadAccidentalPadding = Metrics.get('Accidental.noteheadAccidentalPadding');\n        const leftShift = state.leftShift + noteheadAccidentalPadding;\n        const accidentalSpacing = Metrics.get('Accidental.accidentalSpacing');\n        const additionalPadding = Metrics.get('Accidental.leftPadding');\n        const accidentalLinePositionsAndSpaceNeeds = [];\n        let prevNote = undefined;\n        let extraXSpaceNeededForLeftDisplacedNotehead = 0;\n        for (let i = 0; i < accidentals.length; ++i) {\n            const accidental = accidentals[i];\n            const note = accidental.getNote();\n            const stave = note.getStave();\n            const index = accidental.checkIndex();\n            const props = note.getKeyProps()[index];\n            if (note !== prevNote) {\n                for (let n = 0; n < note.keys.length; ++n) {\n                    extraXSpaceNeededForLeftDisplacedNotehead = Math.max(note.getLeftDisplacedHeadPx() - note.getXShift(), extraXSpaceNeededForLeftDisplacedNotehead);\n                }\n                prevNote = note;\n            }\n            if (stave) {\n                const lineSpace = stave.getSpacingBetweenLines();\n                const y = stave.getYForLine(props.line);\n                const accLine = Math.round((y / lineSpace) * 2) / 2;\n                accidentalLinePositionsAndSpaceNeeds.push({\n                    y,\n                    line: accLine,\n                    extraXSpaceNeeded: extraXSpaceNeededForLeftDisplacedNotehead,\n                    accidental: accidental,\n                    spacingBetweenStaveLines: lineSpace,\n                });\n            }\n            else {\n                accidentalLinePositionsAndSpaceNeeds.push({\n                    line: props.line,\n                    extraXSpaceNeeded: extraXSpaceNeededForLeftDisplacedNotehead,\n                    accidental: accidental,\n                });\n            }\n        }\n        accidentalLinePositionsAndSpaceNeeds.sort((a, b) => b.line - a.line);\n        const staveLineAccidentalLayoutMetrics = [];\n        let maxExtraXSpaceNeeded = 0;\n        for (let i = 0; i < accidentalLinePositionsAndSpaceNeeds.length; i++) {\n            const accidentalLinePositionAndSpaceNeeds = accidentalLinePositionsAndSpaceNeeds[i];\n            const accidentalType = accidentalLinePositionAndSpaceNeeds.accidental.type;\n            const priorLineMetric = staveLineAccidentalLayoutMetrics[staveLineAccidentalLayoutMetrics.length - 1];\n            let currentLineMetric;\n            if (!priorLineMetric || (priorLineMetric === null || priorLineMetric === void 0 ? void 0 : priorLineMetric.line) !== accidentalLinePositionAndSpaceNeeds.line) {\n                currentLineMetric = {\n                    line: accidentalLinePositionAndSpaceNeeds.line,\n                    flatLine: true,\n                    dblSharpLine: true,\n                    numAcc: 0,\n                    width: 0,\n                    column: 0,\n                };\n                staveLineAccidentalLayoutMetrics.push(currentLineMetric);\n            }\n            else {\n                currentLineMetric = priorLineMetric;\n            }\n            if (accidentalType !== 'b' && accidentalType !== 'bb') {\n                currentLineMetric.flatLine = false;\n            }\n            if (accidentalType !== '##') {\n                currentLineMetric.dblSharpLine = false;\n            }\n            currentLineMetric.numAcc++;\n            currentLineMetric.width += accidentalLinePositionAndSpaceNeeds.accidental.getWidth() + accidentalSpacing;\n            maxExtraXSpaceNeeded = Math.max(accidentalLinePositionAndSpaceNeeds.extraXSpaceNeeded, maxExtraXSpaceNeeded);\n        }\n        let totalColumns = 0;\n        for (let i = 0; i < staveLineAccidentalLayoutMetrics.length; i++) {\n            let noFurtherConflicts = false;\n            const groupStart = i;\n            let groupEnd = i;\n            while (groupEnd + 1 < staveLineAccidentalLayoutMetrics.length && !noFurtherConflicts) {\n                if (this.checkCollision(staveLineAccidentalLayoutMetrics[groupEnd], staveLineAccidentalLayoutMetrics[groupEnd + 1])) {\n                    groupEnd++;\n                }\n                else {\n                    noFurtherConflicts = true;\n                }\n            }\n            const getGroupLine = (index) => staveLineAccidentalLayoutMetrics[groupStart + index];\n            const getGroupLines = (indexes) => indexes.map(getGroupLine);\n            const lineDifference = (indexA, indexB) => {\n                const [a, b] = getGroupLines([indexA, indexB]).map((item) => item.line);\n                return a - b;\n            };\n            const notColliding = (...indexPairs) => indexPairs.map(getGroupLines).every(([line1, line2]) => !this.checkCollision(line1, line2));\n            const groupLength = groupEnd - groupStart + 1;\n            let endCase = this.checkCollision(staveLineAccidentalLayoutMetrics[groupStart], staveLineAccidentalLayoutMetrics[groupEnd])\n                ? 'a'\n                : 'b';\n            switch (groupLength) {\n                case 3:\n                    if (endCase === 'a' && lineDifference(1, 2) === 0.5 && lineDifference(0, 1) !== 0.5) {\n                        endCase = 'secondOnBottom';\n                    }\n                    break;\n                case 4:\n                    if (notColliding([0, 2], [1, 3])) {\n                        endCase = 'spacedOutTetrachord';\n                    }\n                    break;\n                case 5:\n                    if (endCase === 'b' && notColliding([1, 3])) {\n                        endCase = 'spacedOutPentachord';\n                        if (notColliding([0, 2], [2, 4])) {\n                            endCase = 'verySpacedOutPentachord';\n                        }\n                    }\n                    break;\n                case 6:\n                    if (notColliding([0, 3], [1, 4], [2, 5])) {\n                        endCase = 'spacedOutHexachord';\n                    }\n                    if (notColliding([0, 2], [2, 4], [1, 3], [3, 5])) {\n                        endCase = 'verySpacedOutHexachord';\n                    }\n                    break;\n                default:\n                    break;\n            }\n            let groupMember;\n            let column;\n            if (groupLength >= 7) {\n                let patternLength = 2;\n                let collisionDetected = true;\n                while (collisionDetected === true) {\n                    collisionDetected = false;\n                    for (let line = 0; line + patternLength < staveLineAccidentalLayoutMetrics.length; line++) {\n                        if (this.checkCollision(staveLineAccidentalLayoutMetrics[line], staveLineAccidentalLayoutMetrics[line + patternLength])) {\n                            collisionDetected = true;\n                            patternLength++;\n                            break;\n                        }\n                    }\n                }\n                for (groupMember = i; groupMember <= groupEnd; groupMember++) {\n                    column = ((groupMember - i) % patternLength) + 1;\n                    staveLineAccidentalLayoutMetrics[groupMember].column = column;\n                    totalColumns = totalColumns > column ? totalColumns : column;\n                }\n            }\n            else {\n                for (groupMember = i; groupMember <= groupEnd; groupMember++) {\n                    column = Tables.accidentalColumnsTable[groupLength][endCase][groupMember - i];\n                    staveLineAccidentalLayoutMetrics[groupMember].column = column;\n                    totalColumns = totalColumns > column ? totalColumns : column;\n                }\n            }\n            i = groupEnd;\n        }\n        const columnWidths = [];\n        const columnXOffsets = [];\n        for (let i = 0; i <= totalColumns; i++) {\n            columnWidths[i] = 0;\n            columnXOffsets[i] = 0;\n        }\n        columnWidths[0] = leftShift + maxExtraXSpaceNeeded;\n        columnXOffsets[0] = leftShift;\n        staveLineAccidentalLayoutMetrics.forEach((line) => {\n            if (line.width > columnWidths[line.column])\n                columnWidths[line.column] = line.width;\n        });\n        for (let i = 1; i < columnWidths.length; i++) {\n            columnXOffsets[i] = columnWidths[i] + columnXOffsets[i - 1];\n        }\n        const totalShift = columnXOffsets[columnXOffsets.length - 1];\n        let accCount = 0;\n        staveLineAccidentalLayoutMetrics.forEach((line) => {\n            let lineWidth = 0;\n            const lastAccOnLine = accCount + line.numAcc;\n            for (accCount; accCount < lastAccOnLine; accCount++) {\n                const xShift = columnXOffsets[line.column - 1] + lineWidth + maxExtraXSpaceNeeded;\n                accidentalLinePositionsAndSpaceNeeds[accCount].accidental.setXShift(xShift);\n                lineWidth += accidentalLinePositionsAndSpaceNeeds[accCount].accidental.getWidth() + accidentalSpacing;\n                L('Line, accCount, shift: ', line.line, accCount, xShift);\n            }\n        });\n        state.leftShift = totalShift + additionalPadding;\n    }\n    static checkCollision(line1, line2) {\n        let clearance = line2.line - line1.line;\n        let clearanceRequired = 3;\n        if (clearance > 0) {\n            clearanceRequired = line2.flatLine || line2.dblSharpLine ? 2.5 : 3.0;\n            if (line1.dblSharpLine)\n                clearance -= 0.5;\n        }\n        else {\n            clearanceRequired = line1.flatLine || line1.dblSharpLine ? 2.5 : 3.0;\n            if (line2.dblSharpLine)\n                clearance -= 0.5;\n        }\n        const collision = Math.abs(clearance) < clearanceRequired;\n        L('Line1, Line2, Collision: ', line1.line, line2.line, collision);\n        return collision;\n    }\n    static applyAccidentals(voices, keySignature) {\n        const tickPositions = [];\n        const tickNoteMap = {};\n        voices.forEach((voice) => {\n            const tickPosition = new Fraction(0, 1);\n            const tickable = voice.getTickables();\n            tickable.forEach((t) => {\n                if (t.shouldIgnoreTicks())\n                    return;\n                const notesAtPosition = tickNoteMap[tickPosition.value()];\n                if (!notesAtPosition) {\n                    tickPositions.push(tickPosition.value());\n                    tickNoteMap[tickPosition.value()] = [t];\n                }\n                else {\n                    notesAtPosition.push(t);\n                }\n                tickPosition.add(t.getTicks());\n            });\n        });\n        const music = new Music();\n        if (!keySignature)\n            keySignature = 'C';\n        const scaleMapKey = music.createScaleMap(keySignature);\n        const scaleMap = {};\n        tickPositions.forEach((tickPos) => {\n            const tickables = tickNoteMap[tickPos];\n            const modifiedPitches = [];\n            const processNote = (t) => {\n                if (!isStaveNote(t) || t.isRest() || t.shouldIgnoreTicks()) {\n                    return;\n                }\n                const staveNote = t;\n                staveNote.keys.forEach((keyString, keyIndex) => {\n                    const key = music.getNoteParts(keyString.split('/')[0]);\n                    const octave = keyString.split('/')[1];\n                    const accidentalString = key.accidental || 'n';\n                    const pitch = key.root + accidentalString;\n                    if (!scaleMap[key.root + octave])\n                        scaleMap[key.root + octave] = scaleMapKey[key.root];\n                    const sameAccidental = scaleMap[key.root + octave] === pitch;\n                    const previouslyModified = modifiedPitches.indexOf(keyString) > -1;\n                    staveNote.getModifiers().forEach((modifier, index) => {\n                        if (isAccidental(modifier) && modifier.type == accidentalString && modifier.getIndex() == keyIndex) {\n                            staveNote.getModifiers().splice(index, 1);\n                        }\n                    });\n                    if (!sameAccidental || (sameAccidental && previouslyModified)) {\n                        scaleMap[key.root + octave] = pitch;\n                        const accidental = new Accidental(accidentalString);\n                        staveNote.addModifier(accidental, keyIndex);\n                        modifiedPitches.push(keyString);\n                    }\n                });\n                staveNote.getModifiers().forEach((modifier) => {\n                    if (isGraceNoteGroup(modifier)) {\n                        modifier.getGraceNotes().forEach(processNote);\n                    }\n                });\n            };\n            tickables.forEach(processNote);\n        });\n    }\n    constructor(type) {\n        super();\n        L('New accidental: ', type);\n        this.type = type;\n        this.position = Modifier.Position.LEFT;\n        this.cautionary = false;\n        this.reset();\n    }\n    reset() {\n        this.text = '';\n        if (!this.cautionary) {\n            this.text += Tables.accidentalCodes(this.type);\n            this.fontInfo.size = Metrics.get('Accidental.fontSize');\n        }\n        else {\n            this.text += Tables.accidentalCodes('{');\n            this.text += Tables.accidentalCodes(this.type);\n            this.text += Tables.accidentalCodes('}');\n            this.fontInfo.size = Metrics.get('Accidental.cautionary.fontSize');\n        }\n        if (isGraceNote(this.note)) {\n            this.fontInfo.size = Metrics.get('Accidental.grace.fontSize');\n        }\n    }\n    setNote(note) {\n        defined(note, 'ArgumentError', `Bad note value: ${note}`);\n        this.note = note;\n        this.reset();\n        return this;\n    }\n    setAsCautionary() {\n        this.cautionary = true;\n        this.reset();\n        return this;\n    }\n    draw() {\n        const { type, position, index } = this;\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(position, index);\n        this.x = start.x - this.width;\n        this.y = start.y;\n        L('Rendering: ', type, start.x, start.y);\n        this.renderText(ctx, 0, 0);\n    }\n}\nAccidental.DEBUG = false;\n","import { Element } from './element.js';\nimport { Metrics } from './metrics.js';\nimport { Tables } from './tables.js';\nimport { log, RuntimeError } from './util.js';\nfunction L(...args) {\n    if (Stem.DEBUG)\n        log('VexFlow.Stem', args);\n}\nexport class Stem extends Element {\n    static get CATEGORY() {\n        return \"Stem\";\n    }\n    static get UP() {\n        return 1;\n    }\n    static get DOWN() {\n        return -1;\n    }\n    static get WIDTH() {\n        return Tables.STEM_WIDTH;\n    }\n    static get HEIGHT() {\n        return Tables.STEM_HEIGHT;\n    }\n    constructor(options) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        super();\n        this.stemUpYOffset = 0;\n        this.stemDownYOffset = 0;\n        this.stemUpYBaseOffset = 0;\n        this.stemDownYBaseOffset = 0;\n        this.xBegin = (_a = options === null || options === void 0 ? void 0 : options.xBegin) !== null && _a !== void 0 ? _a : 0;\n        this.xEnd = (_b = options === null || options === void 0 ? void 0 : options.xEnd) !== null && _b !== void 0 ? _b : 0;\n        this.yTop = (_c = options === null || options === void 0 ? void 0 : options.yTop) !== null && _c !== void 0 ? _c : 0;\n        this.yBottom = (_d = options === null || options === void 0 ? void 0 : options.yBottom) !== null && _d !== void 0 ? _d : 0;\n        this.stemExtension = (_e = options === null || options === void 0 ? void 0 : options.stemExtension) !== null && _e !== void 0 ? _e : 0;\n        this.stemDirection = (_f = options === null || options === void 0 ? void 0 : options.stemDirection) !== null && _f !== void 0 ? _f : 0;\n        this.hide = (options === null || options === void 0 ? void 0 : options.hide) || false;\n        this.isStemlet = (options === null || options === void 0 ? void 0 : options.isStemlet) || false;\n        this.stemletHeight = (_g = options === null || options === void 0 ? void 0 : options.stemletHeight) !== null && _g !== void 0 ? _g : 0;\n        this.renderHeightAdjustment = 0;\n        this.setOptions(options);\n    }\n    setOptions(options) {\n        var _a, _b, _c, _d;\n        this.stemUpYOffset = (_a = options === null || options === void 0 ? void 0 : options.stemUpYOffset) !== null && _a !== void 0 ? _a : 0;\n        this.stemDownYOffset = (_b = options === null || options === void 0 ? void 0 : options.stemDownYOffset) !== null && _b !== void 0 ? _b : 0;\n        this.stemUpYBaseOffset = (_c = options === null || options === void 0 ? void 0 : options.stemUpYBaseOffset) !== null && _c !== void 0 ? _c : 0;\n        this.stemDownYBaseOffset = (_d = options === null || options === void 0 ? void 0 : options.stemDownYBaseOffset) !== null && _d !== void 0 ? _d : 0;\n    }\n    setNoteHeadXBounds(xBegin, xEnd) {\n        this.xBegin = xBegin;\n        this.xEnd = xEnd;\n        return this;\n    }\n    setDirection(direction) {\n        this.stemDirection = direction;\n    }\n    setExtension(ext) {\n        this.stemExtension = ext;\n    }\n    getExtension() {\n        return this.stemExtension;\n    }\n    setYBounds(yTop, yBottom) {\n        this.yTop = yTop;\n        this.yBottom = yBottom;\n    }\n    getHeight() {\n        const yOffset = this.stemDirection === Stem.UP ? this.stemUpYOffset : this.stemDownYOffset;\n        const unsignedHeight = this.yBottom - this.yTop + (Stem.HEIGHT - yOffset + this.stemExtension);\n        return unsignedHeight * this.stemDirection;\n    }\n    getBoundingBox() {\n        throw new RuntimeError('NotImplemented', 'getBoundingBox() not implemented.');\n    }\n    getExtents() {\n        const isStemUp = this.stemDirection === Stem.UP;\n        const ys = [this.yTop, this.yBottom];\n        const stemHeight = Stem.HEIGHT + this.stemExtension;\n        const innerMostNoteheadY = (isStemUp ? Math.min : Math.max)(...ys);\n        const outerMostNoteheadY = (isStemUp ? Math.max : Math.min)(...ys);\n        const stemTipY = innerMostNoteheadY + stemHeight * -this.stemDirection;\n        return { topY: stemTipY, baseY: outerMostNoteheadY };\n    }\n    setVisibility(isVisible) {\n        this.hide = !isVisible;\n        return this;\n    }\n    setStemlet(isStemlet, stemletHeight) {\n        this.isStemlet = isStemlet;\n        this.stemletHeight = stemletHeight;\n        return this;\n    }\n    adjustHeightForFlag() {\n        this.renderHeightAdjustment = Metrics.get('Stem.heightAdjustmentForFlag', -3);\n    }\n    adjustHeightForBeam() {\n        this.renderHeightAdjustment = -Stem.WIDTH / 2;\n    }\n    draw() {\n        this.setRendered();\n        if (this.hide)\n            return;\n        const ctx = this.checkContext();\n        let stemX;\n        let stemY;\n        const stemDirection = this.stemDirection;\n        let yBaseOffset = 0;\n        if (stemDirection === Stem.DOWN) {\n            stemX = this.xBegin;\n            stemY = this.yTop + this.stemDownYOffset;\n            yBaseOffset = this.stemDownYBaseOffset;\n        }\n        else {\n            stemX = this.xEnd;\n            stemY = this.yBottom - this.stemUpYOffset;\n            yBaseOffset = this.stemUpYBaseOffset;\n        }\n        const stemHeight = this.getHeight();\n        L('Rendering stem - ', 'Top Y: ', this.yTop, 'Bottom Y: ', this.yBottom);\n        const stemletYOffset = this.isStemlet ? stemHeight - this.stemletHeight * this.stemDirection : 0;\n        ctx.openGroup('stem', this.getAttribute('id'));\n        ctx.beginPath();\n        ctx.setLineWidth(Stem.WIDTH);\n        ctx.moveTo(stemX, stemY - stemletYOffset + yBaseOffset);\n        ctx.lineTo(stemX, stemY - stemHeight - this.renderHeightAdjustment * stemDirection);\n        ctx.stroke();\n        ctx.closeGroup();\n    }\n}\nStem.DEBUG = false;\n","import { Font } from './font.js';\nimport { Metrics } from './metrics.js';\nimport { Modifier, ModifierPosition } from './modifier.js';\nimport { Stem } from './stem.js';\nimport { Tables } from './tables.js';\nimport { isStemmableNote, isTabNote } from './typeguard.js';\nimport { log } from './util.js';\nfunction L(...args) {\n    if (Annotation.DEBUG)\n        log('VexFlow.Annotation', args);\n}\nexport var AnnotationHorizontalJustify;\n(function (AnnotationHorizontalJustify) {\n    AnnotationHorizontalJustify[AnnotationHorizontalJustify[\"LEFT\"] = 1] = \"LEFT\";\n    AnnotationHorizontalJustify[AnnotationHorizontalJustify[\"CENTER\"] = 2] = \"CENTER\";\n    AnnotationHorizontalJustify[AnnotationHorizontalJustify[\"RIGHT\"] = 3] = \"RIGHT\";\n    AnnotationHorizontalJustify[AnnotationHorizontalJustify[\"CENTER_STEM\"] = 4] = \"CENTER_STEM\";\n})(AnnotationHorizontalJustify || (AnnotationHorizontalJustify = {}));\nexport var AnnotationVerticalJustify;\n(function (AnnotationVerticalJustify) {\n    AnnotationVerticalJustify[AnnotationVerticalJustify[\"TOP\"] = 1] = \"TOP\";\n    AnnotationVerticalJustify[AnnotationVerticalJustify[\"CENTER\"] = 2] = \"CENTER\";\n    AnnotationVerticalJustify[AnnotationVerticalJustify[\"BOTTOM\"] = 3] = \"BOTTOM\";\n    AnnotationVerticalJustify[AnnotationVerticalJustify[\"CENTER_STEM\"] = 4] = \"CENTER_STEM\";\n})(AnnotationVerticalJustify || (AnnotationVerticalJustify = {}));\nexport class Annotation extends Modifier {\n    static get CATEGORY() {\n        return \"Annotation\";\n    }\n    static get minAnnotationPadding() {\n        return Metrics.get('NoteHead.minPadding');\n    }\n    static format(annotations, state) {\n        if (!annotations || annotations.length === 0)\n            return false;\n        let leftWidth = 0;\n        let rightWidth = 0;\n        let maxLeftGlyphWidth = 0;\n        let maxRightGlyphWidth = 0;\n        for (let i = 0; i < annotations.length; ++i) {\n            const annotation = annotations[i];\n            const textLines = (2 + Font.convertSizeToPixelValue(annotation.fontInfo.size)) / Tables.STAVE_LINE_DISTANCE;\n            let verticalSpaceNeeded = textLines;\n            const note = annotation.checkAttachedNote();\n            const glyphWidth = note.getGlyphWidth();\n            const textWidth = annotation.getWidth();\n            if (annotation.horizontalJustification === AnnotationHorizontalJustify.RIGHT) {\n                maxLeftGlyphWidth = Math.max(glyphWidth, maxLeftGlyphWidth);\n                leftWidth = Math.max(leftWidth, textWidth) + Annotation.minAnnotationPadding;\n            }\n            else if (annotation.horizontalJustification === AnnotationHorizontalJustify.LEFT) {\n                maxRightGlyphWidth = Math.max(glyphWidth, maxRightGlyphWidth);\n                rightWidth = Math.max(rightWidth, textWidth);\n            }\n            else {\n                leftWidth = Math.max(leftWidth, textWidth / 2) + Annotation.minAnnotationPadding;\n                rightWidth = Math.max(rightWidth, textWidth / 2);\n                maxLeftGlyphWidth = Math.max(glyphWidth / 2, maxLeftGlyphWidth);\n                maxRightGlyphWidth = Math.max(glyphWidth / 2, maxRightGlyphWidth);\n            }\n            const stave = note.getStave();\n            const stemDirection = note.hasStem() ? note.getStemDirection() : Stem.UP;\n            let stemHeight = 0;\n            let lines = 5;\n            if (isTabNote(note)) {\n                if (note.renderOptions.drawStem) {\n                    const stem = note.getStem();\n                    if (stem) {\n                        stemHeight = Math.abs(stem.getHeight()) / Tables.STAVE_LINE_DISTANCE;\n                    }\n                }\n                else {\n                    stemHeight = 0;\n                }\n            }\n            else if (isStemmableNote(note)) {\n                const stem = note.getStem();\n                if (stem && note.getNoteType() === 'n') {\n                    stemHeight = Math.abs(stem.getHeight()) / Tables.STAVE_LINE_DISTANCE;\n                }\n            }\n            if (stave) {\n                lines = stave.getNumLines();\n            }\n            if (annotation.verticalJustification === this.VerticalJustify.TOP) {\n                let noteLine = note.getLineNumber(true);\n                if (isTabNote(note)) {\n                    noteLine = lines - (note.leastString() - 0.5);\n                }\n                if (stemDirection === Stem.UP) {\n                    noteLine += stemHeight;\n                }\n                const curTop = noteLine + state.topTextLine + 0.5;\n                if (curTop < lines) {\n                    annotation.setTextLine(lines - noteLine);\n                    verticalSpaceNeeded += lines - noteLine;\n                    state.topTextLine = verticalSpaceNeeded;\n                }\n                else {\n                    annotation.setTextLine(state.topTextLine);\n                    state.topTextLine += verticalSpaceNeeded;\n                }\n            }\n            else if (annotation.verticalJustification === this.VerticalJustify.BOTTOM) {\n                let noteLine = lines - note.getLineNumber();\n                if (isTabNote(note)) {\n                    noteLine = note.greatestString() - 1;\n                }\n                if (stemDirection === Stem.DOWN) {\n                    noteLine += stemHeight;\n                }\n                const curBottom = noteLine + state.textLine + 1;\n                if (curBottom < lines) {\n                    annotation.setTextLine(lines - curBottom);\n                    verticalSpaceNeeded += lines - curBottom;\n                    state.textLine = verticalSpaceNeeded;\n                }\n                else {\n                    annotation.setTextLine(state.textLine);\n                    state.textLine += verticalSpaceNeeded;\n                }\n            }\n            else {\n                annotation.setTextLine(state.textLine);\n            }\n        }\n        const rightOverlap = Math.min(Math.max(rightWidth - maxRightGlyphWidth, 0), Math.max(rightWidth - state.rightShift, 0));\n        const leftOverlap = Math.min(Math.max(leftWidth - maxLeftGlyphWidth, 0), Math.max(leftWidth - state.leftShift, 0));\n        state.leftShift += leftOverlap;\n        state.rightShift += rightOverlap;\n        return true;\n    }\n    constructor(text) {\n        super();\n        this.text = text;\n        this.horizontalJustification = AnnotationHorizontalJustify.CENTER;\n        this.verticalJustification = AnnotationVerticalJustify.TOP;\n    }\n    setVerticalJustification(just) {\n        this.verticalJustification = typeof just === 'string' ? Annotation.VerticalJustifyString[just] : just;\n        return this;\n    }\n    getJustification() {\n        return this.horizontalJustification;\n    }\n    setJustification(just) {\n        this.horizontalJustification = typeof just === 'string' ? Annotation.HorizontalJustifyString[just] : just;\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        const stemDirection = note.hasStem() ? note.getStemDirection() : Stem.UP;\n        const start = note.getModifierStartXY(ModifierPosition.ABOVE, this.index);\n        this.setRendered();\n        ctx.openGroup('annotation', this.getAttribute('id'));\n        const textWidth = this.getWidth();\n        const textHeight = Font.convertSizeToPixelValue(this.fontInfo.size);\n        let x;\n        let y;\n        if (this.horizontalJustification === AnnotationHorizontalJustify.LEFT) {\n            x = start.x;\n        }\n        else if (this.horizontalJustification === AnnotationHorizontalJustify.RIGHT) {\n            x = start.x - textWidth;\n        }\n        else if (this.horizontalJustification === AnnotationHorizontalJustify.CENTER) {\n            x = start.x - textWidth / 2;\n        }\n        else {\n            x = note.getStemX() - textWidth / 2;\n        }\n        let stemExt = {};\n        let spacing = 0;\n        const hasStem = note.hasStem();\n        const stave = note.checkStave();\n        if (hasStem) {\n            stemExt = note.checkStem().getExtents();\n            spacing = stave.getSpacingBetweenLines();\n        }\n        if (this.verticalJustification === AnnotationVerticalJustify.BOTTOM) {\n            const ys = note.getYs();\n            y = ys.reduce((a, b) => (a > b ? a : b));\n            y += (this.textLine + 1) * Tables.STAVE_LINE_DISTANCE + textHeight;\n            if (hasStem && stemDirection === Stem.DOWN) {\n                y = Math.max(y, stemExt.topY + textHeight + spacing * this.textLine);\n            }\n        }\n        else if (this.verticalJustification === AnnotationVerticalJustify.CENTER) {\n            const yt = note.getYForTopText(this.textLine) - 1;\n            const yb = stave.getYForBottomText(this.textLine);\n            y = yt + (yb - yt) / 2 + textHeight / 2;\n        }\n        else if (this.verticalJustification === AnnotationVerticalJustify.TOP) {\n            const topY = Math.min(...note.getYs());\n            y = topY - (this.textLine + 1) * Tables.STAVE_LINE_DISTANCE;\n            if (hasStem && stemDirection === Stem.UP) {\n                spacing = stemExt.topY < stave.getTopLineTopY() ? Tables.STAVE_LINE_DISTANCE : spacing;\n                y = Math.min(y, stemExt.topY - spacing * (this.textLine + 1));\n            }\n        }\n        else {\n            const extents = note.getStemExtents();\n            y = extents.topY + (extents.baseY - extents.topY) / 2 + textHeight / 2;\n        }\n        L('Rendering annotation: ', this.text, x, y);\n        this.x = x;\n        this.y = y;\n        this.renderText(ctx, 0, 0);\n        ctx.closeGroup();\n    }\n}\nAnnotation.DEBUG = false;\nAnnotation.HorizontalJustify = AnnotationHorizontalJustify;\nAnnotation.HorizontalJustifyString = {\n    left: AnnotationHorizontalJustify.LEFT,\n    right: AnnotationHorizontalJustify.RIGHT,\n    center: AnnotationHorizontalJustify.CENTER,\n    centerStem: AnnotationHorizontalJustify.CENTER_STEM,\n};\nAnnotation.VerticalJustify = AnnotationVerticalJustify;\nAnnotation.VerticalJustifyString = {\n    above: AnnotationVerticalJustify.TOP,\n    top: AnnotationVerticalJustify.TOP,\n    below: AnnotationVerticalJustify.BOTTOM,\n    bottom: AnnotationVerticalJustify.BOTTOM,\n    center: AnnotationVerticalJustify.CENTER,\n    centerStem: AnnotationVerticalJustify.CENTER_STEM,\n};\n","import { Glyphs } from './glyphs.js';\nimport { Modifier } from './modifier.js';\nimport { Stem } from './stem.js';\nimport { Tables } from './tables.js';\nimport { isGraceNote, isStaveNote, isStemmableNote, isTabNote } from './typeguard.js';\nimport { log, RuntimeError } from './util.js';\nfunction L(...args) {\n    if (Articulation.DEBUG)\n        log('VexFlow.Articulation', args);\n}\nconst { ABOVE, BELOW } = Modifier.Position;\nfunction roundToNearestHalf(mathFn, value) {\n    return mathFn(value / 0.5) * 0.5;\n}\nfunction isWithinLines(line, position) {\n    return position === ABOVE ? line <= 5 : line >= 1;\n}\nfunction getRoundingFunction(line, position) {\n    if (isWithinLines(line, position)) {\n        if (position === ABOVE) {\n            return Math.ceil;\n        }\n        else {\n            return Math.floor;\n        }\n    }\n    else {\n        return Math.round;\n    }\n}\nfunction snapLineToStaff(canSitBetweenLines, line, position, offsetDirection) {\n    const snappedLine = roundToNearestHalf(getRoundingFunction(line, position), line);\n    const canSnapToStaffSpace = canSitBetweenLines && isWithinLines(snappedLine, position);\n    const onStaffLine = snappedLine % 1 === 0;\n    if (canSnapToStaffSpace && onStaffLine) {\n        const HALF_STAFF_SPACE = 0.5;\n        return snappedLine + HALF_STAFF_SPACE * -offsetDirection;\n    }\n    else {\n        return snappedLine;\n    }\n}\nconst isStaveOrGraceNote = (note) => isStaveNote(note) || isGraceNote(note);\nexport function getTopY(note, textLine) {\n    const stemDirection = note.getStemDirection();\n    const { topY: stemTipY, baseY: stemBaseY } = note.getStemExtents();\n    if (isStaveOrGraceNote(note)) {\n        if (note.hasStem()) {\n            if (stemDirection === Stem.UP) {\n                return stemTipY;\n            }\n            else {\n                return stemBaseY;\n            }\n        }\n        else {\n            return Math.min(...note.getYs());\n        }\n    }\n    else if (isTabNote(note)) {\n        if (note.hasStem()) {\n            if (stemDirection === Stem.UP) {\n                return stemTipY;\n            }\n            else {\n                return note.checkStave().getYForTopText(textLine);\n            }\n        }\n        else {\n            return note.checkStave().getYForTopText(textLine);\n        }\n    }\n    else {\n        throw new RuntimeError('UnknownCategory', 'Only can get the top and bottom ys of stavenotes and tabnotes');\n    }\n}\nexport function getBottomY(note, textLine) {\n    const stemDirection = note.getStemDirection();\n    const { topY: stemTipY, baseY: stemBaseY } = note.getStemExtents();\n    if (isStaveOrGraceNote(note)) {\n        if (note.hasStem()) {\n            if (stemDirection === Stem.UP) {\n                return stemBaseY;\n            }\n            else {\n                return stemTipY;\n            }\n        }\n        else {\n            return Math.max(...note.getYs());\n        }\n    }\n    else if (isTabNote(note)) {\n        if (note.hasStem()) {\n            if (stemDirection === Stem.UP) {\n                return note.checkStave().getYForBottomText(textLine);\n            }\n            else {\n                return stemTipY;\n            }\n        }\n        else {\n            return note.checkStave().getYForBottomText(textLine);\n        }\n    }\n    else {\n        throw new RuntimeError('UnknownCategory', 'Only can get the top and bottom ys of stavenotes and tabnotes');\n    }\n}\nexport function getInitialOffset(note, position) {\n    const isOnStemTip = (position === ABOVE && note.getStemDirection() === Stem.UP) ||\n        (position === BELOW && note.getStemDirection() === Stem.DOWN);\n    if (isStaveOrGraceNote(note)) {\n        if (note.hasStem() && isOnStemTip) {\n            return 0.5;\n        }\n        else {\n            return 1;\n        }\n    }\n    else {\n        if (note.hasStem() && isOnStemTip) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n}\nexport class Articulation extends Modifier {\n    static get CATEGORY() {\n        return \"Articulation\";\n    }\n    static format(articulations, state) {\n        if (!articulations || articulations.length === 0)\n            return false;\n        const margin = 0.5;\n        let maxGlyphWidth = 0;\n        const getIncrement = (articulation, line, position) => roundToNearestHalf(getRoundingFunction(line, position), articulation.height / 10 + margin);\n        articulations.forEach((articulation) => {\n            const note = articulation.checkAttachedNote();\n            maxGlyphWidth = Math.max(note.getGlyphWidth(), maxGlyphWidth);\n            let lines = 5;\n            const stemDirection = note.hasStem() ? note.getStemDirection() : Stem.UP;\n            let stemHeight = 0;\n            if (isStemmableNote(note)) {\n                const stem = note.getStem();\n                if (stem) {\n                    stemHeight = Math.abs(stem.getHeight()) / Tables.STAVE_LINE_DISTANCE;\n                }\n            }\n            const stave = note.getStave();\n            if (stave) {\n                lines = stave.getNumLines();\n            }\n            if (articulation.getPosition() === ABOVE) {\n                let noteLine = note.getLineNumber(true);\n                if (stemDirection === Stem.UP) {\n                    noteLine += stemHeight;\n                }\n                let increment = getIncrement(articulation, state.topTextLine, ABOVE);\n                const curTop = noteLine + state.topTextLine + 0.5;\n                if (!articulation.articulation.betweenLines && curTop < lines) {\n                    increment += lines - curTop;\n                }\n                articulation.setTextLine(state.topTextLine);\n                state.topTextLine += increment;\n                articulation.setOrigin(0.5, 1);\n            }\n            else if (articulation.getPosition() === BELOW) {\n                let noteLine = Math.max(lines - note.getLineNumber(), 0);\n                if (stemDirection === Stem.DOWN) {\n                    noteLine += stemHeight;\n                }\n                let increment = getIncrement(articulation, state.textLine, BELOW);\n                const curBottom = noteLine + state.textLine + 0.5;\n                if (!articulation.articulation.betweenLines && curBottom < lines) {\n                    increment += lines - curBottom;\n                }\n                articulation.setTextLine(state.textLine);\n                state.textLine += increment;\n                articulation.setOrigin(0.5, 0);\n            }\n        });\n        const width = articulations\n            .map((articulation) => articulation.getWidth())\n            .reduce((maxWidth, articWidth) => Math.max(articWidth, maxWidth));\n        const overlap = Math.min(Math.max(width - maxGlyphWidth, 0), Math.max(width - (state.leftShift + state.rightShift), 0));\n        state.leftShift += overlap / 2;\n        state.rightShift += overlap / 2;\n        return true;\n    }\n    static easyScoreHook({ articulations }, note, builder) {\n        if (!articulations)\n            return;\n        const articNameToCode = {\n            staccato: 'a.',\n            tenuto: 'a-',\n            accent: 'a>',\n        };\n        articulations\n            .split(',')\n            .map((articString) => articString.trim().split('.'))\n            .map(([name, position]) => {\n            const artic = { type: articNameToCode[name] };\n            if (position)\n                artic.position = Modifier.PositionString[position];\n            return builder.getFactory().Articulation(artic);\n        })\n            .map((artic) => note.addModifier(artic, 0));\n    }\n    constructor(type) {\n        var _a;\n        super();\n        this.heightShift = 0;\n        this.type = type;\n        this.position = ABOVE;\n        if (!Tables.articulationCodes(this.type)) {\n            if (((_a = this.type.codePointAt(0)) !== null && _a !== void 0 ? _a : 0) % 2 === 0)\n                this.position = ABOVE;\n            else\n                this.position = BELOW;\n        }\n        this.articulation = { betweenLines: false };\n        this.reset();\n    }\n    reset() {\n        this.articulation = Tables.articulationCodes(this.type);\n        if (!this.articulation) {\n            this.articulation = { code: this.type, betweenLines: false };\n        }\n        const code = (this.position === ABOVE ? this.articulation.aboveCode : this.articulation.belowCode) ||\n            this.articulation.code ||\n            Glyphs.null;\n        this.text = code;\n    }\n    setBetweenLines(betweenLines = true) {\n        this.articulation.betweenLines = betweenLines;\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const index = this.checkIndex();\n        const { position, textLine } = this;\n        const canSitBetweenLines = this.articulation.betweenLines;\n        const stave = note.checkStave();\n        const staffSpace = stave.getSpacingBetweenLines();\n        const isTab = isTabNote(note);\n        const { x } = note.getModifierStartXY(position, index);\n        const shouldSitOutsideStaff = !canSitBetweenLines || isTab;\n        const initialOffset = getInitialOffset(note, position);\n        let y = {\n            [ABOVE]: () => {\n                const y = getTopY(note, textLine) - (textLine + initialOffset) * staffSpace;\n                return shouldSitOutsideStaff ? Math.min(stave.getYForTopText(Articulation.INITIAL_OFFSET), y) : y;\n            },\n            [BELOW]: () => {\n                const y = getBottomY(note, textLine) + (textLine + initialOffset) * staffSpace;\n                return shouldSitOutsideStaff ? Math.max(stave.getYForBottomText(Articulation.INITIAL_OFFSET), y) : y;\n            },\n        }[position]();\n        if (!isTab) {\n            const offsetDirection = position === ABOVE ? -1 : +1;\n            const noteLine = note.getKeyProps()[index].line;\n            const distanceFromNote = (note.getYs()[index] - y) / staffSpace;\n            const articLine = distanceFromNote + Number(noteLine);\n            const snappedLine = snapLineToStaff(canSitBetweenLines, articLine, position, offsetDirection);\n            if (isWithinLines(snappedLine, position))\n                this.setOrigin(0.5, 0.5);\n            y += Math.abs(snappedLine - articLine) * staffSpace * offsetDirection;\n        }\n        L(`Rendering articulation at (x: ${x}, y: ${y})`);\n        this.x = x;\n        this.y = y;\n        this.renderText(ctx, 0, 0);\n    }\n}\nArticulation.DEBUG = false;\nArticulation.INITIAL_OFFSET = -0.5;\n","export class RenderContext {\n    static get CATEGORY() {\n        return \"RenderContext\";\n    }\n    set font(f) {\n        this.setFont(f);\n    }\n    get font() {\n        return this.getFont();\n    }\n}\nexport function drawDot(ctx, x, y, color = '#F55') {\n    ctx.save();\n    ctx.setFillStyle(color);\n    ctx.beginPath();\n    ctx.arc(x, y, 3, 0, Math.PI * 2, false);\n    ctx.closePath();\n    ctx.fill();\n    ctx.restore();\n}\n","import { Element } from './element.js';\nimport { Fraction } from './fraction.js';\nimport { Tables } from './tables.js';\nimport { defined, RuntimeError } from './util.js';\nexport class Tickable extends Element {\n    static get CATEGORY() {\n        return \"Tickable\";\n    }\n    constructor() {\n        super();\n        this._preFormatted = false;\n        this._postFormatted = false;\n        this.ticks = new Fraction(0, 1);\n        this.intrinsicTicks = 0;\n        this.tickMultiplier = new Fraction(1, 1);\n        this.modifiers = [];\n        this.tupletStack = [];\n        this.alignCenter = false;\n        this.centerXShift = 0;\n        this.ignoreTicks = false;\n        this.formatterMetrics = {\n            freedom: { left: 0, right: 0 },\n            duration: '',\n            iterations: 0,\n            space: {\n                used: 0,\n                mean: 0,\n                deviation: 0,\n            },\n        };\n    }\n    reset() {\n        return this;\n    }\n    getTicks() {\n        return this.ticks;\n    }\n    shouldIgnoreTicks() {\n        return this.ignoreTicks;\n    }\n    setIgnoreTicks(flag) {\n        this.ignoreTicks = flag;\n        return this;\n    }\n    getWidth() {\n        if (!this._preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call GetWidth on an unformatted note.\");\n        }\n        return this.width + (this.modifierContext ? this.modifierContext.getWidth() : 0);\n    }\n    getX() {\n        const tickContext = this.checkTickContext(`Can't getX() without a TickContext.`);\n        return tickContext.getX() + this.xShift;\n    }\n    getFormatterMetrics() {\n        return this.formatterMetrics;\n    }\n    getCenterXShift() {\n        if (this.isCenterAligned()) {\n            return this.centerXShift;\n        }\n        return 0;\n    }\n    setCenterXShift(centerXShift) {\n        this.centerXShift = centerXShift;\n        return this;\n    }\n    isCenterAligned() {\n        return this.alignCenter;\n    }\n    setCenterAlignment(alignCenter) {\n        this.alignCenter = alignCenter;\n        return this;\n    }\n    getVoice() {\n        return defined(this.voice, 'NoVoice', 'Tickable has no voice.');\n    }\n    setVoice(voice) {\n        this.voice = voice;\n    }\n    getTuplet() {\n        return this.tuplet;\n    }\n    getTupletStack() {\n        return this.tupletStack;\n    }\n    resetTuplet(tuplet) {\n        let noteCount;\n        let notesOccupied;\n        if (tuplet) {\n            const i = this.tupletStack.indexOf(tuplet);\n            if (i !== -1) {\n                this.tupletStack.splice(i, 1);\n                noteCount = tuplet.getNoteCount();\n                notesOccupied = tuplet.getNotesOccupied();\n                this.applyTickMultiplier(noteCount, notesOccupied);\n            }\n            return this;\n        }\n        while (this.tupletStack.length) {\n            tuplet = this.tupletStack.pop();\n            noteCount = tuplet.getNoteCount();\n            notesOccupied = tuplet.getNotesOccupied();\n            this.applyTickMultiplier(noteCount, notesOccupied);\n        }\n        return this;\n    }\n    setTuplet(tuplet) {\n        if (tuplet) {\n            this.tupletStack.push(tuplet);\n            const noteCount = tuplet.getNoteCount();\n            const notesOccupied = tuplet.getNotesOccupied();\n            this.applyTickMultiplier(notesOccupied, noteCount);\n        }\n        this.tuplet = tuplet;\n        return this;\n    }\n    addToModifierContext(mc) {\n        this.modifierContext = mc;\n        for (let i = 0; i < this.modifiers.length; ++i) {\n            this.modifierContext.addMember(this.modifiers[i]);\n        }\n        this.modifierContext.addMember(this);\n        this._preFormatted = false;\n        return this;\n    }\n    addModifier(modifier, index = 0) {\n        this.modifiers.push(modifier);\n        this._preFormatted = false;\n        return this;\n    }\n    getModifiers() {\n        return this.modifiers;\n    }\n    setTickContext(tc) {\n        this.tickContext = tc;\n        this._preFormatted = false;\n    }\n    checkTickContext(message = 'Tickable has no tick context.') {\n        return defined(this.tickContext, 'NoTickContext', message);\n    }\n    preFormat() {\n        if (this._preFormatted)\n            return;\n        this.width = 0;\n        if (this.modifierContext) {\n            this.modifierContext.preFormat();\n            this.width += this.modifierContext.getWidth();\n        }\n    }\n    set preFormatted(value) {\n        this._preFormatted = value;\n    }\n    get preFormatted() {\n        return this._preFormatted;\n    }\n    postFormat() {\n        if (this._postFormatted)\n            return this;\n        this._postFormatted = true;\n        return this;\n    }\n    set postFormatted(value) {\n        this._postFormatted = value;\n    }\n    get postFormatted() {\n        return this._postFormatted;\n    }\n    getIntrinsicTicks() {\n        return this.intrinsicTicks;\n    }\n    setIntrinsicTicks(intrinsicTicks) {\n        this.intrinsicTicks = intrinsicTicks;\n        this.ticks = this.tickMultiplier.clone().multiply(this.intrinsicTicks);\n    }\n    getTickMultiplier() {\n        return this.tickMultiplier;\n    }\n    applyTickMultiplier(numerator, denominator) {\n        this.tickMultiplier.multiply(numerator, denominator);\n        this.ticks = this.tickMultiplier.clone().multiply(this.intrinsicTicks);\n    }\n    setDuration(duration) {\n        const ticks = duration.numerator * (Tables.RESOLUTION / duration.denominator);\n        this.ticks = this.tickMultiplier.clone().multiply(ticks);\n        this.intrinsicTicks = this.ticks.value();\n    }\n    getAbsoluteX() {\n        const tickContext = this.checkTickContext(`Can't getAbsoluteX() without a TickContext.`);\n        return tickContext.getX();\n    }\n    setModifierContext(mc) {\n        this.modifierContext = mc;\n        return this;\n    }\n    getModifierContext() {\n        return this.modifierContext;\n    }\n    checkModifierContext() {\n        return defined(this.modifierContext, 'NoModifierContext', 'No modifier context attached to this tickable.');\n    }\n}\n","import { Glyphs } from './glyphs.js';\nimport { Metrics } from './metrics.js';\nimport { drawDot } from './rendercontext.js';\nimport { Tables } from './tables.js';\nimport { Tickable } from './tickable.js';\nimport { defined, RuntimeError } from './util.js';\nexport class Note extends Tickable {\n    static get CATEGORY() {\n        return \"Note\";\n    }\n    static getGlyphProps(duration, type = 'n') {\n        duration = Tables.sanitizeDuration(duration);\n        let code = Tables.durationCodes[duration];\n        if (code === undefined) {\n            code = Tables.durationCodes['4'];\n        }\n        const codeNoteHead = Tables.codeNoteHead(type.toUpperCase(), duration);\n        if (codeNoteHead !== Glyphs.null) {\n            code = Object.assign(Object.assign({}, code), { codeHead: codeNoteHead });\n        }\n        return code;\n    }\n    static plotMetrics(ctx, note, yPos) {\n        var _a;\n        const metrics = note.getMetrics();\n        const xStart = note.getAbsoluteX() - metrics.modLeftPx - metrics.leftDisplacedHeadPx;\n        const xPre1 = note.getAbsoluteX() - metrics.leftDisplacedHeadPx;\n        const xAbs = note.getAbsoluteX();\n        const xPost1 = note.getAbsoluteX() + metrics.notePx;\n        const xPost2 = note.getAbsoluteX() + metrics.notePx + metrics.rightDisplacedHeadPx;\n        const xEnd = note.getAbsoluteX() + metrics.notePx + metrics.rightDisplacedHeadPx + metrics.modRightPx;\n        const xFreedomRight = xEnd + ((_a = note.getFormatterMetrics().freedom.right) !== null && _a !== void 0 ? _a : 0);\n        const xWidth = xEnd - xStart;\n        ctx.save();\n        ctx.setFont(Metrics.get('fontFamily'), 8);\n        ctx.fillText(Math.round(xWidth) + 'px', xStart + note.getXShift(), yPos);\n        const y = yPos + 7;\n        function stroke(x1, x2, color, yy = y) {\n            ctx.beginPath();\n            ctx.setStrokeStyle(color);\n            ctx.setFillStyle(color);\n            ctx.setLineWidth(3);\n            ctx.moveTo(x1 + note.getXShift(), yy);\n            ctx.lineTo(x2 + note.getXShift(), yy);\n            ctx.stroke();\n        }\n        stroke(xStart, xPre1, 'red');\n        stroke(xPre1, xAbs, '#999');\n        stroke(xAbs, xPost1, 'green');\n        stroke(xPost1, xPost2, '#999');\n        stroke(xPost2, xEnd, 'red');\n        stroke(xEnd, xFreedomRight, '#DD0');\n        stroke(xStart - note.getXShift(), xStart, '#BBB');\n        drawDot(ctx, xAbs + note.getXShift(), y, 'blue');\n        const formatterMetrics = note.getFormatterMetrics();\n        if (formatterMetrics.iterations > 0) {\n            const spaceDeviation = formatterMetrics.space.deviation;\n            const prefix = spaceDeviation >= 0 ? '+' : '';\n            ctx.setFillStyle('red');\n            ctx.fillText(prefix + Math.round(spaceDeviation), xAbs + note.getXShift(), yPos - 10);\n        }\n        ctx.restore();\n    }\n    static parseDuration(durationString) {\n        if (!durationString) {\n            return undefined;\n        }\n        const regexp = /(\\d*\\/?\\d+|[a-z])(d*)([nrhms]|$)/;\n        const result = regexp.exec(durationString);\n        if (!result) {\n            return undefined;\n        }\n        const duration = result[1];\n        const dots = result[2].length;\n        const type = result[3] || 'n';\n        return { duration, dots, type };\n    }\n    static parseNoteStruct(noteStruct) {\n        const durationProps = Note.parseDuration(noteStruct.duration);\n        if (!durationProps) {\n            return undefined;\n        }\n        let type = noteStruct.type;\n        if (type && !Tables.validTypes[type]) {\n            return undefined;\n        }\n        const customTypes = [];\n        if (!type) {\n            type = durationProps.type || 'n';\n            if (noteStruct.keys !== undefined) {\n                noteStruct.keys.forEach((k, i) => {\n                    const result = k.split('/');\n                    customTypes[i] = (result && result.length === 3 ? result[2] : type);\n                });\n            }\n        }\n        let ticks = Tables.durationToTicks(durationProps.duration);\n        if (!ticks) {\n            return undefined;\n        }\n        const dots = noteStruct.dots ? noteStruct.dots : durationProps.dots;\n        if (typeof dots !== 'number') {\n            return undefined;\n        }\n        let currentTicks = ticks;\n        for (let i = 0; i < dots; i++) {\n            if (currentTicks <= 1)\n                return undefined;\n            currentTicks = currentTicks / 2;\n            ticks += currentTicks;\n        }\n        return {\n            duration: durationProps.duration,\n            type,\n            customTypes,\n            dots,\n            ticks,\n        };\n    }\n    constructor(noteStruct) {\n        super();\n        if (!noteStruct) {\n            throw new RuntimeError('BadArguments', 'Note must have valid initialization data to identify duration and type.');\n        }\n        const parsedNoteStruct = Note.parseNoteStruct(noteStruct);\n        if (!parsedNoteStruct) {\n            throw new RuntimeError('BadArguments', `Invalid note initialization object: ${JSON.stringify(noteStruct)}`);\n        }\n        this.keys = noteStruct.keys || [];\n        this.keyProps = [];\n        this.duration = parsedNoteStruct.duration;\n        this.noteType = parsedNoteStruct.type;\n        this.customTypes = parsedNoteStruct.customTypes;\n        if (noteStruct.durationOverride) {\n            this.setDuration(noteStruct.durationOverride);\n        }\n        else {\n            this.setIntrinsicTicks(parsedNoteStruct.ticks);\n        }\n        this.modifiers = [];\n        this.glyphProps = Note.getGlyphProps(this.duration, this.noteType);\n        this.customGlyphs = this.customTypes.map((t) => Note.getGlyphProps(this.duration, t));\n        this.playNote = undefined;\n        this.ignoreTicks = false;\n        this.width = 0;\n        this.leftDisplacedHeadPx = 0;\n        this.rightDisplacedHeadPx = 0;\n        this.xShift = 0;\n        this.ys = [];\n        if (noteStruct.alignCenter) {\n            this.setCenterAlignment(noteStruct.alignCenter);\n        }\n        this.renderOptions = {\n            annotationSpacing: 5,\n            strokePx: 1,\n            yShift: 0,\n        };\n    }\n    getPlayNote() {\n        return this.playNote;\n    }\n    setPlayNote(note) {\n        this.playNote = note;\n        return this;\n    }\n    isRest() {\n        return false;\n    }\n    addStroke(index, stroke) {\n        stroke.setNote(this);\n        stroke.setIndex(index);\n        this.modifiers.push(stroke);\n        this.preFormatted = false;\n        return this;\n    }\n    getStave() {\n        return this.stave;\n    }\n    checkStave() {\n        return defined(this.stave, 'NoStave', 'No stave attached to instance.');\n    }\n    setStave(stave) {\n        this.stave = stave;\n        this.setYs([stave.getYForLine(0)]);\n        this.setContext(this.stave.getContext());\n        return this;\n    }\n    getLeftDisplacedHeadPx() {\n        return this.leftDisplacedHeadPx;\n    }\n    getRightDisplacedHeadPx() {\n        return this.rightDisplacedHeadPx;\n    }\n    setLeftDisplacedHeadPx(x) {\n        this.leftDisplacedHeadPx = x;\n        return this;\n    }\n    setRightDisplacedHeadPx(x) {\n        this.rightDisplacedHeadPx = x;\n        return this;\n    }\n    shouldIgnoreTicks() {\n        return this.ignoreTicks;\n    }\n    getLineNumber(isTopNote) {\n        return 0;\n    }\n    getLineForRest() {\n        return 0;\n    }\n    getGlyphProps() {\n        return this.glyphProps;\n    }\n    getGlyphWidth() {\n        return 0;\n    }\n    setYs(ys) {\n        this.ys = ys;\n        return this;\n    }\n    getYs() {\n        if (this.ys.length === 0) {\n            throw new RuntimeError('NoYValues', 'No Y-values calculated for this note.');\n        }\n        return this.ys;\n    }\n    getYForTopText(textLine) {\n        return this.checkStave().getYForTopText(textLine);\n    }\n    getVoice() {\n        if (!this.voice)\n            throw new RuntimeError('NoVoice', 'Note has no voice.');\n        return this.voice;\n    }\n    setVoice(voice) {\n        this.voice = voice;\n        this.preFormatted = false;\n        return this;\n    }\n    getTickContext() {\n        return this.checkTickContext();\n    }\n    setTickContext(tc) {\n        this.tickContext = tc;\n        this.preFormatted = false;\n        return this;\n    }\n    getDuration() {\n        return this.duration;\n    }\n    isDotted() {\n        return this.getModifiersByType(\"Dot\").length > 0;\n    }\n    hasStem() {\n        return false;\n    }\n    getNoteType() {\n        return this.noteType;\n    }\n    getBeam() {\n        return this.beam;\n    }\n    checkBeam() {\n        return defined(this.beam, 'NoBeam', 'No beam attached to instance');\n    }\n    hasBeam() {\n        return this.beam !== undefined;\n    }\n    setBeam(beam) {\n        this.beam = beam;\n        return this;\n    }\n    addModifier(modifier, index = 0) {\n        const signature = 'Note.addModifier(modifier: Modifier, index: number=0)';\n        if (typeof index === 'string') {\n            index = parseInt(index);\n            console.warn(signature + ' expected a number for `index`, but received a string.');\n        }\n        if (typeof modifier !== 'object' || typeof index !== 'number') {\n            throw new RuntimeError('WrongParams', 'Incorrect call signature. Use ' + signature + ' instead.');\n        }\n        modifier.setNote(this);\n        modifier.setIndex(index);\n        super.addModifier(modifier);\n        return this;\n    }\n    getModifiersByType(type) {\n        return this.modifiers.filter((modifier) => modifier.getCategory() === type);\n    }\n    getModifierStartXY(position, index, options) {\n        if (!this.preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n        }\n        return {\n            x: this.getAbsoluteX(),\n            y: this.ys[0],\n        };\n    }\n    getRightParenthesisPx(index) {\n        const props = this.getKeyProps()[index];\n        return props.displaced ? this.getRightDisplacedHeadPx() : 0;\n    }\n    getLeftParenthesisPx(index) {\n        const props = this.getKeyProps()[index];\n        return props.displaced ? this.getLeftDisplacedHeadPx() - this.xShift : -this.xShift;\n    }\n    getFirstDotPx() {\n        let px = this.getRightDisplacedHeadPx();\n        const parentheses = this.checkModifierContext().getMembers('Parenthesis');\n        if (parentheses.length !== 0) {\n            px += parentheses[0].getWidth() + 1;\n        }\n        return px;\n    }\n    getMetrics() {\n        if (!this.preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call getMetrics on an unformatted note.\");\n        }\n        const modLeftPx = this.modifierContext ? this.modifierContext.getState().leftShift : 0;\n        const modRightPx = this.modifierContext ? this.modifierContext.getState().rightShift : 0;\n        const width = this.getWidth();\n        const glyphWidth = this.getGlyphWidth();\n        const notePx = width -\n            modLeftPx -\n            modRightPx -\n            this.leftDisplacedHeadPx -\n            this.rightDisplacedHeadPx;\n        return {\n            width,\n            glyphWidth,\n            notePx,\n            modLeftPx,\n            modRightPx,\n            leftDisplacedHeadPx: this.leftDisplacedHeadPx,\n            rightDisplacedHeadPx: this.rightDisplacedHeadPx,\n            glyphPx: 0,\n        };\n    }\n    getAbsoluteX() {\n        const tickContext = this.checkTickContext(`Can't getAbsoluteX() without a TickContext.`);\n        let x = tickContext.getX();\n        if (this.stave) {\n            x += this.stave.getNoteStartX() + Metrics.get('Stave.padding', 0);\n        }\n        if (this.isCenterAligned()) {\n            x += this.getCenterXShift();\n        }\n        return x;\n    }\n    getStemDirection() {\n        throw new RuntimeError('NoStem', 'No stem attached to this note.');\n    }\n    getStemExtents() {\n        throw new RuntimeError('NoStem', 'No stem attached to this note.');\n    }\n    getTieRightX() {\n        let tieStartX = this.getAbsoluteX();\n        const noteGlyphWidth = this.getGlyphWidth();\n        tieStartX += noteGlyphWidth / 2;\n        tieStartX += -this.width / 2 + this.width + 2;\n        return tieStartX;\n    }\n    getTieLeftX() {\n        let tieEndX = this.getAbsoluteX();\n        const noteGlyphWidth = this.getGlyphWidth();\n        tieEndX += noteGlyphWidth / 2;\n        tieEndX -= this.width / 2 + 2;\n        return tieEndX;\n    }\n    getKeys() {\n        return this.keys;\n    }\n    getKeyProps() {\n        return this.keyProps;\n    }\n    getBoundingBox() {\n        const boundingBox = super.getBoundingBox();\n        for (let i = 0; i < this.modifiers.length; i++) {\n            boundingBox.mergeWith(this.modifiers[i].getBoundingBox());\n        }\n        return boundingBox;\n    }\n}\n","import { Element } from './element.js';\nimport { defined } from './util.js';\nexport var StaveModifierPosition;\n(function (StaveModifierPosition) {\n    StaveModifierPosition[StaveModifierPosition[\"CENTER\"] = 0] = \"CENTER\";\n    StaveModifierPosition[StaveModifierPosition[\"LEFT\"] = 1] = \"LEFT\";\n    StaveModifierPosition[StaveModifierPosition[\"RIGHT\"] = 2] = \"RIGHT\";\n    StaveModifierPosition[StaveModifierPosition[\"ABOVE\"] = 3] = \"ABOVE\";\n    StaveModifierPosition[StaveModifierPosition[\"BELOW\"] = 4] = \"BELOW\";\n    StaveModifierPosition[StaveModifierPosition[\"BEGIN\"] = 5] = \"BEGIN\";\n    StaveModifierPosition[StaveModifierPosition[\"END\"] = 6] = \"END\";\n})(StaveModifierPosition || (StaveModifierPosition = {}));\nexport class StaveModifier extends Element {\n    static get CATEGORY() {\n        return \"StaveModifier\";\n    }\n    static get Position() {\n        return StaveModifierPosition;\n    }\n    constructor() {\n        super();\n        this.padding = 10;\n        this.position = StaveModifierPosition.ABOVE;\n    }\n    getPosition() {\n        return this.position;\n    }\n    setPosition(position) {\n        this.position = position;\n        return this;\n    }\n    getStave() {\n        return this.stave;\n    }\n    checkStave() {\n        return defined(this.stave, 'NoStave', 'No stave attached to instance.');\n    }\n    setStave(stave) {\n        this.stave = stave;\n        return this;\n    }\n    getPadding(index) {\n        return index !== undefined && index < 2 ? 0 : this.padding;\n    }\n    setPadding(padding) {\n        this.padding = padding;\n        return this;\n    }\n    setLayoutMetrics(layoutMetrics) {\n        this.layoutMetrics = layoutMetrics;\n        return this;\n    }\n    getLayoutMetrics() {\n        return this.layoutMetrics;\n    }\n}\n","import { StaveModifier, StaveModifierPosition } from './stavemodifier.js';\nimport { Tables } from './tables.js';\nexport var BarlineType;\n(function (BarlineType) {\n    BarlineType[BarlineType[\"SINGLE\"] = 1] = \"SINGLE\";\n    BarlineType[BarlineType[\"DOUBLE\"] = 2] = \"DOUBLE\";\n    BarlineType[BarlineType[\"END\"] = 3] = \"END\";\n    BarlineType[BarlineType[\"REPEAT_BEGIN\"] = 4] = \"REPEAT_BEGIN\";\n    BarlineType[BarlineType[\"REPEAT_END\"] = 5] = \"REPEAT_END\";\n    BarlineType[BarlineType[\"REPEAT_BOTH\"] = 6] = \"REPEAT_BOTH\";\n    BarlineType[BarlineType[\"NONE\"] = 7] = \"NONE\";\n})(BarlineType || (BarlineType = {}));\nexport class Barline extends StaveModifier {\n    static get CATEGORY() {\n        return \"Barline\";\n    }\n    static get type() {\n        return BarlineType;\n    }\n    static get typeString() {\n        return {\n            single: BarlineType.SINGLE,\n            double: BarlineType.DOUBLE,\n            end: BarlineType.END,\n            repeatBegin: BarlineType.REPEAT_BEGIN,\n            repeatEnd: BarlineType.REPEAT_END,\n            repeatBoth: BarlineType.REPEAT_BOTH,\n            none: BarlineType.NONE,\n        };\n    }\n    constructor(type) {\n        super();\n        this.thickness = Tables.STAVE_LINE_THICKNESS;\n        const TYPE = BarlineType;\n        this.widths = {};\n        this.widths[TYPE.SINGLE] = 5;\n        this.widths[TYPE.DOUBLE] = 5;\n        this.widths[TYPE.END] = 5;\n        this.widths[TYPE.REPEAT_BEGIN] = 5;\n        this.widths[TYPE.REPEAT_END] = 5;\n        this.widths[TYPE.REPEAT_BOTH] = 5;\n        this.widths[TYPE.NONE] = 5;\n        this.paddings = {};\n        this.paddings[TYPE.SINGLE] = 0;\n        this.paddings[TYPE.DOUBLE] = 0;\n        this.paddings[TYPE.END] = 0;\n        this.paddings[TYPE.REPEAT_BEGIN] = 15;\n        this.paddings[TYPE.REPEAT_END] = 15;\n        this.paddings[TYPE.REPEAT_BOTH] = 15;\n        this.paddings[TYPE.NONE] = 0;\n        this.layoutMetricsMap = {};\n        this.layoutMetricsMap[TYPE.SINGLE] = {\n            xMin: 0,\n            xMax: 1,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.DOUBLE] = {\n            xMin: -3,\n            xMax: 1,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.END] = {\n            xMin: -5,\n            xMax: 1,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.REPEAT_END] = {\n            xMin: -10,\n            xMax: 1,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.REPEAT_BEGIN] = {\n            xMin: -2,\n            xMax: 10,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.REPEAT_BOTH] = {\n            xMin: -10,\n            xMax: 10,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.NONE] = {\n            xMin: 0,\n            xMax: 0,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.setPosition(StaveModifierPosition.BEGIN);\n        this.setType(type);\n    }\n    getType() {\n        return this.type;\n    }\n    setType(type) {\n        this.type = typeof type === 'string' ? Barline.typeString[type] : type;\n        this.setWidth(this.widths[this.type]);\n        this.setPadding(this.paddings[this.type]);\n        this.setLayoutMetrics(this.layoutMetricsMap[this.type]);\n        return this;\n    }\n    draw() {\n        const stave = this.checkStave();\n        const ctx = stave.checkContext();\n        this.setRendered();\n        ctx.openGroup('stavebarline', this.getAttribute('id'));\n        switch (this.type) {\n            case BarlineType.SINGLE:\n                this.drawVerticalBar(stave, this.x, false);\n                break;\n            case BarlineType.DOUBLE:\n                this.drawVerticalBar(stave, this.x, true);\n                break;\n            case BarlineType.END:\n                this.drawVerticalEndBar(stave, this.x);\n                break;\n            case BarlineType.REPEAT_BEGIN:\n                this.drawRepeatBar(stave, this.x, true);\n                if (stave.getX() !== this.x) {\n                    this.drawVerticalBar(stave, stave.getX());\n                }\n                break;\n            case BarlineType.REPEAT_END:\n                this.drawRepeatBar(stave, this.x, false);\n                break;\n            case BarlineType.REPEAT_BOTH:\n                this.drawRepeatBar(stave, this.x, false);\n                this.drawRepeatBar(stave, this.x, true);\n                break;\n            default:\n                break;\n        }\n        ctx.closeGroup();\n    }\n    drawVerticalBar(stave, x, doubleBar) {\n        const staveCtx = stave.checkContext();\n        const topY = stave.getTopLineTopY();\n        const botY = stave.getBottomLineBottomY();\n        if (doubleBar) {\n            staveCtx.fillRect(x - 3, topY, 1, botY - topY);\n        }\n        staveCtx.fillRect(x, topY, 1, botY - topY);\n    }\n    drawVerticalEndBar(stave, x) {\n        const staveCtx = stave.checkContext();\n        const topY = stave.getTopLineTopY();\n        const botY = stave.getBottomLineBottomY();\n        staveCtx.fillRect(x - 5, topY, 1, botY - topY);\n        staveCtx.fillRect(x - 2, topY, 3, botY - topY);\n    }\n    drawRepeatBar(stave, x, begin) {\n        const staveCtx = stave.checkContext();\n        const topY = stave.getTopLineTopY();\n        const botY = stave.getBottomLineBottomY();\n        let xShift = 3;\n        if (!begin) {\n            xShift = -5;\n        }\n        staveCtx.fillRect(x + xShift, topY, 1, botY - topY);\n        staveCtx.fillRect(x - 2, topY, 3, botY - topY);\n        const dotRadius = 2;\n        if (begin) {\n            xShift += 4;\n        }\n        else {\n            xShift -= 4;\n        }\n        const dotX = x + xShift + dotRadius / 2;\n        let yOffset = (stave.getNumLines() - 1) * stave.getSpacingBetweenLines();\n        yOffset = yOffset / 2 - stave.getSpacingBetweenLines() / 2;\n        let dotY = topY + yOffset + dotRadius / 2;\n        staveCtx.beginPath();\n        staveCtx.arc(dotX, dotY, dotRadius, 0, Math.PI * 2, false);\n        staveCtx.fill();\n        dotY += stave.getSpacingBetweenLines();\n        staveCtx.beginPath();\n        staveCtx.arc(dotX, dotY, dotRadius, 0, Math.PI * 2, false);\n        staveCtx.fill();\n    }\n}\n","import { Note } from './note.js';\nimport { Barline, BarlineType } from './stavebarline.js';\nimport { log } from './util.js';\nfunction L(...args) {\n    if (BarNote.DEBUG)\n        log('VexFlow.BarNote', args);\n}\nexport class BarNote extends Note {\n    static get CATEGORY() {\n        return \"BarNote\";\n    }\n    constructor(type = BarlineType.SINGLE) {\n        super({ duration: 'b' });\n        this.metrics = {\n            widths: {},\n        };\n        const TYPE = BarlineType;\n        this.metrics.widths = {\n            [TYPE.SINGLE]: 8,\n            [TYPE.DOUBLE]: 12,\n            [TYPE.END]: 15,\n            [TYPE.REPEAT_BEGIN]: 14,\n            [TYPE.REPEAT_END]: 14,\n            [TYPE.REPEAT_BOTH]: 18,\n            [TYPE.NONE]: 0,\n        };\n        this.ignoreTicks = true;\n        this.setType(type);\n    }\n    getType() {\n        return this.type;\n    }\n    setType(type) {\n        this.type = typeof type === 'string' ? Barline.typeString[type] : type;\n        this.setWidth(this.metrics.widths[this.type]);\n        return this;\n    }\n    addToModifierContext(mc) {\n        return this;\n    }\n    preFormat() {\n        this.preFormatted = true;\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        L('Rendering bar line at: ', this.getAbsoluteX());\n        const barline = new Barline(this.type);\n        barline.setX(this.getAbsoluteX());\n        barline.setStave(this.checkStave());\n        barline.setContext(ctx);\n        barline.drawWithStyle();\n        this.setRendered();\n    }\n}\nBarNote.DEBUG = false;\n","import { Element } from './element.js';\nimport { Fraction } from './fraction.js';\nimport { Stem } from './stem.js';\nimport { Tables } from './tables.js';\nimport { isStaveNote, isTabNote } from './typeguard.js';\nimport { RuntimeError } from './util.js';\nfunction calculateStemDirection(notes) {\n    let lineSum = 0;\n    notes.forEach((note) => {\n        if (note.keyProps) {\n            note.keyProps.forEach((keyProp) => {\n                lineSum += keyProp.line - 3;\n            });\n        }\n    });\n    if (lineSum >= 0) {\n        return Stem.DOWN;\n    }\n    return Stem.UP;\n}\nfunction getStemSlope(firstNote, lastNote) {\n    const firstStemTipY = firstNote.getStemExtents().topY;\n    const firstStemX = firstNote.getStemX();\n    const lastStemTipY = lastNote.getStemExtents().topY;\n    const lastStemX = lastNote.getStemX();\n    return (lastStemTipY - firstStemTipY) / (lastStemX - firstStemX);\n}\nexport const BEAM_LEFT = 'L';\nexport const BEAM_RIGHT = 'R';\nexport const BEAM_BOTH = 'B';\nexport class Beam extends Element {\n    static get CATEGORY() {\n        return \"Beam\";\n    }\n    getStemDirection() {\n        return this._stemDirection;\n    }\n    static getDefaultBeamGroups(timeSig) {\n        if (!timeSig || timeSig === 'c') {\n            timeSig = '4/4';\n        }\n        const defaults = {\n            '1/2': ['1/2'],\n            '2/2': ['1/2'],\n            '3/2': ['1/2'],\n            '4/2': ['1/2'],\n            '1/4': ['1/4'],\n            '2/4': ['1/4'],\n            '3/4': ['1/4'],\n            '4/4': ['1/4'],\n            '1/8': ['1/8'],\n            '2/8': ['2/8'],\n            '3/8': ['3/8'],\n            '4/8': ['2/8'],\n            '1/16': ['1/16'],\n            '2/16': ['2/16'],\n            '3/16': ['3/16'],\n            '4/16': ['2/16'],\n        };\n        const groups = defaults[timeSig];\n        if (groups === undefined) {\n            const beatTotal = parseInt(timeSig.split('/')[0], 10);\n            const beatValue = parseInt(timeSig.split('/')[1], 10);\n            const tripleMeter = beatTotal % 3 === 0;\n            if (tripleMeter) {\n                return [new Fraction(3, beatValue)];\n            }\n            else if (beatValue > 4) {\n                return [new Fraction(2, beatValue)];\n            }\n            else if (beatValue <= 4) {\n                return [new Fraction(1, beatValue)];\n            }\n        }\n        else {\n            return groups.map((group) => new Fraction().parse(group));\n        }\n        return [new Fraction(1, 4)];\n    }\n    static applyAndGetBeams(voice, stemDirection, groups) {\n        return Beam.generateBeams(voice.getTickables(), { groups, stemDirection });\n    }\n    static generateBeams(notes, config = {}) {\n        if (!config.groups || !config.groups.length) {\n            config.groups = [new Fraction(2, 8)];\n        }\n        const tickGroups = config.groups.map((group) => {\n            if (!group.multiply) {\n                throw new RuntimeError('InvalidBeamGroups', 'The beam groups must be an array of VexFlow.Fractions');\n            }\n            return group.clone().multiply(Tables.RESOLUTION, 1);\n        });\n        const unprocessedNotes = notes;\n        let currentTickGroup = 0;\n        let noteGroups = [];\n        let currentGroup = [];\n        function getTotalTicks(notes) {\n            return notes.reduce((memo, note) => note.getTicks().clone().add(memo), new Fraction(0, 1));\n        }\n        function nextTickGroup() {\n            if (tickGroups.length - 1 > currentTickGroup) {\n                currentTickGroup += 1;\n            }\n            else {\n                currentTickGroup = 0;\n            }\n        }\n        function createGroups() {\n            let nextGroup = [];\n            let currentGroupTotalTicks = new Fraction(0, 1);\n            unprocessedNotes.forEach((unprocessedNote) => {\n                nextGroup = [];\n                if (unprocessedNote.shouldIgnoreTicks()) {\n                    noteGroups.push(currentGroup);\n                    currentGroup = nextGroup;\n                    return;\n                }\n                currentGroup.push(unprocessedNote);\n                const ticksPerGroup = tickGroups[currentTickGroup].clone();\n                const totalTicks = getTotalTicks(currentGroup).add(currentGroupTotalTicks);\n                const unbeamable = Tables.durationToNumber(unprocessedNote.getDuration()) < 8;\n                if (unbeamable && unprocessedNote.getTuplet()) {\n                    ticksPerGroup.numerator *= 2;\n                }\n                if (totalTicks.greaterThan(ticksPerGroup)) {\n                    if (!unbeamable) {\n                        const note = currentGroup.pop();\n                        if (note)\n                            nextGroup.push(note);\n                    }\n                    noteGroups.push(currentGroup);\n                    do {\n                        currentGroupTotalTicks = totalTicks.subtract(tickGroups[currentTickGroup]);\n                        nextTickGroup();\n                    } while (currentGroupTotalTicks.greaterThanEquals(tickGroups[currentTickGroup]));\n                    currentGroup = nextGroup;\n                }\n                else if (totalTicks.equals(ticksPerGroup)) {\n                    noteGroups.push(currentGroup);\n                    currentGroupTotalTicks = new Fraction(0, 1);\n                    currentGroup = nextGroup;\n                    nextTickGroup();\n                }\n            });\n            if (currentGroup.length > 0) {\n                noteGroups.push(currentGroup);\n            }\n        }\n        function getBeamGroups() {\n            return noteGroups.filter((group) => {\n                if (group.length > 1) {\n                    let beamable = true;\n                    group.forEach((note) => {\n                        if (note.getIntrinsicTicks() >= Tables.durationToTicks('4')) {\n                            beamable = false;\n                        }\n                    });\n                    return beamable;\n                }\n                return false;\n            });\n        }\n        function sanitizeGroups() {\n            const sanitizedGroups = [];\n            noteGroups.forEach((group) => {\n                let tempGroup = [];\n                group.forEach((note, index, group) => {\n                    const isFirstOrLast = index === 0 || index === group.length - 1;\n                    const prevNote = group[index - 1];\n                    const breaksOnEachRest = !config.beamRests && note.isRest();\n                    const breaksOnFirstOrLastRest = config.beamRests && config.beamMiddleOnly && note.isRest() && isFirstOrLast;\n                    let breakOnStemChange = false;\n                    if (config.maintainStemDirections && prevNote && !note.isRest() && !prevNote.isRest()) {\n                        const prevDirection = prevNote.getStemDirection();\n                        const currentDirection = note.getStemDirection();\n                        breakOnStemChange = currentDirection !== prevDirection;\n                    }\n                    const isUnbeamableDuration = parseInt(note.getDuration(), 10) < 8;\n                    const shouldBreak = breaksOnEachRest || breaksOnFirstOrLastRest || breakOnStemChange || isUnbeamableDuration;\n                    if (shouldBreak) {\n                        if (tempGroup.length > 0) {\n                            sanitizedGroups.push(tempGroup);\n                        }\n                        tempGroup = breakOnStemChange ? [note] : [];\n                    }\n                    else {\n                        tempGroup.push(note);\n                    }\n                });\n                if (tempGroup.length > 0) {\n                    sanitizedGroups.push(tempGroup);\n                }\n            });\n            noteGroups = sanitizedGroups;\n        }\n        function formatStems() {\n            noteGroups.forEach((group) => {\n                let stemDirection;\n                if (config.maintainStemDirections) {\n                    const note = findFirstNote(group);\n                    stemDirection = note ? note.getStemDirection() : Stem.UP;\n                }\n                else {\n                    if (config.stemDirection) {\n                        stemDirection = config.stemDirection;\n                    }\n                    else {\n                        stemDirection = calculateStemDirection(group);\n                    }\n                }\n                applyStemDirection(group, stemDirection);\n            });\n        }\n        function findFirstNote(group) {\n            for (let i = 0; i < group.length; i++) {\n                const note = group[i];\n                if (!note.isRest()) {\n                    return note;\n                }\n            }\n            return false;\n        }\n        function applyStemDirection(group, direction) {\n            group.forEach((note) => {\n                note.setStemDirection(direction);\n            });\n        }\n        function getTuplets() {\n            const uniqueTuplets = [];\n            noteGroups.forEach((group) => {\n                let tuplet;\n                group.forEach((note) => {\n                    const noteTuplet = note.getTuplet();\n                    if (noteTuplet && tuplet !== noteTuplet) {\n                        tuplet = noteTuplet;\n                        uniqueTuplets.push(tuplet);\n                    }\n                });\n            });\n            return uniqueTuplets;\n        }\n        createGroups();\n        sanitizeGroups();\n        formatStems();\n        const beamedNoteGroups = getBeamGroups();\n        const allTuplets = getTuplets();\n        const beams = [];\n        beamedNoteGroups.forEach((group) => {\n            const beam = new Beam(group);\n            if (config.showStemlets) {\n                beam.renderOptions.showStemlets = true;\n            }\n            if (config.secondaryBreaks) {\n                beam.renderOptions.secondaryBreakTicks = Tables.durationToTicks(config.secondaryBreaks);\n            }\n            if (config.flatBeams === true) {\n                beam.renderOptions.flatBeams = true;\n                beam.renderOptions.flatBeamOffset = config.flatBeamOffset;\n            }\n            beams.push(beam);\n        });\n        allTuplets.forEach((tuplet) => {\n            const direction = tuplet.notes[0].stemDirection === Stem.DOWN ? -1 : 1;\n            tuplet.setTupletLocation(direction);\n            let bracketed = false;\n            for (let i = 0; i < tuplet.notes.length; i++) {\n                const note = tuplet.notes[i];\n                if (!note.hasBeam()) {\n                    bracketed = true;\n                    break;\n                }\n            }\n            tuplet.setBracketed(bracketed);\n        });\n        return beams;\n    }\n    constructor(notes, autoStem = false) {\n        super();\n        this.slope = 0;\n        this.yShift = 0;\n        this.forcedPartialDirections = {};\n        if (!notes || notes.length === 0) {\n            throw new RuntimeError('BadArguments', 'No notes provided for beam.');\n        }\n        if (notes.length === 1) {\n            throw new RuntimeError('BadArguments', 'Too few notes for beam.');\n        }\n        this._ticks = notes[0].getIntrinsicTicks();\n        if (this._ticks >= Tables.durationToTicks('4')) {\n            throw new RuntimeError('BadArguments', 'Beams can only be applied to notes shorter than a quarter note.');\n        }\n        let i;\n        let note;\n        this._stemDirection = notes[0].getStemDirection();\n        let stemDirection = this._stemDirection;\n        if (autoStem && isStaveNote(notes[0])) {\n            stemDirection = calculateStemDirection(notes);\n        }\n        else if (autoStem && isTabNote(notes[0])) {\n            const stemWeight = notes.reduce((memo, note) => memo + note.getStemDirection(), 0);\n            stemDirection = stemWeight > -1 ? Stem.UP : Stem.DOWN;\n        }\n        for (i = 0; i < notes.length; ++i) {\n            note = notes[i];\n            if (autoStem) {\n                note.setStemDirection(stemDirection);\n                this._stemDirection = stemDirection;\n            }\n            note.setBeam(this);\n        }\n        this.postFormatted = false;\n        this.notes = notes;\n        this._beamCount = this.getBeamCount();\n        this.breakOnIndexes = [];\n        this.renderOptions = {\n            beamWidth: 5,\n            maxSlope: 0.25,\n            minSlope: -0.25,\n            slopeIterations: 20,\n            slopeCost: 100,\n            showStemlets: false,\n            stemletExtension: 7,\n            partialBeamLength: 10,\n            flatBeams: false,\n            minFlatBeamOffset: 15,\n        };\n    }\n    getNotes() {\n        return this.notes;\n    }\n    getBeamCount() {\n        const beamCounts = this.notes.map((note) => note.getGlyphProps().beamCount);\n        const maxBeamCount = beamCounts.reduce((max, beamCount) => (beamCount > max ? beamCount : max));\n        return maxBeamCount;\n    }\n    breakSecondaryAt(indexes) {\n        this.breakOnIndexes = indexes;\n        return this;\n    }\n    setPartialBeamSideAt(noteIndex, side) {\n        this.forcedPartialDirections[noteIndex] = side;\n        return this;\n    }\n    unsetPartialBeamSideAt(noteIndex) {\n        delete this.forcedPartialDirections[noteIndex];\n        return this;\n    }\n    getSlopeY(x, firstX, firstY, slope) {\n        return firstY + (x - firstX) * slope;\n    }\n    calculateSlope() {\n        const { notes, renderOptions: { maxSlope, minSlope, slopeIterations, slopeCost }, } = this;\n        const stemDirection = this._stemDirection;\n        const firstNote = notes[0];\n        const initialSlope = getStemSlope(firstNote, notes[notes.length - 1]);\n        const increment = (maxSlope - minSlope) / slopeIterations;\n        let minCost = Number.MAX_VALUE;\n        let bestSlope = 0;\n        let yShift = 0;\n        for (let slope = minSlope; slope <= maxSlope; slope += increment) {\n            let totalStemExtension = 0;\n            let yShiftTemp = 0;\n            for (let i = 1; i < notes.length; ++i) {\n                const note = notes[i];\n                if (note.hasStem() || note.isRest()) {\n                    const adjustedStemTipY = this.getSlopeY(note.getStemX(), firstNote.getStemX(), firstNote.getStemExtents().topY, slope) + yShiftTemp;\n                    const stemTipY = note.getStemExtents().topY;\n                    if (stemTipY * stemDirection < adjustedStemTipY * stemDirection) {\n                        const diff = Math.abs(stemTipY - adjustedStemTipY);\n                        yShiftTemp += diff * -stemDirection;\n                        totalStemExtension += diff * i;\n                    }\n                    else {\n                        totalStemExtension += (stemTipY - adjustedStemTipY) * stemDirection;\n                    }\n                }\n            }\n            const idealSlope = initialSlope / 2;\n            const distanceFromIdeal = Math.abs(idealSlope - slope);\n            const cost = slopeCost * distanceFromIdeal + Math.abs(totalStemExtension);\n            if (cost < minCost) {\n                minCost = cost;\n                bestSlope = slope;\n                yShift = yShiftTemp;\n            }\n        }\n        this.slope = bestSlope;\n        this.yShift = yShift;\n    }\n    calculateFlatSlope() {\n        const { notes, renderOptions: { beamWidth, minFlatBeamOffset, flatBeamOffset }, } = this;\n        const stemDirection = this._stemDirection;\n        let total = 0;\n        let extremeY = 0;\n        let extremeBeamCount = 0;\n        let currentExtreme = 0;\n        for (let i = 0; i < notes.length; i++) {\n            const note = notes[i];\n            const stemTipY = note.getStemExtents().topY;\n            total += stemTipY;\n            if (stemDirection === Stem.DOWN && currentExtreme < stemTipY) {\n                currentExtreme = stemTipY;\n                extremeY = Math.max(...note.getYs());\n                extremeBeamCount = note.getBeamCount();\n            }\n            else if (stemDirection === Stem.UP && (currentExtreme === 0 || currentExtreme > stemTipY)) {\n                currentExtreme = stemTipY;\n                extremeY = Math.min(...note.getYs());\n                extremeBeamCount = note.getBeamCount();\n            }\n        }\n        let offset = total / notes.length;\n        const extremeTest = minFlatBeamOffset + extremeBeamCount * beamWidth * 1.5;\n        const newOffset = extremeY + extremeTest * -stemDirection;\n        if (stemDirection === Stem.DOWN && offset < newOffset) {\n            offset = extremeY + extremeTest;\n        }\n        else if (stemDirection === Stem.UP && offset > newOffset) {\n            offset = extremeY - extremeTest;\n        }\n        if (!flatBeamOffset) {\n            this.renderOptions.flatBeamOffset = offset;\n        }\n        else if (stemDirection === Stem.DOWN && offset > flatBeamOffset) {\n            this.renderOptions.flatBeamOffset = offset;\n        }\n        else if (stemDirection === Stem.UP && offset < flatBeamOffset) {\n            this.renderOptions.flatBeamOffset = offset;\n        }\n        this.slope = 0;\n        this.yShift = 0;\n    }\n    getBeamYToDraw() {\n        const firstNote = this.notes[0];\n        const firstStemTipY = firstNote.getStemExtents().topY;\n        let beamY = firstStemTipY;\n        if (this.renderOptions.flatBeams && this.renderOptions.flatBeamOffset) {\n            beamY = this.renderOptions.flatBeamOffset;\n        }\n        return beamY;\n    }\n    applyStemExtensions() {\n        const { notes, slope, renderOptions: { showStemlets, stemletExtension, beamWidth }, } = this;\n        const yShift = this.yShift;\n        const beamCount = this._beamCount;\n        const firstNote = notes[0];\n        const firstStemTipY = this.getBeamYToDraw();\n        const firstStemX = firstNote.getStemX();\n        for (let i = 0; i < notes.length; ++i) {\n            const note = notes[i];\n            const stem = note.getStem();\n            if (stem) {\n                const stemX = note.getStemX();\n                const { topY: stemTipY } = note.getStemExtents();\n                const beamedStemTipY = this.getSlopeY(stemX, firstStemX, firstStemTipY, slope) + yShift;\n                const preBeamExtension = stem.getExtension();\n                const beamExtension = note.getStemDirection() === Stem.UP ? stemTipY - beamedStemTipY : beamedStemTipY - stemTipY;\n                let crossStemExtension = 0;\n                if (note.getStemDirection() !== this._stemDirection) {\n                    const beamCount = note.getGlyphProps().beamCount;\n                    crossStemExtension = (1 + (beamCount - 1) * 1.5) * this.renderOptions.beamWidth;\n                }\n                stem.setExtension(preBeamExtension + beamExtension + crossStemExtension);\n                stem.adjustHeightForBeam();\n                if (note.isRest() && showStemlets) {\n                    const totalBeamWidth = (beamCount - 1) * beamWidth * 1.5 + beamWidth;\n                    stem.setVisibility(true).setStemlet(true, totalBeamWidth + stemletExtension);\n                }\n            }\n        }\n    }\n    lookupBeamDirection(duration, prevTick, tick, nextTick, noteIndex) {\n        if (duration === '4') {\n            return BEAM_LEFT;\n        }\n        const forcedBeamDirection = this.forcedPartialDirections[noteIndex];\n        if (forcedBeamDirection)\n            return forcedBeamDirection;\n        const lookupDuration = `${Tables.durationToNumber(duration) / 2}`;\n        const prevNoteGetsBeam = prevTick < Tables.durationToTicks(lookupDuration);\n        const nextNoteGetsBeam = nextTick < Tables.durationToTicks(lookupDuration);\n        const noteGetsBeam = tick < Tables.durationToTicks(lookupDuration);\n        if (prevNoteGetsBeam && nextNoteGetsBeam && noteGetsBeam) {\n            return BEAM_BOTH;\n        }\n        else if (prevNoteGetsBeam && !nextNoteGetsBeam && noteGetsBeam) {\n            return BEAM_LEFT;\n        }\n        else if (!prevNoteGetsBeam && nextNoteGetsBeam && noteGetsBeam) {\n            return BEAM_RIGHT;\n        }\n        return this.lookupBeamDirection(lookupDuration, prevTick, tick, nextTick, noteIndex);\n    }\n    getBeamLines(duration) {\n        const tickOfDuration = Tables.durationToTicks(duration);\n        let beamStarted = false;\n        const beamLines = [];\n        let currentBeam = undefined;\n        const partialBeamLength = this.renderOptions.partialBeamLength;\n        let previousShouldBreak = false;\n        let tickTally = 0;\n        for (let i = 0; i < this.notes.length; ++i) {\n            const note = this.notes[i];\n            const ticks = note.getTicks().value();\n            tickTally += ticks;\n            let shouldBreak = false;\n            if (parseInt(duration, 10) >= 8) {\n                shouldBreak = this.breakOnIndexes.indexOf(i) !== -1;\n                if (this.renderOptions.secondaryBreakTicks && tickTally >= this.renderOptions.secondaryBreakTicks) {\n                    tickTally = 0;\n                    shouldBreak = true;\n                }\n            }\n            const noteGetsBeam = note.getIntrinsicTicks() < tickOfDuration;\n            const stemX = note.getStemX() - Stem.WIDTH / 2;\n            const prevNote = this.notes[i - 1];\n            const nextNote = this.notes[i + 1];\n            const nextNoteGetsBeam = nextNote && nextNote.getIntrinsicTicks() < tickOfDuration;\n            const prevNoteGetsBeam = prevNote && prevNote.getIntrinsicTicks() < tickOfDuration;\n            const beamAlone = prevNote && nextNote && noteGetsBeam && !prevNoteGetsBeam && !nextNoteGetsBeam;\n            if (noteGetsBeam) {\n                if (beamStarted) {\n                    currentBeam = beamLines[beamLines.length - 1];\n                    currentBeam.end = stemX;\n                    if (shouldBreak) {\n                        beamStarted = false;\n                        if (nextNote && !nextNoteGetsBeam && currentBeam.end === undefined) {\n                            currentBeam.end = currentBeam.start - partialBeamLength;\n                        }\n                    }\n                }\n                else {\n                    currentBeam = { start: stemX, end: undefined };\n                    beamStarted = true;\n                    if (beamAlone) {\n                        const prevTick = prevNote.getIntrinsicTicks();\n                        const nextTick = nextNote.getIntrinsicTicks();\n                        const tick = note.getIntrinsicTicks();\n                        const beamDirection = this.lookupBeamDirection(duration, prevTick, tick, nextTick, i);\n                        if ([BEAM_LEFT, BEAM_BOTH].includes(beamDirection)) {\n                            currentBeam.end = currentBeam.start - partialBeamLength;\n                        }\n                        else {\n                            currentBeam.end = currentBeam.start + partialBeamLength;\n                        }\n                    }\n                    else if (!nextNoteGetsBeam) {\n                        if ((previousShouldBreak || i === 0) && nextNote) {\n                            currentBeam.end = currentBeam.start + partialBeamLength;\n                        }\n                        else {\n                            currentBeam.end = currentBeam.start - partialBeamLength;\n                        }\n                    }\n                    else if (shouldBreak) {\n                        currentBeam.end = currentBeam.start - partialBeamLength;\n                        beamStarted = false;\n                    }\n                    beamLines.push(currentBeam);\n                }\n            }\n            else {\n                beamStarted = false;\n            }\n            previousShouldBreak = shouldBreak;\n        }\n        const lastBeam = beamLines[beamLines.length - 1];\n        if (lastBeam && lastBeam.end === undefined) {\n            lastBeam.end = lastBeam.start - partialBeamLength;\n        }\n        return beamLines;\n    }\n    drawStems(ctx) {\n        this.notes.forEach((note) => {\n            const stem = note.getStem();\n            if (stem) {\n                const stemX = note.getStemX();\n                stem.setNoteHeadXBounds(stemX, stemX);\n                stem.setContext(ctx).drawWithStyle();\n            }\n        }, this);\n    }\n    drawBeamLines(ctx) {\n        const validBeamDurations = ['4', '8', '16', '32', '64'];\n        const firstNote = this.notes[0];\n        let beamY = this.getBeamYToDraw();\n        const firstStemX = firstNote.getStemX();\n        const beamThickness = this.renderOptions.beamWidth * this._stemDirection;\n        for (let i = 0; i < validBeamDurations.length; ++i) {\n            const duration = validBeamDurations[i];\n            const beamLines = this.getBeamLines(duration);\n            for (let j = 0; j < beamLines.length; ++j) {\n                const beamLine = beamLines[j];\n                const startBeamX = beamLine.start;\n                const startBeamY = this.getSlopeY(startBeamX, firstStemX, beamY, this.slope);\n                const lastBeamX = beamLine.end;\n                if (lastBeamX) {\n                    const lastBeamY = this.getSlopeY(lastBeamX, firstStemX, beamY, this.slope);\n                    ctx.beginPath();\n                    ctx.moveTo(startBeamX, startBeamY);\n                    ctx.lineTo(startBeamX, startBeamY + beamThickness);\n                    ctx.lineTo(lastBeamX + 1, lastBeamY + beamThickness);\n                    ctx.lineTo(lastBeamX + 1, lastBeamY);\n                    ctx.closePath();\n                    ctx.fill();\n                }\n                else {\n                    throw new RuntimeError('NoLastBeamX', 'lastBeamX undefined.');\n                }\n            }\n            beamY += beamThickness * 1.5;\n        }\n    }\n    preFormat() {\n        return this;\n    }\n    postFormat() {\n        if (this.postFormatted)\n            return;\n        if (isTabNote(this.notes[0]) || this.renderOptions.flatBeams) {\n            this.calculateFlatSlope();\n        }\n        else {\n            this.calculateSlope();\n        }\n        this.applyStemExtensions();\n        this.postFormatted = true;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        if (this.unbeamable)\n            return;\n        if (!this.postFormatted) {\n            this.postFormat();\n        }\n        ctx.openGroup('beam', this.getAttribute('id'));\n        this.drawStems(ctx);\n        this.drawBeamLines(ctx);\n        ctx.closeGroup();\n    }\n}\n","import { Element } from './element.js';\nimport { Metrics } from './metrics.js';\nimport { Modifier } from './modifier.js';\nimport { isTabNote } from './typeguard.js';\nimport { RuntimeError } from './util.js';\nexport class Bend extends Modifier {\n    static get CATEGORY() {\n        return \"Bend\";\n    }\n    static get UP() {\n        return 0;\n    }\n    static get DOWN() {\n        return 1;\n    }\n    static format(bends, state) {\n        if (!bends || bends.length === 0)\n            return false;\n        let lastWidth = 0;\n        for (let i = 0; i < bends.length; ++i) {\n            const bend = bends[i];\n            const note = bend.checkAttachedNote();\n            if (isTabNote(note)) {\n                const stringPos = note.leastString() - 1;\n                if (state.topTextLine < stringPos) {\n                    state.topTextLine = stringPos;\n                }\n            }\n            bend.setXShift(lastWidth);\n            lastWidth = bend.getWidth();\n            bend.setTextLine(state.topTextLine);\n        }\n        state.rightShift += lastWidth;\n        state.topTextLine += 1;\n        return true;\n    }\n    setStyleLine(style) {\n        this.styleLine = style;\n        return this;\n    }\n    getStyleLine() {\n        return this.styleLine;\n    }\n    constructor(phrase) {\n        super();\n        this.styleLine = Metrics.getStyle('Bend.line');\n        this.xShift = 0;\n        this.tap = '';\n        this.renderOptions = {\n            bendWidth: 8,\n            releaseWidth: 8,\n        };\n        this.phrase = phrase;\n        this.updateWidth();\n    }\n    setXShift(value) {\n        this.xShift = value;\n        this.updateWidth();\n        return this;\n    }\n    setTap(value) {\n        this.tap = value;\n        return this;\n    }\n    getTextHeight() {\n        const element = new Element(\"Bend\");\n        element.setText(this.phrase[0].text);\n        return element.getHeight();\n    }\n    updateWidth() {\n        const measureText = (text) => {\n            const element = new Element(\"Bend\");\n            element.setText(text);\n            return element.getWidth();\n        };\n        let totalWidth = 0;\n        for (let i = 0; i < this.phrase.length; ++i) {\n            const bend = this.phrase[i];\n            if (bend.width !== undefined) {\n                totalWidth += bend.width;\n            }\n            else {\n                const additionalWidth = bend.type === Bend.UP ? this.renderOptions.bendWidth : this.renderOptions.releaseWidth;\n                bend.width = Math.max(additionalWidth, measureText(bend.text)) + 3;\n                bend.drawWidth = bend.width / 2;\n                totalWidth += bend.width;\n            }\n        }\n        this.setWidth(totalWidth + this.xShift);\n        return this;\n    }\n    draw() {\n        var _a;\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(Modifier.Position.RIGHT, this.index);\n        start.x += 3;\n        start.y += 0.5;\n        const xShift = this.xShift;\n        const stave = note.checkStave();\n        const spacing = stave.getSpacingBetweenLines();\n        const lowestY = note.getYs().reduce((a, b) => (a < b ? a : b));\n        const bendHeight = start.y - ((this.textLine + 1) * spacing + start.y - lowestY) + 3;\n        const annotationY = start.y - ((this.textLine + 1) * spacing + start.y - lowestY) - 1;\n        const renderBend = (x, y, width, height) => {\n            const cpX = x + width;\n            const cpY = y;\n            this.applyStyle(ctx, this.styleLine);\n            ctx.beginPath();\n            ctx.moveTo(x, y);\n            ctx.quadraticCurveTo(cpX, cpY, x + width, height);\n            ctx.stroke();\n        };\n        const renderRelease = (x, y, width, height) => {\n            this.applyStyle(ctx, this.styleLine);\n            ctx.beginPath();\n            ctx.moveTo(x, height);\n            ctx.quadraticCurveTo(x + width, height, x + width, y);\n            ctx.stroke();\n        };\n        const renderArrowHead = (x, y, direction) => {\n            const width = 4;\n            const yBase = y + width * direction;\n            ctx.beginPath();\n            ctx.moveTo(x, y);\n            ctx.lineTo(x - width, yBase);\n            ctx.lineTo(x + width, yBase);\n            ctx.closePath();\n            ctx.fill();\n        };\n        const renderText = (x, text) => {\n            ctx.setFont(this.fontInfo);\n            const renderX = x - ctx.measureText(text).width / 2;\n            ctx.fillText(text, renderX, annotationY);\n        };\n        let lastBend = undefined;\n        let lastBendDrawWidth = 0;\n        let lastDrawnWidth = 0;\n        if ((_a = this.tap) === null || _a === void 0 ? void 0 : _a.length) {\n            const tapStart = note.getModifierStartXY(Modifier.Position.CENTER, this.index);\n            renderText(tapStart.x, this.tap);\n        }\n        for (let i = 0; i < this.phrase.length; ++i) {\n            const bend = this.phrase[i];\n            if (!bend.drawWidth)\n                bend.drawWidth = 0;\n            if (i === 0)\n                bend.drawWidth += xShift;\n            lastDrawnWidth = bend.drawWidth + lastBendDrawWidth - (i === 1 ? xShift : 0);\n            if (bend.type === Bend.UP) {\n                if (lastBend && lastBend.type === Bend.UP) {\n                    renderArrowHead(start.x, bendHeight, +1);\n                }\n                renderBend(start.x, start.y, lastDrawnWidth, bendHeight);\n            }\n            if (bend.type === Bend.DOWN) {\n                if (lastBend && lastBend.type === Bend.UP) {\n                    renderRelease(start.x, start.y, lastDrawnWidth, bendHeight);\n                }\n                if (lastBend && lastBend.type === Bend.DOWN) {\n                    renderArrowHead(start.x, start.y, -1);\n                    renderRelease(start.x, start.y, lastDrawnWidth, bendHeight);\n                }\n                if (!lastBend) {\n                    lastDrawnWidth = bend.drawWidth;\n                    renderRelease(start.x, start.y, lastDrawnWidth, bendHeight);\n                }\n            }\n            renderText(start.x + lastDrawnWidth, bend.text);\n            lastBend = bend;\n            lastBendDrawWidth = bend.drawWidth;\n            lastBend.x = start.x;\n            start.x += lastDrawnWidth;\n        }\n        if (!lastBend || lastBend.x === undefined) {\n            throw new RuntimeError('NoLastBendForBend', 'Internal error.');\n        }\n        if (lastBend.type === Bend.UP) {\n            renderArrowHead(lastBend.x + lastDrawnWidth, bendHeight, +1);\n        }\n        else if (lastBend.type === Bend.DOWN) {\n            renderArrowHead(lastBend.x + lastDrawnWidth, start.y, -1);\n        }\n    }\n}\n","import { globalObject } from './util.js';\nexport function isHTMLCanvas(element) {\n    if (!element)\n        return false;\n    const global = globalObject();\n    return ((typeof global.HTMLCanvasElement === 'function' && element instanceof global.HTMLCanvasElement) ||\n        (typeof element.getContext === 'function' && typeof element.toDataURL === 'function'));\n}\nexport function isHTMLDiv(element) {\n    if (!element)\n        return false;\n    const global = globalObject();\n    return ((typeof global.HTMLDivElement === 'function' && element instanceof global.HTMLDivElement) ||\n        (typeof element.appendChild === 'function' && typeof element.style === 'object'));\n}\n","import { Font } from './font.js';\nimport { RenderContext } from './rendercontext.js';\nimport { globalObject, warn } from './util.js';\nimport { isHTMLCanvas } from './web.js';\nexport class CanvasContext extends RenderContext {\n    static get WIDTH() {\n        return 600;\n    }\n    static get HEIGHT() {\n        return 400;\n    }\n    static get CANVAS_BROWSER_SIZE_LIMIT() {\n        return 32767;\n    }\n    static sanitizeCanvasDims(width, height) {\n        const limit = this.CANVAS_BROWSER_SIZE_LIMIT;\n        if (Math.max(width, height) > limit) {\n            warn('Canvas dimensions exceed browser limit. Cropping to ' + limit);\n            if (width > limit) {\n                width = limit;\n            }\n            if (height > limit) {\n                height = limit;\n            }\n        }\n        return [width, height];\n    }\n    constructor(context) {\n        super();\n        this.textHeight = 0;\n        this.context2D = context;\n        this.curTransfrom = context.getTransform();\n        if (!context.canvas) {\n            this.canvas = {\n                width: CanvasContext.WIDTH,\n                height: CanvasContext.HEIGHT,\n            };\n        }\n        else {\n            this.canvas = context.canvas;\n        }\n    }\n    clear() {\n        this.context2D.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n    openGroup(cls, id) {\n    }\n    closeGroup() {\n    }\n    openRotation(angleDegrees, x, y) {\n        this.curTransfrom = this.context2D.getTransform();\n        this.context2D.translate(x, y);\n        this.context2D.rotate((angleDegrees * Math.PI) / 180);\n        this.context2D.translate(-x, -y);\n    }\n    closeRotation() {\n        this.context2D.setTransform(this.curTransfrom);\n    }\n    add(child) {\n    }\n    setFillStyle(style) {\n        this.context2D.fillStyle = style;\n        return this;\n    }\n    setBackgroundFillStyle(style) {\n        return this;\n    }\n    setStrokeStyle(style) {\n        this.context2D.strokeStyle = style;\n        return this;\n    }\n    setShadowColor(color) {\n        this.context2D.shadowColor = color;\n        return this;\n    }\n    setShadowBlur(blur) {\n        const t = this.context2D.getTransform();\n        const scale = Math.sqrt(t.a * t.a + t.b * t.b + t.c * t.c + t.d * t.d);\n        this.context2D.shadowBlur = scale * blur;\n        return this;\n    }\n    setLineWidth(width) {\n        this.context2D.lineWidth = width;\n        return this;\n    }\n    setLineCap(capType) {\n        this.context2D.lineCap = capType;\n        return this;\n    }\n    setLineDash(dash) {\n        this.context2D.setLineDash(dash);\n        return this;\n    }\n    scale(x, y) {\n        this.context2D.scale(x, y);\n        return this;\n    }\n    resize(width, height, devicePixelRatio) {\n        var _a;\n        const canvas = this.context2D.canvas;\n        const dpr = (_a = devicePixelRatio !== null && devicePixelRatio !== void 0 ? devicePixelRatio : globalObject().devicePixelRatio) !== null && _a !== void 0 ? _a : 1;\n        [width, height] = CanvasContext.sanitizeCanvasDims(width * dpr, height * dpr);\n        width = (width / dpr) | 0;\n        height = (height / dpr) | 0;\n        canvas.width = width * dpr;\n        canvas.height = height * dpr;\n        if (isHTMLCanvas(canvas)) {\n            canvas.style.width = width + 'px';\n            canvas.style.height = height + 'px';\n        }\n        return this.scale(dpr, dpr);\n    }\n    rect(x, y, width, height) {\n        this.context2D.rect(x, y, width, height);\n        return this;\n    }\n    fillRect(x, y, width, height) {\n        this.context2D.fillRect(x, y, width, height);\n        return this;\n    }\n    pointerRect(x, y, width, height) {\n        return this;\n    }\n    clearRect(x, y, width, height) {\n        this.context2D.clearRect(x, y, width, height);\n        return this;\n    }\n    beginPath() {\n        this.context2D.beginPath();\n        return this;\n    }\n    moveTo(x, y) {\n        this.context2D.moveTo(x, y);\n        return this;\n    }\n    lineTo(x, y) {\n        this.context2D.lineTo(x, y);\n        return this;\n    }\n    bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y) {\n        this.context2D.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n        return this;\n    }\n    quadraticCurveTo(cpx, cpy, x, y) {\n        this.context2D.quadraticCurveTo(cpx, cpy, x, y);\n        return this;\n    }\n    arc(x, y, radius, startAngle, endAngle, counterclockwise) {\n        this.context2D.arc(x, y, radius, startAngle, endAngle, counterclockwise);\n        return this;\n    }\n    fill() {\n        this.context2D.fill();\n        return this;\n    }\n    stroke() {\n        this.context2D.stroke();\n        return this;\n    }\n    closePath() {\n        this.context2D.closePath();\n        return this;\n    }\n    measureText(text) {\n        const metrics = this.context2D.measureText(text);\n        let y = 0;\n        let height = 0;\n        if (metrics.fontBoundingBoxAscent) {\n            y = -metrics.fontBoundingBoxAscent;\n            height = metrics.fontBoundingBoxDescent + metrics.fontBoundingBoxAscent;\n        }\n        else {\n            y = -metrics.actualBoundingBoxAscent;\n            height = metrics.actualBoundingBoxDescent + metrics.actualBoundingBoxAscent;\n        }\n        return {\n            x: 0,\n            y: y,\n            width: metrics.width,\n            height: height,\n        };\n    }\n    fillText(text, x, y) {\n        this.context2D.fillText(text, x, y);\n        return this;\n    }\n    save() {\n        this.context2D.save();\n        return this;\n    }\n    restore() {\n        this.context2D.restore();\n        return this;\n    }\n    set fillStyle(style) {\n        this.context2D.fillStyle = style;\n    }\n    get fillStyle() {\n        return this.context2D.fillStyle;\n    }\n    set strokeStyle(style) {\n        this.context2D.strokeStyle = style;\n    }\n    get strokeStyle() {\n        return this.context2D.strokeStyle;\n    }\n    setFont(f, size, weight, style) {\n        const fontInfo = Font.validate(f, size, weight, style);\n        this.context2D.font = Font.toCSSString(fontInfo);\n        this.textHeight = Font.convertSizeToPixelValue(fontInfo.size);\n        return this;\n    }\n    getFont() {\n        return this.context2D.font;\n    }\n}\n","import { Element } from './element.js';\nimport { Font } from './font.js';\nimport { Glyphs } from './glyphs.js';\nimport { Metrics } from './metrics.js';\nimport { Modifier } from './modifier.js';\nimport { Tables } from './tables.js';\nimport { isStemmableNote } from './typeguard.js';\nimport { log } from './util.js';\nfunction L(...args) {\n    if (ChordSymbol.DEBUG)\n        log('VexFlow.ChordSymbol', args);\n}\nexport class ChordSymbolBlock extends Element {\n    constructor(text, symbolModifier, xShift, yShift, vAlign) {\n        super();\n        this.text = text;\n        this.symbolModifier = symbolModifier;\n        this.xShift = xShift;\n        this.yShift = yShift;\n        this.vAlign = vAlign;\n    }\n    isSuperscript() {\n        return this.symbolModifier === SymbolModifiers.SUPERSCRIPT;\n    }\n    isSubscript() {\n        return this.symbolModifier === SymbolModifiers.SUBSCRIPT;\n    }\n}\nexport var ChordSymbolHorizontalJustify;\n(function (ChordSymbolHorizontalJustify) {\n    ChordSymbolHorizontalJustify[ChordSymbolHorizontalJustify[\"LEFT\"] = 1] = \"LEFT\";\n    ChordSymbolHorizontalJustify[ChordSymbolHorizontalJustify[\"CENTER\"] = 2] = \"CENTER\";\n    ChordSymbolHorizontalJustify[ChordSymbolHorizontalJustify[\"RIGHT\"] = 3] = \"RIGHT\";\n    ChordSymbolHorizontalJustify[ChordSymbolHorizontalJustify[\"CENTER_STEM\"] = 4] = \"CENTER_STEM\";\n})(ChordSymbolHorizontalJustify || (ChordSymbolHorizontalJustify = {}));\nexport var ChordSymbolVerticalJustify;\n(function (ChordSymbolVerticalJustify) {\n    ChordSymbolVerticalJustify[ChordSymbolVerticalJustify[\"TOP\"] = 1] = \"TOP\";\n    ChordSymbolVerticalJustify[ChordSymbolVerticalJustify[\"BOTTOM\"] = 2] = \"BOTTOM\";\n})(ChordSymbolVerticalJustify || (ChordSymbolVerticalJustify = {}));\nexport var SymbolModifiers;\n(function (SymbolModifiers) {\n    SymbolModifiers[SymbolModifiers[\"NONE\"] = 1] = \"NONE\";\n    SymbolModifiers[SymbolModifiers[\"SUBSCRIPT\"] = 2] = \"SUBSCRIPT\";\n    SymbolModifiers[SymbolModifiers[\"SUPERSCRIPT\"] = 3] = \"SUPERSCRIPT\";\n})(SymbolModifiers || (SymbolModifiers = {}));\nexport class ChordSymbol extends Modifier {\n    static get CATEGORY() {\n        return \"ChordSymbol\";\n    }\n    static get superSubRatio() {\n        return Metrics.get('ChordSymbol.superSubRatio');\n    }\n    static get spacingBetweenBlocks() {\n        return Metrics.get('ChordSymbol.spacing');\n    }\n    static get superscriptOffset() {\n        return Metrics.get('ChordSymbol.superscriptOffset');\n    }\n    static get subscriptOffset() {\n        return Metrics.get('ChordSymbol.subscriptOffset');\n    }\n    static get minPadding() {\n        return Metrics.get('NoteHead.minPadding');\n    }\n    static format(symbols, state) {\n        if (!symbols || symbols.length === 0)\n            return false;\n        let width = 0;\n        let leftWidth = 0;\n        let rightWidth = 0;\n        let maxLeftGlyphWidth = 0;\n        let maxRightGlyphWidth = 0;\n        for (const symbol of symbols) {\n            const note = symbol.checkAttachedNote();\n            let lineSpaces = 1;\n            for (let j = 0; j < symbol.symbolBlocks.length; ++j) {\n                const block = symbol.symbolBlocks[j];\n                const sup = block.isSuperscript();\n                const sub = block.isSubscript();\n                block.setXShift(width);\n                if (sup || sub) {\n                    lineSpaces = 2;\n                }\n                if (sub && j > 0) {\n                    const prev = symbol.symbolBlocks[j - 1];\n                    if (prev.isSuperscript()) {\n                        block.setXShift(width - prev.getWidth() - ChordSymbol.minPadding);\n                        block.vAlign = true;\n                        width +=\n                            -prev.getWidth() -\n                                ChordSymbol.minPadding +\n                                (prev.getWidth() > block.getWidth() ? prev.getWidth() - block.getWidth() : 0);\n                    }\n                }\n                width += block.getWidth() + ChordSymbol.minPadding;\n            }\n            if (symbol.getVertical() === ChordSymbolVerticalJustify.TOP) {\n                symbol.setTextLine(state.topTextLine);\n                state.topTextLine += lineSpaces;\n            }\n            else {\n                symbol.setTextLine(state.textLine + 1);\n                state.textLine += lineSpaces + 1;\n            }\n            if (symbol.getReportWidth()) {\n                if (isStemmableNote(note)) {\n                    const glyphWidth = note.getGlyphWidth();\n                    if (symbol.getHorizontal() === ChordSymbolHorizontalJustify.RIGHT) {\n                        maxLeftGlyphWidth = Math.max(glyphWidth, maxLeftGlyphWidth);\n                        leftWidth = Math.max(leftWidth, width) + ChordSymbol.minPadding;\n                    }\n                    else if (symbol.getHorizontal() === ChordSymbolHorizontalJustify.LEFT) {\n                        maxRightGlyphWidth = Math.max(glyphWidth, maxRightGlyphWidth);\n                        rightWidth = Math.max(rightWidth, width);\n                    }\n                    else {\n                        leftWidth = Math.max(leftWidth, width / 2) + ChordSymbol.minPadding;\n                        rightWidth = Math.max(rightWidth, width / 2);\n                        maxLeftGlyphWidth = Math.max(glyphWidth / 2, maxLeftGlyphWidth);\n                        maxRightGlyphWidth = Math.max(glyphWidth / 2, maxRightGlyphWidth);\n                    }\n                }\n                symbol.width = width;\n            }\n            width = 0;\n        }\n        const rightOverlap = Math.min(Math.max(rightWidth - maxRightGlyphWidth, 0), Math.max(rightWidth - state.rightShift, 0));\n        const leftOverlap = Math.min(Math.max(leftWidth - maxLeftGlyphWidth, 0), Math.max(leftWidth - state.leftShift, 0));\n        state.leftShift += leftOverlap;\n        state.rightShift += rightOverlap;\n        return true;\n    }\n    constructor() {\n        super();\n        this.symbolBlocks = [];\n        this.horizontal = ChordSymbolHorizontalJustify.LEFT;\n        this.vertical = ChordSymbolVerticalJustify.TOP;\n        this.reportWidth = true;\n    }\n    get superscriptOffset() {\n        return ChordSymbol.superscriptOffset * Font.convertSizeToPixelValue(this.fontInfo.size);\n    }\n    get subscriptOffset() {\n        return ChordSymbol.subscriptOffset * Font.convertSizeToPixelValue(this.fontInfo.size);\n    }\n    setReportWidth(value) {\n        this.reportWidth = value;\n        return this;\n    }\n    getReportWidth() {\n        return this.reportWidth;\n    }\n    getSymbolBlock(params = {}) {\n        var _a, _b;\n        const symbolBlock = new ChordSymbolBlock((_a = params.text) !== null && _a !== void 0 ? _a : '', (_b = params.symbolModifier) !== null && _b !== void 0 ? _b : SymbolModifiers.NONE, 0, 0, false);\n        if (symbolBlock.isSubscript()) {\n            symbolBlock.setYShift(this.subscriptOffset);\n        }\n        if (symbolBlock.isSuperscript()) {\n            symbolBlock.setYShift(this.superscriptOffset);\n        }\n        if (symbolBlock.isSubscript() || symbolBlock.isSuperscript()) {\n            const { family, size, weight, style } = this.fontInfo;\n            const smallerFontSize = Font.scaleSize(size, ChordSymbol.superSubRatio);\n            symbolBlock.setFont(family, smallerFontSize, weight, style);\n        }\n        else {\n            symbolBlock.setFont(this.fontInfo);\n        }\n        return symbolBlock;\n    }\n    addSymbolBlock(parameters) {\n        this.symbolBlocks.push(this.getSymbolBlock(parameters));\n        return this;\n    }\n    addText(text, parameters = {}) {\n        return this.addSymbolBlock(Object.assign(Object.assign({}, parameters), { text }));\n    }\n    addTextSuperscript(text) {\n        const symbolModifier = SymbolModifiers.SUPERSCRIPT;\n        return this.addSymbolBlock({ text, symbolModifier });\n    }\n    addTextSubscript(text) {\n        const symbolModifier = SymbolModifiers.SUBSCRIPT;\n        return this.addSymbolBlock({ text, symbolModifier });\n    }\n    addGlyphSuperscript(glyph) {\n        return this.addTextSuperscript(ChordSymbol.glyphs[glyph]);\n    }\n    addGlyph(glyph, params = {}) {\n        return this.addText(ChordSymbol.glyphs[glyph], params);\n    }\n    addGlyphOrText(text, params = {}) {\n        let str = '';\n        for (let i = 0; i < text.length; ++i) {\n            const char = text[i];\n            const glyph = ChordSymbol.glyphs[char];\n            if (glyph) {\n                str += glyph;\n            }\n            else {\n                str += char;\n            }\n        }\n        if (str.length > 0) {\n            this.addText(str, params);\n        }\n        return this;\n    }\n    addLine(params = {}) {\n        return this.addText('\\ue874\\ue874', params);\n    }\n    setVertical(vj) {\n        this.vertical = typeof vj === 'string' ? ChordSymbol.VerticalJustifyString[vj] : vj;\n        return this;\n    }\n    getVertical() {\n        return this.vertical;\n    }\n    setHorizontal(hj) {\n        this.horizontal = typeof hj === 'string' ? ChordSymbol.HorizontalJustifyString[hj] : hj;\n        return this;\n    }\n    getHorizontal() {\n        return this.horizontal;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        ctx.openGroup('chordsymbol', this.getAttribute('id'));\n        const start = note.getModifierStartXY(Modifier.Position.ABOVE, this.index);\n        ctx.setFont(this.fontInfo);\n        let y;\n        const hasStem = note.hasStem();\n        const stave = note.checkStave();\n        if (this.vertical === ChordSymbolVerticalJustify.BOTTOM) {\n            y = stave.getYForBottomText(this.textLine + Tables.TEXT_HEIGHT_OFFSET_HACK);\n            if (hasStem) {\n                const stemExt = note.checkStem().getExtents();\n                const spacing = stave.getSpacingBetweenLines();\n                const stemBase = note.getStemDirection() === 1 ? stemExt.baseY : stemExt.topY;\n                y = Math.max(y, stemBase + spacing * (this.textLine + 2));\n            }\n        }\n        else {\n            const topY = Math.min(...note.getYs());\n            y = Math.min(stave.getYForTopText(this.textLine), topY - 10);\n            if (hasStem) {\n                const stemExt = note.checkStem().getExtents();\n                const spacing = stave.getSpacingBetweenLines();\n                y = Math.min(y, stemExt.topY - 5 - spacing * this.textLine);\n            }\n        }\n        let x = start.x;\n        if (this.horizontal === ChordSymbolHorizontalJustify.LEFT) {\n            x = start.x;\n        }\n        else if (this.horizontal === ChordSymbolHorizontalJustify.RIGHT) {\n            x = start.x + this.getWidth();\n        }\n        else if (this.horizontal === ChordSymbolHorizontalJustify.CENTER) {\n            x = start.x - this.getWidth() / 2;\n        }\n        else {\n            x = note.getStemX() - this.getWidth() / 2;\n        }\n        L('Rendering ChordSymbol: ', x, y);\n        this.symbolBlocks.forEach((symbol) => {\n            L('Rendering Text: ', symbol.getText(), x + symbol.getXShift(), y + symbol.getYShift());\n            symbol.setX(x);\n            symbol.setY(y);\n            symbol.renderText(ctx, 0, 0);\n        });\n        ctx.closeGroup();\n    }\n    getBoundingBox() {\n        const boundingBox = this.symbolBlocks[0].getBoundingBox();\n        for (let i = 1; i < this.symbolBlocks.length; i++) {\n            boundingBox.mergeWith(this.symbolBlocks[i].getBoundingBox());\n        }\n        return boundingBox;\n    }\n}\nChordSymbol.DEBUG = false;\nChordSymbol.HorizontalJustify = ChordSymbolHorizontalJustify;\nChordSymbol.HorizontalJustifyString = {\n    left: ChordSymbolHorizontalJustify.LEFT,\n    right: ChordSymbolHorizontalJustify.RIGHT,\n    center: ChordSymbolHorizontalJustify.CENTER,\n    centerStem: ChordSymbolHorizontalJustify.CENTER_STEM,\n};\nChordSymbol.VerticalJustify = ChordSymbolVerticalJustify;\nChordSymbol.VerticalJustifyString = {\n    top: ChordSymbolVerticalJustify.TOP,\n    above: ChordSymbolVerticalJustify.TOP,\n    below: ChordSymbolVerticalJustify.BOTTOM,\n    bottom: ChordSymbolVerticalJustify.BOTTOM,\n};\nChordSymbol.glyphs = {\n    diminished: Glyphs.csymDiminished,\n    dim: Glyphs.csymDiminished,\n    halfDiminished: Glyphs.csymHalfDiminished,\n    '+': Glyphs.csymAugmented,\n    augmented: Glyphs.csymAugmented,\n    majorSeventh: Glyphs.csymMajorSeventh,\n    minor: Glyphs.csymMinor,\n    '-': Glyphs.csymMinor,\n    '(': '(',\n    leftParen: '(',\n    ')': ')',\n    rightParen: ')',\n    leftBracket: Glyphs.csymBracketLeftTall,\n    rightBracket: Glyphs.csymBracketRightTall,\n    leftParenTall: '(',\n    rightParenTall: ')',\n    '/': Glyphs.csymDiagonalArrangementSlash,\n    over: Glyphs.csymDiagonalArrangementSlash,\n    '#': Glyphs.csymAccidentalSharp,\n    b: Glyphs.csymAccidentalFlat,\n};\nChordSymbol.symbolModifiers = SymbolModifiers;\n","import { Element } from './element.js';\nimport { RuntimeError } from './util.js';\nexport var CurvePosition;\n(function (CurvePosition) {\n    CurvePosition[CurvePosition[\"NEAR_HEAD\"] = 1] = \"NEAR_HEAD\";\n    CurvePosition[CurvePosition[\"NEAR_TOP\"] = 2] = \"NEAR_TOP\";\n})(CurvePosition || (CurvePosition = {}));\nexport class Curve extends Element {\n    static get CATEGORY() {\n        return \"Curve\";\n    }\n    static get Position() {\n        return CurvePosition;\n    }\n    static get PositionString() {\n        return {\n            nearHead: CurvePosition.NEAR_HEAD,\n            nearTop: CurvePosition.NEAR_TOP,\n        };\n    }\n    constructor(from, to, options) {\n        super();\n        this.renderOptions = Object.assign({ thickness: 2, xShift: 0, yShift: 10, position: CurvePosition.NEAR_HEAD, positionEnd: CurvePosition.NEAR_HEAD, invert: false, cps: [\n                { x: 0, y: 10 },\n                { x: 0, y: 10 },\n            ], openingDirection: 'auto' }, options);\n        this.setNotes(from, to);\n    }\n    setNotes(from, to) {\n        if (!from && !to) {\n            throw new RuntimeError('BadArguments', 'Curve needs to have either `from` or `to` set.');\n        }\n        this.from = from;\n        this.to = to;\n        return this;\n    }\n    isPartial() {\n        return !this.from || !this.to;\n    }\n    renderCurve(params) {\n        var _a, _b;\n        const ctx = this.checkContext();\n        const xShift = this.renderOptions.xShift;\n        const yShift = this.renderOptions.yShift * params.direction;\n        const firstX = params.firstX + xShift;\n        const firstY = params.firstY + yShift;\n        const lastX = params.lastX - xShift;\n        const lastY = params.lastY + yShift;\n        const thickness = this.renderOptions.thickness;\n        const cps = this.renderOptions.cps;\n        const { x: cp0x, y: cp0y } = cps[0];\n        const { x: cp1x, y: cp1y } = cps[1];\n        const controlPointSpacing = (lastX - firstX) / (cps.length + 2);\n        ctx.beginPath();\n        ctx.moveTo(firstX, firstY);\n        ctx.bezierCurveTo(firstX + controlPointSpacing + cp0x, firstY + cp0y * params.direction, lastX - controlPointSpacing + cp1x, lastY + cp1y * params.direction, lastX, lastY);\n        if (!((_a = this.style) === null || _a === void 0 ? void 0 : _a.lineDash))\n            ctx.bezierCurveTo(lastX - controlPointSpacing + cp1x, lastY + (cp1y + thickness) * params.direction, firstX + controlPointSpacing + cp0x, firstY + (cp0y + thickness) * params.direction, firstX, firstY);\n        ctx.stroke();\n        ctx.closePath();\n        if (!((_b = this.style) === null || _b === void 0 ? void 0 : _b.lineDash))\n            ctx.fill();\n    }\n    draw() {\n        this.checkContext();\n        this.setRendered();\n        const firstNote = this.from;\n        const lastNote = this.to;\n        let firstX;\n        let lastX;\n        let firstY;\n        let lastY;\n        let stemDirection = 0;\n        let metric = 'baseY';\n        let endMetric = 'baseY';\n        function getPosition(position) {\n            return typeof position === 'string' ? Curve.PositionString[position] : position;\n        }\n        const position = getPosition(this.renderOptions.position);\n        const positionEnd = getPosition(this.renderOptions.positionEnd);\n        if (position === CurvePosition.NEAR_TOP) {\n            metric = 'topY';\n            endMetric = 'topY';\n        }\n        if (positionEnd === CurvePosition.NEAR_HEAD) {\n            endMetric = 'baseY';\n        }\n        else if (positionEnd === CurvePosition.NEAR_TOP) {\n            endMetric = 'topY';\n        }\n        if (firstNote) {\n            firstX = firstNote.getTieRightX();\n            stemDirection = firstNote.getStemDirection();\n            firstY = firstNote.getStemExtents()[metric];\n        }\n        else {\n            const stave = lastNote.checkStave();\n            firstX = stave.getTieStartX();\n            firstY = lastNote.getStemExtents()[metric];\n        }\n        if (lastNote) {\n            lastX = lastNote.getTieLeftX();\n            stemDirection = lastNote.getStemDirection();\n            lastY = lastNote.getStemExtents()[endMetric];\n        }\n        else {\n            const stave = firstNote.checkStave();\n            lastX = stave.getTieEndX();\n            lastY = firstNote.getStemExtents()[endMetric];\n        }\n        if (this.renderOptions.openingDirection === 'up') {\n            stemDirection = 1;\n        }\n        if (this.renderOptions.openingDirection === 'down') {\n            stemDirection = -1;\n        }\n        this.renderCurve({\n            firstX,\n            lastX,\n            firstY,\n            lastY,\n            direction: stemDirection * (this.renderOptions.invert === true ? -1 : 1),\n        });\n        return true;\n    }\n}\n","import { Glyphs } from './glyphs.js';\nimport { Metrics } from './metrics.js';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier.js';\nimport { log } from './util.js';\nfunction L(...args) {\n    if (Clef.DEBUG)\n        log('VexFlow.Clef', args);\n}\nexport class Clef extends StaveModifier {\n    static get CATEGORY() {\n        return \"Clef\";\n    }\n    static get types() {\n        const { gClef, fClef, cClef, unpitchedPercussionClef1, sixStringTabClef } = Glyphs;\n        return {\n            treble: {\n                code: gClef,\n                line: 3,\n            },\n            bass: {\n                code: fClef,\n                line: 1,\n            },\n            alto: {\n                code: cClef,\n                line: 2,\n            },\n            tenor: {\n                code: cClef,\n                line: 1,\n            },\n            percussion: {\n                code: unpitchedPercussionClef1,\n                line: 2,\n            },\n            soprano: {\n                code: cClef,\n                line: 4,\n            },\n            'mezzo-soprano': {\n                code: cClef,\n                line: 3,\n            },\n            'baritone-c': {\n                code: cClef,\n                line: 0,\n            },\n            'baritone-f': {\n                code: fClef,\n                line: 2,\n            },\n            subbass: {\n                code: fClef,\n                line: 0,\n            },\n            french: {\n                code: gClef,\n                line: 4,\n            },\n            tab: {\n                code: sixStringTabClef,\n                line: 2.5,\n            },\n        };\n    }\n    constructor(type, size, annotation) {\n        super();\n        this.code = Clef.types['treble'].code;\n        this.line = Clef.types['treble'].line;\n        this.size = 'default';\n        this.type = 'treble';\n        this.setPosition(StaveModifierPosition.BEGIN);\n        this.setType(type, size, annotation);\n        L('Creating clef:', type);\n    }\n    setType(type, size = 'default', annotation) {\n        this.type = type;\n        this.code = Clef.types[type].code;\n        this.line = Clef.types[type].line;\n        this.size = size !== null && size !== void 0 ? size : 'default';\n        if (annotation === '8va') {\n            if (this.code === Glyphs.gClef) {\n                this.code = Glyphs.gClef8va;\n            }\n            if (this.code === Glyphs.fClef) {\n                this.code = Glyphs.fClef8va;\n            }\n        }\n        if (annotation === '8vb') {\n            if (this.code === Glyphs.gClef) {\n                this.code = Glyphs.gClef8vb;\n            }\n            if (this.code === Glyphs.fClef) {\n                this.code = Glyphs.fClef8vb;\n            }\n        }\n        this.text = this.code;\n        this.fontInfo.size = Math.floor(Clef.getPoint(this.size));\n        return this;\n    }\n    static getPoint(size) {\n        return size === 'default' ? Metrics.get('fontSize') : (Metrics.get('fontSize') * 2) / 3;\n    }\n    setStave(stave) {\n        this.stave = stave;\n        return this;\n    }\n    draw() {\n        const stave = this.checkStave();\n        const ctx = stave.checkContext();\n        this.setRendered();\n        ctx.openGroup('clef', this.getAttribute('id'));\n        this.y = stave.getYForLine(this.line);\n        this.renderText(ctx, 0, 0);\n        ctx.closeGroup();\n    }\n}\nClef.DEBUG = false;\n","import { Clef } from './clef.js';\nimport { Note } from './note.js';\nexport class ClefNote extends Note {\n    static get CATEGORY() {\n        return \"ClefNote\";\n    }\n    constructor(type, size = 'default', annotation) {\n        super({ duration: 'b' });\n        this.setType(type, size, annotation);\n        this.ignoreTicks = true;\n    }\n    setType(type, size, annotation) {\n        this.clef = new Clef(type, size, annotation);\n        this.setWidth(this.clef.getWidth());\n        return this;\n    }\n    getClef() {\n        return this.clef;\n    }\n    preFormat() {\n        this.preFormatted = true;\n        return this;\n    }\n    draw() {\n        const stave = this.checkStave();\n        const ctx = this.checkContext();\n        this.setRendered();\n        this.clef.setX(this.getAbsoluteX());\n        this.clef.setY(stave.getYForLine(this.clef.line));\n        this.clef.renderText(ctx, 0, 0);\n    }\n    getBoundingBox() {\n        return this.clef.getBoundingBox();\n    }\n}\n","import { Fraction } from './fraction.js';\nimport { RuntimeError, sumArray } from './util.js';\nexport class TickContext {\n    static getNextContext(tContext) {\n        const contexts = tContext.tContexts;\n        const index = contexts.indexOf(tContext);\n        if (index + 1 < contexts.length)\n            return contexts[index + 1];\n    }\n    constructor(options) {\n        var _a;\n        this.preFormatted = false;\n        this.postFormatted = false;\n        this.tickID = (_a = options === null || options === void 0 ? void 0 : options.tickID) !== null && _a !== void 0 ? _a : 0;\n        this.currentTick = new Fraction(0, 1);\n        this.maxTicks = new Fraction(0, 1);\n        this.maxTickable = undefined;\n        this.minTicks = undefined;\n        this.minTickable = undefined;\n        this.padding = 1;\n        this.x = 0;\n        this.xBase = 0;\n        this.xOffset = 0;\n        this.tickables = [];\n        this.tickablesByVoice = {};\n        this.notePx = 0;\n        this.glyphPx = 0;\n        this.leftDisplacedHeadPx = 0;\n        this.rightDisplacedHeadPx = 0;\n        this.modLeftPx = 0;\n        this.modRightPx = 0;\n        this.totalLeftPx = 0;\n        this.totalRightPx = 0;\n        this.tContexts = [];\n        this.width = 0;\n        this.formatterMetrics = {\n            freedom: { left: 0, right: 0 },\n        };\n    }\n    getTickID() {\n        return this.tickID;\n    }\n    getX() {\n        return this.x;\n    }\n    setX(x) {\n        this.x = x;\n        this.xBase = x;\n        this.xOffset = 0;\n        return this;\n    }\n    getXBase() {\n        return this.xBase;\n    }\n    setXBase(xBase) {\n        this.xBase = xBase;\n        this.x = xBase + this.xOffset;\n    }\n    getXOffset() {\n        return this.xOffset;\n    }\n    setXOffset(xOffset) {\n        this.xOffset = xOffset;\n        this.x = this.xBase + xOffset;\n    }\n    getWidth() {\n        return this.width + this.padding * 2;\n    }\n    setPadding(padding) {\n        this.padding = padding;\n        return this;\n    }\n    getMaxTicks() {\n        return this.maxTicks;\n    }\n    getMinTicks() {\n        return this.minTicks;\n    }\n    getMaxTickable() {\n        return this.maxTickable;\n    }\n    getMinTickable() {\n        return this.minTickable;\n    }\n    getTickables() {\n        return this.tickables;\n    }\n    getTickableForVoice(voiceIndex) {\n        return this.tickablesByVoice[voiceIndex];\n    }\n    getTickablesByVoice() {\n        return this.tickablesByVoice;\n    }\n    getCenterAlignedTickables() {\n        return this.tickables.filter((tickable) => tickable.isCenterAligned());\n    }\n    getMetrics() {\n        const { width, glyphPx, notePx, leftDisplacedHeadPx, rightDisplacedHeadPx, modLeftPx, modRightPx, totalLeftPx, totalRightPx, } = this;\n        return {\n            width,\n            glyphPx,\n            notePx,\n            leftDisplacedHeadPx,\n            rightDisplacedHeadPx,\n            modLeftPx,\n            modRightPx,\n            totalLeftPx,\n            totalRightPx,\n        };\n    }\n    getCurrentTick() {\n        return this.currentTick;\n    }\n    setCurrentTick(tick) {\n        this.currentTick = tick;\n        this.preFormatted = false;\n    }\n    addTickable(tickable, voiceIndex) {\n        if (!tickable) {\n            throw new RuntimeError('BadArgument', 'Invalid tickable added.');\n        }\n        if (!tickable.shouldIgnoreTicks()) {\n            const ticks = tickable.getTicks();\n            if (ticks.greaterThan(this.maxTicks)) {\n                this.maxTicks = ticks.clone();\n                this.maxTickable = tickable;\n            }\n            if (this.minTicks === undefined) {\n                this.minTicks = ticks.clone();\n                this.minTickable = tickable;\n            }\n            else if (ticks.lessThan(this.minTicks)) {\n                this.minTicks = ticks.clone();\n                this.minTickable = tickable;\n            }\n        }\n        tickable.setTickContext(this);\n        this.tickables.push(tickable);\n        this.tickablesByVoice[voiceIndex !== null && voiceIndex !== void 0 ? voiceIndex : 0] = tickable;\n        this.preFormatted = false;\n        return this;\n    }\n    preFormat() {\n        var _a;\n        if (this.preFormatted)\n            return this;\n        for (let i = 0; i < this.tickables.length; ++i) {\n            const tickable = this.tickables[i];\n            tickable.preFormat();\n            const metrics = tickable.getMetrics();\n            this.leftDisplacedHeadPx = Math.max(this.leftDisplacedHeadPx, metrics.leftDisplacedHeadPx);\n            this.rightDisplacedHeadPx = Math.max(this.rightDisplacedHeadPx, metrics.rightDisplacedHeadPx);\n            this.notePx = Math.max(this.notePx, metrics.notePx);\n            this.glyphPx = Math.max(this.glyphPx, (_a = metrics.glyphWidth) !== null && _a !== void 0 ? _a : 0);\n            this.modLeftPx = Math.max(this.modLeftPx, metrics.modLeftPx);\n            this.modRightPx = Math.max(this.modRightPx, metrics.modRightPx);\n            this.totalLeftPx = Math.max(this.totalLeftPx, metrics.modLeftPx + metrics.leftDisplacedHeadPx);\n            this.totalRightPx = Math.max(this.totalRightPx, metrics.modRightPx + metrics.rightDisplacedHeadPx);\n            this.width = this.notePx + this.totalLeftPx + this.totalRightPx;\n        }\n        return this;\n    }\n    postFormat() {\n        if (this.postFormatted)\n            return this;\n        this.postFormatted = true;\n        return this;\n    }\n    getFormatterMetrics() {\n        return this.formatterMetrics;\n    }\n    move(shift, prev, next) {\n        this.setX(this.getX() + shift);\n        this.getFormatterMetrics().freedom.left += shift;\n        this.getFormatterMetrics().freedom.right -= shift;\n        if (prev)\n            prev.getFormatterMetrics().freedom.right += shift;\n        if (next)\n            next.getFormatterMetrics().freedom.left -= shift;\n    }\n    getDeviationCost() {\n        return sumArray(this.tickables.map((t) => t.getFormatterMetrics().space.deviation));\n    }\n    getAverageDeviationCost() {\n        if (!this.tickables.length)\n            return 0;\n        return this.getDeviationCost() / this.tickables.length;\n    }\n}\n","import { Note } from './note.js';\nimport { TickContext } from './tickcontext.js';\nimport { log } from './util.js';\nfunction L(...args) {\n    if (Crescendo.DEBUG)\n        log('VexFlow.Crescendo', args);\n}\nfunction renderHairpin(ctx, params) {\n    const beginX = params.beginX;\n    const endX = params.endX;\n    const y = params.y;\n    const halfHeight = params.height / 2;\n    ctx.beginPath();\n    if (params.reverse) {\n        ctx.moveTo(beginX, y - halfHeight);\n        ctx.lineTo(endX, y);\n        ctx.lineTo(beginX, y + halfHeight);\n    }\n    else {\n        ctx.moveTo(endX, y - halfHeight);\n        ctx.lineTo(beginX, y);\n        ctx.lineTo(endX, y + halfHeight);\n    }\n    ctx.stroke();\n    ctx.closePath();\n}\nexport class Crescendo extends Note {\n    static get CATEGORY() {\n        return \"Crescendo\";\n    }\n    constructor(noteStruct) {\n        var _a;\n        super(noteStruct);\n        this.options = {\n            extendLeft: 0,\n            extendRight: 0,\n            yShift: 0,\n        };\n        this.decrescendo = false;\n        this.line = (_a = noteStruct.line) !== null && _a !== void 0 ? _a : 0;\n        this.height = 15;\n    }\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    setHeight(height) {\n        this.height = height;\n        return this;\n    }\n    setDecrescendo(decresc) {\n        this.decrescendo = decresc;\n        return this;\n    }\n    preFormat() {\n        this.preFormatted = true;\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const stave = this.checkStave();\n        this.setRendered();\n        const tickContext = this.getTickContext();\n        const nextContext = TickContext.getNextContext(tickContext);\n        const beginX = this.getAbsoluteX();\n        const endX = nextContext ? nextContext.getX() : stave.getX() + stave.getWidth();\n        const y = stave.getYForLine(this.line + -3) + 1;\n        L('Drawing ', this.decrescendo ? 'decrescendo ' : 'crescendo ', this.height, 'x', beginX - endX);\n        renderHairpin(ctx, {\n            beginX: beginX - this.options.extendLeft,\n            endX: endX + this.options.extendRight,\n            y: y + this.options.yShift,\n            height: this.height,\n            reverse: this.decrescendo,\n        });\n    }\n}\nCrescendo.DEBUG = false;\n","import { Glyphs } from './glyphs.js';\nimport { Modifier } from './modifier.js';\nimport { isStaveNote, isTabNote } from './typeguard.js';\nimport { RuntimeError } from './util.js';\nexport class Dot extends Modifier {\n    static get CATEGORY() {\n        return \"Dot\";\n    }\n    static getDots(note) {\n        return note.getModifiersByType(Dot.CATEGORY);\n    }\n    static buildAndAttach(notes, options) {\n        for (const note of notes) {\n            if (options === null || options === void 0 ? void 0 : options.all) {\n                for (let i = 0; i < note.keys.length; i++) {\n                    const dot = new Dot();\n                    note.addModifier(dot, i);\n                }\n            }\n            else if ((options === null || options === void 0 ? void 0 : options.index) !== undefined) {\n                const dot = new Dot();\n                note.addModifier(dot, options === null || options === void 0 ? void 0 : options.index);\n            }\n            else {\n                const dot = new Dot();\n                note.addModifier(dot, 0);\n            }\n        }\n    }\n    static format(dots, state) {\n        const rightShift = state.rightShift;\n        const dotSpacing = 1;\n        if (!dots || dots.length === 0)\n            return false;\n        const dotList = [];\n        const maxShiftMap = {};\n        for (let i = 0; i < dots.length; ++i) {\n            const dot = dots[i];\n            const note = dot.getNote();\n            let props;\n            let shift;\n            if (isStaveNote(note)) {\n                const index = dot.checkIndex();\n                props = note.getKeyProps()[index];\n                shift = note.getFirstDotPx();\n            }\n            else if (isTabNote(note)) {\n                props = { line: 0.5 };\n                shift = rightShift;\n            }\n            else {\n                throw new RuntimeError('Internal', 'Unexpected instance.');\n            }\n            const noteId = note.getAttribute('id');\n            dotList.push({ line: props.line, note, noteId, dot });\n            maxShiftMap[noteId] = Math.max(maxShiftMap[noteId] || shift, shift);\n        }\n        dotList.sort((a, b) => b.line - a.line);\n        let dotShift = rightShift;\n        let xWidth = 0;\n        let lastLine = null;\n        let lastNote = null;\n        let prevDottedSpace = null;\n        let halfShiftY = 0;\n        for (let i = 0; i < dotList.length; ++i) {\n            const { dot, note, noteId, line } = dotList[i];\n            if (line !== lastLine || note !== lastNote) {\n                dotShift = maxShiftMap[noteId];\n            }\n            if (!note.isRest() && line !== lastLine) {\n                if (Math.abs(line % 1) === 0.5) {\n                    halfShiftY = 0;\n                }\n                else {\n                    halfShiftY = 0.5;\n                    if (lastNote !== null && !lastNote.isRest() && lastLine !== null && lastLine - line === 0.5) {\n                        halfShiftY = -0.5;\n                    }\n                    else if (line + halfShiftY === prevDottedSpace) {\n                        halfShiftY = -0.5;\n                    }\n                }\n            }\n            if (note.isRest()) {\n                dot.dotShiftY += -halfShiftY;\n            }\n            else {\n                dot.dotShiftY = -halfShiftY;\n            }\n            prevDottedSpace = line + halfShiftY;\n            dot.setXShift(dotShift);\n            dotShift += dot.getWidth() + dotSpacing;\n            xWidth = dotShift > xWidth ? dotShift : xWidth;\n            lastLine = line;\n            lastNote = note;\n        }\n        state.rightShift += xWidth;\n        return true;\n    }\n    constructor() {\n        super();\n        this.position = Modifier.Position.RIGHT;\n        this.setText(Glyphs.augmentationDot);\n        this.dotShiftY = 0;\n    }\n    setNote(note) {\n        this.note = note;\n        this.font = note.font;\n        return this;\n    }\n    setDotShiftY(y) {\n        this.dotShiftY = y;\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const stave = note.checkStave();\n        const lineSpace = stave.getSpacingBetweenLines();\n        const start = note.getModifierStartXY(this.position, this.index, { forceFlagRight: true });\n        if (isTabNote(note)) {\n            start.y = note.getStemExtents().baseY;\n        }\n        this.x = start.x;\n        this.y = start.y + this.dotShiftY * lineSpace;\n        this.renderText(ctx, 0, 0);\n    }\n}\n","import { Metrics } from './metrics.js';\nimport { Modifier, ModifierPosition } from './modifier.js';\nimport { Tables } from './tables.js';\nimport { RuntimeError } from './util.js';\nexport class FretHandFinger extends Modifier {\n    static get CATEGORY() {\n        return \"FretHandFinger\";\n    }\n    static format(nums, state) {\n        const { leftShift, rightShift } = state;\n        const numSpacing = 1;\n        if (!nums || nums.length === 0)\n            return false;\n        const numsList = [];\n        let prevNote = null;\n        let shiftLeft = 0;\n        let shiftRight = 0;\n        for (let i = 0; i < nums.length; ++i) {\n            const num = nums[i];\n            const note = num.getNote();\n            const pos = num.getPosition();\n            const index = num.checkIndex();\n            const props = note.getKeyProps()[index];\n            const textHeight = Metrics.get('FretHandFinger.fontSize');\n            if (num.position === ModifierPosition.ABOVE) {\n                state.topTextLine += textHeight / Tables.STAVE_LINE_DISTANCE + 0.5;\n            }\n            if (num.position === ModifierPosition.BELOW) {\n                state.textLine += textHeight / Tables.STAVE_LINE_DISTANCE + 0.5;\n            }\n            if (note !== prevNote) {\n                for (let n = 0; n < note.keys.length; ++n) {\n                    if (leftShift === 0) {\n                        shiftLeft = Math.max(note.getLeftDisplacedHeadPx(), shiftLeft);\n                    }\n                    if (rightShift === 0) {\n                        shiftRight = Math.max(note.getRightDisplacedHeadPx(), shiftRight);\n                    }\n                }\n                prevNote = note;\n            }\n            numsList.push({\n                note,\n                num,\n                pos,\n                line: props.line,\n                shiftL: shiftLeft,\n                shiftR: shiftRight,\n            });\n        }\n        numsList.sort((a, b) => b.line - a.line);\n        let numShiftL = 0;\n        let numShiftR = 0;\n        let xWidthL = 0;\n        let xWidthR = 0;\n        let lastLine = null;\n        let lastNote = null;\n        for (let i = 0; i < numsList.length; ++i) {\n            let numShift = 0;\n            const { note, pos, num, line, shiftL, shiftR } = numsList[i];\n            if (line !== lastLine || note !== lastNote) {\n                numShiftL = leftShift + shiftL;\n                numShiftR = rightShift + shiftR;\n            }\n            const numWidth = num.getWidth() + numSpacing;\n            if (pos === Modifier.Position.LEFT) {\n                num.setXShift(leftShift + numShiftL);\n                numShift = leftShift + numWidth;\n                xWidthL = numShift > xWidthL ? numShift : xWidthL;\n            }\n            else if (pos === Modifier.Position.RIGHT) {\n                num.setXShift(numShiftR);\n                numShift = shiftRight + numWidth;\n                xWidthR = numShift > xWidthR ? numShift : xWidthR;\n            }\n            lastLine = line;\n            lastNote = note;\n        }\n        state.leftShift += xWidthL;\n        state.rightShift += xWidthR;\n        return true;\n    }\n    static easyScoreHook({ fingerings } = {}, note, builder) {\n        fingerings === null || fingerings === void 0 ? void 0 : fingerings.split(',').map((fingeringString) => {\n            const split = fingeringString.trim().split('.');\n            const params = { number: split[0] };\n            if (split[1])\n                params.position = split[1];\n            return builder.getFactory().Fingering(params);\n        }).map((fingering, index) => note.addModifier(fingering, index));\n    }\n    constructor(finger) {\n        super();\n        this.setFretHandFinger(finger);\n        this.position = Modifier.Position.LEFT;\n        this.xOffset = 0;\n        this.yOffset = 0;\n    }\n    setFretHandFinger(finger) {\n        this.text = finger;\n        return this;\n    }\n    getFretHandFinger() {\n        return this.text;\n    }\n    setOffsetX(x) {\n        this.xOffset = x;\n        return this;\n    }\n    setOffsetY(y) {\n        this.yOffset = y;\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(this.position, this.index);\n        let dotX = start.x + this.xOffset;\n        let dotY = start.y + this.yOffset + 5;\n        switch (this.position) {\n            case Modifier.Position.ABOVE:\n                dotX -= 4;\n                dotY -= 12;\n                break;\n            case Modifier.Position.BELOW:\n                dotX -= 2;\n                dotY += 10;\n                break;\n            case Modifier.Position.LEFT:\n                dotX -= this.width;\n                break;\n            case Modifier.Position.RIGHT:\n                dotX += 1;\n                break;\n            default:\n                throw new RuntimeError('InvalidPosition', `The position ${this.position} does not exist`);\n        }\n        this.renderText(ctx, dotX, dotY);\n    }\n}\n","import { log, RuntimeError } from './util.js';\nfunction L(...args) {\n    if (Parser.DEBUG)\n        log('VexFlow.Parser', args);\n}\nconst NO_ERROR_POS = -1;\nfunction flattenMatches(r) {\n    if ('matchedString' in r)\n        return r.matchedString;\n    if ('results' in r)\n        return flattenMatches(r.results);\n    const results = r;\n    if (results.length === 1)\n        return flattenMatches(results[0]);\n    if (results.length === 0)\n        return null;\n    return results.map(flattenMatches);\n}\nexport class Parser {\n    constructor(grammar) {\n        this.grammar = grammar;\n        this.line = '';\n        this.pos = 0;\n        this.errorPos = NO_ERROR_POS;\n    }\n    parse(line) {\n        this.line = line;\n        this.pos = 0;\n        this.errorPos = NO_ERROR_POS;\n        const result = this.expect(this.grammar.begin());\n        result.errorPos = this.errorPos;\n        return result;\n    }\n    matchFail(returnPos) {\n        if (this.errorPos === NO_ERROR_POS)\n            this.errorPos = this.pos;\n        this.pos = returnPos;\n    }\n    matchSuccess() {\n        this.errorPos = NO_ERROR_POS;\n    }\n    matchToken(token, noSpace = false) {\n        const regexp = noSpace ? new RegExp('^((' + token + '))') : new RegExp('^((' + token + ')\\\\s*)');\n        const workingLine = this.line.slice(this.pos);\n        const result = workingLine.match(regexp);\n        if (result !== null) {\n            return {\n                success: true,\n                matchedString: result[2],\n                incrementPos: result[1].length,\n                pos: this.pos,\n            };\n        }\n        else {\n            return { success: false, pos: this.pos };\n        }\n    }\n    expectOne(rule, maybe = false) {\n        const results = [];\n        const pos = this.pos;\n        let allMatches = true;\n        let oneMatch = false;\n        maybe = maybe === true || rule.maybe === true;\n        if (rule.expect) {\n            for (const next of rule.expect) {\n                const localPos = this.pos;\n                const result = this.expect(next);\n                if (result.success) {\n                    results.push(result);\n                    oneMatch = true;\n                    if (rule.or)\n                        break;\n                }\n                else {\n                    allMatches = false;\n                    if (!rule.or) {\n                        this.pos = localPos;\n                        break;\n                    }\n                }\n            }\n        }\n        const gotOne = (rule.or && oneMatch) || allMatches;\n        const success = gotOne || maybe === true;\n        const numMatches = gotOne ? 1 : 0;\n        if (maybe && !gotOne)\n            this.pos = pos;\n        if (success) {\n            this.matchSuccess();\n        }\n        else {\n            this.matchFail(pos);\n        }\n        return { success, results, numMatches };\n    }\n    expectOneOrMore(rule, maybe = false) {\n        const results = [];\n        const pos = this.pos;\n        let numMatches = 0;\n        let more = true;\n        do {\n            const result = this.expectOne(rule);\n            if (result.success && result.results) {\n                numMatches++;\n                results.push(result.results);\n            }\n            else {\n                more = false;\n            }\n        } while (more);\n        const success = numMatches > 0 || maybe === true;\n        if (maybe && !(numMatches > 0))\n            this.pos = pos;\n        if (success) {\n            this.matchSuccess();\n        }\n        else {\n            this.matchFail(pos);\n        }\n        return { success, results, numMatches };\n    }\n    expectZeroOrMore(rule) {\n        return this.expectOneOrMore(rule, true);\n    }\n    expect(ruleFunc) {\n        L('Evaluating rule function:', ruleFunc);\n        if (!ruleFunc) {\n            throw new RuntimeError('Invalid rule function');\n        }\n        let result;\n        const rule = ruleFunc.bind(this.grammar)();\n        if (rule.token) {\n            result = this.matchToken(rule.token, rule.noSpace === true);\n            if (result.success) {\n                this.pos += result.incrementPos;\n            }\n        }\n        else if (rule.expect) {\n            if (rule.oneOrMore) {\n                result = this.expectOneOrMore(rule);\n            }\n            else if (rule.zeroOrMore) {\n                result = this.expectZeroOrMore(rule);\n            }\n            else {\n                result = this.expectOne(rule);\n            }\n        }\n        else {\n            L(rule);\n            throw new RuntimeError('Bad grammar! No `token` or `expect` property ' + rule);\n        }\n        const matches = [];\n        result.matches = matches;\n        if (result.results) {\n            result.results.forEach((r) => matches.push(flattenMatches(r)));\n        }\n        if (rule.run && result.success) {\n            rule.run({ matches });\n        }\n        return result;\n    }\n}\nParser.DEBUG = false;\n","import { Articulation } from './articulation.js';\nimport { Dot } from './dot.js';\nimport { FretHandFinger } from './frethandfinger.js';\nimport { Music } from './music.js';\nimport { Parser } from './parser.js';\nimport { Stem } from './stem.js';\nimport { defined, log, RuntimeError } from './util.js';\nfunction L(...args) {\n    if (EasyScore.DEBUG)\n        log('VexFlow.EasyScore', args);\n}\nexport class EasyScoreGrammar {\n    constructor(builder) {\n        this.builder = builder;\n    }\n    begin() {\n        return this.LINE;\n    }\n    LINE() {\n        return {\n            expect: [this.PIECE, this.PIECES, this.EOL],\n        };\n    }\n    PIECE() {\n        return {\n            expect: [this.CHORDORNOTE, this.PARAMS],\n            run: () => this.builder.commitPiece(),\n        };\n    }\n    PIECES() {\n        return {\n            expect: [this.COMMA, this.PIECE],\n            zeroOrMore: true,\n        };\n    }\n    PARAMS() {\n        return {\n            expect: [this.DURATION, this.TYPE, this.DOTS, this.OPTS],\n        };\n    }\n    CHORDORNOTE() {\n        return {\n            expect: [this.CHORD, this.SINGLENOTE],\n            or: true,\n        };\n    }\n    CHORD() {\n        return {\n            expect: [this.LPAREN, this.NOTES, this.RPAREN],\n            run: (state) => this.builder.addChord(state.matches[1]),\n        };\n    }\n    NOTES() {\n        return {\n            expect: [this.NOTE],\n            oneOrMore: true,\n        };\n    }\n    NOTE() {\n        return {\n            expect: [this.NOTENAME, this.ACCIDENTAL, this.OCTAVE],\n        };\n    }\n    SINGLENOTE() {\n        return {\n            expect: [this.NOTENAME, this.ACCIDENTAL, this.OCTAVE],\n            run: (state) => {\n                const s = state;\n                this.builder.addSingleNote(s.matches[0], s.matches[1], s.matches[2]);\n            },\n        };\n    }\n    ACCIDENTAL() {\n        return {\n            expect: [this.MICROTONES, this.ACCIDENTALS],\n            maybe: true,\n            or: true,\n        };\n    }\n    DOTS() {\n        return {\n            expect: [this.DOT],\n            zeroOrMore: true,\n            run: (state) => this.builder.setNoteDots(state.matches),\n        };\n    }\n    TYPE() {\n        return {\n            expect: [this.SLASH, this.MAYBESLASH, this.TYPES],\n            maybe: true,\n            run: (state) => this.builder.setNoteType(state.matches[2]),\n        };\n    }\n    DURATION() {\n        return {\n            expect: [this.SLASH, this.DURATIONS],\n            maybe: true,\n            run: (state) => this.builder.setNoteDuration(state.matches[1]),\n        };\n    }\n    OPTS() {\n        return {\n            expect: [this.LBRACKET, this.KEYVAL, this.KEYVALS, this.RBRACKET],\n            maybe: true,\n        };\n    }\n    KEYVALS() {\n        return {\n            expect: [this.COMMA, this.KEYVAL],\n            zeroOrMore: true,\n        };\n    }\n    KEYVAL() {\n        const unquote = (str) => str.slice(1, -1);\n        return {\n            expect: [this.KEY, this.EQUALS, this.VAL],\n            run: (state) => this.builder.addNoteOption(state.matches[0], unquote(state.matches[2])),\n        };\n    }\n    VAL() {\n        return {\n            expect: [this.SVAL, this.DVAL],\n            or: true,\n        };\n    }\n    KEY() {\n        return { token: '[a-zA-Z][a-zA-Z0-9]*' };\n    }\n    DVAL() {\n        return { token: '[\"][^\"]*[\"]' };\n    }\n    SVAL() {\n        return { token: \"['][^']*[']\" };\n    }\n    NOTENAME() {\n        return { token: '[a-gA-G]' };\n    }\n    OCTAVE() {\n        return { token: '[0-9]+' };\n    }\n    ACCIDENTALS() {\n        return { token: 'bb|b|##|#|n' };\n    }\n    MICROTONES() {\n        return { token: 'bbs|bss|bs|db|d|\\\\+\\\\+-|\\\\+-|\\\\+\\\\+|\\\\+|k|o' };\n    }\n    DURATIONS() {\n        return { token: '[0-9whq]+' };\n    }\n    TYPES() {\n        return { token: '[rRsSmMhHgG]' };\n    }\n    LPAREN() {\n        return { token: '[(]' };\n    }\n    RPAREN() {\n        return { token: '[)]' };\n    }\n    COMMA() {\n        return { token: '[,]' };\n    }\n    DOT() {\n        return { token: '[.]' };\n    }\n    SLASH() {\n        return { token: '[/]' };\n    }\n    MAYBESLASH() {\n        return { token: '[/]?' };\n    }\n    EQUALS() {\n        return { token: '[=]' };\n    }\n    LBRACKET() {\n        return { token: '\\\\[' };\n    }\n    RBRACKET() {\n        return { token: '\\\\]' };\n    }\n    EOL() {\n        return { token: '$' };\n    }\n}\nexport class Piece {\n    constructor(duration) {\n        this.chord = [];\n        this.dots = 0;\n        this.options = {};\n        this.duration = duration;\n    }\n}\nexport class Builder {\n    constructor(factory) {\n        this.commitHooks = [];\n        this.factory = factory;\n        this.reset();\n    }\n    reset(options) {\n        this.options = Object.assign({ stem: 'auto', clef: 'treble' }, options);\n        this.elements = { notes: [], accidentals: [] };\n        this.rollingDuration = '8';\n        this.resetPiece();\n    }\n    getFactory() {\n        return this.factory;\n    }\n    getElements() {\n        return this.elements;\n    }\n    addCommitHook(commitHook) {\n        this.commitHooks.push(commitHook);\n    }\n    resetPiece() {\n        L('resetPiece');\n        this.piece = new Piece(this.rollingDuration);\n    }\n    setNoteDots(dots) {\n        L('setNoteDots:', dots);\n        if (dots)\n            this.piece.dots = dots.length;\n    }\n    setNoteDuration(duration) {\n        L('setNoteDuration:', duration);\n        this.rollingDuration = this.piece.duration = duration || this.rollingDuration;\n    }\n    setNoteType(type) {\n        L('setNoteType:', type);\n        if (type)\n            this.piece.type = type;\n    }\n    addNoteOption(key, value) {\n        L('addNoteOption: key:', key, 'value:', value);\n        this.piece.options[key] = value;\n    }\n    addNote(key, accid, octave) {\n        L('addNote:', key, accid, octave);\n        this.piece.chord.push({\n            key: key,\n            accid,\n            octave,\n        });\n    }\n    addSingleNote(key, accid, octave) {\n        L('addSingleNote:', key, accid, octave);\n        this.addNote(key, accid, octave);\n    }\n    addChord(notes) {\n        L('startChord');\n        if (typeof notes[0] !== 'object') {\n            this.addSingleNote(notes[0]);\n        }\n        else {\n            notes.forEach((n) => {\n                if (n)\n                    this.addNote(...n);\n            });\n        }\n        L('endChord');\n    }\n    commitPiece() {\n        L('commitPiece');\n        const { factory } = this;\n        if (!factory)\n            return;\n        const options = Object.assign(Object.assign({}, this.options), this.piece.options);\n        const stem = defined(options.stem, 'BadArguments', 'options.stem is not defined').toLowerCase();\n        const clef = defined(options.clef, 'BadArguments', 'options.clef is not defined').toLowerCase();\n        const { chord, duration, dots, type } = this.piece;\n        const standardAccidentals = Music.accidentals;\n        const keys = chord.map((notePiece) => {\n            var _a;\n            return notePiece.key +\n                (standardAccidentals.includes((_a = notePiece.accid) !== null && _a !== void 0 ? _a : '') ? notePiece.accid : '') +\n                '/' +\n                notePiece.octave;\n        });\n        const autoStem = stem === 'auto';\n        const note = (type === null || type === void 0 ? void 0 : type.toLowerCase()) === 'g'\n            ? factory.GhostNote({ duration, dots })\n            : factory.StaveNote({ keys, duration, dots, type, clef, autoStem });\n        if (!autoStem)\n            note.setStemDirection(stem === 'up' ? Stem.UP : Stem.DOWN);\n        const accidentals = [];\n        chord.forEach((notePiece, index) => {\n            const accid = notePiece.accid;\n            if (typeof accid === 'string') {\n                const accidental = factory.Accidental({ type: accid });\n                note.addModifier(accidental, index);\n                accidentals.push(accidental);\n            }\n            else {\n                accidentals.push(undefined);\n            }\n        });\n        for (let i = 0; i < dots; i++)\n            Dot.buildAndAttach([note], { all: true });\n        this.commitHooks.forEach((commitHook) => commitHook(options, note, this));\n        this.elements.notes.push(note);\n        this.elements.accidentals.push(accidentals);\n        this.resetPiece();\n    }\n}\nfunction setId(options, note) {\n    if (options.id === undefined)\n        return;\n    note.setAttribute('id', options.id);\n}\nconst commaSeparatedRegex = /\\s*,\\s*/;\nfunction setClass(options, note) {\n    if (options.class === undefined)\n        return;\n    options.class.split(commaSeparatedRegex).forEach((className) => note.addClass(className));\n}\nexport class EasyScore {\n    constructor(options = {}) {\n        this.defaults = {\n            clef: 'treble',\n            time: '4/4',\n            stem: 'auto',\n        };\n        this.setOptions(options);\n    }\n    set(defaults) {\n        this.defaults = Object.assign(Object.assign({}, this.defaults), defaults);\n        return this;\n    }\n    setOptions(options) {\n        var _a, _b;\n        const factory = options.factory;\n        const builder = (_a = options.builder) !== null && _a !== void 0 ? _a : new Builder(factory);\n        this.options = Object.assign(Object.assign({ commitHooks: [setId, setClass, Articulation.easyScoreHook, FretHandFinger.easyScoreHook], throwOnError: false }, options), { factory,\n            builder });\n        this.factory = factory;\n        this.builder = builder;\n        this.grammar = new EasyScoreGrammar(this.builder);\n        this.parser = new Parser(this.grammar);\n        (_b = this.options.commitHooks) === null || _b === void 0 ? void 0 : _b.forEach((commitHook) => this.addCommitHook(commitHook));\n        return this;\n    }\n    setContext(context) {\n        this.factory.setContext(context);\n        return this;\n    }\n    parse(line, options = {}) {\n        this.builder.reset(options);\n        const result = this.parser.parse(line);\n        if (!result.success && this.options.throwOnError) {\n            L(result);\n            throw new RuntimeError('Error parsing line: ' + line);\n        }\n        return result;\n    }\n    beam(notes, options) {\n        this.factory.Beam({ notes, options });\n        return notes;\n    }\n    tuplet(notes, options) {\n        this.factory.Tuplet({ notes, options });\n        return notes;\n    }\n    notes(line, options = {}) {\n        options = Object.assign({ clef: this.defaults.clef, stem: this.defaults.stem }, options);\n        this.parse(line, options);\n        return this.builder.getElements().notes;\n    }\n    voice(notes, options = {}) {\n        options = Object.assign({ time: this.defaults.time }, options);\n        return this.factory.Voice(options).addTickables(notes);\n    }\n    addCommitHook(commitHook) {\n        this.builder.addCommitHook(commitHook);\n    }\n}\nEasyScore.DEBUG = false;\n","import { Note } from './note.js';\nimport { Stem } from './stem.js';\nimport { defined, log } from './util.js';\nfunction L(...args) {\n    if (NoteHead.DEBUG)\n        log('VexFlow.NoteHead', args);\n}\nexport class NoteHead extends Note {\n    static get CATEGORY() {\n        return \"NoteHead\";\n    }\n    constructor(noteStruct) {\n        var _a;\n        super(noteStruct);\n        this.customGlyph = false;\n        this.ledger = {\n            '\\ue4e3': '\\ue4f4',\n            '\\ue4e4': '\\ue4f5',\n        };\n        this.index = noteStruct.index;\n        this.x = noteStruct.x || 0;\n        this.y = noteStruct.y || 0;\n        if (noteStruct.noteType)\n            this.noteType = noteStruct.noteType;\n        this.displaced = noteStruct.displaced || false;\n        this.stemDirection = noteStruct.stemDirection || Stem.UP;\n        this.line = noteStruct.line || 0;\n        this.glyphProps = Note.getGlyphProps(this.duration, this.noteType);\n        defined(this.glyphProps, 'BadArguments', `No glyph found for duration '${this.duration}' and type '${this.noteType}'`);\n        if ((this.line > 5 || this.line < 0) && this.ledger[this.glyphProps.codeHead]) {\n            this.glyphProps.codeHead = this.ledger[this.glyphProps.codeHead];\n        }\n        this.text = this.glyphProps.codeHead;\n        if (noteStruct.customGlyphCode) {\n            this.customGlyph = true;\n            this.text = noteStruct.customGlyphCode;\n        }\n        this.setStyle((_a = noteStruct.style) !== null && _a !== void 0 ? _a : {});\n        this.slashed = noteStruct.slashed || false;\n        this.renderOptions = Object.assign({}, this.renderOptions);\n    }\n    getWidth() {\n        return this.width;\n    }\n    isDisplaced() {\n        return this.displaced === true;\n    }\n    getLine() {\n        return this.line;\n    }\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    getAbsoluteX() {\n        const x = !this.preFormatted ? this.x : super.getAbsoluteX();\n        const displacementStemAdjustment = Stem.WIDTH / 2;\n        return x + (this.displaced ? (this.width - displacementStemAdjustment) * this.stemDirection : 0);\n    }\n    setStave(stave) {\n        const line = this.getLine();\n        this.stave = stave;\n        if (this.stave) {\n            this.setY(this.stave.getYForNote(line));\n            this.setContext(this.stave.getContext());\n        }\n        return this;\n    }\n    preFormat() {\n        if (this.preFormatted)\n            return this;\n        this.preFormatted = true;\n        return this;\n    }\n    draw() {\n        var _a;\n        const ctx = this.checkContext();\n        this.setRendered();\n        ctx.openGroup('notehead', this.getAttribute('id'));\n        L(\"Drawing note head '\", this.noteType, this.duration, \"' at\", this.x, this.y);\n        this.x = this.getAbsoluteX();\n        this.renderText(ctx, 0, 0);\n        (_a = this.parent) === null || _a === void 0 ? void 0 : _a.drawModifiers(this);\n        ctx.closeGroup();\n    }\n}\nNoteHead.DEBUG = false;\n","import { Element } from './element.js';\nimport { log } from './util.js';\nfunction L(...args) {\n    if (Flag.DEBUG)\n        log('VexFlow.Flag', args);\n}\nexport class Flag extends Element {\n    static get CATEGORY() {\n        return \"Flag\";\n    }\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        ctx.openGroup('flag', this.getAttribute('id'));\n        L(\"Drawing flag '\", this.text, \"' at\", this.x, this.y);\n        this.renderText(ctx, 0, 0);\n        ctx.closeGroup();\n    }\n}\nFlag.DEBUG = false;\n","import { Flag } from './flag.js';\nimport { Glyphs } from './glyphs.js';\nimport { Note } from './note.js';\nimport { Stem } from './stem.js';\nimport { Tables } from './tables.js';\nimport { RuntimeError } from './util.js';\nexport class StemmableNote extends Note {\n    static get CATEGORY() {\n        return \"StemmableNote\";\n    }\n    constructor(noteStruct) {\n        super(noteStruct);\n        this.flag = new Flag();\n    }\n    getStem() {\n        return this.stem;\n    }\n    checkStem() {\n        if (!this.stem) {\n            throw new RuntimeError('NoStem', 'No stem attached to instance');\n        }\n        return this.stem;\n    }\n    setStem(stem) {\n        this.stem = stem;\n        this.addChild(stem);\n        return this;\n    }\n    buildStem() {\n        const stem = new Stem();\n        this.setStem(stem);\n        return this;\n    }\n    buildFlag() {\n        var _a, _b, _c;\n        const { glyphProps } = this;\n        if (this.hasFlag()) {\n            const flagCode = this.getStemDirection() === Stem.DOWN\n                ? String.fromCodePoint(((_b = (_a = glyphProps.codeFlagUp) === null || _a === void 0 ? void 0 : _a.codePointAt(0)) !== null && _b !== void 0 ? _b : -1) + 1)\n                : ((_c = glyphProps.codeFlagUp) !== null && _c !== void 0 ? _c : Glyphs.null);\n            this.flag.setText(flagCode);\n            this.flag.fontInfo = this.fontInfo;\n        }\n    }\n    getBaseCustomNoteHeadGlyphProps() {\n        if (this.getStemDirection() === Stem.DOWN) {\n            return this.customGlyphs[this.customGlyphs.length - 1];\n        }\n        else {\n            return this.customGlyphs[0];\n        }\n    }\n    getStemLength() {\n        return Stem.HEIGHT + this.getStemExtension();\n    }\n    getBeamCount() {\n        const glyphProps = this.getGlyphProps();\n        if (glyphProps) {\n            return glyphProps.beamCount;\n        }\n        else {\n            return 0;\n        }\n    }\n    getStemMinimumLength() {\n        const frac = Tables.durationToFraction(this.duration);\n        const beamIsUndefined = this.beam === undefined;\n        let length = frac.value() <= 1 ? 0 : 20;\n        switch (this.duration) {\n            case '8':\n            case '16':\n                length = beamIsUndefined ? 35 : 25;\n                break;\n            case '32':\n                length = beamIsUndefined ? 45 : 35;\n                break;\n            case '64':\n                length = beamIsUndefined ? 50 : 40;\n                break;\n            case '128':\n                length = beamIsUndefined ? 55 : 45;\n                break;\n            default:\n                break;\n        }\n        return length;\n    }\n    getStemDirection() {\n        if (!this.stemDirection)\n            throw new RuntimeError('NoStem', 'No stem attached to this note.');\n        return this.stemDirection;\n    }\n    setStemDirection(direction) {\n        if (!direction)\n            direction = Stem.UP;\n        if (direction !== Stem.UP && direction !== Stem.DOWN) {\n            throw new RuntimeError('BadArgument', `Invalid stem direction: ${direction}`);\n        }\n        this.stemDirection = direction;\n        this.reset();\n        if (this.hasFlag()) {\n            this.buildFlag();\n        }\n        this.beam = undefined;\n        if (this.stem) {\n            this.stem.setDirection(direction);\n            this.stem.setExtension(this.getStemExtension());\n        }\n        if (this.preFormatted) {\n            this.preFormat();\n        }\n        return this;\n    }\n    getStemX() {\n        const xBegin = this.getAbsoluteX() + this.xShift;\n        const xEnd = this.getAbsoluteX() + this.xShift + this.getGlyphWidth();\n        const stemX = this.stemDirection === Stem.DOWN ? xBegin : xEnd;\n        return stemX;\n    }\n    getCenterGlyphX() {\n        return this.getAbsoluteX() + this.xShift + this.getGlyphWidth() / 2;\n    }\n    getStemExtension() {\n        const glyphProps = this.getGlyphProps();\n        const flagHeight = this.flag.getHeight();\n        const scale = this.getFontScale();\n        if (this.stemExtensionOverride !== undefined) {\n            return this.stemExtensionOverride;\n        }\n        if (this.beam) {\n            return glyphProps.stemBeamExtension * scale;\n        }\n        return flagHeight > Stem.HEIGHT * scale ? flagHeight - Stem.HEIGHT * scale : 0;\n    }\n    setStemLength(height) {\n        this.stemExtensionOverride = height - Stem.HEIGHT;\n        return this;\n    }\n    getStemExtents() {\n        if (!this.stem)\n            throw new RuntimeError('NoStem', 'No stem attached to this note.');\n        return this.stem.getExtents();\n    }\n    getYForTopText(textLine) {\n        const stave = this.checkStave();\n        if (this.hasStem()) {\n            const extents = this.getStemExtents();\n            if (!extents)\n                throw new RuntimeError('InvalidState', 'Stem does not have extents.');\n            return Math.min(stave.getYForTopText(textLine), extents.topY - this.renderOptions.annotationSpacing * (textLine + 1));\n        }\n        else {\n            return stave.getYForTopText(textLine);\n        }\n    }\n    getYForBottomText(textLine) {\n        const stave = this.checkStave();\n        if (this.hasStem()) {\n            const extents = this.getStemExtents();\n            if (!extents)\n                throw new RuntimeError('InvalidState', 'Stem does not have extents.');\n            return Math.max(stave.getYForTopText(textLine), extents.baseY + this.renderOptions.annotationSpacing * textLine);\n        }\n        else {\n            return stave.getYForBottomText(textLine);\n        }\n    }\n    hasFlag() {\n        return this.glyphProps.codeFlagUp !== undefined && !this.beam && !this.isRest();\n    }\n    postFormat() {\n        var _a;\n        (_a = this.beam) === null || _a === void 0 ? void 0 : _a.postFormat();\n        this.postFormatted = true;\n        return this;\n    }\n    drawStem(stemOptions) {\n        var _a;\n        this.checkContext();\n        this.setRendered();\n        this.setStem(new Stem(stemOptions));\n        (_a = this.stem) === null || _a === void 0 ? void 0 : _a.setContext(this.getContext()).drawWithStyle();\n    }\n}\n","import { BoundingBox } from './boundingbox.js';\nimport { Glyphs } from './glyphs.js';\nimport { Metrics } from './metrics.js';\nimport { Modifier } from './modifier.js';\nimport { Note } from './note.js';\nimport { NoteHead } from './notehead.js';\nimport { Stem } from './stem.js';\nimport { StemmableNote } from './stemmablenote.js';\nimport { Tables } from './tables.js';\nimport { defined, log, midLine, RuntimeError } from './util.js';\nfunction L(...args) {\n    if (StaveNote.DEBUG)\n        log('VexFlow.StaveNote', args);\n}\nconst isInnerNoteIndex = (note, index) => index === (note.getStemDirection() === Stem.UP ? note.keyProps.length - 1 : 0);\nfunction shiftRestVertical(rest, note, dir) {\n    const delta = dir;\n    rest.line += delta;\n    rest.maxLine += delta;\n    rest.minLine += delta;\n    rest.note.setKeyLine(0, rest.note.getKeyLine(0) + delta);\n}\nfunction centerRest(rest, noteU, noteL) {\n    const delta = rest.line - midLine(noteU.minLine, noteL.maxLine);\n    rest.note.setKeyLine(0, rest.note.getKeyLine(0) - delta);\n    rest.line -= delta;\n    rest.maxLine -= delta;\n    rest.minLine -= delta;\n}\nexport class StaveNote extends StemmableNote {\n    static get CATEGORY() {\n        return \"StaveNote\";\n    }\n    static get LEDGER_LINE_OFFSET() {\n        return 3;\n    }\n    static get minNoteheadPadding() {\n        return Metrics.get('NoteHead.minPadding');\n    }\n    static format(notes, state) {\n        if (!notes || notes.length < 2)\n            return false;\n        const notesList = [];\n        for (let i = 0; i < notes.length; i++) {\n            const props = notes[i].sortedKeyProps;\n            const line = props[0].keyProps.line;\n            let minL = props[props.length - 1].keyProps.line;\n            const stemDirection = notes[i].getStemDirection();\n            const stemMax = notes[i].getStemLength() / 10;\n            const stemMin = notes[i].getStemMinimumLength() / 10;\n            let maxL;\n            if (notes[i].isRest()) {\n                maxL =\n                    line +\n                        Math.ceil(notes[i]._noteHeads[0].getTextMetrics().actualBoundingBoxAscent / Tables.STAVE_LINE_DISTANCE);\n                minL =\n                    line -\n                        Math.ceil(notes[i]._noteHeads[0].getTextMetrics().actualBoundingBoxDescent / Tables.STAVE_LINE_DISTANCE);\n            }\n            else {\n                maxL =\n                    stemDirection === 1 ? props[props.length - 1].keyProps.line + stemMax : props[props.length - 1].keyProps.line;\n                minL = stemDirection === 1 ? props[0].keyProps.line : props[0].keyProps.line - stemMax;\n            }\n            notesList.push({\n                line: props[0].keyProps.line,\n                maxLine: maxL,\n                minLine: minL,\n                isrest: notes[i].isRest(),\n                stemDirection,\n                stemMax,\n                stemMin,\n                voiceShift: notes[i].getVoiceShiftWidth(),\n                isDisplaced: notes[i].isDisplaced(),\n                note: notes[i],\n            });\n        }\n        let voices = 0;\n        let noteU = undefined;\n        let noteM = undefined;\n        let noteL = undefined;\n        const draw = [false, false, false];\n        for (let i = 0; i < notesList.length; i++) {\n            draw[i] = notesList[i].note.renderOptions.draw !== false;\n        }\n        if (draw[0] && draw[1] && draw[2]) {\n            voices = 3;\n            noteU = notesList[0];\n            noteM = notesList[1];\n            noteL = notesList[2];\n        }\n        else if (draw[0] && draw[1]) {\n            voices = 2;\n            noteU = notesList[0];\n            noteL = notesList[1];\n        }\n        else if (draw[0] && draw[2]) {\n            voices = 2;\n            noteU = notesList[0];\n            noteL = notesList[2];\n        }\n        else if (draw[1] && draw[2]) {\n            voices = 2;\n            noteU = notesList[1];\n            noteL = notesList[2];\n        }\n        else {\n            return true;\n        }\n        if (voices === 2 && noteU.stemDirection === -1 && noteL.stemDirection === 1) {\n            noteU = notesList[1];\n            noteL = notesList[0];\n        }\n        const voiceXShift = Math.max(noteU.voiceShift, noteL.voiceShift);\n        let xShift = 0;\n        if (voices === 2) {\n            const lineSpacing = noteU.note.hasStem() && noteL.note.hasStem() && noteU.stemDirection === noteL.stemDirection ? 0.0 : 0.5;\n            if (noteL.isrest && noteU.isrest && noteU.note.duration === noteL.note.duration) {\n                noteL.note.renderOptions.draw = false;\n            }\n            else if (noteU.minLine <= noteL.maxLine + lineSpacing) {\n                if (noteU.isrest) {\n                    shiftRestVertical(noteU, noteL, 1);\n                }\n                else if (noteL.isrest) {\n                    shiftRestVertical(noteL, noteU, -1);\n                }\n                else {\n                    const lineDiff = Math.abs(noteU.line - noteL.line);\n                    if (noteU.note.hasStem() && noteL.note.hasStem()) {\n                        const noteUHead = noteU.note.sortedKeyProps[0].keyProps.code;\n                        const noteLHead = noteL.note.sortedKeyProps[noteL.note.sortedKeyProps.length - 1].keyProps.code;\n                        if (!Tables.UNISON ||\n                            noteUHead !== noteLHead ||\n                            noteU.note.getModifiers().filter((item) => item.getCategory() === \"Dot\" && item.getIndex() === 0)\n                                .length !==\n                                noteL.note.getModifiers().filter((item) => item.getCategory() === \"Dot\" && item.getIndex() === 0)\n                                    .length ||\n                            (lineDiff < 1 && lineDiff > 0) ||\n                            JSON.stringify(noteU.note.getStyle()) !== JSON.stringify(noteL.note.getStyle())) {\n                            xShift = voiceXShift + 2;\n                            if (noteU.stemDirection === noteL.stemDirection) {\n                                noteU.note.setXShift(xShift);\n                            }\n                            else {\n                                noteL.note.setXShift(xShift);\n                            }\n                        }\n                        else if (noteU.note.voice !== noteL.note.voice) {\n                            if (noteU.stemDirection === noteL.stemDirection) {\n                                if (noteU.line !== noteL.line) {\n                                    xShift = voiceXShift + 2;\n                                    noteU.note.setXShift(xShift);\n                                }\n                                else {\n                                    if (noteL.stemDirection === 1) {\n                                        noteL.stemDirection = -1;\n                                        noteL.note.setStemDirection(-1);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else if (lineDiff < 1) {\n                        xShift = voiceXShift + 2;\n                        if (noteU.note.duration < noteL.note.duration) {\n                            noteU.note.setXShift(xShift);\n                        }\n                        else {\n                            noteL.note.setXShift(xShift);\n                        }\n                    }\n                    else if (noteU.note.hasStem()) {\n                        noteU.stemDirection = -noteU.note.getStemDirection();\n                        noteU.note.setStemDirection(noteU.stemDirection);\n                    }\n                    else if (noteL.note.hasStem()) {\n                        noteL.stemDirection = -noteL.note.getStemDirection();\n                        noteL.note.setStemDirection(noteL.stemDirection);\n                    }\n                }\n            }\n            state.rightShift += xShift;\n            return true;\n        }\n        if (!noteM)\n            throw new RuntimeError('InvalidState', 'noteM not defined.');\n        if (noteM.isrest && !noteU.isrest && !noteL.isrest) {\n            if (noteU.minLine <= noteM.maxLine || noteM.minLine <= noteL.maxLine) {\n                const restHeight = noteM.maxLine - noteM.minLine;\n                const space = noteU.minLine - noteL.maxLine;\n                if (restHeight < space) {\n                    centerRest(noteM, noteU, noteL);\n                }\n                else {\n                    xShift = voiceXShift + 2;\n                    noteM.note.setXShift(xShift);\n                    if (noteL.note.hasBeam() === false) {\n                        noteL.stemDirection = -1;\n                        noteL.note.setStemDirection(-1);\n                    }\n                    if (noteU.minLine <= noteL.maxLine && noteU.note.hasBeam() === false) {\n                        noteU.stemDirection = 1;\n                        noteU.note.setStemDirection(1);\n                    }\n                }\n                state.rightShift += xShift;\n                return true;\n            }\n        }\n        if (noteU.isrest && noteM.isrest && noteL.isrest) {\n            noteU.note.renderOptions.draw = false;\n            noteL.note.renderOptions.draw = false;\n            state.rightShift += xShift;\n            return true;\n        }\n        if (noteM.isrest && noteU.isrest && noteM.minLine <= noteL.maxLine) {\n            noteM.note.renderOptions.draw = false;\n        }\n        if (noteM.isrest && noteL.isrest && noteU.minLine <= noteM.maxLine) {\n            noteM.note.renderOptions.draw = false;\n        }\n        if (noteU.isrest && noteU.minLine <= noteM.maxLine) {\n            shiftRestVertical(noteU, noteM, 1);\n        }\n        if (noteL.isrest && noteM.minLine <= noteL.maxLine) {\n            shiftRestVertical(noteL, noteM, -1);\n        }\n        if (noteU.minLine <= noteM.maxLine + 0.5 || noteM.minLine <= noteL.maxLine) {\n            xShift = voiceXShift + 2;\n            noteM.note.setXShift(xShift);\n            if (noteL.note.hasBeam() === false) {\n                noteL.stemDirection = -1;\n                noteL.note.setStemDirection(-1);\n            }\n            if (noteU.minLine <= noteL.maxLine && noteU.note.hasBeam() === false) {\n                noteU.stemDirection = 1;\n                noteU.note.setStemDirection(1);\n            }\n        }\n        state.rightShift += xShift;\n        return true;\n    }\n    static postFormat(notes) {\n        if (!notes)\n            return false;\n        notes.forEach((note) => note.postFormat());\n        return true;\n    }\n    constructor(noteStruct) {\n        var _a, _b, _c;\n        super(noteStruct);\n        this.minLine = 0;\n        this.maxLine = 0;\n        this.sortedKeyProps = [];\n        this.ledgerLineStyle = {};\n        this.clef = (_a = noteStruct.clef) !== null && _a !== void 0 ? _a : 'treble';\n        this.octaveShift = (_b = noteStruct.octaveShift) !== null && _b !== void 0 ? _b : 0;\n        this.glyphProps = Note.getGlyphProps(this.duration, this.noteType);\n        defined(this.glyphProps, 'BadArguments', `No glyph found for duration '${this.duration}' and type '${this.noteType}'`);\n        this.displaced = false;\n        this.dotShiftY = 0;\n        this.useDefaultHeadX = false;\n        this._noteHeads = [];\n        this.modifiers = [];\n        this.renderOptions = Object.assign(Object.assign({}, this.renderOptions), { strokePx: noteStruct.strokePx || StaveNote.LEDGER_LINE_OFFSET });\n        this.calculateKeyProps();\n        this.buildStem();\n        if (noteStruct.autoStem) {\n            this.autoStem();\n        }\n        else {\n            this.setStemDirection((_c = noteStruct.stemDirection) !== null && _c !== void 0 ? _c : Stem.UP);\n        }\n        this.reset();\n        this.buildFlag();\n    }\n    reset() {\n        super.reset();\n        const noteHeadStyles = this._noteHeads.map((noteHead) => noteHead.getStyle());\n        this.buildNoteHeads();\n        this._noteHeads.forEach((noteHead, index) => {\n            const noteHeadStyle = noteHeadStyles[index];\n            if (noteHeadStyle)\n                noteHead.setStyle(noteHeadStyle);\n        });\n        const stave = this.stave;\n        if (stave) {\n            this.setStave(stave);\n        }\n        this.calcNoteDisplacements();\n        return this;\n    }\n    setBeam(beam) {\n        this.beam = beam;\n        this.calcNoteDisplacements();\n        if (this.stem) {\n            this.stem.setExtension(this.getStemExtension());\n        }\n        return this;\n    }\n    buildStem() {\n        this.setStem(new Stem({ hide: this.isRest() }));\n        return this;\n    }\n    buildNoteHeads() {\n        this._noteHeads = [];\n        const stemDirection = this.getStemDirection();\n        const keys = this.getKeys();\n        let lastLine = undefined;\n        let lineDiff = undefined;\n        let displaced = false;\n        let start;\n        let end;\n        let step;\n        if (stemDirection === Stem.UP) {\n            start = 0;\n            end = keys.length;\n            step = 1;\n        }\n        else {\n            start = keys.length - 1;\n            end = -1;\n            step = -1;\n        }\n        for (let i = start; i !== end; i += step) {\n            const noteProps = this.sortedKeyProps[i].keyProps;\n            const line = noteProps.line;\n            if (lastLine === undefined) {\n                lastLine = line;\n            }\n            else {\n                lineDiff = Math.abs(lastLine - line);\n                if (lineDiff === 0 || lineDiff === 0.5) {\n                    displaced = !displaced;\n                }\n                else {\n                    displaced = false;\n                    this.useDefaultHeadX = true;\n                }\n            }\n            lastLine = line;\n            const notehead = new NoteHead({\n                duration: this.duration,\n                noteType: this.noteType,\n                displaced,\n                stemDirection,\n                customGlyphCode: noteProps.code,\n                line: noteProps.line,\n            });\n            notehead.fontInfo = this.fontInfo;\n            this.addChild(notehead);\n            this._noteHeads[this.sortedKeyProps[i].index] = notehead;\n        }\n        return this._noteHeads;\n    }\n    autoStem() {\n        this.setStemDirection(this.calculateOptimalStemDirection());\n    }\n    calculateOptimalStemDirection() {\n        this.minLine = this.sortedKeyProps[0].keyProps.line;\n        this.maxLine = this.sortedKeyProps[this.keyProps.length - 1].keyProps.line;\n        const MIDDLE_LINE = 3;\n        const decider = (this.minLine + this.maxLine) / 2;\n        const stemDirection = decider < MIDDLE_LINE ? Stem.UP : Stem.DOWN;\n        return stemDirection;\n    }\n    calculateKeyProps() {\n        var _a;\n        let lastLine;\n        for (let i = 0; i < this.keys.length; ++i) {\n            const key = this.keys[i];\n            const options = { octaveShift: (_a = this.octaveShift) !== null && _a !== void 0 ? _a : 0, duration: this.duration };\n            const props = Tables.keyProperties(key, this.clef, this.noteType, options);\n            if (!props) {\n                throw new RuntimeError('BadArguments', `Invalid key for note properties: ${key}`);\n            }\n            if (props.key === 'R') {\n                if (this.duration === '1' || this.duration === 'w') {\n                    props.line = 4;\n                }\n                else {\n                    props.line = 3;\n                }\n            }\n            const line = props.line;\n            if (lastLine === undefined) {\n                lastLine = line;\n            }\n            else {\n                if (Math.abs(lastLine - line) < 1) {\n                    this.displaced = true;\n                    props.displaced = true;\n                    if (this.keyProps.length > 0) {\n                        this.keyProps[i - 1].displaced = true;\n                    }\n                }\n            }\n            lastLine = line;\n            this.keyProps.push(props);\n        }\n        this.keyProps.forEach((keyProps, index) => {\n            this.sortedKeyProps.push({ keyProps, index });\n        });\n        this.sortedKeyProps.sort((a, b) => a.keyProps.line - b.keyProps.line);\n    }\n    getBoundingBox() {\n        const boundingBox = new BoundingBox(this.getAbsoluteX(), this.ys[0], 0, 0);\n        this._noteHeads.forEach((notehead) => {\n            boundingBox.mergeWith(notehead.getBoundingBox());\n        });\n        const { yTop, yBottom } = this.getNoteHeadBounds();\n        if (!this.isRest() && this.hasStem()) {\n            const noteStemHeight = this.stem.getHeight();\n            const stemY = this.getStemDirection() === Stem.DOWN\n                ? yTop - noteStemHeight - this.flag.getTextMetrics().actualBoundingBoxDescent\n                : yBottom - noteStemHeight + this.flag.getTextMetrics().actualBoundingBoxAscent;\n            boundingBox.mergeWith(new BoundingBox(this.getAbsoluteX(), stemY, 0, 0));\n        }\n        if (this.hasFlag()) {\n            const bbFlag = this.flag.getBoundingBox();\n            boundingBox.mergeWith(bbFlag);\n        }\n        for (let i = 0; i < this.modifiers.length; i++) {\n            boundingBox.mergeWith(this.modifiers[i].getBoundingBox());\n        }\n        return boundingBox;\n    }\n    getLineNumber(isTopNote) {\n        if (!this.keyProps.length) {\n            throw new RuntimeError('NoKeyProps', \"Can't get bottom note line, because note is not initialized properly.\");\n        }\n        let resultLine = this.keyProps[0].line;\n        for (let i = 0; i < this.keyProps.length; i++) {\n            const thisLine = this.keyProps[i].line;\n            if (isTopNote) {\n                if (thisLine > resultLine)\n                    resultLine = thisLine;\n            }\n            else {\n                if (thisLine < resultLine)\n                    resultLine = thisLine;\n            }\n        }\n        return resultLine;\n    }\n    isRest() {\n        const val = this.glyphProps.codeHead;\n        return val >= '\\ue4e0' && val <= '\\ue4ff';\n    }\n    isChord() {\n        return !this.isRest() && this.keys.length > 1;\n    }\n    hasStem() {\n        return this.glyphProps.stem;\n    }\n    hasFlag() {\n        return super.hasFlag() && !this.isRest();\n    }\n    getStemX() {\n        if (this.noteType === 'r') {\n            return this.getCenterGlyphX();\n        }\n        else {\n            return super.getStemX() + (this.stemDirection ? Stem.WIDTH / (2 * -this.stemDirection) : 0);\n        }\n    }\n    getYForTopText(textLine) {\n        const extents = this.getStemExtents();\n        return Math.min(this.checkStave().getYForTopText(textLine), extents.topY - this.renderOptions.annotationSpacing * (textLine + 1));\n    }\n    getYForBottomText(textLine) {\n        const extents = this.getStemExtents();\n        return Math.max(this.checkStave().getYForTopText(textLine), extents.baseY + this.renderOptions.annotationSpacing * textLine);\n    }\n    setStave(stave) {\n        super.setStave(stave);\n        const ys = this._noteHeads.map((notehead) => {\n            notehead.setStave(stave);\n            return notehead.getY();\n        });\n        this.setYs(ys);\n        if (this.stem) {\n            const { yTop, yBottom } = this.getNoteHeadBounds();\n            this.stem.setYBounds(yTop, yBottom);\n        }\n        return this;\n    }\n    isDisplaced() {\n        return this.displaced;\n    }\n    setNoteDisplaced(displaced) {\n        this.displaced = displaced;\n        return this;\n    }\n    getTieRightX() {\n        let tieStartX = this.getAbsoluteX();\n        tieStartX += this.getGlyphWidth() + this.xShift + this.rightDisplacedHeadPx;\n        if (this.modifierContext)\n            tieStartX += this.modifierContext.getRightShift();\n        return tieStartX;\n    }\n    getTieLeftX() {\n        let tieEndX = this.getAbsoluteX();\n        tieEndX += this.xShift - this.leftDisplacedHeadPx;\n        return tieEndX;\n    }\n    getLineForRest() {\n        let restLine = this.keyProps[0].line;\n        if (this.keyProps.length > 1) {\n            const lastLine = this.keyProps[this.keyProps.length - 1].line;\n            const top = Math.max(restLine, lastLine);\n            const bot = Math.min(restLine, lastLine);\n            restLine = midLine(top, bot);\n        }\n        return restLine;\n    }\n    getModifierStartXY(position, index, options = {}) {\n        if (!this.preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n        }\n        if (this.ys.length === 0) {\n            throw new RuntimeError('NoYValues', 'No Y-Values calculated for this note.');\n        }\n        const { ABOVE, BELOW, LEFT, RIGHT } = Modifier.Position;\n        let x = 0;\n        if (position === LEFT) {\n            x = -1 * 2;\n        }\n        else if (position === RIGHT) {\n            x = this.getGlyphWidth() + this.xShift + 2;\n            if (this.stemDirection === Stem.UP &&\n                this.hasFlag() &&\n                (options.forceFlagRight || isInnerNoteIndex(this, index))) {\n                x += this.flag.getWidth();\n            }\n        }\n        else if (position === BELOW || position === ABOVE) {\n            x = this.getGlyphWidth() / 2;\n        }\n        let restShift = 0;\n        switch (this._noteHeads[index].getText()) {\n            case Glyphs.restDoubleWhole:\n            case Glyphs.restWhole:\n                restShift += 0.5;\n                break;\n            case Glyphs.restHalf:\n            case Glyphs.restQuarter:\n            case Glyphs.rest8th:\n            case Glyphs.rest16th:\n                restShift -= 0.5;\n                break;\n            case Glyphs.rest32nd:\n            case Glyphs.rest64th:\n                restShift -= 1.5;\n                break;\n            case Glyphs.rest128th:\n                restShift -= 2.5;\n                break;\n        }\n        return {\n            x: this.getAbsoluteX() + x,\n            y: this.ys[index] + restShift * this.checkStave().getSpacingBetweenLines(),\n        };\n    }\n    setStyle(style) {\n        return super.setGroupStyle(style);\n    }\n    setStemStyle(style) {\n        const stem = this.getStem();\n        if (stem)\n            stem.setStyle(style);\n        return this;\n    }\n    getStemStyle() {\n        var _a;\n        return (_a = this.stem) === null || _a === void 0 ? void 0 : _a.getStyle();\n    }\n    setLedgerLineStyle(style) {\n        this.ledgerLineStyle = style;\n    }\n    getLedgerLineStyle() {\n        return this.ledgerLineStyle;\n    }\n    setFlagStyle(style) {\n        this.flag.setStyle(style);\n    }\n    getFlagStyle() {\n        return this.flag.getStyle();\n    }\n    getGlyphWidth() {\n        return this.noteHeads[0].getWidth();\n    }\n    setKeyStyle(index, style) {\n        this._noteHeads[index].setStyle(style);\n        return this;\n    }\n    setKeyLine(index, line) {\n        this.keyProps[index].line = line;\n        this.reset();\n        return this;\n    }\n    getKeyLine(index) {\n        return this.keyProps[index].line;\n    }\n    getVoiceShiftWidth() {\n        return this.getGlyphWidth() * (this.displaced ? 2 : 1);\n    }\n    calcNoteDisplacements() {\n        this.setLeftDisplacedHeadPx(this.displaced && this.stemDirection === Stem.DOWN ? this.getGlyphWidth() : 0);\n        this.setRightDisplacedHeadPx(!this.hasFlag() && this.displaced && this.stemDirection === Stem.UP ? this.getGlyphWidth() : 0);\n    }\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        let noteHeadPadding = 0;\n        if (this.modifierContext) {\n            this.modifierContext.preFormat();\n            if (this.modifierContext.getWidth() === 0) {\n                noteHeadPadding = StaveNote.minNoteheadPadding;\n            }\n        }\n        let width = this.getGlyphWidth() + this.leftDisplacedHeadPx + this.rightDisplacedHeadPx + noteHeadPadding;\n        if (this.shouldDrawFlag() && this.stemDirection === Stem.UP) {\n            width += this.getGlyphWidth();\n        }\n        this.setWidth(width);\n        this.preFormatted = true;\n    }\n    getNoteHeadBounds() {\n        let yTop = +Infinity;\n        let yBottom = -Infinity;\n        let nonDisplacedX;\n        let displacedX;\n        let highestLine = this.checkStave().getNumLines();\n        let lowestLine = 1;\n        let highestDisplacedLine;\n        let lowestDisplacedLine;\n        let highestNonDisplacedLine = highestLine;\n        let lowestNonDisplacedLine = lowestLine;\n        this._noteHeads.forEach((notehead) => {\n            const line = notehead.getLine();\n            const y = notehead.getY();\n            yTop = Math.min(y, yTop);\n            yBottom = Math.max(y, yBottom);\n            if (displacedX === undefined && notehead.isDisplaced()) {\n                displacedX = notehead.getAbsoluteX();\n            }\n            if (nonDisplacedX === undefined && !notehead.isDisplaced()) {\n                nonDisplacedX = notehead.getAbsoluteX();\n            }\n            highestLine = Math.max(line, highestLine);\n            lowestLine = Math.min(line, lowestLine);\n            if (notehead.isDisplaced()) {\n                highestDisplacedLine = highestDisplacedLine === undefined ? line : Math.max(line, highestDisplacedLine);\n                lowestDisplacedLine = lowestDisplacedLine === undefined ? line : Math.min(line, lowestDisplacedLine);\n            }\n            else {\n                highestNonDisplacedLine = Math.max(line, highestNonDisplacedLine);\n                lowestNonDisplacedLine = Math.min(line, lowestNonDisplacedLine);\n            }\n        }, this);\n        return {\n            yTop,\n            yBottom,\n            displacedX,\n            nonDisplacedX,\n            highestLine,\n            lowestLine,\n            highestDisplacedLine,\n            lowestDisplacedLine,\n            highestNonDisplacedLine,\n            lowestNonDisplacedLine,\n        };\n    }\n    getNoteHeadBeginX() {\n        return this.getAbsoluteX() + this.xShift;\n    }\n    getNoteHeadEndX() {\n        const xBegin = this.getNoteHeadBeginX();\n        return xBegin + this.getGlyphWidth();\n    }\n    get noteHeads() {\n        return this._noteHeads.slice();\n    }\n    drawLedgerLines() {\n        const stave = this.checkStave();\n        const { renderOptions: { strokePx }, } = this;\n        const ctx = this.checkContext();\n        const width = this.getGlyphWidth() + strokePx * 2;\n        const doubleWidth = 2 * (this.getGlyphWidth() + strokePx) - Stem.WIDTH / 2;\n        if (this.isRest())\n            return;\n        if (!ctx) {\n            throw new RuntimeError('NoCanvasContext', \"Can't draw without a canvas context.\");\n        }\n        const { highestLine, lowestLine, highestDisplacedLine, highestNonDisplacedLine, lowestDisplacedLine, lowestNonDisplacedLine, displacedX, nonDisplacedX, } = this.getNoteHeadBounds();\n        if (highestLine < 6 && lowestLine > 0)\n            return;\n        const minX = Math.min(displacedX !== null && displacedX !== void 0 ? displacedX : 0, nonDisplacedX !== null && nonDisplacedX !== void 0 ? nonDisplacedX : 0);\n        const drawLedgerLine = (y, normal, displaced) => {\n            let x;\n            if (displaced && normal)\n                x = minX - strokePx;\n            else if (normal)\n                x = (nonDisplacedX !== null && nonDisplacedX !== void 0 ? nonDisplacedX : 0) - strokePx;\n            else\n                x = (displacedX !== null && displacedX !== void 0 ? displacedX : 0) - strokePx;\n            const ledgerWidth = normal && displaced ? doubleWidth : width;\n            ctx.beginPath();\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + ledgerWidth, y);\n            ctx.stroke();\n        };\n        const style = Object.assign(Object.assign({}, stave.getDefaultLedgerLineStyle()), this.getLedgerLineStyle());\n        ctx.save();\n        this.applyStyle(ctx, style);\n        for (let line = 6; line <= highestLine; ++line) {\n            const normal = nonDisplacedX !== undefined && line <= highestNonDisplacedLine;\n            const displaced = highestDisplacedLine !== undefined && line <= highestDisplacedLine;\n            drawLedgerLine(stave.getYForNote(line), normal, displaced);\n        }\n        for (let line = 0; line >= lowestLine; --line) {\n            const normal = nonDisplacedX !== undefined && line >= lowestNonDisplacedLine;\n            const displaced = lowestDisplacedLine !== undefined && line >= lowestDisplacedLine;\n            drawLedgerLine(stave.getYForNote(line), normal, displaced);\n        }\n        ctx.restore();\n    }\n    drawModifiers(noteheadParam) {\n        const ctx = this.checkContext();\n        for (let i = 0; i < this.modifiers.length; i++) {\n            const modifier = this.modifiers[i];\n            const index = modifier.checkIndex();\n            const notehead = this._noteHeads[index];\n            if (notehead === noteheadParam) {\n                modifier.setContext(ctx);\n                modifier.drawWithStyle();\n            }\n        }\n    }\n    shouldDrawFlag() {\n        const hasStem = this.stem !== undefined;\n        const hasFlag = this.glyphProps.codeFlagUp !== undefined;\n        const hasNoBeam = this.beam === undefined;\n        return hasStem && hasFlag && hasNoBeam && !this.isRest();\n    }\n    drawFlag() {\n        const ctx = this.checkContext();\n        if (!ctx) {\n            throw new RuntimeError('NoCanvasContext', \"Can't draw without a canvas context.\");\n        }\n        if (this.shouldDrawFlag()) {\n            const { yTop, yBottom } = this.getNoteHeadBounds();\n            const noteStemHeight = this.stem.getHeight();\n            const flagX = this.getStemX() - Tables.STEM_WIDTH / 2;\n            const flagY = this.getStemDirection() === Stem.DOWN\n                ?\n                    yTop - noteStemHeight - this.flag.getTextMetrics().actualBoundingBoxDescent\n                :\n                    yBottom - noteStemHeight + this.flag.getTextMetrics().actualBoundingBoxAscent;\n            this.flag.setContext(ctx).setX(flagX).setY(flagY).drawWithStyle();\n        }\n    }\n    drawNoteHeads() {\n        const ctx = this.checkContext();\n        this._noteHeads.forEach((notehead) => {\n            notehead.setContext(ctx).drawWithStyle();\n        });\n    }\n    drawStem(stemOptions) {\n        const ctx = this.checkContext();\n        if (stemOptions) {\n            this.setStem(new Stem(stemOptions));\n        }\n        if (this.shouldDrawFlag() && this.stem) {\n            this.stem.adjustHeightForFlag();\n        }\n        if (this.stem) {\n            this.stem.setContext(ctx).drawWithStyle();\n        }\n    }\n    getStemExtension() {\n        const superStemExtension = super.getStemExtension();\n        if (!this.glyphProps.stem) {\n            return superStemExtension;\n        }\n        const stemDirection = this.getStemDirection();\n        if (stemDirection !== this.calculateOptimalStemDirection()) {\n            return superStemExtension;\n        }\n        let midLineDistance;\n        const MIDDLE_LINE = 3;\n        if (stemDirection === Stem.UP) {\n            midLineDistance = MIDDLE_LINE - this.maxLine;\n        }\n        else {\n            midLineDistance = this.minLine - MIDDLE_LINE;\n        }\n        const linesOverOctaveFromMidLine = midLineDistance - 3.5;\n        if (linesOverOctaveFromMidLine <= 0) {\n            return superStemExtension;\n        }\n        const stave = this.getStave();\n        let spacingBetweenLines = 10;\n        if (stave !== undefined) {\n            spacingBetweenLines = stave.getSpacingBetweenLines();\n        }\n        return superStemExtension + linesOverOctaveFromMidLine * spacingBetweenLines;\n    }\n    draw() {\n        if (this.renderOptions.draw === false)\n            return;\n        if (this.ys.length === 0) {\n            throw new RuntimeError('NoYValues', \"Can't draw note without Y values.\");\n        }\n        const ctx = this.checkContext();\n        const xBegin = this.getNoteHeadBeginX();\n        const shouldRenderStem = this.hasStem() && !this.beam;\n        this._noteHeads.forEach((notehead) => notehead.setX(xBegin));\n        if (this.stem) {\n            const stemX = this.getStemX();\n            this.stem.setNoteHeadXBounds(stemX, stemX);\n        }\n        L('Rendering ', this.isChord() ? 'chord :' : 'note :', this.keys);\n        ctx.openGroup('stavenote', this.getAttribute('id'));\n        this.drawLedgerLines();\n        if (shouldRenderStem)\n            this.drawStem();\n        this.drawNoteHeads();\n        this.drawFlag();\n        const bb = this.getBoundingBox();\n        ctx.pointerRect(bb.getX(), bb.getY(), bb.getW(), bb.getH());\n        ctx.closeGroup();\n        this.setRendered();\n    }\n}\nStaveNote.DEBUG = false;\n","import { Element } from './element.js';\nimport { RuntimeError } from './util.js';\nexport class StaveTie extends Element {\n    static get CATEGORY() {\n        return \"StaveTie\";\n    }\n    constructor(notes, text = '') {\n        super();\n        this.setNotes(notes);\n        this.text = text;\n        this.renderOptions = {\n            cp1: 8,\n            cp2: 12,\n            shortTieCutoff: 10,\n            cp1Short: 2,\n            cp2Short: 8,\n            textShiftX: 0,\n            firstXShift: 0,\n            lastXShift: 0,\n            yShift: 7,\n            tieSpacing: 0,\n        };\n    }\n    getDirection() {\n        if (this.direction !== undefined && this.direction !== null) {\n            return this.direction;\n        }\n        else if (this.notes.lastNote) {\n            return this.notes.lastNote.getStemDirection();\n        }\n        else if (this.notes.firstNote) {\n            return this.notes.firstNote.getStemDirection();\n        }\n        else {\n            return 0;\n        }\n    }\n    setDirection(direction) {\n        this.direction = direction;\n        return this;\n    }\n    setNotes(notes) {\n        if (!notes.firstNote && !notes.lastNote) {\n            throw new RuntimeError('BadArguments', 'Tie needs to have either firstNote or lastNote set.');\n        }\n        if (!notes.firstIndexes) {\n            notes.firstIndexes = [0];\n        }\n        if (!notes.lastIndexes) {\n            notes.lastIndexes = [0];\n        }\n        if (notes.firstIndexes.length !== notes.lastIndexes.length) {\n            throw new RuntimeError('BadArguments', 'Tied notes must have same number of indexes.');\n        }\n        this.notes = notes;\n        return this;\n    }\n    isPartial() {\n        return !this.notes.firstNote || !this.notes.lastNote;\n    }\n    renderTie(params) {\n        if (params.firstYs.length === 0 || params.lastYs.length === 0) {\n            throw new RuntimeError('BadArguments', 'No Y-values to render');\n        }\n        const ctx = this.checkContext();\n        let cp1 = this.renderOptions.cp1;\n        let cp2 = this.renderOptions.cp2;\n        if (Math.abs(params.lastX - params.firstX) < this.renderOptions.shortTieCutoff) {\n            cp1 = this.renderOptions.cp1Short;\n            cp2 = this.renderOptions.cp2Short;\n        }\n        const firstXShift = this.renderOptions.firstXShift;\n        const lastXShift = this.renderOptions.lastXShift;\n        const yShift = this.renderOptions.yShift * params.direction;\n        const firstIndexes = this.notes.firstIndexes;\n        const lastIndexes = this.notes.lastIndexes;\n        ctx.openGroup('stavetie', this.getAttribute('id'));\n        for (let i = 0; i < firstIndexes.length; ++i) {\n            const cpX = (params.lastX + lastXShift + (params.firstX + firstXShift)) / 2;\n            const firstY = params.firstYs[firstIndexes[i]] + yShift;\n            const lastY = params.lastYs[lastIndexes[i]] + yShift;\n            if (isNaN(firstY) || isNaN(lastY)) {\n                throw new RuntimeError('BadArguments', 'Bad indexes for tie rendering.');\n            }\n            const topControlPointY = (firstY + lastY) / 2 + cp1 * params.direction;\n            const bottomControlPointY = (firstY + lastY) / 2 + cp2 * params.direction;\n            ctx.beginPath();\n            ctx.moveTo(params.firstX + firstXShift, firstY);\n            ctx.quadraticCurveTo(cpX, topControlPointY, params.lastX + lastXShift, lastY);\n            ctx.quadraticCurveTo(cpX, bottomControlPointY, params.firstX + firstXShift, firstY);\n            ctx.closePath();\n            ctx.fill();\n        }\n        ctx.closeGroup();\n    }\n    renderTieText(firstX, lastX) {\n        var _a, _b, _c;\n        const ctx = this.checkContext();\n        let centerX = (firstX + lastX) / 2;\n        centerX -= ctx.measureText(this.text).width / 2;\n        const stave = (_b = (_a = this.notes.firstNote) === null || _a === void 0 ? void 0 : _a.checkStave()) !== null && _b !== void 0 ? _b : (_c = this.notes.lastNote) === null || _c === void 0 ? void 0 : _c.checkStave();\n        if (stave) {\n            ctx.setFont(this.fontInfo);\n            ctx.fillText(this.text, centerX + this.renderOptions.textShiftX, stave.getYForTopText() - 1);\n        }\n    }\n    getNotes() {\n        return this.notes;\n    }\n    getFirstX() {\n        if (this.notes.firstNote) {\n            return this.notes.firstNote.getTieRightX() + this.renderOptions.tieSpacing;\n        }\n        else if (this.notes.lastNote) {\n            return this.notes.lastNote.checkStave().getTieStartX();\n        }\n        else {\n            return 0;\n        }\n    }\n    getLastX() {\n        if (this.notes.lastNote) {\n            return this.notes.lastNote.getTieLeftX() + this.renderOptions.tieSpacing;\n        }\n        else if (this.notes.firstNote) {\n            return this.notes.firstNote.checkStave().getTieEndX();\n        }\n        else {\n            return 0;\n        }\n    }\n    getFirstYs() {\n        if (this.notes.firstNote) {\n            return this.notes.firstNote.getYs();\n        }\n        else if (this.notes.lastNote) {\n            return this.notes.lastNote.getYs();\n        }\n        else {\n            return [0];\n        }\n    }\n    getLastYs() {\n        if (this.notes.lastNote) {\n            return this.notes.lastNote.getYs();\n        }\n        else if (this.notes.firstNote) {\n            return this.notes.firstNote.getYs();\n        }\n        else {\n            return [0];\n        }\n    }\n    synchronizeIndexes() {\n        if (this.notes.firstNote && this.notes.lastNote) {\n            return;\n        }\n        else if (!this.notes.firstNote && !this.notes.lastNote) {\n            return;\n        }\n        else if (this.notes.firstNote) {\n            this.notes.lastIndexes = this.notes.firstIndexes;\n        }\n        else {\n            this.notes.firstIndexes = this.notes.lastIndexes;\n        }\n    }\n    draw() {\n        this.checkContext();\n        this.setRendered();\n        this.synchronizeIndexes();\n        const firstX = this.getFirstX();\n        const lastX = this.getLastX();\n        this.renderTie({\n            firstX,\n            lastX,\n            firstYs: this.getFirstYs(),\n            lastYs: this.getLastYs(),\n            direction: this.getDirection(),\n        });\n        this.renderTieText(firstX, lastX);\n        return true;\n    }\n}\n","import { StaveTie } from './stavetie.js';\nexport class TabTie extends StaveTie {\n    static get CATEGORY() {\n        return \"TabTie\";\n    }\n    static createHammeron(notes) {\n        return new TabTie(notes, 'H');\n    }\n    static createPulloff(notes) {\n        return new TabTie(notes, 'P');\n    }\n    constructor(notes, text) {\n        super(notes, text);\n        this.renderOptions.cp1 = 9;\n        this.renderOptions.cp2 = 11;\n        this.renderOptions.yShift = 3;\n        this.direction = -1;\n    }\n}\n","import { Element } from './element.js';\nimport { Fraction } from './fraction.js';\nimport { Tables } from './tables.js';\nimport { defined, RuntimeError, sumArray } from './util.js';\nexport var VoiceMode;\n(function (VoiceMode) {\n    VoiceMode[VoiceMode[\"STRICT\"] = 1] = \"STRICT\";\n    VoiceMode[VoiceMode[\"SOFT\"] = 2] = \"SOFT\";\n    VoiceMode[VoiceMode[\"FULL\"] = 3] = \"FULL\";\n})(VoiceMode || (VoiceMode = {}));\nexport class Voice extends Element {\n    static get CATEGORY() {\n        return \"Voice\";\n    }\n    static get Mode() {\n        return VoiceMode;\n    }\n    constructor(time) {\n        super();\n        this.resolutionMultiplier = 1;\n        this.mode = VoiceMode.STRICT;\n        this.preFormatted = false;\n        this.ticksUsed = new Fraction(0, 1);\n        this.largestTickWidth = 0;\n        this.tickables = [];\n        this.options = {\n            softmaxFactor: Tables.SOFTMAX_FACTOR,\n        };\n        let voiceTime;\n        if (typeof time === 'string') {\n            const match = time.match(/(\\d+)\\/(\\d+)/);\n            if (match) {\n                voiceTime = {\n                    numBeats: parseInt(match[1]),\n                    beatValue: parseInt(match[2]),\n                };\n            }\n        }\n        else {\n            voiceTime = time;\n        }\n        this.time = Object.assign({ numBeats: 4, beatValue: 4, resolution: Tables.RESOLUTION }, voiceTime);\n        this.totalTicks = new Fraction(this.time.numBeats * (this.time.resolution / this.time.beatValue), 1);\n        this.smallestTickCount = this.totalTicks.clone();\n    }\n    getTotalTicks() {\n        return this.totalTicks;\n    }\n    getTicksUsed() {\n        return this.ticksUsed;\n    }\n    getLargestTickWidth() {\n        return this.largestTickWidth;\n    }\n    getSmallestTickCount() {\n        return this.smallestTickCount;\n    }\n    getTickables() {\n        return this.tickables;\n    }\n    getMode() {\n        return this.mode;\n    }\n    setMode(mode) {\n        this.mode = mode;\n        return this;\n    }\n    getResolutionMultiplier() {\n        return this.resolutionMultiplier;\n    }\n    getActualResolution() {\n        return this.resolutionMultiplier * this.time.resolution;\n    }\n    setStave(stave) {\n        this.stave = stave;\n        return this;\n    }\n    getStave() {\n        return this.stave;\n    }\n    getBoundingBox() {\n        const boundingBox = this.tickables[0].getBoundingBox();\n        for (let i = 1; i < this.tickables.length; ++i) {\n            const tickable = this.tickables[i];\n            if (!tickable.getStave() && this.stave)\n                tickable.setStave(this.stave);\n            const bb = tickable.getBoundingBox();\n            boundingBox.mergeWith(bb);\n        }\n        return boundingBox;\n    }\n    setStrict(strict) {\n        this.mode = strict ? VoiceMode.STRICT : VoiceMode.SOFT;\n        return this;\n    }\n    isComplete() {\n        if (this.mode === VoiceMode.STRICT || this.mode === VoiceMode.FULL) {\n            return this.ticksUsed.equals(this.totalTicks);\n        }\n        else {\n            return true;\n        }\n    }\n    setSoftmaxFactor(factor) {\n        this.options.softmaxFactor = factor;\n        this.expTicksUsed = 0;\n        return this;\n    }\n    reCalculateExpTicksUsed() {\n        const totalTicks = this.ticksUsed.value();\n        const exp = (tickable) => Math.pow(this.options.softmaxFactor, tickable.getTicks().value() / totalTicks);\n        this.expTicksUsed = sumArray(this.tickables.map(exp));\n        return this.expTicksUsed;\n    }\n    softmax(tickValue) {\n        if (!this.expTicksUsed) {\n            this.expTicksUsed = this.reCalculateExpTicksUsed();\n        }\n        const totalTicks = this.ticksUsed.value();\n        const exp = (v) => Math.pow(this.options.softmaxFactor, v / totalTicks);\n        const sm = exp(tickValue) / this.expTicksUsed;\n        return sm;\n    }\n    addTickable(tickable) {\n        if (!tickable.shouldIgnoreTicks()) {\n            const ticks = tickable.getTicks();\n            this.ticksUsed.add(ticks);\n            this.expTicksUsed = 0;\n            if ((this.mode === VoiceMode.STRICT || this.mode === VoiceMode.FULL) &&\n                this.ticksUsed.greaterThan(this.totalTicks)) {\n                this.ticksUsed.subtract(ticks);\n                throw new RuntimeError('BadArgument', 'Too many ticks.');\n            }\n            if (ticks.lessThan(this.smallestTickCount)) {\n                this.smallestTickCount = ticks.clone();\n            }\n            this.resolutionMultiplier = this.ticksUsed.denominator;\n            this.totalTicks.add(0, this.ticksUsed.denominator);\n        }\n        this.tickables.push(tickable);\n        tickable.setVoice(this);\n        return this;\n    }\n    addTickables(tickables) {\n        for (let i = 0; i < tickables.length; ++i) {\n            this.addTickable(tickables[i]);\n        }\n        return this;\n    }\n    preFormat() {\n        if (this.preFormatted)\n            return this;\n        const stave = this.checkStave();\n        this.tickables.forEach((tickable) => {\n            if (!tickable.getStave()) {\n                tickable.setStave(stave);\n            }\n        });\n        this.preFormatted = true;\n        return this;\n    }\n    checkStave() {\n        return defined(this.stave, 'NoStave', 'No stave attached to instance.');\n    }\n    draw(context = this.checkContext(), stave) {\n        stave = stave !== null && stave !== void 0 ? stave : this.stave;\n        this.setRendered();\n        for (let i = 0; i < this.tickables.length; ++i) {\n            const tickable = this.tickables[i];\n            if (stave) {\n                tickable.setStave(stave);\n            }\n            defined(tickable.getStave(), 'MissingStave', 'The voice cannot draw tickables without staves.');\n            tickable.setContext(context);\n            tickable.drawWithStyle();\n        }\n    }\n}\n","import { Beam } from './beam.js';\nimport { Formatter } from './formatter.js';\nimport { Modifier } from './modifier.js';\nimport { StaveNote } from './stavenote.js';\nimport { StaveTie } from './stavetie.js';\nimport { Tables } from './tables.js';\nimport { TabTie } from './tabtie.js';\nimport { isStaveNote } from './typeguard.js';\nimport { log } from './util.js';\nimport { Voice } from './voice.js';\nfunction L(...args) {\n    if (GraceNoteGroup.DEBUG)\n        log('VexFlow.GraceNoteGroup', args);\n}\nexport class GraceNoteGroup extends Modifier {\n    static get CATEGORY() {\n        return \"GraceNoteGroup\";\n    }\n    static format(gracenoteGroups, state) {\n        const groupSpacingStave = 4;\n        const groupSpacingTab = 0;\n        if (!gracenoteGroups || gracenoteGroups.length === 0)\n            return false;\n        const groupList = [];\n        let prevNote = null;\n        let shift = 0;\n        for (let i = 0; i < gracenoteGroups.length; ++i) {\n            const gracenoteGroup = gracenoteGroups[i];\n            const note = gracenoteGroup.getNote();\n            const isStavenote = isStaveNote(note);\n            const spacing = isStavenote ? groupSpacingStave : groupSpacingTab;\n            if (isStavenote && note !== prevNote) {\n                for (let n = 0; n < note.keys.length; ++n) {\n                    shift = Math.max(note.getLeftDisplacedHeadPx(), shift);\n                }\n                prevNote = note;\n            }\n            groupList.push({ shift: shift, gracenoteGroup, spacing });\n        }\n        let groupShift = groupList[0].shift;\n        let formatWidth;\n        let right = false;\n        let left = false;\n        for (let i = 0; i < groupList.length; ++i) {\n            const gracenoteGroup = groupList[i].gracenoteGroup;\n            if (gracenoteGroup.position === Modifier.Position.RIGHT)\n                right = true;\n            else\n                left = true;\n            gracenoteGroup.preFormat();\n            formatWidth = gracenoteGroup.getWidth() + groupList[i].spacing;\n            groupShift = Math.max(formatWidth, groupShift);\n        }\n        for (let i = 0; i < groupList.length; ++i) {\n            const gracenoteGroup = groupList[i].gracenoteGroup;\n            formatWidth = gracenoteGroup.getWidth() + groupList[i].spacing;\n            gracenoteGroup.setSpacingFromNextModifier(groupShift - Math.min(formatWidth, groupShift) + StaveNote.minNoteheadPadding);\n        }\n        if (right)\n            state.rightShift += groupShift;\n        if (left)\n            state.leftShift += groupShift;\n        return true;\n    }\n    constructor(graceNotes, showSlur) {\n        super();\n        this.preFormatted = false;\n        this.position = Modifier.Position.LEFT;\n        this.graceNotes = graceNotes;\n        this.width = 0;\n        this.showSlur = showSlur;\n        this.slur = undefined;\n        this.voice = new Voice({\n            numBeats: 4,\n            beatValue: 4,\n            resolution: Tables.RESOLUTION,\n        }).setStrict(false);\n        this.renderOptions = {\n            slurYShift: 0,\n        };\n        this.beams = [];\n        this.voice.addTickables(this.graceNotes);\n        return this;\n    }\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        if (!this.formatter) {\n            this.formatter = new Formatter();\n        }\n        this.formatter.joinVoices([this.voice]).format([this.voice], 0, {});\n        this.setWidth(this.formatter.getMinTotalWidth());\n        this.preFormatted = true;\n    }\n    beamNotes(graceNotes) {\n        graceNotes = graceNotes || this.graceNotes;\n        if (graceNotes.length > 1) {\n            const beam = new Beam(graceNotes);\n            beam.renderOptions.beamWidth = 3;\n            beam.renderOptions.partialBeamLength = 4;\n            this.beams.push(beam);\n        }\n        return this;\n    }\n    setWidth(width) {\n        this.width = width;\n        return this;\n    }\n    getWidth() {\n        return this.width + StaveNote.minNoteheadPadding;\n    }\n    getGraceNotes() {\n        return this.graceNotes;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        L('Drawing grace note group for:', note);\n        this.alignSubNotesWithNote(this.getGraceNotes(), note, this.position);\n        this.graceNotes.forEach((graceNote) => graceNote.setContext(ctx).drawWithStyle());\n        this.beams.forEach((beam) => beam.setContext(ctx).drawWithStyle());\n        if (this.showSlur) {\n            const isStavenote = isStaveNote(note);\n            const TieClass = isStavenote ? StaveTie : TabTie;\n            this.slur = new TieClass({\n                lastNote: this.graceNotes[0],\n                firstNote: note,\n                firstIndexes: [0],\n                lastIndexes: [0],\n            });\n            this.slur.renderOptions.cp2 = 12;\n            this.slur.renderOptions.yShift = (isStavenote ? 7 : 5) + this.renderOptions.slurYShift;\n            this.slur.setContext(ctx).drawWithStyle();\n        }\n    }\n}\nGraceNoteGroup.DEBUG = false;\n","import { Formatter } from './formatter.js';\nimport { Modifier } from './modifier.js';\nimport { Tables } from './tables.js';\nimport { Voice } from './voice.js';\nexport class NoteSubGroup extends Modifier {\n    static get CATEGORY() {\n        return \"NoteSubGroup\";\n    }\n    static format(groups, state) {\n        if (!groups || groups.length === 0)\n            return false;\n        let width = 0;\n        for (let i = 0; i < groups.length; ++i) {\n            const group = groups[i];\n            group.preFormat();\n            width += group.getWidth();\n        }\n        state.leftShift += width;\n        return true;\n    }\n    constructor(subNotes) {\n        super();\n        this.preFormatted = false;\n        this.position = Modifier.Position.LEFT;\n        this.subNotes = subNotes;\n        this.subNotes.forEach((subNote) => {\n            subNote.setIgnoreTicks(false);\n        });\n        this.width = 0;\n        this.formatter = new Formatter();\n        this.voice = new Voice({\n            numBeats: 4,\n            beatValue: 4,\n            resolution: Tables.RESOLUTION,\n        }).setStrict(false);\n        this.voice.addTickables(this.subNotes);\n    }\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        this.formatter.joinVoices([this.voice]).format([this.voice], 0);\n        this.setWidth(this.formatter.getMinTotalWidth());\n        this.preFormatted = true;\n    }\n    setWidth(width) {\n        this.width = width;\n        return this;\n    }\n    getWidth() {\n        return this.width;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        this.alignSubNotesWithNote(this.subNotes, note);\n        this.subNotes.forEach((subNote) => subNote.setContext(ctx).drawWithStyle());\n    }\n}\n","import { getBottomY, getInitialOffset, getTopY } from './articulation.js';\nimport { Element } from './element.js';\nimport { Metrics } from './metrics.js';\nimport { Modifier, ModifierPosition } from './modifier.js';\nimport { Stem } from './stem.js';\nimport { Tables } from './tables.js';\nimport { log } from './util.js';\nfunction L(...args) {\n    if (Ornament.DEBUG)\n        log('VexFlow.Ornament', args);\n}\nexport class Ornament extends Modifier {\n    static get CATEGORY() {\n        return \"Ornament\";\n    }\n    static get minPadding() {\n        return Metrics.get('NoteHead.minPadding');\n    }\n    static format(ornaments, state) {\n        var _a, _b;\n        if (!ornaments || ornaments.length === 0)\n            return false;\n        let width = 0;\n        let rightShift = state.rightShift;\n        let leftShift = state.leftShift;\n        for (let i = 0; i < ornaments.length; ++i) {\n            const ornament = ornaments[i];\n            const increment = 2;\n            if (ornament.position === ModifierPosition.RIGHT) {\n                ornament.xShift += rightShift + 2;\n                rightShift += ornament.width + Ornament.minPadding;\n            }\n            else if (ornament.position === ModifierPosition.LEFT) {\n                ornament.xShift -= leftShift + ornament.width + 2;\n                leftShift += ornament.width + Ornament.minPadding;\n            }\n            else if (ornament.position === ModifierPosition.ABOVE) {\n                width = Math.max(ornament.getWidth(), width);\n                const note = ornament.getNote();\n                let curTop = note.getLineNumber(true) + state.topTextLine;\n                const stem = note.getStem();\n                if (stem && note.getStemDirection() === Stem.UP) {\n                    curTop += Math.abs(stem.getHeight()) / Tables.STAVE_LINE_DISTANCE;\n                }\n                const numLines = (_b = (_a = note.getStave()) === null || _a === void 0 ? void 0 : _a.getNumLines()) !== null && _b !== void 0 ? _b : 0;\n                if (curTop < numLines)\n                    state.topTextLine += numLines - curTop;\n                ornament.setTextLine(state.topTextLine);\n                state.topTextLine += increment;\n            }\n            else {\n                width = Math.max(ornament.getWidth(), width);\n                ornament.setTextLine(state.textLine);\n                state.textLine += increment;\n            }\n        }\n        state.leftShift = leftShift + width / 2;\n        state.rightShift = rightShift + width / 2;\n        return true;\n    }\n    static get ornamentNoteTransition() {\n        return ['flip', 'jazzTurn', 'smear'];\n    }\n    static get ornamentAttack() {\n        return ['scoop'];\n    }\n    static get ornamentAlignWithNoteHead() {\n        return ['doit', 'fall', 'fallLong', 'doitLong', 'scoop'];\n    }\n    static get ornamentRelease() {\n        return ['doit', 'fall', 'fallLong', 'doitLong', 'jazzTurn', 'smear', 'flip'];\n    }\n    static get ornamentLeft() {\n        return ['scoop'];\n    }\n    static get ornamentRight() {\n        return ['doit', 'fall', 'fallLong', 'doitLong'];\n    }\n    static get ornamentYShift() {\n        return ['fallLong'];\n    }\n    static get ornamentArticulation() {\n        return ['bend', 'plungerClosed', 'plungerOpen'];\n    }\n    constructor(type) {\n        super();\n        this.position = ModifierPosition.ABOVE;\n        if (Ornament.ornamentRight.indexOf(type) >= 0) {\n            this.position = ModifierPosition.RIGHT;\n        }\n        if (Ornament.ornamentLeft.indexOf(type) >= 0) {\n            this.position = ModifierPosition.LEFT;\n        }\n        this.type = type;\n        this.delayed = false;\n        this.renderOptions = {\n            accidentalLowerPadding: 3,\n            accidentalUpperPadding: 3,\n        };\n        this.adjustForStemDirection = false;\n        this.ornamentAlignWithNoteHead = Ornament.ornamentAlignWithNoteHead.indexOf(this.type) >= 0;\n        if (Ornament.ornamentNoteTransition.indexOf(this.type) >= 0) {\n            this.delayed = true;\n        }\n        this.text = Tables.ornamentCodes(this.type);\n    }\n    setNote(note) {\n        super.setNote(note);\n        if (Ornament.ornamentArticulation.indexOf(this.type) >= 0) {\n            if (note.getLineNumber() >= 3) {\n                this.position = Modifier.Position.ABOVE;\n            }\n            else {\n                this.position = Modifier.Position.BELOW;\n            }\n        }\n        return this;\n    }\n    setDelayed(delayed) {\n        this.delayed = delayed;\n        return this;\n    }\n    setUpperAccidental(accid) {\n        this.accidentalUpper = new Element();\n        this.accidentalUpper.setText(Tables.accidentalCodes(accid));\n        return this;\n    }\n    setLowerAccidental(accid) {\n        this.accidentalLower = new Element();\n        this.accidentalLower.setText(Tables.accidentalCodes(accid));\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const stave = note.checkStave();\n        ctx.openGroup('ornament', this.getAttribute('id'));\n        const start = note.getModifierStartXY(this.position, this.index);\n        let glyphX = start.x;\n        const staffSpace = stave.getSpacingBetweenLines();\n        const initialOffset = getInitialOffset(note, this.position);\n        let glyphY = this.ornamentAlignWithNoteHead ? start.y : 0;\n        if (this.position === ModifierPosition.ABOVE) {\n            glyphY = getTopY(note, this.textLine) - (this.textLine + initialOffset) * staffSpace;\n        }\n        if (this.position === ModifierPosition.BELOW) {\n            glyphY = getBottomY(note, this.textLine) + (this.textLine + initialOffset + 1.5) * staffSpace;\n        }\n        if (this.delayed) {\n            let delayXShift = 0;\n            const startX = note.getTickContext().getX();\n            if (this.delayXShift !== undefined) {\n                delayXShift = this.delayXShift;\n            }\n            else {\n                const tickables = note.getVoice().getTickables();\n                const index = tickables.indexOf(note);\n                const nextContext = index + 1 < tickables.length ? tickables[index + 1].checkTickContext() : undefined;\n                if (nextContext) {\n                    delayXShift += (nextContext.getX() - startX) * 0.5;\n                }\n                else {\n                    delayXShift += (stave.getX() + stave.getWidth() - glyphX) * 0.5;\n                }\n                this.delayXShift = delayXShift;\n            }\n            glyphX += delayXShift;\n        }\n        L('Rendering ornament: ', this.text.charCodeAt(0), glyphX, glyphY);\n        if (this.accidentalLower) {\n            this.accidentalLower.renderText(ctx, glyphX + this.xShift - this.accidentalLower.getWidth() * 0.5, glyphY + this.yShift - this.accidentalLower.getTextMetrics().actualBoundingBoxDescent);\n            glyphY -= this.accidentalLower.getHeight() + this.renderOptions.accidentalLowerPadding;\n        }\n        if (Ornament.ornamentYShift.indexOf(this.type) >= 0) {\n            this.yShift += this.getHeight();\n        }\n        this.x =\n            glyphX -\n                (this.position === ModifierPosition.ABOVE || this.position === ModifierPosition.BELOW ? this.width * 0.5 : 0);\n        this.y = glyphY;\n        this.renderText(ctx, 0, 0);\n        if (this.accidentalUpper) {\n            glyphY -= this.getHeight() + this.renderOptions.accidentalUpperPadding;\n            this.accidentalUpper.renderText(ctx, glyphX + this.xShift - this.accidentalUpper.getWidth() * 0.5, glyphY + this.yShift - this.accidentalUpper.getTextMetrics().actualBoundingBoxDescent);\n        }\n        ctx.closeGroup();\n    }\n}\nOrnament.DEBUG = false;\n","import { Modifier, ModifierPosition } from './modifier.js';\nexport class Parenthesis extends Modifier {\n    static get CATEGORY() {\n        return \"Parenthesis\";\n    }\n    static buildAndAttach(notes) {\n        for (const note of notes) {\n            for (let i = 0; i < note.keys.length; i++) {\n                note.addModifier(new Parenthesis(ModifierPosition.LEFT), i);\n                note.addModifier(new Parenthesis(ModifierPosition.RIGHT), i);\n            }\n        }\n    }\n    static format(parentheses, state) {\n        if (!parentheses || parentheses.length === 0)\n            return false;\n        let xWidthL = 0;\n        let xWidthR = 0;\n        for (let i = 0; i < parentheses.length; ++i) {\n            const parenthesis = parentheses[i];\n            const note = parenthesis.getNote();\n            const pos = parenthesis.getPosition();\n            const index = parenthesis.checkIndex();\n            let shift = 0;\n            if (pos === ModifierPosition.RIGHT) {\n                shift = note.getRightParenthesisPx(index);\n                xWidthR = xWidthR > shift + parenthesis.width ? xWidthR : shift + parenthesis.width;\n            }\n            if (pos === ModifierPosition.LEFT) {\n                shift = note.getLeftParenthesisPx(index) + parenthesis.width;\n                xWidthL = xWidthL > shift + parenthesis.width ? xWidthL : shift + parenthesis.width;\n            }\n            parenthesis.setXShift(shift);\n        }\n        state.leftShift += xWidthL;\n        state.rightShift += xWidthR;\n        return true;\n    }\n    constructor(position) {\n        super();\n        this.position = position !== null && position !== void 0 ? position : Modifier.Position.LEFT;\n        if (this.position === Modifier.Position.RIGHT) {\n            this.text = '\\uE0F6';\n        }\n        else if (this.position === Modifier.Position.LEFT) {\n            this.text = '\\uE0F5';\n        }\n    }\n    setNote(note) {\n        this.note = note;\n        this.setFont(note.getFont());\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(this.position, this.index, { forceFlagRight: true });\n        this.renderText(ctx, start.x, start.y);\n    }\n}\n","import { Element } from './element.js';\nimport { Font, FontStyle, FontWeight } from './font.js';\nimport { Metrics } from './metrics.js';\nimport { RenderContext } from './rendercontext.js';\nimport { Tables } from './tables.js';\nimport { normalizeAngle, prefix, RuntimeError } from './util.js';\nconst ATTRIBUTES_TO_IGNORE = {\n    path: {\n        x: true,\n        y: true,\n        width: true,\n        height: true,\n        'font-family': true,\n        'font-weight': true,\n        'font-style': true,\n        'font-size': true,\n    },\n    rect: {\n        'font-family': true,\n        'font-weight': true,\n        'font-style': true,\n        'font-size': true,\n    },\n    text: {\n        width: true,\n        height: true,\n    },\n};\nconst SVG_NS = 'http://www.w3.org/2000/svg';\nconst TWO_PI = 2 * Math.PI;\nexport class SVGContext extends RenderContext {\n    constructor(element) {\n        super();\n        this.width = 0;\n        this.height = 0;\n        this.precision = 1;\n        this.backgroundFillStyle = 'white';\n        this.fontCSSString = '';\n        this.element = element;\n        this.precision = Math.pow(10, Tables.RENDER_PRECISION_PLACES);\n        const svg = this.create('svg');\n        svg.setAttribute('pointer-events', 'none');\n        this.element.appendChild(svg);\n        this.svg = svg;\n        this.parent = this.svg;\n        this.groups = [this.svg];\n        this.path = '';\n        this.pen = { x: NaN, y: NaN };\n        const defaultFontAttributes = {\n            'font-family': Metrics.get('fontFamily'),\n            'font-size': '10pt',\n            'font-weight': FontWeight.NORMAL,\n            'font-style': FontStyle.NORMAL,\n        };\n        this.state = Object.assign({ scaleX: 1, scaleY: 1 }, defaultFontAttributes);\n        this.attributes = Object.assign({ 'stroke-width': 1.0, 'stroke-dasharray': 'none', fill: 'black', stroke: 'black', shadowBlur: 0, shadowColor: 'black' }, defaultFontAttributes);\n        this.groupAttributes = [];\n        this.applyAttributes(svg, this.attributes);\n        this.groupAttributes.push(Object.assign({}, this.attributes));\n        this.stateStack = [];\n    }\n    round(n) {\n        return Math.round(n * this.precision) / this.precision;\n    }\n    create(svgElementType) {\n        return document.createElementNS(SVG_NS, svgElementType);\n    }\n    openGroup(cls, id) {\n        const group = this.create('g');\n        this.groups.push(group);\n        this.parent.appendChild(group);\n        this.parent = group;\n        if (cls)\n            group.setAttribute('class', prefix(cls));\n        if (id)\n            group.setAttribute('id', prefix(id));\n        this.applyAttributes(group, this.attributes);\n        this.groupAttributes.push(Object.assign(Object.assign({}, this.groupAttributes[this.groupAttributes.length - 1]), this.attributes));\n        return group;\n    }\n    closeGroup() {\n        this.groups.pop();\n        this.groupAttributes.pop();\n        this.parent = this.groups[this.groups.length - 1];\n    }\n    openRotation(angleDegrees, x, y) {\n        this.openGroup().setAttribute('transform', `translate(${x},${y}) rotate(${angleDegrees}) translate(-${x},-${y})`);\n    }\n    closeRotation() {\n        this.closeGroup();\n    }\n    add(elem) {\n        this.parent.appendChild(elem);\n    }\n    setFillStyle(style) {\n        this.attributes.fill = style;\n        return this;\n    }\n    setBackgroundFillStyle(style) {\n        this.backgroundFillStyle = style;\n        return this;\n    }\n    setStrokeStyle(style) {\n        this.attributes.stroke = style;\n        return this;\n    }\n    setShadowColor(color) {\n        this.attributes.shadowColor = color;\n        return this;\n    }\n    setShadowBlur(blur) {\n        this.attributes.shadowBlur = blur;\n        return this;\n    }\n    setLineWidth(width) {\n        this.attributes['stroke-width'] = width;\n        return this;\n    }\n    setLineDash(lineDash) {\n        if (Object.prototype.toString.call(lineDash) === '[object Array]') {\n            this.attributes['stroke-dasharray'] = lineDash.join(',');\n            return this;\n        }\n        else {\n            throw new RuntimeError('ArgumentError', 'lineDash must be an array of integers.');\n        }\n    }\n    setLineCap(capType) {\n        this.attributes['stroke-linecap'] = capType;\n        return this;\n    }\n    resize(width, height) {\n        this.width = width;\n        this.height = height;\n        this.element.style.width = width.toString();\n        this.svg.style.width = width.toString();\n        this.svg.style.height = height.toString();\n        const attributes = {\n            width,\n            height,\n        };\n        this.applyAttributes(this.svg, attributes);\n        this.scale(this.state.scaleX, this.state.scaleY);\n        return this;\n    }\n    scale(x, y) {\n        this.state.scaleX = this.state.scaleX ? this.state.scaleX * x : x;\n        this.state.scaleY = this.state.scaleY ? this.state.scaleY * y : y;\n        const visibleWidth = this.width / this.state.scaleX;\n        const visibleHeight = this.height / this.state.scaleY;\n        this.setViewBox(0, 0, visibleWidth, visibleHeight);\n        return this;\n    }\n    setViewBox(viewBoxOrMinX, minY, width, height) {\n        if (typeof viewBoxOrMinX === 'string') {\n            this.svg.setAttribute('viewBox', viewBoxOrMinX);\n        }\n        else {\n            const viewBoxString = viewBoxOrMinX + ' ' + minY + ' ' + width + ' ' + height;\n            this.svg.setAttribute('viewBox', viewBoxString);\n        }\n    }\n    applyAttributes(element, attributes) {\n        const attrNamesToIgnore = ATTRIBUTES_TO_IGNORE[element.nodeName];\n        for (const attrName in attributes) {\n            if (attrNamesToIgnore && attrNamesToIgnore[attrName]) {\n                continue;\n            }\n            if (attributes[attrName] &&\n                (this.groupAttributes.length === 0 ||\n                    attributes[attrName] != this.groupAttributes[this.groupAttributes.length - 1][attrName]))\n                element.setAttributeNS(null, attrName, attributes[attrName]);\n        }\n        return element;\n    }\n    clear() {\n        while (this.svg.lastChild) {\n            this.svg.removeChild(this.svg.lastChild);\n        }\n    }\n    rect(x, y, width, height, attributes) {\n        if (height < 0) {\n            y += height;\n            height *= -1;\n        }\n        const rectangle = this.create('rect');\n        attributes = attributes !== null && attributes !== void 0 ? attributes : { fill: 'none', 'stroke-width': this.attributes['stroke-width'], stroke: 'black' };\n        x = this.round(x);\n        y = this.round(y);\n        width = this.round(width);\n        height = this.round(height);\n        this.applyAttributes(rectangle, Object.assign({ x, y, width, height }, attributes));\n        this.add(rectangle);\n        return this;\n    }\n    fillRect(x, y, width, height) {\n        const attributes = { fill: this.attributes.fill, stroke: 'none' };\n        this.rect(x, y, width, height, attributes);\n        return this;\n    }\n    pointerRect(x, y, width, height) {\n        const attributes = { opacity: '0', 'pointer-events': 'auto' };\n        this.rect(x, y, width, height, attributes);\n        return this;\n    }\n    clearRect(x, y, width, height) {\n        this.rect(x, y, width, height, { fill: this.backgroundFillStyle, stroke: 'none' });\n        return this;\n    }\n    beginPath() {\n        this.path = '';\n        this.pen.x = NaN;\n        this.pen.y = NaN;\n        return this;\n    }\n    moveTo(x, y) {\n        x = this.round(x);\n        y = this.round(y);\n        this.path += 'M' + x + ' ' + y;\n        this.pen.x = x;\n        this.pen.y = y;\n        return this;\n    }\n    lineTo(x, y) {\n        x = this.round(x);\n        y = this.round(y);\n        this.path += 'L' + x + ' ' + y;\n        this.pen.x = x;\n        this.pen.y = y;\n        return this;\n    }\n    bezierCurveTo(x1, y1, x2, y2, x, y) {\n        x = this.round(x);\n        y = this.round(y);\n        x1 = this.round(x1);\n        y1 = this.round(y1);\n        x2 = this.round(x2);\n        y2 = this.round(y2);\n        this.path += 'C' + x1 + ' ' + y1 + ',' + x2 + ' ' + y2 + ',' + x + ' ' + y;\n        this.pen.x = x;\n        this.pen.y = y;\n        return this;\n    }\n    quadraticCurveTo(x1, y1, x, y) {\n        x = this.round(x);\n        y = this.round(y);\n        x1 = this.round(x1);\n        y1 = this.round(y1);\n        this.path += 'Q' + x1 + ' ' + y1 + ',' + x + ' ' + y;\n        this.pen.x = x;\n        this.pen.y = y;\n        return this;\n    }\n    arc(x, y, radius, startAngle, endAngle, counterclockwise) {\n        let x0 = x + radius * Math.cos(startAngle);\n        let y0 = y + radius * Math.sin(startAngle);\n        x0 = this.round(x0);\n        y0 = this.round(y0);\n        const tmpStartTest = normalizeAngle(startAngle);\n        const tmpEndTest = normalizeAngle(endAngle);\n        if ((!counterclockwise && endAngle - startAngle >= TWO_PI) ||\n            (counterclockwise && startAngle - endAngle >= TWO_PI) ||\n            tmpStartTest === tmpEndTest) {\n            let x1 = x + radius * Math.cos(startAngle + Math.PI);\n            let y1 = y + radius * Math.sin(startAngle + Math.PI);\n            x1 = this.round(x1);\n            y1 = this.round(y1);\n            radius = this.round(radius);\n            this.path += `M${x0} ${y0} A${radius} ${radius} 0 0 0 ${x1} ${y1} `;\n            this.path += `A${radius} ${radius} 0 0 0 ${x0} ${y0}`;\n            this.pen.x = x0;\n            this.pen.y = y0;\n        }\n        else {\n            let x1 = x + radius * Math.cos(endAngle);\n            let y1 = y + radius * Math.sin(endAngle);\n            startAngle = tmpStartTest;\n            endAngle = tmpEndTest;\n            let large;\n            if (Math.abs(endAngle - startAngle) < Math.PI) {\n                large = counterclockwise;\n            }\n            else {\n                large = !counterclockwise;\n            }\n            if (startAngle > endAngle) {\n                large = !large;\n            }\n            const sweep = !counterclockwise;\n            x1 = this.round(x1);\n            y1 = this.round(y1);\n            radius = this.round(radius);\n            this.path += `M${x0} ${y0} A${radius} ${radius} 0 ${+large} ${+sweep} ${x1} ${y1}`;\n            this.pen.x = x1;\n            this.pen.y = y1;\n        }\n        return this;\n    }\n    closePath() {\n        this.path += 'Z';\n        return this;\n    }\n    getShadowStyle() {\n        return `filter: drop-shadow(0 0 ${this.attributes.shadowBlur / 1.5}px ${this.attributes.shadowColor})`;\n    }\n    fill(attributes) {\n        const path = this.create('path');\n        if (typeof attributes === 'undefined') {\n            attributes = Object.assign(Object.assign({}, this.attributes), { stroke: 'none' });\n        }\n        attributes.d = this.path;\n        if (this.attributes.shadowBlur > 0) {\n            attributes.style = this.getShadowStyle();\n        }\n        this.applyAttributes(path, attributes);\n        this.add(path);\n        return this;\n    }\n    stroke() {\n        const path = this.create('path');\n        const attributes = Object.assign(Object.assign({}, this.attributes), { fill: 'none', d: this.path });\n        if (this.attributes.shadowBlur > 0) {\n            attributes.style = this.getShadowStyle();\n        }\n        this.applyAttributes(path, attributes);\n        this.add(path);\n        return this;\n    }\n    measureText(text) {\n        SVGContext.measureTextElement.setText(text);\n        SVGContext.measureTextElement.setFont(this.attributes['font-family'], this.attributes['font-size'], this.attributes['font-weight'], this.attributes['font-style']);\n        const bb = SVGContext.measureTextElement.getBoundingBox();\n        return { x: bb.x, y: bb.y, width: bb.w, height: bb.h };\n    }\n    fillText(text, x, y) {\n        if (!text || text.length <= 0) {\n            return this;\n        }\n        x = this.round(x);\n        y = this.round(y);\n        const attributes = Object.assign(Object.assign({}, this.attributes), { stroke: 'none', x,\n            y });\n        const txt = this.create('text');\n        txt.textContent = text;\n        this.applyAttributes(txt, attributes);\n        this.add(txt);\n        return this;\n    }\n    save() {\n        this.stateStack.push({\n            state: structuredClone(this.state),\n            attributes: structuredClone(this.attributes),\n        });\n        return this;\n    }\n    restore() {\n        const savedState = this.stateStack.pop();\n        if (savedState) {\n            const state = savedState;\n            this.state = structuredClone(state.state);\n            this.attributes = structuredClone(state.attributes);\n        }\n        return this;\n    }\n    set fillStyle(style) {\n        this.setFillStyle(style);\n    }\n    get fillStyle() {\n        return this.attributes.fill;\n    }\n    set strokeStyle(style) {\n        this.setStrokeStyle(style);\n    }\n    get strokeStyle() {\n        return this.attributes.stroke;\n    }\n    setFont(f, size, weight, style) {\n        const fontInfo = Font.validate(f, size, weight, style);\n        this.fontCSSString = Font.toCSSString(fontInfo);\n        const fontAttributes = {\n            'font-family': fontInfo.family,\n            'font-size': fontInfo.size,\n            'font-weight': fontInfo.weight,\n            'font-style': fontInfo.style,\n        };\n        this.attributes = Object.assign(Object.assign({}, this.attributes), fontAttributes);\n        this.state = Object.assign(Object.assign({}, this.state), fontAttributes);\n        return this;\n    }\n    getFont() {\n        return this.fontCSSString;\n    }\n}\nSVGContext.measureTextElement = new Element();\n","import { CanvasContext } from './canvascontext.js';\nimport { SVGContext } from './svgcontext.js';\nimport { isRenderContext } from './typeguard.js';\nimport { RuntimeError } from './util.js';\nimport { isHTMLCanvas, isHTMLDiv } from './web.js';\nexport var RendererBackends;\n(function (RendererBackends) {\n    RendererBackends[RendererBackends[\"CANVAS\"] = 1] = \"CANVAS\";\n    RendererBackends[RendererBackends[\"SVG\"] = 2] = \"SVG\";\n})(RendererBackends || (RendererBackends = {}));\nexport var RendererLineEndType;\n(function (RendererLineEndType) {\n    RendererLineEndType[RendererLineEndType[\"NONE\"] = 1] = \"NONE\";\n    RendererLineEndType[RendererLineEndType[\"UP\"] = 2] = \"UP\";\n    RendererLineEndType[RendererLineEndType[\"DOWN\"] = 3] = \"DOWN\";\n})(RendererLineEndType || (RendererLineEndType = {}));\nexport class Renderer {\n    static buildContext(elementId, backend, width, height, background = '#FFF') {\n        const renderer = new Renderer(elementId, backend);\n        if (width && height) {\n            renderer.resize(width, height);\n        }\n        const ctx = renderer.getContext();\n        ctx.setBackgroundFillStyle(background);\n        Renderer.lastContext = ctx;\n        return ctx;\n    }\n    static getCanvasContext(elementId, width, height, background) {\n        return Renderer.buildContext(elementId, Renderer.Backends.CANVAS, width, height, background);\n    }\n    static getSVGContext(elementId, width, height, background) {\n        return Renderer.buildContext(elementId, Renderer.Backends.SVG, width, height, background);\n    }\n    static drawDashedLine(context, fromX, fromY, toX, toY, dashPattern) {\n        context.beginPath();\n        const dx = toX - fromX;\n        const dy = toY - fromY;\n        const angle = Math.atan2(dy, dx);\n        let x = fromX;\n        let y = fromY;\n        context.moveTo(fromX, fromY);\n        let idx = 0;\n        let draw = true;\n        while (!((dx < 0 ? x <= toX : x >= toX) && (dy < 0 ? y <= toY : y >= toY))) {\n            const dashLength = dashPattern[idx++ % dashPattern.length];\n            const nx = x + Math.cos(angle) * dashLength;\n            x = dx < 0 ? Math.max(toX, nx) : Math.min(toX, nx);\n            const ny = y + Math.sin(angle) * dashLength;\n            y = dy < 0 ? Math.max(toY, ny) : Math.min(toY, ny);\n            if (draw) {\n                context.lineTo(x, y);\n            }\n            else {\n                context.moveTo(x, y);\n            }\n            draw = !draw;\n        }\n        context.closePath();\n        context.stroke();\n    }\n    constructor(arg0, arg1) {\n        if (isRenderContext(arg0)) {\n            this.ctx = arg0;\n        }\n        else {\n            if (arg1 === undefined) {\n                throw new RuntimeError('InvalidArgument', 'Missing backend argument');\n            }\n            const backend = arg1;\n            let element;\n            if (typeof arg0 === 'string') {\n                const maybeElement = document.getElementById(arg0);\n                if (!maybeElement) {\n                    throw new RuntimeError('BadElementId', `Can't find element with ID \"${maybeElement}\"`);\n                }\n                element = maybeElement;\n            }\n            else {\n                element = arg0;\n            }\n            if (backend === Renderer.Backends.CANVAS) {\n                if (!isHTMLCanvas(element)) {\n                    throw new RuntimeError('BadElement', 'CANVAS context requires an HTMLCanvasElement.');\n                }\n                const context = element.getContext('2d', { willReadFrequently: true });\n                if (!context) {\n                    throw new RuntimeError('BadElement', \"Can't get canvas context\");\n                }\n                this.ctx = new CanvasContext(context);\n            }\n            else if (backend === Renderer.Backends.SVG) {\n                if (!isHTMLDiv(element)) {\n                    throw new RuntimeError('BadElement', 'SVG context requires an HTMLDivElement.');\n                }\n                this.ctx = new SVGContext(element);\n            }\n            else {\n                throw new RuntimeError('InvalidBackend', `No support for backend: ${backend}`);\n            }\n        }\n    }\n    resize(width, height) {\n        this.ctx.resize(width, height);\n        return this;\n    }\n    getContext() {\n        return this.ctx;\n    }\n}\nRenderer.Backends = RendererBackends;\nRenderer.LineEndType = RendererLineEndType;\nRenderer.lastContext = undefined;\n","import { Element } from './element.js';\nimport { Font } from './font.js';\nimport { Glyphs } from './glyphs.js';\nimport { Metrics } from './metrics.js';\nimport { Note } from './note.js';\nexport var TextJustification;\n(function (TextJustification) {\n    TextJustification[TextJustification[\"LEFT\"] = 1] = \"LEFT\";\n    TextJustification[TextJustification[\"CENTER\"] = 2] = \"CENTER\";\n    TextJustification[TextJustification[\"RIGHT\"] = 3] = \"RIGHT\";\n})(TextJustification || (TextJustification = {}));\nexport class TextNote extends Note {\n    static get CATEGORY() {\n        return \"TextNote\";\n    }\n    static get GLYPHS() {\n        return {\n            segno: Glyphs.segno,\n            tr: Glyphs.ornamentTrill,\n            mordent: Glyphs.ornamentMordent,\n            mordentUpper: Glyphs.ornamentShortTrill,\n            mordentLower: Glyphs.ornamentMordent,\n            f: Glyphs.dynamicForte,\n            p: Glyphs.dynamicPiano,\n            m: Glyphs.dynamicMezzo,\n            s: Glyphs.dynamicSforzando,\n            z: Glyphs.dynamicZ,\n            coda: Glyphs.coda,\n            pedalOpen: Glyphs.keyboardPedalPed,\n            pedalClose: Glyphs.keyboardPedalUp,\n            caesuraStraight: Glyphs.caesura,\n            caesuraCurved: Glyphs.caesuraCurved,\n            breath: Glyphs.breathMarkComma,\n            tick: Glyphs.breathMarkTick,\n            turn: Glyphs.ornamentTurn,\n            turnInverted: Glyphs.ornamentTurnSlash,\n        };\n    }\n    constructor(noteStruct) {\n        var _a, _b;\n        super(noteStruct);\n        this.text = (_a = noteStruct.text) !== null && _a !== void 0 ? _a : '';\n        if (noteStruct.glyph) {\n            this.text += TextNote.GLYPHS[noteStruct.glyph] || noteStruct.glyph;\n        }\n        if (noteStruct.font) {\n            this.setFont(noteStruct.font);\n        }\n        else if (noteStruct.glyph === undefined) {\n            this.setFont(Metrics.getFontInfo('TextNote.text.fontSize'));\n        }\n        const smallerFontSize = Font.convertSizeToPointValue(this.fontInfo.size) * 0.769231;\n        if (noteStruct.superscript) {\n            this.superscript = new Element('TexNote.subSuper');\n            this.superscript.setText(noteStruct.superscript);\n            this.superscript.setFontSize(smallerFontSize);\n        }\n        if (noteStruct.subscript) {\n            this.subscript = new Element('TexNote.subSuper');\n            this.subscript.setText(noteStruct.subscript);\n            this.subscript.setFontSize(smallerFontSize);\n        }\n        this.line = (_b = noteStruct.line) !== null && _b !== void 0 ? _b : 0;\n        this.smooth = noteStruct.smooth || false;\n        this.ignoreTicks = noteStruct.ignoreTicks || false;\n        this.justification = TextJustification.LEFT;\n    }\n    setJustification(just) {\n        this.justification = just;\n        return this;\n    }\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    getLine() {\n        return this.line;\n    }\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        const tickContext = this.checkTickContext(`Can't preformat without a TickContext.`);\n        if (this.justification === TextJustification.CENTER) {\n            this.leftDisplacedHeadPx = this.width / 2;\n        }\n        else if (this.justification === TextJustification.RIGHT) {\n            this.leftDisplacedHeadPx = this.width;\n        }\n        this.rightDisplacedHeadPx = tickContext.getMetrics().glyphPx / 2;\n        this.preFormatted = true;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const stave = this.checkStave();\n        const tickContext = this.checkTickContext(`Can't draw without a TickContext.`);\n        this.setRendered();\n        let x = this.getAbsoluteX() + tickContext.getMetrics().glyphPx / 2;\n        const width = this.getWidth();\n        if (this.justification === TextJustification.CENTER) {\n            x -= width / 2;\n        }\n        else if (this.justification === TextJustification.RIGHT) {\n            x -= width;\n        }\n        const y = stave.getYForLine(this.line + -3);\n        this.renderText(ctx, x, y);\n        const height = this.getHeight();\n        if (this.superscript) {\n            this.superscript.renderText(ctx, x + this.width + 2, y - height / 2.2);\n        }\n        if (this.subscript) {\n            this.subscript.renderText(ctx, x + this.width + 2, y + height / 2.2 - 1);\n        }\n    }\n}\nTextNote.Justification = TextJustification;\n","import { StaveModifier } from './stavemodifier.js';\nexport var VoltaType;\n(function (VoltaType) {\n    VoltaType[VoltaType[\"NONE\"] = 1] = \"NONE\";\n    VoltaType[VoltaType[\"BEGIN\"] = 2] = \"BEGIN\";\n    VoltaType[VoltaType[\"MID\"] = 3] = \"MID\";\n    VoltaType[VoltaType[\"END\"] = 4] = \"END\";\n    VoltaType[VoltaType[\"BEGIN_END\"] = 5] = \"BEGIN_END\";\n})(VoltaType || (VoltaType = {}));\nexport class Volta extends StaveModifier {\n    static get CATEGORY() {\n        return \"Volta\";\n    }\n    static get type() {\n        return VoltaType;\n    }\n    constructor(type, label, x, yShift) {\n        super();\n        this.type = type;\n        this.x = x;\n        this.yShift = yShift;\n        this.text = label;\n    }\n    draw() {\n        const stave = this.checkStave();\n        const x = stave.getModifierXShift(this.getPosition());\n        const ctx = stave.checkContext();\n        this.setRendered();\n        let width = stave.getWidth() - x;\n        const topY = stave.getYForTopText(stave.getNumLines()) + this.yShift;\n        const vertHeight = 1.5 * stave.getSpacingBetweenLines();\n        switch (this.type) {\n            case VoltaType.BEGIN:\n                ctx.fillRect(this.x + x, topY, 1, vertHeight);\n                break;\n            case VoltaType.END:\n                width -= 5;\n                ctx.fillRect(this.x + x + width, topY, 1, vertHeight);\n                break;\n            case VoltaType.BEGIN_END:\n                width -= 3;\n                ctx.fillRect(this.x + x, topY, 1, vertHeight);\n                ctx.fillRect(this.x + x + width, topY, 1, vertHeight);\n                break;\n            default:\n                break;\n        }\n        if (this.type === VoltaType.BEGIN || this.type === VoltaType.BEGIN_END) {\n            this.renderText(ctx, x + 5, topY - this.yShift + 15);\n        }\n        ctx.fillRect(this.x + x, topY, width, 1);\n    }\n}\n","import { Metrics } from './metrics.js';\nimport { Modifier, ModifierPosition } from './modifier.js';\nimport { Renderer } from './renderer.js';\nimport { Stem } from './stem.js';\nimport { Tables } from './tables.js';\nimport { isStaveNote, isStemmableNote } from './typeguard.js';\nimport { RuntimeError } from './util.js';\nexport class StringNumber extends Modifier {\n    static get CATEGORY() {\n        return \"StringNumber\";\n    }\n    static format(nums, state) {\n        const leftShift = state.leftShift;\n        const rightShift = state.rightShift;\n        const numSpacing = 1;\n        if (!nums || nums.length === 0)\n            return false;\n        const numsList = [];\n        let prevNote = null;\n        let extraXSpaceForDisplacedNotehead = 0;\n        let shiftRight = 0;\n        const modLines = 0;\n        for (let i = 0; i < nums.length; ++i) {\n            const num = nums[i];\n            const note = num.getNote();\n            const pos = num.getPosition();\n            if (!isStaveNote(note)) {\n                throw new RuntimeError('NoStaveNote');\n            }\n            const index = num.checkIndex();\n            const props = note.getKeyProps()[index];\n            const mc = note.getModifierContext();\n            const verticalSpaceNeeded = (num.radius * 2) / Tables.STAVE_LINE_DISTANCE + 0.5;\n            if (mc) {\n                if (pos === ModifierPosition.ABOVE) {\n                    num.textLine = mc.getState().topTextLine;\n                    state.topTextLine += verticalSpaceNeeded;\n                }\n                else if (pos === ModifierPosition.BELOW) {\n                    num.textLine = mc.getState().textLine;\n                    state.textLine += verticalSpaceNeeded;\n                }\n            }\n            if (note !== prevNote) {\n                for (let n = 0; n < note.keys.length; ++n) {\n                    if (pos === Modifier.Position.LEFT) {\n                        extraXSpaceForDisplacedNotehead = Math.max(note.getLeftDisplacedHeadPx(), extraXSpaceForDisplacedNotehead);\n                    }\n                    if (rightShift === 0) {\n                        shiftRight = Math.max(note.getRightDisplacedHeadPx(), shiftRight);\n                    }\n                }\n                prevNote = note;\n            }\n            const glyphLine = modLines === 0 ? props.line : modLines;\n            numsList.push({\n                pos,\n                note,\n                num,\n                line: glyphLine,\n                shiftL: extraXSpaceForDisplacedNotehead,\n                shiftR: shiftRight,\n            });\n        }\n        numsList.sort((a, b) => b.line - a.line);\n        let numShiftR = 0;\n        let xWidthL = 0;\n        let xWidthR = 0;\n        let lastLine = null;\n        let lastNote = null;\n        for (let i = 0; i < numsList.length; ++i) {\n            const note = numsList[i].note;\n            const pos = numsList[i].pos;\n            const num = numsList[i].num;\n            const line = numsList[i].line;\n            const shiftR = numsList[i].shiftR;\n            if (line !== lastLine || note !== lastNote) {\n                numShiftR = rightShift + shiftR;\n            }\n            const numWidth = num.getWidth() + numSpacing;\n            let numXShift = 0;\n            if (pos === Modifier.Position.LEFT) {\n                num.setXShift(leftShift + extraXSpaceForDisplacedNotehead);\n                numXShift = numWidth;\n                xWidthL = Math.max(numXShift, xWidthL);\n            }\n            else if (pos === Modifier.Position.RIGHT) {\n                num.setXShift(numShiftR);\n                numXShift += numWidth;\n                xWidthR = numXShift > xWidthR ? numXShift : xWidthR;\n            }\n            lastLine = line;\n            lastNote = note;\n        }\n        state.leftShift += xWidthL;\n        state.rightShift += xWidthR;\n        return true;\n    }\n    constructor(number) {\n        super();\n        this.stringNumber = number;\n        this.position = Modifier.Position.ABOVE;\n        this.xShift = 0;\n        this.yShift = 0;\n        this.textLine = 0;\n        this.stemOffset = 0;\n        this.xOffset = 0;\n        this.yOffset = 0;\n        this.dashed = true;\n        this.leg = Renderer.LineEndType.NONE;\n        this.radius = 8;\n        this.drawCircle = true;\n        this.setWidth(this.radius * 2 + 4);\n    }\n    setLineEndType(leg) {\n        if (leg >= Renderer.LineEndType.NONE && leg <= Renderer.LineEndType.DOWN) {\n            this.leg = leg;\n        }\n        return this;\n    }\n    setStringNumber(number) {\n        this.stringNumber = number;\n        return this;\n    }\n    setOffsetX(x) {\n        this.xOffset = x;\n        return this;\n    }\n    setOffsetY(y) {\n        this.yOffset = y;\n        return this;\n    }\n    setLastNote(note) {\n        this.lastNote = note;\n        return this;\n    }\n    setDashed(dashed) {\n        this.dashed = dashed;\n        return this;\n    }\n    setDrawCircle(drawCircle) {\n        this.drawCircle = drawCircle;\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(this.position, this.index);\n        const stemDirection = note.hasStem() ? note.getStemDirection() : Stem.UP;\n        let dotX = start.x + this.xShift + this.xOffset;\n        let stemExt = {};\n        if (note.hasStem()) {\n            stemExt = note.checkStem().getExtents();\n        }\n        let dotY = start.y + this.yShift + this.yOffset;\n        switch (this.position) {\n            case Modifier.Position.ABOVE:\n                {\n                    const ys = note.getYs();\n                    dotY = ys.reduce((a, b) => (a < b ? a : b));\n                    if (note.hasStem() && stemDirection === Stem.UP) {\n                        dotY = stemExt.topY + Metrics.get('StringNumber.stemPadding');\n                    }\n                    dotY -=\n                        this.radius + Metrics.get('StringNumber.verticalPadding') + this.textLine * Tables.STAVE_LINE_DISTANCE;\n                }\n                break;\n            case Modifier.Position.BELOW:\n                {\n                    const ys = note.getYs();\n                    dotY = ys.reduce((a, b) => (a > b ? a : b));\n                    if (note.hasStem() && stemDirection === Stem.DOWN) {\n                        dotY = stemExt.topY - Metrics.get('StringNumber.stemPadding');\n                    }\n                    dotY +=\n                        this.radius + Metrics.get('StringNumber.verticalPadding') + this.textLine * Tables.STAVE_LINE_DISTANCE;\n                }\n                break;\n            case Modifier.Position.LEFT:\n                dotX -= this.radius / 2 + Metrics.get('StringNumber.leftPadding');\n                break;\n            case Modifier.Position.RIGHT:\n                dotX += this.radius / 2 + Metrics.get('StringNumber.rightPadding');\n                break;\n            default:\n                throw new RuntimeError('InvalidPosition', `The position ${this.position} is invalid`);\n        }\n        if (this.drawCircle) {\n            ctx.beginPath();\n            ctx.arc(dotX, dotY, this.radius, 0, Math.PI * 2, false);\n            ctx.setLineWidth(1.5);\n            ctx.stroke();\n        }\n        ctx.setFont(this.fontInfo);\n        const x = dotX - ctx.measureText(this.stringNumber).width / 2;\n        ctx.fillText('' + this.stringNumber, x, dotY + 4.5);\n        const lastNote = this.lastNote;\n        if (isStemmableNote(lastNote)) {\n            const end = lastNote.getStemX() - note.getX() + 5;\n            ctx.setStrokeStyle('#000000');\n            ctx.setLineCap('round');\n            ctx.setLineWidth(0.6);\n            if (this.dashed) {\n                Renderer.drawDashedLine(ctx, dotX + 10, dotY, dotX + end, dotY, [3, 3]);\n            }\n            else {\n                Renderer.drawDashedLine(ctx, dotX + 10, dotY, dotX + end, dotY, [3, 0]);\n            }\n            let len;\n            let pattern;\n            switch (this.leg) {\n                case Renderer.LineEndType.UP:\n                    len = -10;\n                    pattern = this.dashed ? [3, 3] : [3, 0];\n                    Renderer.drawDashedLine(ctx, dotX + end, dotY, dotX + end, dotY + len, pattern);\n                    break;\n                case Renderer.LineEndType.DOWN:\n                    len = 10;\n                    pattern = this.dashed ? [3, 3] : [3, 0];\n                    Renderer.drawDashedLine(ctx, dotX + end, dotY, dotX + end, dotY + len, pattern);\n                    break;\n                default:\n                    break;\n            }\n        }\n    }\n}\n","import { Element } from './element.js';\nimport { Glyphs } from './glyphs.js';\nimport { Metrics } from './metrics.js';\nimport { Modifier } from './modifier.js';\nimport { isNote, isStaveNote, isTabNote } from './typeguard.js';\nimport { RuntimeError } from './util.js';\nexport class Stroke extends Modifier {\n    static get CATEGORY() {\n        return \"Stroke\";\n    }\n    static format(strokes, state) {\n        const leftShift = state.leftShift;\n        const strokeSpacing = 5;\n        if (!strokes || strokes.length === 0)\n            return false;\n        const strokeList = strokes.map((stroke) => {\n            const note = stroke.getNote();\n            const index = stroke.checkIndex();\n            if (isStaveNote(note)) {\n                const { line } = note.getKeyProps()[index];\n                const shift = note.getLeftDisplacedHeadPx();\n                return { line, shift, stroke };\n            }\n            else if (isTabNote(note)) {\n                const { str: string } = note.getPositions()[index];\n                return { line: string, shift: 0, stroke };\n            }\n            else {\n                throw new RuntimeError('Internal', 'Unexpected instance.');\n            }\n        });\n        const strokeShift = leftShift;\n        const xShift = strokeList.reduce((xShift, { stroke, shift }) => {\n            stroke.setXShift(strokeShift + shift);\n            return Math.max(stroke.getWidth() + strokeSpacing, xShift);\n        }, 0);\n        state.leftShift += xShift;\n        return true;\n    }\n    constructor(type, options) {\n        super();\n        this.options = Object.assign({ allVoices: true }, options);\n        this.allVoices = this.options.allVoices;\n        this.type = type;\n        this.position = Modifier.Position.LEFT;\n        this.renderOptions = {\n            fontScale: Metrics.get('Stroke.fontSize'),\n        };\n        this.setXShift(0);\n        this.setWidth(10);\n    }\n    getPosition() {\n        return this.position;\n    }\n    addEndNote(note) {\n        this.noteEnd = note;\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(this.position, this.index);\n        let yPositions = note.getYs();\n        let topY = start.y;\n        let botY = start.y;\n        const x = start.x - 5;\n        const lineSpace = note.checkStave().getSpacingBetweenLines();\n        const notes = this.checkModifierContext().getMembers(note.getCategory());\n        for (let i = 0; i < notes.length; i++) {\n            const note = notes[i];\n            if (isNote(note)) {\n                yPositions = note.getYs();\n                for (let n = 0; n < yPositions.length; n++) {\n                    if (this.note === notes[i] || this.allVoices) {\n                        topY = Math.min(topY, yPositions[n]);\n                        botY = Math.max(botY, yPositions[n]);\n                    }\n                }\n            }\n        }\n        let arrow = '';\n        let arrowY = 0;\n        let textY = 0;\n        switch (this.type) {\n            case Stroke.Type.BRUSH_DOWN:\n            case Stroke.Type.ROLL_DOWN:\n            case Stroke.Type.RASGUEADO_DOWN:\n                arrow = Glyphs.arrowheadBlackUp;\n                arrowY = topY;\n                topY -= lineSpace / 2;\n                botY += lineSpace / 2;\n                break;\n            case Stroke.Type.BRUSH_UP:\n            case Stroke.Type.ROLL_UP:\n            case Stroke.Type.RASGUEADO_UP:\n                arrow = Glyphs.arrowheadBlackDown;\n                arrowY = botY + lineSpace;\n                topY -= lineSpace / 2;\n                break;\n            case Stroke.Type.ARPEGGIO_DIRECTIONLESS:\n                topY -= lineSpace / 2;\n                botY += lineSpace / 2;\n                break;\n            default:\n                throw new RuntimeError('InvalidType', `The stroke type ${this.type} does not exist`);\n        }\n        if (this.type === Stroke.Type.BRUSH_DOWN || this.type === Stroke.Type.BRUSH_UP) {\n            ctx.fillRect(x + this.xShift, topY, 1, botY - topY);\n        }\n        else {\n            const lineGlyph = arrow === Glyphs.arrowheadBlackDown ? Glyphs.wiggleArpeggiatoDown : Glyphs.wiggleArpeggiatoUp;\n            let txt = '';\n            const el = new Element();\n            while (el.getWidth() < botY - topY) {\n                txt += lineGlyph;\n                el.setText(txt);\n            }\n            if (this.type === Stroke.Type.RASGUEADO_DOWN ||\n                this.type === Stroke.Type.ROLL_DOWN ||\n                this.type === Stroke.Type.ARPEGGIO_DIRECTIONLESS) {\n                ctx.openRotation(90, x + this.xShift, topY);\n                el.renderText(ctx, x + this.xShift, topY - el.getTextMetrics().actualBoundingBoxDescent + el.getHeight() / 2);\n                ctx.closeRotation();\n                textY = topY + el.getWidth() + 5;\n            }\n            else {\n                ctx.openRotation(-90, x + this.xShift, botY);\n                el.renderText(ctx, x + this.xShift, botY - el.getTextMetrics().actualBoundingBoxDescent + el.getHeight() / 2);\n                ctx.closeRotation();\n                textY = botY - el.getWidth() - 5;\n            }\n        }\n        if (arrowY !== 0) {\n            const el = new Element();\n            el.setText(arrow);\n            el.renderText(ctx, x + this.xShift - el.getWidth() / 2, arrowY);\n        }\n        if (this.type === Stroke.Type.RASGUEADO_DOWN || this.type === Stroke.Type.RASGUEADO_UP) {\n            const el = new Element('Stroke.text');\n            el.setText('R');\n            el.renderText(ctx, x + this.xShift - el.getWidth() / 2, textY + (this.type === Stroke.Type.RASGUEADO_DOWN ? el.getHeight() : 0));\n        }\n    }\n}\nStroke.Type = {\n    BRUSH_DOWN: 1,\n    BRUSH_UP: 2,\n    ROLL_DOWN: 3,\n    ROLL_UP: 4,\n    RASGUEADO_DOWN: 5,\n    RASGUEADO_UP: 6,\n    ARPEGGIO_DIRECTIONLESS: 7,\n};\n","import { Bend } from './bend.js';\nimport { Modifier } from './modifier.js';\nimport { Tables } from './tables.js';\nimport { RuntimeError } from './util.js';\nexport class Vibrato extends Modifier {\n    static get CATEGORY() {\n        return \"Vibrato\";\n    }\n    static format(vibratos, state, context) {\n        if (!vibratos || vibratos.length === 0)\n            return false;\n        let textLine = state.topTextLine;\n        let width = 0;\n        let shift = state.rightShift - 7;\n        const bends = context.getMembers(Bend.CATEGORY);\n        if (bends && bends.length > 0) {\n            const bendHeight = bends.map((bb) => bb.getTextHeight()).reduce((a, b) => (a > b ? a : b)) / Tables.STAVE_LINE_DISTANCE;\n            textLine = textLine - (bendHeight + 1);\n        }\n        else {\n            state.topTextLine += 1;\n        }\n        for (let i = 0; i < vibratos.length; ++i) {\n            const vibrato = vibratos[i];\n            vibrato.setXShift(shift);\n            vibrato.setTextLine(textLine);\n            width += vibrato.getWidth();\n            shift += width;\n        }\n        state.rightShift += width;\n        return true;\n    }\n    constructor() {\n        super();\n        this.position = Modifier.Position.RIGHT;\n        this.renderOptions = {\n            code: 0xeab0,\n            width: 20,\n        };\n        this.setVibratoWidth(this.renderOptions.width);\n    }\n    setVibratoWidth(width) {\n        this.renderOptions.width = width;\n        this.text = String.fromCodePoint(this.renderOptions.code);\n        const myWidth = this.getWidth();\n        if (!myWidth) {\n            throw new RuntimeError('Cannot set vibrato width if width is 0');\n        }\n        const items = Math.round(this.renderOptions.width / myWidth);\n        for (let i = 1; i < items; i++) {\n            this.text += String.fromCodePoint(this.renderOptions.code);\n        }\n        return this;\n    }\n    setVibratoCode(code) {\n        this.renderOptions.code = code;\n        return this.setVibratoWidth(this.renderOptions.width);\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(Modifier.Position.RIGHT, this.index);\n        const vx = start.x;\n        const vy = note.getYForTopText(this.textLine) + 5;\n        this.renderText(ctx, vx, vy);\n    }\n}\n","import { Accidental } from './accidental.js';\nimport { Annotation } from './annotation.js';\nimport { Articulation } from './articulation.js';\nimport { Bend } from './bend.js';\nimport { ChordSymbol } from './chordsymbol.js';\nimport { Dot } from './dot.js';\nimport { FretHandFinger } from './frethandfinger.js';\nimport { GraceNoteGroup } from './gracenotegroup.js';\nimport { NoteSubGroup } from './notesubgroup.js';\nimport { Ornament } from './ornament.js';\nimport { Parenthesis } from './parenthesis.js';\nimport { StaveNote } from './stavenote.js';\nimport { StringNumber } from './stringnumber.js';\nimport { Stroke } from './strokes.js';\nimport { log, RuntimeError } from './util.js';\nimport { Vibrato } from './vibrato.js';\nfunction L(...args) {\n    if (ModifierContext.DEBUG)\n        log('VexFlow.ModifierContext', args);\n}\nexport class ModifierContext {\n    constructor() {\n        this.state = {\n            leftShift: 0,\n            rightShift: 0,\n            textLine: 0,\n            topTextLine: 0,\n        };\n        this.members = {};\n        this.preFormatted = false;\n        this.postFormatted = false;\n        this.formatted = false;\n        this.width = 0;\n        this.spacing = 0;\n    }\n    addModifier(member) {\n        L('addModifier is deprecated, use addMember instead.');\n        return this.addMember(member);\n    }\n    addMember(member) {\n        const category = member.getCategory();\n        if (!this.members[category]) {\n            this.members[category] = [];\n        }\n        this.members[category].push(member);\n        member.setModifierContext(this);\n        this.preFormatted = false;\n        return this;\n    }\n    getModifiers(category) {\n        L('getModifiers is deprecated, use getMembers instead.');\n        return this.getMembers(category);\n    }\n    getMembers(category) {\n        var _a;\n        return (_a = this.members[category]) !== null && _a !== void 0 ? _a : [];\n    }\n    getWidth() {\n        return this.width;\n    }\n    getLeftShift() {\n        return this.state.leftShift;\n    }\n    getRightShift() {\n        return this.state.rightShift;\n    }\n    getState() {\n        return this.state;\n    }\n    getMetrics() {\n        if (!this.formatted) {\n            throw new RuntimeError('UnformattedMember', 'Unformatted member has no metrics.');\n        }\n        return {\n            width: this.state.leftShift + this.state.rightShift + this.spacing,\n            spacing: this.spacing,\n        };\n    }\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        L('Preformatting ModifierContext');\n        const state = this.state;\n        const members = this.members;\n        StaveNote.format(members[\"StaveNote\"], state);\n        Parenthesis.format(members[\"Parenthesis\"], state);\n        Dot.format(members[\"Dot\"], state);\n        FretHandFinger.format(members[\"FretHandFinger\"], state);\n        Accidental.format(members[\"Accidental\"], state);\n        Stroke.format(members[\"Stroke\"], state);\n        GraceNoteGroup.format(members[\"GraceNoteGroup\"], state);\n        NoteSubGroup.format(members[\"NoteSubGroup\"], state);\n        StringNumber.format(members[\"StringNumber\"], state);\n        Articulation.format(members[\"Articulation\"], state);\n        Ornament.format(members[\"Ornament\"], state);\n        Annotation.format(members[\"Annotation\"], state);\n        ChordSymbol.format(members[\"ChordSymbol\"], state);\n        Bend.format(members[\"Bend\"], state);\n        Vibrato.format(members[\"Vibrato\"], state, this);\n        this.width = state.leftShift + state.rightShift;\n        this.preFormatted = true;\n    }\n    postFormat() {\n        if (this.postFormatted)\n            return;\n        L('Postformatting ModifierContext');\n        StaveNote.postFormat(this.getMembers(\"StaveNote\"));\n    }\n}\nModifierContext.DEBUG = false;\n","import { BoundingBox } from './boundingbox.js';\nimport { Element } from './element.js';\nimport { Glyphs } from './glyphs.js';\nimport { Stave } from './stave.js';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier.js';\nimport { Tables } from './tables.js';\nimport { defined } from './util.js';\nexport class KeySignature extends StaveModifier {\n    static get CATEGORY() {\n        return \"KeySignature\";\n    }\n    constructor(keySpec, cancelKeySpec, alterKeySpec) {\n        super();\n        this.accList = [];\n        this.setKeySig(keySpec, cancelKeySpec, alterKeySpec);\n        this.setPosition(StaveModifierPosition.BEGIN);\n        this.children = [];\n        this.paddingForced = false;\n    }\n    convertToGlyph(acc, nextAcc, stave) {\n        const code = Tables.accidentalCodes(acc.type);\n        const glyph = new Element(\"KeySignature\");\n        glyph.setText(code);\n        let extraWidth = 1;\n        glyph.setYShift(stave.getYForLine(acc.line));\n        if (this.children.length > 0) {\n            const prevGlyph = this.children[this.children.length - 1];\n            const isNatural = (el) => el.getText() === Glyphs.accidentalNatural;\n            const yShiftDiff = (el1, el2) => Math.abs(el2.getYShift() - el1.getYShift());\n            if ((isNatural(prevGlyph) || isNatural(glyph)) && yShiftDiff(prevGlyph, glyph) < 10) {\n                extraWidth = 2;\n            }\n            glyph.setXShift(prevGlyph.getXShift() + prevGlyph.getWidth() + extraWidth);\n        }\n        this.children.push(glyph);\n        this.width += glyph.getWidth() + extraWidth;\n    }\n    cancelKey(spec) {\n        this.formatted = false;\n        this.cancelKeySpec = spec;\n        return this;\n    }\n    convertToCancelAccList(spec) {\n        const cancelAccList = Tables.keySignature(spec);\n        const differentTypes = this.accList.length > 0 && cancelAccList.length > 0 && cancelAccList[0].type !== this.accList[0].type;\n        const naturals = differentTypes ? cancelAccList.length : cancelAccList.length - this.accList.length;\n        if (naturals < 1)\n            return undefined;\n        const cancelled = [];\n        for (let i = 0; i < naturals; i++) {\n            let index = i;\n            if (!differentTypes) {\n                index = cancelAccList.length - naturals + i;\n            }\n            const acc = cancelAccList[index];\n            cancelled.push({ type: 'n', line: acc.line });\n        }\n        this.accList = cancelled.concat(this.accList);\n        return {\n            accList: cancelled,\n            type: cancelAccList[0].type,\n        };\n    }\n    addToStave(stave) {\n        this.paddingForced = true;\n        stave.addModifier(this);\n        return this;\n    }\n    setStave(stave) {\n        this.formatted = false;\n        return super.setStave(stave);\n    }\n    getBoundingBox() {\n        if (!this.formatted)\n            this.format();\n        return super.getBoundingBox();\n    }\n    calculateDimensions() {\n        let boundingBox;\n        if (this.children.length > 0) {\n            boundingBox = this.children[0].getBoundingBox();\n        }\n        else {\n            boundingBox = new BoundingBox(this.x + this.xShift, this.y + this.yShift, 0, 0);\n        }\n        this.children.forEach((glyph) => {\n            boundingBox.mergeWith(glyph.getBoundingBox());\n        });\n        this.width = boundingBox.getW();\n        this.height = boundingBox.getH();\n        this.y = boundingBox.getY();\n    }\n    convertAccLines(clef, type, accList = this.accList) {\n        let offset = 0.0;\n        let customLines;\n        switch (clef) {\n            case 'soprano':\n                if (type === '#')\n                    customLines = [2.5, 0.5, 2, 0, 1.5, -0.5, 1];\n                else\n                    offset = -1;\n                break;\n            case 'mezzo-soprano':\n                if (type === 'b')\n                    customLines = [0, 2, 0.5, 2.5, 1, 3, 1.5];\n                else\n                    offset = 1.5;\n                break;\n            case 'alto':\n                offset = 0.5;\n                break;\n            case 'tenor':\n                if (type === '#')\n                    customLines = [3, 1, 2.5, 0.5, 2, 0, 1.5];\n                else\n                    offset = -0.5;\n                break;\n            case 'baritone-f':\n            case 'baritone-c':\n                if (type === 'b')\n                    customLines = [0.5, 2.5, 1, 3, 1.5, 3.5, 2];\n                else\n                    offset = 2;\n                break;\n            case 'bass':\n            case 'french':\n                offset = 1;\n                break;\n            default:\n                break;\n        }\n        let i;\n        if (typeof customLines !== 'undefined') {\n            for (i = 0; i < accList.length; ++i) {\n                accList[i].line = customLines[i];\n            }\n        }\n        else if (offset !== 0) {\n            for (i = 0; i < accList.length; ++i) {\n                accList[i].line += offset;\n            }\n        }\n    }\n    getPadding(index) {\n        if (!this.formatted)\n            this.format();\n        return this.children.length === 0 || (!this.paddingForced && index < 2) ? 0 : this.padding;\n    }\n    getWidth() {\n        if (!this.formatted)\n            this.format();\n        return this.width;\n    }\n    setKeySig(keySpec, cancelKeySpec, alterKeySpec) {\n        this.formatted = false;\n        this.keySpec = keySpec;\n        this.cancelKeySpec = cancelKeySpec;\n        this.alterKeySpec = alterKeySpec;\n        return this;\n    }\n    alterKey(alterKeySpec) {\n        this.formatted = false;\n        this.alterKeySpec = alterKeySpec;\n        return this;\n    }\n    convertToAlterAccList(alterKeySpec) {\n        const max = Math.min(alterKeySpec.length, this.accList.length);\n        for (let i = 0; i < max; ++i) {\n            if (alterKeySpec[i]) {\n                this.accList[i].type = alterKeySpec[i];\n            }\n        }\n    }\n    format() {\n        let stave = this.getStave();\n        if (!stave) {\n            stave = new Stave(0, 0, 100);\n            this.setStave(stave);\n        }\n        this.width = 0;\n        this.children = [];\n        this.accList = Tables.keySignature(defined(this.keySpec));\n        const accList = this.accList;\n        const firstAccidentalType = accList.length > 0 ? accList[0].type : undefined;\n        let cancelAccList;\n        if (this.cancelKeySpec) {\n            cancelAccList = this.convertToCancelAccList(this.cancelKeySpec);\n        }\n        if (this.alterKeySpec) {\n            this.convertToAlterAccList(this.alterKeySpec);\n        }\n        if (this.accList.length > 0) {\n            const clef = (this.position === StaveModifierPosition.END ? stave.getEndClef() : stave.getClef()) || stave.getClef();\n            if (cancelAccList) {\n                this.convertAccLines(clef, cancelAccList.type, cancelAccList.accList);\n            }\n            this.convertAccLines(clef, firstAccidentalType, accList);\n            for (let i = 0; i < this.accList.length; ++i) {\n                this.convertToGlyph(this.accList[i], this.accList[i + 1], stave);\n            }\n        }\n        this.calculateDimensions();\n        this.formatted = true;\n    }\n    draw() {\n        const stave = this.checkStave();\n        const ctx = stave.checkContext();\n        if (!this.formatted)\n            this.format();\n        this.setRendered();\n        ctx.openGroup('keysignature', this.getAttribute('id'));\n        for (let i = 0; i < this.children.length; i++) {\n            const glyph = this.children[i];\n            glyph.renderText(ctx, this.x, 0);\n        }\n        ctx.closeGroup();\n    }\n}\n","import { Glyphs } from './glyphs.js';\nimport { Metrics } from './metrics.js';\nimport { StaveModifier } from './stavemodifier.js';\nexport class Repetition extends StaveModifier {\n    static get CATEGORY() {\n        return \"Repetition\";\n    }\n    constructor(type, x, yShift) {\n        super();\n        this.symbolType = type;\n        this.x = x;\n        this.xShift = 0;\n        this.yShift = yShift;\n    }\n    setShiftX(x) {\n        this.xShift = x;\n        return this;\n    }\n    setShiftY(y) {\n        this.yShift = y;\n        return this;\n    }\n    draw() {\n        const stave = this.checkStave();\n        const x = stave.getModifierXShift(this.getPosition());\n        this.setRendered();\n        switch (this.symbolType) {\n            case Repetition.type.CODA_RIGHT:\n                this.drawCodaFixed(stave, x + stave.getWidth());\n                break;\n            case Repetition.type.CODA_LEFT:\n                this.drawSymbolText(stave, x, 'Coda', true);\n                break;\n            case Repetition.type.SEGNO_LEFT:\n                this.drawSegnoFixed(stave, x);\n                break;\n            case Repetition.type.SEGNO_RIGHT:\n                this.drawSegnoFixed(stave, x + stave.getWidth());\n                break;\n            case Repetition.type.DC:\n                this.drawSymbolText(stave, x, 'D.C.', false);\n                break;\n            case Repetition.type.DC_AL_CODA:\n                this.drawSymbolText(stave, x, 'D.C. al', true);\n                break;\n            case Repetition.type.DC_AL_FINE:\n                this.drawSymbolText(stave, x, 'D.C. al Fine', false);\n                break;\n            case Repetition.type.DS:\n                this.drawSymbolText(stave, x, 'D.S.', false);\n                break;\n            case Repetition.type.DS_AL_CODA:\n                this.drawSymbolText(stave, x, 'D.S. al', true);\n                break;\n            case Repetition.type.DS_AL_FINE:\n                this.drawSymbolText(stave, x, 'D.S. al Fine', false);\n                break;\n            case Repetition.type.FINE:\n                this.drawSymbolText(stave, x, 'Fine', false);\n                break;\n            case Repetition.type.TO_CODA:\n                this.drawSymbolText(stave, x, 'To', true);\n                break;\n            default:\n                break;\n        }\n    }\n    drawCodaFixed(stave, x) {\n        const y = stave.getYForTopText(stave.getNumLines());\n        this.text = Glyphs.coda;\n        this.renderText(stave.checkContext(), x, y + Metrics.get('Repetition.coda.offsetY'));\n        return this;\n    }\n    drawSegnoFixed(stave, x) {\n        const y = stave.getYForTopText(stave.getNumLines());\n        this.text = Glyphs.segno;\n        this.renderText(stave.checkContext(), x, y + Metrics.get('Repetition.segno.offsetY'));\n        return this;\n    }\n    drawSymbolText(stave, x, text, drawCoda) {\n        const ctx = stave.checkContext();\n        let textX = 0;\n        this.text = text;\n        if (drawCoda) {\n            this.text += ' \\ue048';\n        }\n        this.setFont(Metrics.getFontInfo('Repetition.text'));\n        switch (this.symbolType) {\n            case Repetition.type.CODA_LEFT:\n                textX = stave.getVerticalBarWidth();\n                break;\n            case Repetition.type.DC:\n            case Repetition.type.DC_AL_FINE:\n            case Repetition.type.DS:\n            case Repetition.type.DS_AL_FINE:\n            case Repetition.type.FINE:\n            default:\n                textX =\n                    x - (stave.getNoteStartX() - this.x) + stave.getWidth() - this.width - Metrics.get('Repetition.text.offsetX');\n        }\n        const y = stave.getYForTopText(stave.getNumLines()) + Metrics.get('Repetition.text.offsetY');\n        this.renderText(ctx, textX, y);\n        return this;\n    }\n}\nRepetition.type = {\n    NONE: 1,\n    CODA_LEFT: 2,\n    CODA_RIGHT: 3,\n    SEGNO_LEFT: 4,\n    SEGNO_RIGHT: 5,\n    DC: 6,\n    DC_AL_CODA: 7,\n    DC_AL_FINE: 8,\n    DS: 9,\n    DS_AL_CODA: 10,\n    DS_AL_FINE: 11,\n    FINE: 12,\n    TO_CODA: 13,\n};\n","import { Metrics } from './metrics.js';\nimport { StaveModifier } from './stavemodifier.js';\nexport class StaveSection extends StaveModifier {\n    static get CATEGORY() {\n        return \"StaveSection\";\n    }\n    constructor(section, x = 0, yShift = 0, drawRect = true) {\n        super();\n        this.setText(section);\n        this.x = x;\n        this.yShift = yShift;\n        this.drawRect = drawRect;\n        this.padding = Metrics.get('StaveSection.padding');\n    }\n    setDrawRect(drawRect) {\n        this.drawRect = drawRect;\n        return this;\n    }\n    draw() {\n        const stave = this.checkStave();\n        const ctx = stave.checkContext();\n        this.setRendered();\n        this.x = stave.getX() + stave.getModifierXShift(this.getPosition());\n        const headroom = -1 * this.textMetrics.actualBoundingBoxDescent;\n        const width = this.width + 2 * this.padding;\n        const height = this.height + 2 * this.padding;\n        const y = stave.getYForTopText(1.5) + this.yShift;\n        const x = this.x + this.xShift;\n        if (this.drawRect) {\n            ctx.beginPath();\n            ctx.rect(x, y - height + headroom, width, height);\n            ctx.stroke();\n        }\n        this.renderText(ctx, this.xShift + this.padding, y - this.padding);\n    }\n}\n","import { Element } from './element.js';\nimport { Glyphs } from './glyphs.js';\nimport { Metrics } from './metrics.js';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier.js';\nexport class StaveTempo extends StaveModifier {\n    static get CATEGORY() {\n        return \"StaveTempo\";\n    }\n    constructor(tempo, x, shiftY) {\n        super();\n        this.durationToCode = {\n            '1/4': Glyphs.metNoteDoubleWholeSquare,\n            long: Glyphs.metNoteDoubleWholeSquare,\n            '1/2': Glyphs.metNoteDoubleWhole,\n            breve: Glyphs.metNoteDoubleWhole,\n            1: Glyphs.metNoteWhole,\n            whole: Glyphs.metNoteWhole,\n            w: Glyphs.metNoteWhole,\n            2: Glyphs.metNoteHalfUp,\n            half: Glyphs.metNoteHalfUp,\n            h: Glyphs.metNoteHalfUp,\n            4: Glyphs.metNoteQuarterUp,\n            quarter: Glyphs.metNoteQuarterUp,\n            q: Glyphs.metNoteQuarterUp,\n            8: Glyphs.metNote8thUp,\n            eighth: Glyphs.metNote8thUp,\n            16: Glyphs.metNote16thUp,\n            '16th': Glyphs.metNote16thUp,\n            32: Glyphs.metNote32ndUp,\n            '32nd': Glyphs.metNote32ndUp,\n            64: Glyphs.metNote64thUp,\n            '64th': Glyphs.metNote64thUp,\n            128: Glyphs.metNote128thUp,\n            '128th': Glyphs.metNote128thUp,\n            256: Glyphs.metNote256thUp,\n            '256th': Glyphs.metNote256thUp,\n            512: Glyphs.metNote512thUp,\n            '512th': Glyphs.metNote512thUp,\n            1024: Glyphs.metNote1024thUp,\n            '1024th': Glyphs.metNote1024thUp,\n        };\n        this.tempo = tempo;\n        this.position = StaveModifierPosition.ABOVE;\n        this.x = x;\n        this.setXShift(10);\n        this.setYShift(shiftY);\n    }\n    setTempo(tempo) {\n        this.tempo = tempo;\n        return this;\n    }\n    draw() {\n        const stave = this.checkStave();\n        const shiftX = stave.getModifierXShift(this.getPosition());\n        const ctx = stave.checkContext();\n        this.setRendered();\n        const { name, duration, dots, bpm, duration2, dots2, parenthesis } = this.tempo;\n        let x = this.x + shiftX;\n        const y = stave.getYForTopText(1);\n        const el = new Element('StaveTempo.glyph');\n        const elText = new Element('StaveTempo');\n        if (name) {\n            this.text = name;\n            this.fontInfo = Metrics.getFontInfo('StaveTempo.name');\n            this.renderText(ctx, shiftX, y);\n            x += this.getWidth() + 3;\n        }\n        if ((name && duration) || parenthesis) {\n            elText.setText('(');\n            elText.renderText(ctx, x + this.xShift, y + this.yShift);\n            x += elText.getWidth() + 3;\n        }\n        if (duration) {\n            el.setText(this.durationToCode[duration]);\n            el.renderText(ctx, x + this.xShift, y + this.yShift);\n            x += el.getWidth() + 3;\n            if (dots) {\n                el.setText(Glyphs.metAugmentationDot);\n                for (let i = 0; i < dots; i++) {\n                    el.renderText(ctx, x + this.xShift, y + 2 + this.yShift);\n                    x += el.getWidth() + 3;\n                }\n            }\n            elText.setText('=');\n            elText.renderText(ctx, x + this.xShift, y + this.yShift);\n            x += elText.getWidth() + 3;\n            if (duration2) {\n                el.setText(this.durationToCode[duration2]);\n                el.renderText(ctx, x + this.xShift, y + this.yShift);\n                x += el.getWidth() + 3;\n                if (dots2) {\n                    el.setText(Glyphs.metAugmentationDot);\n                    for (let i = 0; i < dots2; i++) {\n                        el.renderText(ctx, x + this.xShift, y + 2 + this.yShift);\n                        x += el.getWidth() + 3;\n                    }\n                }\n            }\n            else if (bpm) {\n                elText.setText('' + bpm);\n                elText.renderText(ctx, x + this.xShift, y + this.yShift);\n                x += elText.getWidth() + 3;\n            }\n            if (name || parenthesis) {\n                elText.setText(')');\n                elText.renderText(ctx, x + this.xShift, y + this.yShift);\n            }\n        }\n    }\n}\n","import { StaveModifier, StaveModifierPosition } from './stavemodifier.js';\nimport { TextJustification, TextNote } from './textnote.js';\nimport { RuntimeError } from './util.js';\nexport class StaveText extends StaveModifier {\n    static get CATEGORY() {\n        return \"StaveText\";\n    }\n    constructor(text, position, options = {}) {\n        var _a, _b, _c;\n        super();\n        this.setText(text);\n        this.setXShift((_a = options.shiftX) !== null && _a !== void 0 ? _a : 0);\n        this.setYShift((_b = options.shiftY) !== null && _b !== void 0 ? _b : 0);\n        this.position = position;\n        this.justification = (_c = options.justification) !== null && _c !== void 0 ? _c : TextNote.Justification.CENTER;\n    }\n    draw() {\n        const stave = this.checkStave();\n        const ctx = stave.checkContext();\n        this.setRendered();\n        let x;\n        let y;\n        switch (this.position) {\n            case StaveModifierPosition.LEFT:\n            case StaveModifierPosition.RIGHT:\n                y = (stave.getYForLine(0) + stave.getBottomLineY()) / 2;\n                if (this.position === StaveModifierPosition.LEFT) {\n                    x = stave.getX() - this.width - 24;\n                }\n                else {\n                    x = stave.getX() + stave.getWidth() + 24;\n                }\n                break;\n            case StaveModifierPosition.ABOVE:\n            case StaveModifierPosition.BELOW:\n                x = stave.getX();\n                if (this.justification === TextJustification.CENTER) {\n                    x += stave.getWidth() / 2 - this.width / 2;\n                }\n                else if (this.justification === TextJustification.RIGHT) {\n                    x += stave.getWidth() - this.width;\n                }\n                if (this.position === StaveModifierPosition.ABOVE) {\n                    y = stave.getYForTopText(2);\n                }\n                else {\n                    y = stave.getYForBottomText(2);\n                }\n                break;\n            default:\n                throw new RuntimeError('InvalidPosition', 'Value Must be in Modifier.Position.');\n        }\n        this.renderText(ctx, x, y + 4);\n    }\n}\n","import { Element } from './element.js';\nimport { Glyphs } from './glyphs.js';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier.js';\nimport { RuntimeError } from './util.js';\nconst assertIsValidTimeSig = (timeSpec) => {\n    const numbers = timeSpec.split('/');\n    numbers.forEach((number) => {\n        if (/^[0-9+\\-()]+$/.test(number) === false) {\n            throw new RuntimeError('BadTimeSignature', `Invalid time spec: ${timeSpec}. Must contain valid signatures.`);\n        }\n    });\n};\nexport class TimeSignature extends StaveModifier {\n    static get CATEGORY() {\n        return \"TimeSignature\";\n    }\n    constructor(timeSpec = '4/4', customPadding = 15, validateArgs = true) {\n        super();\n        this.timeSpec = '4/4';\n        this.line = 0;\n        this.isNumeric = true;\n        this.topStartX = 0;\n        this.botStartX = 0;\n        this.lineShift = 0;\n        this.topText = new Element();\n        this.botText = new Element();\n        this.validateArgs = validateArgs;\n        const padding = customPadding;\n        this.topLine = 1;\n        this.bottomLine = 3;\n        this.setPosition(StaveModifierPosition.BEGIN);\n        this.setTimeSig(timeSpec);\n        this.setPadding(padding);\n    }\n    static getTimeSigCode(key, smallSig = false) {\n        let code = Glyphs.null;\n        switch (key) {\n            case 'C':\n                code = Glyphs.timeSigCommon;\n                break;\n            case 'C|':\n                code = Glyphs.timeSigCutCommon;\n                break;\n            case '+':\n                code = smallSig ? Glyphs.timeSigPlusSmall : Glyphs.timeSigPlus;\n                break;\n            case '-':\n                code = Glyphs.timeSigMinus;\n                break;\n            case '(':\n                code = smallSig ? Glyphs.timeSigParensLeftSmall : Glyphs.timeSigParensLeft;\n                break;\n            case ')':\n                code = smallSig ? Glyphs.timeSigParensRightSmall : Glyphs.timeSigParensRight;\n                break;\n            default:\n                code = String.fromCodePoint(0xe080 + Number(key[0]));\n                break;\n        }\n        return code;\n    }\n    makeTimeSignatureGlyph(topDigits, botDigits) {\n        let txt = '';\n        let topWidth = 0;\n        let height = 0;\n        for (let i = 0; i < topDigits.length; ++i) {\n            const code = TimeSignature.getTimeSigCode(topDigits[i], botDigits.length > 0);\n            txt += code;\n        }\n        this.topText.setText(txt);\n        topWidth = this.topText.getWidth();\n        height = this.topText.getHeight();\n        let botWidth = 0;\n        txt = '';\n        for (let i = 0; i < botDigits.length; ++i) {\n            const code = TimeSignature.getTimeSigCode(botDigits[i], true);\n            txt += code;\n        }\n        this.botText.setText(txt);\n        botWidth = this.botText.getWidth();\n        height = Math.max(height, this.botText.getHeight());\n        this.lineShift = height > 30 ? 0.5 : 0;\n        this.width = Math.max(topWidth, botWidth);\n        this.topStartX = (this.width - topWidth) / 2.0;\n        this.botStartX = (this.width - botWidth) / 2.0;\n    }\n    setTimeSig(timeSpec) {\n        var _a, _b;\n        this.timeSpec = timeSpec;\n        if (timeSpec === 'C' || timeSpec === 'C|') {\n            const code = TimeSignature.getTimeSigCode(timeSpec);\n            this.line = 2;\n            this.text = code;\n            this.isNumeric = false;\n        }\n        else {\n            if (this.validateArgs) {\n                assertIsValidTimeSig(timeSpec);\n            }\n            const parts = timeSpec.split('/');\n            this.line = 0;\n            this.isNumeric = true;\n            this.makeTimeSignatureGlyph((_a = parts[0]) !== null && _a !== void 0 ? _a : '', (_b = parts[1]) !== null && _b !== void 0 ? _b : '');\n        }\n        return this;\n    }\n    getTimeSpec() {\n        return this.timeSpec;\n    }\n    getLine() {\n        return this.line;\n    }\n    setLine(line) {\n        this.line = line;\n    }\n    getIsNumeric() {\n        return this.isNumeric;\n    }\n    setIsNumeric(isNumeric) {\n        this.isNumeric = isNumeric;\n    }\n    draw() {\n        const stave = this.checkStave();\n        const ctx = stave.checkContext();\n        this.setRendered();\n        ctx.openGroup('timesignature', this.getAttribute('id'));\n        this.drawAt(ctx, stave, this.x);\n        ctx.closeGroup();\n    }\n    drawAt(ctx, stave, x) {\n        this.setRendered();\n        if (this.isNumeric) {\n            let startX = x + this.topStartX;\n            let y = 0;\n            if (this.botText.getText().length > 0)\n                y = stave.getYForLine(this.topLine - this.lineShift);\n            else\n                y = (stave.getYForLine(this.topLine) + stave.getYForLine(this.bottomLine)) / 2;\n            this.topText.renderText(ctx, startX, y);\n            startX = x + this.botStartX;\n            y = stave.getYForLine(this.bottomLine + this.lineShift);\n            this.botText.renderText(ctx, startX, y);\n        }\n        else {\n            this.renderText(ctx, x - this.x, stave.getYForLine(this.line));\n        }\n    }\n}\n","import { BoundingBox } from './boundingbox.js';\nimport { Clef } from './clef.js';\nimport { Element } from './element.js';\nimport { KeySignature } from './keysignature.js';\nimport { Metrics } from './metrics.js';\nimport { Barline, BarlineType } from './stavebarline.js';\nimport { StaveModifierPosition } from './stavemodifier.js';\nimport { Repetition } from './staverepetition.js';\nimport { StaveSection } from './stavesection.js';\nimport { StaveTempo } from './stavetempo.js';\nimport { StaveText } from './stavetext.js';\nimport { Volta } from './stavevolta.js';\nimport { Tables } from './tables.js';\nimport { TimeSignature } from './timesignature.js';\nimport { isBarline } from './typeguard.js';\nimport { RuntimeError } from './util.js';\nconst SORT_ORDER_BEG_MODIFIERS = {\n    [Barline.CATEGORY]: 0,\n    [Clef.CATEGORY]: 1,\n    [KeySignature.CATEGORY]: 2,\n    [TimeSignature.CATEGORY]: 3,\n};\nconst SORT_ORDER_END_MODIFIERS = {\n    [TimeSignature.CATEGORY]: 0,\n    [KeySignature.CATEGORY]: 1,\n    [Barline.CATEGORY]: 2,\n    [Clef.CATEGORY]: 3,\n};\nexport class Stave extends Element {\n    static get CATEGORY() {\n        return \"Stave\";\n    }\n    static get defaultPadding() {\n        return Metrics.get('Stave.padding') + Metrics.get('Stave.endPaddingMax');\n    }\n    static get rightPadding() {\n        return Metrics.get('Stave.endPaddingMax');\n    }\n    constructor(x, y, width, options) {\n        super();\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.formatted = false;\n        this.startX = x + 5;\n        this.endX = x + width;\n        this.modifiers = [];\n        this.measure = 0;\n        this.clef = 'treble';\n        this.endClef = undefined;\n        this.options = Object.assign({ verticalBarWidth: 10, numLines: 5, leftBar: true, rightBar: true, spacingBetweenLinesPx: Tables.STAVE_LINE_DISTANCE, spaceAboveStaffLn: 4, spaceBelowStaffLn: 4, topTextPosition: 1, bottomTextPosition: 4, lineConfig: [] }, options);\n        this.bounds = { x: this.x, y: this.y, w: this.width, h: 0 };\n        this.defaultLedgerLineStyle = { strokeStyle: '#444', lineWidth: 2 };\n        this.resetLines();\n        this.addModifier(new Barline(this.options.leftBar ? BarlineType.SINGLE : BarlineType.NONE));\n        this.addEndModifier(new Barline(this.options.rightBar ? BarlineType.SINGLE : BarlineType.NONE));\n    }\n    setDefaultLedgerLineStyle(style) {\n        this.defaultLedgerLineStyle = style;\n    }\n    getDefaultLedgerLineStyle() {\n        return Object.assign(Object.assign({}, this.getStyle()), this.defaultLedgerLineStyle);\n    }\n    space(spacing) {\n        return this.options.spacingBetweenLinesPx * spacing;\n    }\n    resetLines() {\n        this.options.lineConfig = [];\n        for (let i = 0; i < this.options.numLines; i++) {\n            this.options.lineConfig.push({ visible: true });\n        }\n        this.height = (this.options.numLines + this.options.spaceAboveStaffLn) * this.options.spacingBetweenLinesPx;\n        this.options.bottomTextPosition = this.options.numLines;\n    }\n    setNoteStartX(x) {\n        if (!this.formatted)\n            this.format();\n        this.startX = x;\n        return this;\n    }\n    getNoteStartX() {\n        if (!this.formatted)\n            this.format();\n        return this.startX;\n    }\n    getNoteEndX() {\n        if (!this.formatted)\n            this.format();\n        return this.endX;\n    }\n    getTieStartX() {\n        return this.startX;\n    }\n    getTieEndX() {\n        return this.endX;\n    }\n    getNumLines() {\n        return this.options.numLines;\n    }\n    setNumLines(n) {\n        this.options.numLines = n;\n        this.resetLines();\n        return this;\n    }\n    getTopLineTopY() {\n        return this.getYForLine(0);\n    }\n    getBottomLineBottomY() {\n        var _a;\n        return this.getYForLine(this.getNumLines() - 1) + ((_a = this.getStyle().lineWidth) !== null && _a !== void 0 ? _a : 1);\n    }\n    setX(x) {\n        const shift = x - this.x;\n        this.formatted = false;\n        this.x = x;\n        this.startX += shift;\n        this.endX += shift;\n        for (let i = 0; i < this.modifiers.length; i++) {\n            const mod = this.modifiers[i];\n            mod.setX(mod.getX() + shift);\n        }\n        return this;\n    }\n    setWidth(width) {\n        this.formatted = false;\n        this.width = width;\n        this.endX = this.x + width;\n        return this;\n    }\n    setMeasure(measure) {\n        this.measure = measure;\n        return this;\n    }\n    getMeasure() {\n        return this.measure;\n    }\n    getModifierXShift(index = 0) {\n        if (typeof index !== 'number') {\n            throw new RuntimeError('InvalidIndex', 'Must be of number type');\n        }\n        if (!this.formatted)\n            this.format();\n        if (this.getModifiers(StaveModifierPosition.BEGIN).length === 1) {\n            return 0;\n        }\n        if (this.modifiers[index].getPosition() === StaveModifierPosition.RIGHT) {\n            return 0;\n        }\n        let startX = this.startX - this.x;\n        const begBarline = this.modifiers[0];\n        if (begBarline.getType() === BarlineType.REPEAT_BEGIN && startX > begBarline.getWidth()) {\n            startX -= begBarline.getWidth();\n        }\n        return startX;\n    }\n    setRepetitionType(type, yShift = 0) {\n        this.modifiers.push(new Repetition(type, this.x, yShift));\n        return this;\n    }\n    setVoltaType(type, label, y) {\n        this.modifiers.push(new Volta(type, label, this.x, y));\n        return this;\n    }\n    setSection(section, y, xOffset = 0, fontSize, drawRect = true) {\n        const staveSection = new StaveSection(section).setYShift(y).setXShift(xOffset).setDrawRect(drawRect);\n        if (fontSize) {\n            staveSection.setFontSize(fontSize);\n        }\n        this.addModifier(staveSection);\n        return this;\n    }\n    setTempo(tempo, y) {\n        this.modifiers.push(new StaveTempo(tempo, this.x, y));\n        return this;\n    }\n    setStaveText(text, position, options = {}) {\n        this.modifiers.push(new StaveText(text, position, options));\n        return this;\n    }\n    getSpacingBetweenLines() {\n        return this.options.spacingBetweenLinesPx;\n    }\n    getBoundingBox() {\n        return new BoundingBox(this.x, this.y, this.width, this.getBottomY() - this.y);\n    }\n    getBottomY() {\n        const options = this.options;\n        const spacing = options.spacingBetweenLinesPx;\n        const scoreBottom = this.getYForLine(options.numLines) + options.spaceBelowStaffLn * spacing;\n        return scoreBottom;\n    }\n    getBottomLineY() {\n        return this.getYForLine(this.options.numLines);\n    }\n    getYForLine(line) {\n        const options = this.options;\n        const spacing = options.spacingBetweenLinesPx;\n        const headroom = options.spaceAboveStaffLn;\n        const y = this.y + line * spacing + headroom * spacing;\n        return y;\n    }\n    getLineForY(y) {\n        const options = this.options;\n        const spacing = options.spacingBetweenLinesPx;\n        const headroom = options.spaceAboveStaffLn;\n        return (y - this.y) / spacing - headroom;\n    }\n    getYForTopText(line = 0) {\n        return this.getYForLine(-line - this.options.topTextPosition);\n    }\n    getYForBottomText(line = 0) {\n        return this.getYForLine(this.options.bottomTextPosition + line);\n    }\n    getYForNote(line) {\n        const options = this.options;\n        const spacing = options.spacingBetweenLinesPx;\n        const headroom = options.spaceAboveStaffLn;\n        return this.y + headroom * spacing + 5 * spacing - line * spacing;\n    }\n    getYForGlyphs() {\n        return this.getYForLine(3);\n    }\n    addModifier(modifier, position) {\n        if (position !== undefined) {\n            modifier.setPosition(position);\n        }\n        modifier.setStave(this);\n        this.formatted = false;\n        this.modifiers.push(modifier);\n        return this;\n    }\n    addEndModifier(modifier) {\n        this.addModifier(modifier, StaveModifierPosition.END);\n        return this;\n    }\n    setBegBarType(type) {\n        const { SINGLE, REPEAT_BEGIN, NONE } = BarlineType;\n        if (type === SINGLE || type === REPEAT_BEGIN || type === NONE) {\n            this.modifiers[0].setType(type);\n            this.formatted = false;\n        }\n        return this;\n    }\n    setEndBarType(type) {\n        if (type !== BarlineType.REPEAT_BEGIN) {\n            this.modifiers[1].setType(type);\n            this.formatted = false;\n        }\n        return this;\n    }\n    setClef(clefSpec, size, annotation, position) {\n        if (position === undefined) {\n            position = StaveModifierPosition.BEGIN;\n        }\n        if (position === StaveModifierPosition.END) {\n            this.endClef = clefSpec;\n        }\n        else {\n            this.clef = clefSpec;\n        }\n        const clefs = this.getModifiers(position, Clef.CATEGORY);\n        if (clefs.length === 0) {\n            this.addClef(clefSpec, size, annotation, position);\n        }\n        else {\n            clefs[0].setType(clefSpec, size, annotation);\n        }\n        return this;\n    }\n    getClef() {\n        return this.clef;\n    }\n    setEndClef(clefSpec, size, annotation) {\n        this.setClef(clefSpec, size, annotation, StaveModifierPosition.END);\n        return this;\n    }\n    getEndClef() {\n        return this.endClef;\n    }\n    setKeySignature(keySpec, cancelKeySpec, position) {\n        if (position === undefined) {\n            position = StaveModifierPosition.BEGIN;\n        }\n        const keySignatures = this.getModifiers(position, KeySignature.CATEGORY);\n        if (keySignatures.length === 0) {\n            this.addKeySignature(keySpec, cancelKeySpec, position);\n        }\n        else {\n            keySignatures[0].setKeySig(keySpec, cancelKeySpec);\n        }\n        return this;\n    }\n    setEndKeySignature(keySpec, cancelKeySpec) {\n        this.setKeySignature(keySpec, cancelKeySpec, StaveModifierPosition.END);\n        return this;\n    }\n    setTimeSignature(timeSpec, customPadding, position) {\n        if (position === undefined) {\n            position = StaveModifierPosition.BEGIN;\n        }\n        const timeSignatures = this.getModifiers(position, TimeSignature.CATEGORY);\n        if (timeSignatures.length === 0) {\n            this.addTimeSignature(timeSpec, customPadding, position);\n        }\n        else {\n            timeSignatures[0].setTimeSig(timeSpec);\n        }\n        return this;\n    }\n    setEndTimeSignature(timeSpec, customPadding) {\n        this.setTimeSignature(timeSpec, customPadding, StaveModifierPosition.END);\n        return this;\n    }\n    addKeySignature(keySpec, cancelKeySpec, position) {\n        if (position === undefined) {\n            position = StaveModifierPosition.BEGIN;\n        }\n        this.addModifier(new KeySignature(keySpec, cancelKeySpec).setPosition(position), position);\n        return this;\n    }\n    addClef(clef, size, annotation, position) {\n        if (position === undefined || position === StaveModifierPosition.BEGIN) {\n            this.clef = clef;\n        }\n        else if (position === StaveModifierPosition.END) {\n            this.endClef = clef;\n        }\n        this.addModifier(new Clef(clef, size, annotation), position);\n        return this;\n    }\n    addEndClef(clef, size, annotation) {\n        this.addClef(clef, size, annotation, StaveModifierPosition.END);\n        return this;\n    }\n    addTimeSignature(timeSpec, customPadding, position) {\n        this.addModifier(new TimeSignature(timeSpec, customPadding), position);\n        return this;\n    }\n    addEndTimeSignature(timeSpec, customPadding) {\n        this.addTimeSignature(timeSpec, customPadding, StaveModifierPosition.END);\n        return this;\n    }\n    addTrebleGlyph() {\n        this.addClef('treble');\n        return this;\n    }\n    getModifiers(position, category) {\n        const noPosition = position === undefined;\n        const noCategory = category === undefined;\n        if (noPosition && noCategory) {\n            return this.modifiers;\n        }\n        else if (noPosition) {\n            return this.modifiers.filter((m) => category === m.getCategory());\n        }\n        else if (noCategory) {\n            return this.modifiers.filter((m) => position === m.getPosition());\n        }\n        else {\n            return this.modifiers.filter((m) => position === m.getPosition() && category === m.getCategory());\n        }\n    }\n    sortByCategory(items, order) {\n        for (let i = items.length - 1; i >= 0; i--) {\n            for (let j = 0; j < i; j++) {\n                if (order[items[j].getCategory()] > order[items[j + 1].getCategory()]) {\n                    const temp = items[j];\n                    items[j] = items[j + 1];\n                    items[j + 1] = temp;\n                }\n            }\n        }\n    }\n    format() {\n        var _a, _b, _c, _d;\n        const begBarline = this.modifiers[0];\n        const endBarline = this.modifiers[1];\n        const begModifiers = this.getModifiers(StaveModifierPosition.BEGIN);\n        const endModifiers = this.getModifiers(StaveModifierPosition.END);\n        this.sortByCategory(begModifiers, SORT_ORDER_BEG_MODIFIERS);\n        this.sortByCategory(endModifiers, SORT_ORDER_END_MODIFIERS);\n        if (begModifiers.length > 1 && begBarline.getType() === BarlineType.REPEAT_BEGIN) {\n            begModifiers.push(begModifiers.splice(0, 1)[0]);\n            begModifiers.splice(0, 0, new Barline(BarlineType.SINGLE));\n        }\n        if (endModifiers.indexOf(endBarline) > 0) {\n            endModifiers.splice(0, 0, new Barline(BarlineType.NONE));\n        }\n        let width;\n        let padding;\n        let modifier;\n        let offset = 0;\n        let x = this.x;\n        for (let i = 0; i < begModifiers.length; i++) {\n            modifier = begModifiers[i];\n            padding = modifier.getPadding(i + offset);\n            width = modifier.getWidth();\n            x += padding;\n            modifier.setX(x);\n            x += width;\n            if (padding + width === 0)\n                offset--;\n        }\n        this.startX = x;\n        x = this.x + this.width;\n        const widths = {\n            left: 0,\n            right: 0,\n            paddingRight: 0,\n            paddingLeft: 0,\n        };\n        let lastBarlineIdx = 0;\n        for (let i = 0; i < endModifiers.length; i++) {\n            modifier = endModifiers[i];\n            lastBarlineIdx = isBarline(modifier) ? i : lastBarlineIdx;\n            widths.right = 0;\n            widths.left = 0;\n            widths.paddingRight = 0;\n            widths.paddingLeft = 0;\n            const layoutMetrics = modifier.getLayoutMetrics();\n            if (layoutMetrics) {\n                if (i !== 0) {\n                    widths.right = (_a = layoutMetrics.xMax) !== null && _a !== void 0 ? _a : 0;\n                    widths.paddingRight = (_b = layoutMetrics.paddingRight) !== null && _b !== void 0 ? _b : 0;\n                }\n                widths.left = -((_c = layoutMetrics.xMin) !== null && _c !== void 0 ? _c : 0);\n                widths.paddingLeft = (_d = layoutMetrics.paddingLeft) !== null && _d !== void 0 ? _d : 0;\n                if (i === endModifiers.length - 1) {\n                    widths.paddingLeft = 0;\n                }\n            }\n            else {\n                widths.paddingRight = modifier.getPadding(i - lastBarlineIdx);\n                if (i !== 0) {\n                    widths.right = modifier.getWidth();\n                }\n                if (i === 0) {\n                    widths.left = modifier.getWidth();\n                }\n            }\n            x -= widths.paddingRight;\n            x -= widths.right;\n            modifier.setX(x);\n            x -= widths.left;\n            x -= widths.paddingLeft;\n        }\n        this.endX = endModifiers.length === 1 ? this.x + this.width : x;\n        this.formatted = true;\n    }\n    draw() {\n        var _a;\n        const ctx = this.checkContext();\n        this.setRendered();\n        ctx.openGroup('stave', this.getAttribute('id'));\n        if (!this.formatted)\n            this.format();\n        const numLines = this.options.numLines;\n        const width = this.width;\n        const x = this.x;\n        let y;\n        const lineWidth = (_a = this.getStyle().lineWidth) !== null && _a !== void 0 ? _a : 1;\n        const lineWidthCorrection = lineWidth % 2 === 0 ? 0 : 0.5;\n        for (let line = 0; line < numLines; line++) {\n            y = this.getYForLine(line);\n            if (this.options.lineConfig[line].visible) {\n                ctx.beginPath();\n                ctx.moveTo(x, y + lineWidthCorrection);\n                ctx.lineTo(x + width, y + lineWidthCorrection);\n                ctx.stroke();\n            }\n        }\n        ctx.closeGroup();\n        for (let i = 0; i < this.modifiers.length; i++) {\n            const modifier = this.modifiers[i];\n            modifier.setContext(ctx);\n            modifier.setStave(this);\n            modifier.drawWithStyle();\n        }\n        if (this.measure > 0) {\n            ctx.setFont(this.fontInfo);\n            const textWidth = ctx.measureText('' + this.measure).width;\n            y = this.getYForTopText(0) + 3;\n            ctx.fillText('' + this.measure, this.x - textWidth / 2, y);\n        }\n    }\n    getVerticalBarWidth() {\n        return this.options.verticalBarWidth;\n    }\n    getConfigForLines() {\n        return this.options.lineConfig;\n    }\n    setConfigForLine(lineNumber, lineConfig) {\n        if (lineNumber >= this.options.numLines || lineNumber < 0) {\n            throw new RuntimeError('StaveConfigError', 'The line number must be within the range of the number of lines in the Stave.');\n        }\n        if (lineConfig.visible === undefined) {\n            throw new RuntimeError('StaveConfigError', \"The line configuration object is missing the 'visible' property.\");\n        }\n        if (typeof lineConfig.visible !== 'boolean') {\n            throw new RuntimeError('StaveConfigError', \"The line configuration objects 'visible' property must be true or false.\");\n        }\n        this.options.lineConfig[lineNumber] = lineConfig;\n        return this;\n    }\n    setConfigForLines(linesConfiguration) {\n        if (linesConfiguration.length !== this.options.numLines) {\n            throw new RuntimeError('StaveConfigError', 'The length of the lines configuration array must match the number of lines in the Stave');\n        }\n        for (const lineConfig in linesConfiguration) {\n            if (linesConfiguration[lineConfig].visible === undefined) {\n                linesConfiguration[lineConfig] = this.options.lineConfig[lineConfig];\n            }\n            this.options.lineConfig[lineConfig] = Object.assign(Object.assign({}, this.options.lineConfig[lineConfig]), linesConfiguration[lineConfig]);\n        }\n        this.options.lineConfig = linesConfiguration;\n        return this;\n    }\n    static formatBegModifiers(staves) {\n        const adjustCategoryStartX = (category) => {\n            let minStartX = 0;\n            staves.forEach((stave) => {\n                const modifiers = stave.getModifiers(StaveModifierPosition.BEGIN, category);\n                if (modifiers.length > 0 && modifiers[0].getX() > minStartX)\n                    minStartX = modifiers[0].getX();\n            });\n            let adjustX = 0;\n            staves.forEach((stave) => {\n                adjustX = 0;\n                const modifiers = stave.getModifiers(StaveModifierPosition.BEGIN, category);\n                modifiers.forEach((modifier) => {\n                    if (minStartX - modifier.getX() > adjustX)\n                        adjustX = minStartX - modifier.getX();\n                });\n                const allModifiers = stave.getModifiers(StaveModifierPosition.BEGIN);\n                let bAdjust = false;\n                allModifiers.forEach((modifier) => {\n                    if (modifier.getCategory() === category)\n                        bAdjust = true;\n                    if (bAdjust && adjustX > 0)\n                        modifier.setX(modifier.getX() + adjustX);\n                });\n                stave.setNoteStartX(stave.getNoteStartX() + adjustX);\n            });\n        };\n        staves.forEach((stave) => {\n            if (!stave.formatted)\n                stave.format();\n        });\n        adjustCategoryStartX(\"Clef\");\n        adjustCategoryStartX(\"KeySignature\");\n        adjustCategoryStartX(\"TimeSignature\");\n        let maxX = 0;\n        staves.forEach((stave) => {\n            if (stave.getNoteStartX() > maxX)\n                maxX = stave.getNoteStartX();\n        });\n        staves.forEach((stave) => {\n            stave.setNoteStartX(maxX);\n        });\n        maxX = 0;\n        staves.forEach((stave) => {\n            const modifiers = stave.getModifiers(StaveModifierPosition.BEGIN, \"Barline\");\n            modifiers.forEach((modifier) => {\n                if (modifier.getType() === BarlineType.REPEAT_BEGIN)\n                    if (modifier.getX() > maxX)\n                        maxX = modifier.getX();\n            });\n        });\n        staves.forEach((stave) => {\n            const modifiers = stave.getModifiers(StaveModifierPosition.BEGIN, \"Barline\");\n            modifiers.forEach((modifier) => {\n                if (modifier.getType() === BarlineType.REPEAT_BEGIN)\n                    modifier.setX(maxX);\n            });\n        });\n    }\n}\n","import { Element } from './element.js';\nimport { Glyphs } from './glyphs.js';\nimport { Tables } from './tables.js';\nimport { RuntimeError } from './util.js';\nfunction drawBoldDoubleLine(ctx, type, topX, topY, botY) {\n    if (type !== StaveConnector.type.BOLD_DOUBLE_LEFT && type !== StaveConnector.type.BOLD_DOUBLE_RIGHT) {\n        throw new RuntimeError('InvalidConnector', 'A REPEAT_BEGIN or REPEAT_END type must be provided.');\n    }\n    let xShift = 3;\n    let variableWidth = 3.5;\n    const thickLineOffset = 2;\n    if (type === StaveConnector.type.BOLD_DOUBLE_RIGHT) {\n        xShift = -5;\n        variableWidth = 3;\n    }\n    ctx.fillRect(topX + xShift, topY, 1, botY - topY);\n    ctx.fillRect(topX - thickLineOffset, topY, variableWidth, botY - topY);\n}\nexport class StaveConnector extends Element {\n    static get CATEGORY() {\n        return \"StaveConnector\";\n    }\n    constructor(topStave, bottomStave) {\n        super();\n        this.thickness = Tables.STAVE_LINE_THICKNESS;\n        this.topStave = topStave;\n        this.bottomStave = bottomStave;\n        this.type = StaveConnector.type.DOUBLE;\n        this.xShift = 0;\n        this.texts = [];\n    }\n    setType(type) {\n        const newType = typeof type === 'string' ? StaveConnector.typeString[type] : type;\n        if (Object.values(StaveConnector.type).includes(newType)) {\n            this.type = newType;\n        }\n        return this;\n    }\n    getType() {\n        return this.type;\n    }\n    setText(text, options = {}) {\n        var _a, _b;\n        const textElement = new Element('StaveConnector.text');\n        textElement.setText(text);\n        textElement.setXShift((_a = options.shiftX) !== null && _a !== void 0 ? _a : 0);\n        textElement.setYShift((_b = options.shiftY) !== null && _b !== void 0 ? _b : 0);\n        this.texts.push(textElement);\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        let topY = this.topStave.getYForLine(0);\n        let botY = this.bottomStave.getYForLine(this.bottomStave.getNumLines() - 1) + this.thickness;\n        let width = 3;\n        let topX = this.topStave.getX();\n        const isRightSidedConnector = this.type === StaveConnector.type.SINGLE_RIGHT ||\n            this.type === StaveConnector.type.BOLD_DOUBLE_RIGHT ||\n            this.type === StaveConnector.type.THIN_DOUBLE;\n        if (isRightSidedConnector) {\n            topX = this.topStave.getX() + this.topStave.getWidth();\n        }\n        let attachmentHeight = botY - topY;\n        const element = new Element();\n        switch (this.type) {\n            case StaveConnector.type.SINGLE:\n                width = 1;\n                break;\n            case StaveConnector.type.SINGLE_LEFT:\n                width = 1;\n                break;\n            case StaveConnector.type.SINGLE_RIGHT:\n                width = 1;\n                break;\n            case StaveConnector.type.DOUBLE:\n                topX -= 5;\n                topY -= this.thickness;\n                attachmentHeight += 0.5;\n                break;\n            case StaveConnector.type.BRACE: {\n                width = 12;\n                const x1 = this.topStave.getX() - 2 + this.xShift;\n                const y1 = topY;\n                const x3 = x1;\n                const y3 = botY;\n                const x2 = x1 - width;\n                const y2 = y1 + attachmentHeight / 2.0;\n                const cpx1 = x2 - 0.9 * width;\n                const cpy1 = y1 + 0.2 * attachmentHeight;\n                const cpx2 = x1 + 1.1 * width;\n                const cpy2 = y2 - 0.135 * attachmentHeight;\n                const cpx3 = cpx2;\n                const cpy3 = y2 + 0.135 * attachmentHeight;\n                const cpx4 = cpx1;\n                const cpy4 = y3 - 0.2 * attachmentHeight;\n                const cpx5 = x2 - width;\n                const cpy5 = cpy4;\n                const cpx6 = x1 + 0.4 * width;\n                const cpy6 = y2 + 0.135 * attachmentHeight;\n                const cpx7 = cpx6;\n                const cpy7 = y2 - 0.135 * attachmentHeight;\n                const cpx8 = cpx5;\n                const cpy8 = cpy1;\n                ctx.beginPath();\n                ctx.moveTo(x1, y1);\n                ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n                ctx.bezierCurveTo(cpx3, cpy3, cpx4, cpy4, x3, y3);\n                ctx.bezierCurveTo(cpx5, cpy5, cpx6, cpy6, x2, y2);\n                ctx.bezierCurveTo(cpx7, cpy7, cpx8, cpy8, x1, y1);\n                ctx.fill();\n                ctx.stroke();\n                break;\n            }\n            case StaveConnector.type.BRACKET:\n                topY -= 6;\n                botY += 6;\n                attachmentHeight = botY - topY;\n                element.setText(Glyphs.bracketTop);\n                element.renderText(ctx, topX - 5, topY);\n                element.setText(Glyphs.bracketBottom);\n                element.renderText(ctx, topX - 5, botY);\n                topX -= 5;\n                break;\n            case StaveConnector.type.BOLD_DOUBLE_LEFT:\n                drawBoldDoubleLine(ctx, this.type, topX + this.xShift, topY, botY - this.thickness);\n                break;\n            case StaveConnector.type.BOLD_DOUBLE_RIGHT:\n                drawBoldDoubleLine(ctx, this.type, topX, topY, botY - this.thickness);\n                break;\n            case StaveConnector.type.THIN_DOUBLE:\n                width = 1;\n                attachmentHeight -= this.thickness;\n                break;\n            case StaveConnector.type.NONE:\n                break;\n            default:\n                throw new RuntimeError('InvalidType', `The provided StaveConnector.type (${this.type}) is invalid.`);\n        }\n        if (this.type !== StaveConnector.type.BRACE &&\n            this.type !== StaveConnector.type.BOLD_DOUBLE_LEFT &&\n            this.type !== StaveConnector.type.BOLD_DOUBLE_RIGHT &&\n            this.type !== StaveConnector.type.NONE) {\n            ctx.fillRect(topX, topY, width, attachmentHeight);\n        }\n        if (this.type === StaveConnector.type.THIN_DOUBLE) {\n            ctx.fillRect(topX - 3, topY, width, attachmentHeight);\n        }\n        for (let i = 0; i < this.texts.length; i++) {\n            const textElement = this.texts[i];\n            const x = this.topStave.getX() - textElement.getWidth() - 24;\n            const y = (this.topStave.getYForLine(0) + this.bottomStave.getBottomLineY()) / 2;\n            textElement.renderText(ctx, x, y + 4);\n        }\n    }\n}\nStaveConnector.type = {\n    SINGLE_RIGHT: 0,\n    SINGLE_LEFT: 1,\n    SINGLE: 1,\n    DOUBLE: 2,\n    BRACE: 3,\n    BRACKET: 4,\n    BOLD_DOUBLE_LEFT: 5,\n    BOLD_DOUBLE_RIGHT: 6,\n    THIN_DOUBLE: 7,\n    NONE: 8,\n};\nStaveConnector.typeString = {\n    singleRight: StaveConnector.type.SINGLE_RIGHT,\n    singleLeft: StaveConnector.type.SINGLE_LEFT,\n    single: StaveConnector.type.SINGLE,\n    double: StaveConnector.type.DOUBLE,\n    brace: StaveConnector.type.BRACE,\n    bracket: StaveConnector.type.BRACKET,\n    boldDoubleLeft: StaveConnector.type.BOLD_DOUBLE_LEFT,\n    boldDoubleRight: StaveConnector.type.BOLD_DOUBLE_RIGHT,\n    thinDouble: StaveConnector.type.THIN_DOUBLE,\n    none: StaveConnector.type.NONE,\n};\n","import { Beam } from './beam.js';\nimport { Fraction } from './fraction.js';\nimport { Metrics } from './metrics.js';\nimport { ModifierContext } from './modifiercontext.js';\nimport { Stave } from './stave.js';\nimport { StaveConnector } from './staveconnector.js';\nimport { Tables } from './tables.js';\nimport { TickContext } from './tickcontext.js';\nimport { isNote, isStaveNote } from './typeguard.js';\nimport { defined, log, midLine, RuntimeError, sumArray } from './util.js';\nimport { Voice } from './voice.js';\nfunction createContexts(voices, makeContext, addToContext) {\n    if (voices.length === 0)\n        return {\n            map: {},\n            array: [],\n            list: [],\n            resolutionMultiplier: 0,\n        };\n    const tickToContextMap = {};\n    const tickList = [];\n    const contexts = [];\n    const resolutionMultiplier = Formatter.getResolutionMultiplier(voices);\n    voices.forEach((voice, voiceIndex) => {\n        const ticksUsed = new Fraction(0, resolutionMultiplier);\n        voice.getTickables().forEach((tickable) => {\n            const integerTicks = ticksUsed.numerator;\n            if (!tickToContextMap[integerTicks]) {\n                const newContext = makeContext({ tickID: integerTicks });\n                contexts.push(newContext);\n                tickToContextMap[integerTicks] = newContext;\n                tickList.push(integerTicks);\n            }\n            addToContext(tickable, tickToContextMap[integerTicks], voiceIndex);\n            ticksUsed.add(tickable.getTicks());\n        });\n    });\n    return {\n        map: tickToContextMap,\n        array: contexts,\n        list: tickList.sort((a, b) => a - b),\n        resolutionMultiplier,\n    };\n}\nfunction L(...args) {\n    if (Formatter.DEBUG)\n        log('VexFlow.Formatter', args);\n}\nfunction getRestLineForNextNoteGroup(notes, currRestLine, currNoteIndex, compare) {\n    let nextRestLine = currRestLine;\n    for (let noteIndex = currNoteIndex + 1; noteIndex < notes.length; noteIndex++) {\n        const note = notes[noteIndex];\n        if (isNote(note) && !note.isRest() && !note.shouldIgnoreTicks()) {\n            nextRestLine = note.getLineForRest();\n            break;\n        }\n    }\n    if (compare && currRestLine !== nextRestLine) {\n        const top = Math.max(currRestLine, nextRestLine);\n        const bot = Math.min(currRestLine, nextRestLine);\n        nextRestLine = midLine(top, bot);\n    }\n    return nextRestLine;\n}\nexport class Formatter {\n    static SimpleFormat(notes, x = 0, { paddingBetween = 10 } = {}) {\n        notes.reduce((accumulator, note) => {\n            note.addToModifierContext(new ModifierContext());\n            const tickContext = new TickContext().addTickable(note).preFormat();\n            const metrics = tickContext.getMetrics();\n            tickContext.setX(accumulator + metrics.totalLeftPx);\n            return accumulator + tickContext.getWidth() + metrics.totalRightPx + paddingBetween;\n        }, x);\n    }\n    static plotDebugging(ctx, formatter, xPos, y1, y2, options) {\n        var _a, _b;\n        options = Object.assign({ stavePadding: Metrics.get('Stave.padding') }, options);\n        const x = xPos + options.stavePadding;\n        const contextGaps = formatter.contextGaps;\n        function stroke(x1, x2, color) {\n            ctx.beginPath();\n            ctx.setStrokeStyle(color);\n            ctx.setFillStyle(color);\n            ctx.setLineWidth(1);\n            ctx.fillRect(x1, y1, Math.max(x2 - x1, 0), y2 - y1);\n        }\n        ctx.save();\n        ctx.setFont(Metrics.get('fontFamily'), 8);\n        contextGaps.gaps.forEach((gap) => {\n            stroke(x + gap.x1, x + gap.x2, 'rgba(100,200,100,0.4)');\n            ctx.setFillStyle('green');\n            ctx.fillText(Math.round(gap.x2 - gap.x1).toString(), x + gap.x1, y2 + 12);\n        });\n        ctx.setFillStyle('red');\n        ctx.fillText(`Loss: ${((_a = formatter.totalCost) !== null && _a !== void 0 ? _a : 0).toFixed(2)} Shift: ${((_b = formatter.totalShift) !== null && _b !== void 0 ? _b : 0).toFixed(2)} Gap: ${contextGaps.total.toFixed(2)}`, x - 20, y2 + 27);\n        ctx.restore();\n    }\n    static FormatAndDraw(ctx, stave, notes, params) {\n        let options = {\n            autoBeam: false,\n            alignRests: false,\n        };\n        if (typeof params === 'object') {\n            options = Object.assign(Object.assign({}, options), params);\n        }\n        else if (typeof params === 'boolean') {\n            options.autoBeam = params;\n        }\n        const voice = new Voice(Tables.TIME4_4).setMode(Voice.Mode.SOFT).addTickables(notes);\n        const beams = options.autoBeam ? Beam.applyAndGetBeams(voice) : [];\n        new Formatter()\n            .joinVoices([voice])\n            .formatToStave([voice], stave, { alignRests: options.alignRests, stave });\n        voice.setContext(ctx).setStave(stave).drawWithStyle();\n        beams.forEach((beam) => beam.setContext(ctx).drawWithStyle());\n        return voice.getBoundingBox();\n    }\n    static FormatAndDrawTab(ctx, tabstave, stave, tabnotes, notes, autoBeam, params) {\n        let opts = {\n            autoBeam,\n            alignRests: false,\n        };\n        if (typeof params === 'object') {\n            opts = Object.assign(Object.assign({}, opts), params);\n        }\n        else if (typeof params === 'boolean') {\n            opts.autoBeam = params;\n        }\n        const notevoice = new Voice(Tables.TIME4_4).setMode(Voice.Mode.SOFT).addTickables(notes);\n        const tabvoice = new Voice(Tables.TIME4_4).setMode(Voice.Mode.SOFT).addTickables(tabnotes);\n        const beams = opts.autoBeam ? Beam.applyAndGetBeams(notevoice) : [];\n        new Formatter()\n            .joinVoices([notevoice])\n            .joinVoices([tabvoice])\n            .formatToStave([notevoice, tabvoice], stave, { alignRests: opts.alignRests });\n        notevoice.draw(ctx, stave);\n        tabvoice.draw(ctx, tabstave);\n        beams.forEach((beam) => beam.setContext(ctx).drawWithStyle());\n        new StaveConnector(stave, tabstave).setContext(ctx).drawWithStyle();\n    }\n    static AlignRestsToNotes(tickables, alignAllNotes, alignTuplets) {\n        tickables.forEach((currTickable, index) => {\n            if (isStaveNote(currTickable) && currTickable.isRest()) {\n                if (currTickable.getTuplet() && !alignTuplets) {\n                    return;\n                }\n                const line = currTickable.getLineForRest();\n                if (line !== 3) {\n                    return;\n                }\n                if (alignAllNotes || currTickable.getBeam()) {\n                    const props = currTickable.getKeyProps()[0];\n                    if (index === 0) {\n                        props.line = getRestLineForNextNoteGroup(tickables, props.line, index, false);\n                    }\n                    else if (index > 0 && index < tickables.length) {\n                        const prevTickable = tickables[index - 1];\n                        if (isStaveNote(prevTickable)) {\n                            if (prevTickable.isRest()) {\n                                props.line = prevTickable.getKeyProps()[0].line;\n                            }\n                            else {\n                                const restLine = prevTickable.getLineForRest();\n                                props.line = getRestLineForNextNoteGroup(tickables, restLine, index, true);\n                            }\n                        }\n                    }\n                    currTickable.setKeyLine(0, props.line);\n                }\n            }\n        });\n    }\n    constructor(options) {\n        this.formatterOptions = Object.assign({ globalSoftmax: false, softmaxFactor: Tables.SOFTMAX_FACTOR, maxIterations: 5 }, options);\n        this.justifyWidth = 0;\n        this.totalCost = 0;\n        this.totalShift = 0;\n        this.durationStats = {};\n        this.minTotalWidth = 0;\n        this.hasMinTotalWidth = false;\n        this.tickContexts = {\n            map: {},\n            array: [],\n            list: [],\n            resolutionMultiplier: 0,\n        };\n        this.modifierContexts = [];\n        this.contextGaps = {\n            total: 0,\n            gaps: [],\n        };\n        this.voices = [];\n        this.lossHistory = [];\n    }\n    alignRests(voices, alignAllNotes) {\n        if (!voices || !voices.length) {\n            throw new RuntimeError('BadArgument', 'No voices to format rests');\n        }\n        voices.forEach((voice) => Formatter.AlignRestsToNotes(voice.getTickables(), alignAllNotes));\n    }\n    preCalculateMinTotalWidth(voices) {\n        const unalignedPadding = Metrics.get('Stave.unalignedNotePadding');\n        let unalignedCtxCount = 0;\n        let wsum = 0;\n        let dsum = 0;\n        const widths = [];\n        const durations = [];\n        if (this.hasMinTotalWidth)\n            return this.minTotalWidth;\n        if (!voices) {\n            throw new RuntimeError('BadArgument', \"'voices' required to run preCalculateMinTotalWidth\");\n        }\n        this.createTickContexts(voices);\n        const { list: contextList, map: contextMap } = this.tickContexts;\n        this.minTotalWidth = 0;\n        contextList.forEach((tick) => {\n            const context = contextMap[tick];\n            context.preFormat();\n            if (context.getTickables().length < voices.length) {\n                unalignedCtxCount += 1;\n            }\n            context.getTickables().forEach((t) => {\n                wsum += t.getMetrics().width;\n                dsum += t.getTicks().value();\n                widths.push(t.getMetrics().width);\n                durations.push(t.getTicks().value());\n            });\n            const width = context.getWidth();\n            this.minTotalWidth += width;\n        });\n        this.hasMinTotalWidth = true;\n        const wavg = wsum > 0 ? wsum / widths.length : 1 / widths.length;\n        const wvar = sumArray(widths.map((ll) => Math.pow(ll - wavg, 2)));\n        const wpads = Math.pow(wvar / widths.length, 0.5) / wavg;\n        const davg = dsum / durations.length;\n        const dvar = sumArray(durations.map((ll) => Math.pow(ll - davg, 2)));\n        const dpads = Math.pow(dvar / durations.length, 0.5) / davg;\n        const padmax = Math.max(dpads, wpads) * contextList.length * unalignedPadding;\n        const unalignedPad = unalignedPadding * unalignedCtxCount;\n        return this.minTotalWidth + Math.max(unalignedPad, padmax);\n    }\n    getMinTotalWidth() {\n        if (!this.hasMinTotalWidth) {\n            throw new RuntimeError('NoMinTotalWidth', \"Call 'preCalculateMinTotalWidth' or 'preFormat' before calling 'getMinTotalWidth'\");\n        }\n        return this.minTotalWidth;\n    }\n    static getResolutionMultiplier(voices) {\n        if (!voices || !voices.length) {\n            throw new RuntimeError('BadArgument', 'No voices to format');\n        }\n        const totalTicks = voices[0].getTotalTicks();\n        const resolutionMultiplier = voices.reduce((accumulator, voice) => {\n            if (!voice.getTotalTicks().equals(totalTicks)) {\n                throw new RuntimeError('TickMismatch', 'Voices should have same total note duration in ticks.');\n            }\n            if (voice.getMode() === Voice.Mode.STRICT && !voice.isComplete()) {\n                throw new RuntimeError('IncompleteVoice', 'Voice does not have enough notes.');\n            }\n            return Math.max(accumulator, Fraction.LCM(accumulator, voice.getResolutionMultiplier()));\n        }, 1);\n        return resolutionMultiplier;\n    }\n    createModifierContexts(voices) {\n        if (voices.length === 0)\n            return;\n        const resolutionMultiplier = Formatter.getResolutionMultiplier(voices);\n        const tickToContextMap = new Map();\n        const contexts = [];\n        voices.forEach((voice) => {\n            const ticksUsed = new Fraction(0, resolutionMultiplier);\n            voice.getTickables().forEach((tickable) => {\n                const integerTicks = ticksUsed.numerator;\n                let staveTickToContextMap = tickToContextMap.get(tickable.getStave());\n                if (!staveTickToContextMap) {\n                    tickToContextMap.set(tickable.getStave(), {});\n                    staveTickToContextMap = tickToContextMap.get(tickable.getStave());\n                }\n                if (!(staveTickToContextMap ? staveTickToContextMap[integerTicks] : undefined)) {\n                    const newContext = new ModifierContext();\n                    contexts.push(newContext);\n                    staveTickToContextMap[integerTicks] = newContext;\n                }\n                tickable.addToModifierContext(staveTickToContextMap[integerTicks]);\n                ticksUsed.add(tickable.getTicks());\n            });\n        });\n        this.modifierContexts.push({\n            map: tickToContextMap,\n            array: contexts,\n            resolutionMultiplier,\n        });\n    }\n    createTickContexts(voices) {\n        const fn = (tickable, context, voiceIndex) => context.addTickable(tickable, voiceIndex);\n        const contexts = createContexts(voices, (tick) => new TickContext(tick), fn);\n        this.tickContexts = contexts;\n        const contextArray = this.tickContexts.array;\n        contextArray.forEach((context) => {\n            context.tContexts = contextArray;\n        });\n        return contexts;\n    }\n    getTickContexts() {\n        return this.tickContexts;\n    }\n    preFormat(justifyWidth = 0, renderingContext, voicesParam, stave) {\n        const contexts = this.tickContexts;\n        if (!contexts) {\n            throw new RuntimeError('NoTickContexts', 'preFormat requires TickContexts');\n        }\n        const { list: contextList, map: contextMap } = contexts;\n        this.lossHistory = [];\n        if (voicesParam && stave) {\n            voicesParam.forEach((voice) => voice.setStave(stave).preFormat());\n        }\n        let x = 0;\n        let shift = 0;\n        this.minTotalWidth = 0;\n        let totalTicks = 0;\n        contextList.forEach((tick) => {\n            const context = contextMap[tick];\n            context.preFormat();\n            const width = context.getWidth();\n            this.minTotalWidth += width;\n            const maxTicks = context.getMaxTicks().value();\n            totalTicks += maxTicks;\n            const metrics = context.getMetrics();\n            x = x + shift + metrics.totalLeftPx;\n            context.setX(x);\n            shift = width - metrics.totalLeftPx;\n        });\n        const { globalSoftmax, softmaxFactor, maxIterations } = this.formatterOptions;\n        const exp = (tick) => Math.pow(softmaxFactor, (contextMap[tick].getMaxTicks().value() / totalTicks));\n        const expTicksUsed = sumArray(contextList.map(exp));\n        this.minTotalWidth = x + shift;\n        this.hasMinTotalWidth = true;\n        if (justifyWidth <= 0)\n            return this.evaluate();\n        const firstContext = contextMap[contextList[0]];\n        const lastContext = contextMap[contextList[contextList.length - 1]];\n        function calculateIdealDistances(adjustedJustifyWidth) {\n            const distances = contextList.map((tick, i) => {\n                const context = contextMap[tick];\n                const voices = context.getTickablesByVoice();\n                let backTickable;\n                if (i > 0) {\n                    const prevContext = contextMap[contextList[i - 1]];\n                    for (let j = i - 1; j >= 0; j--) {\n                        const backTick = contextMap[contextList[j]];\n                        const backVoices = backTick.getTickablesByVoice();\n                        const matchingVoices = [];\n                        Object.keys(voices).forEach((v) => {\n                            if (backVoices[v]) {\n                                matchingVoices.push(v);\n                            }\n                        });\n                        if (matchingVoices.length > 0) {\n                            let maxTicks = 0;\n                            let maxNegativeShiftPx = Infinity;\n                            let expectedDistance = 0;\n                            matchingVoices.forEach((v) => {\n                                const ticks = backVoices[v].getTicks().value();\n                                if (ticks > maxTicks) {\n                                    backTickable = backVoices[v];\n                                    maxTicks = ticks;\n                                }\n                                const thisTickable = voices[v];\n                                const insideLeftEdge = thisTickable.getX() -\n                                    (thisTickable.getMetrics().modLeftPx + thisTickable.getMetrics().leftDisplacedHeadPx);\n                                const backMetrics = backVoices[v].getMetrics();\n                                const insideRightEdge = backVoices[v].getX() + backMetrics.notePx + backMetrics.modRightPx + backMetrics.rightDisplacedHeadPx;\n                                maxNegativeShiftPx = Math.min(maxNegativeShiftPx, insideLeftEdge - insideRightEdge);\n                            });\n                            maxNegativeShiftPx = Math.min(maxNegativeShiftPx, context.getX() - (prevContext.getX() + adjustedJustifyWidth * 0.05));\n                            if (globalSoftmax) {\n                                const t = totalTicks;\n                                expectedDistance = (Math.pow(softmaxFactor, (maxTicks / t)) / expTicksUsed) * adjustedJustifyWidth;\n                            }\n                            else if (typeof backTickable !== 'undefined') {\n                                expectedDistance = backTickable.getVoice().softmax(maxTicks) * adjustedJustifyWidth;\n                            }\n                            return {\n                                expectedDistance,\n                                maxNegativeShiftPx,\n                                fromTickable: backTickable,\n                            };\n                        }\n                    }\n                }\n                return { expectedDistance: 0, fromTickablePx: 0, maxNegativeShiftPx: 0 };\n            });\n            return distances;\n        }\n        function shiftToIdealDistances(idealDistances) {\n            const centerX = adjustedJustifyWidth / 2;\n            let spaceAccum = 0;\n            contextList.forEach((tick, index) => {\n                const context = contextMap[tick];\n                if (index > 0) {\n                    const contextX = context.getX();\n                    const ideal = idealDistances[index];\n                    const errorPx = defined(ideal.fromTickable).getX() + ideal.expectedDistance - (contextX + spaceAccum);\n                    let negativeShiftPx = 0;\n                    if (errorPx > 0) {\n                        spaceAccum += errorPx;\n                    }\n                    else if (errorPx < 0) {\n                        negativeShiftPx = Math.min(ideal.maxNegativeShiftPx, Math.abs(errorPx));\n                        spaceAccum += -negativeShiftPx;\n                    }\n                    context.setX(contextX + spaceAccum);\n                }\n                context.getCenterAlignedTickables().forEach((tickable) => {\n                    tickable.setCenterXShift(centerX - context.getX());\n                });\n            });\n            return lastContext.getX() - firstContext.getX();\n        }\n        const adjustedJustifyWidth = justifyWidth -\n            lastContext.getMetrics().notePx -\n            lastContext.getMetrics().totalRightPx -\n            firstContext.getMetrics().totalLeftPx;\n        const configMinPadding = Metrics.get('Stave.endPaddingMin');\n        const configMaxPadding = Metrics.get('Stave.endPaddingMax');\n        const leftPadding = Metrics.get('Stave.padding');\n        let targetWidth = adjustedJustifyWidth;\n        const distances = calculateIdealDistances(targetWidth);\n        let actualWidth = shiftToIdealDistances(distances);\n        if (contextList.length === 1)\n            return 0;\n        const calcMinDistance = (targetWidth, distances) => {\n            let mdCalc = targetWidth / 2;\n            if (distances.length > 1) {\n                for (let di = 1; di < distances.length; ++di) {\n                    mdCalc = Math.min(distances[di].expectedDistance / 2, mdCalc);\n                }\n            }\n            return mdCalc;\n        };\n        const minDistance = calcMinDistance(targetWidth, distances);\n        const paddingMaxCalc = (curTargetWidth) => {\n            let lastTickablePadding = 0;\n            const lastTickable = lastContext && lastContext.getMaxTickable();\n            if (lastTickable) {\n                const voice = lastTickable.getVoice();\n                if (voice.getTicksUsed().value() > voice.getTotalTicks().value()) {\n                    return configMaxPadding * 2 < minDistance ? minDistance : configMaxPadding;\n                }\n                const tickWidth = lastTickable.getWidth();\n                lastTickablePadding =\n                    voice.softmax(lastContext.getMaxTicks().value()) * curTargetWidth - (tickWidth + leftPadding);\n            }\n            return configMaxPadding * 2 < lastTickablePadding ? lastTickablePadding : configMaxPadding;\n        };\n        let paddingMax = paddingMaxCalc(targetWidth);\n        let paddingMin = paddingMax - (configMaxPadding - configMinPadding);\n        const maxX = adjustedJustifyWidth - paddingMin;\n        let iterations = maxIterations;\n        while ((actualWidth > maxX && iterations > 0) || (actualWidth + paddingMax < maxX && iterations > 1)) {\n            targetWidth -= actualWidth - maxX;\n            paddingMax = paddingMaxCalc(targetWidth);\n            paddingMin = paddingMax - (configMaxPadding - configMinPadding);\n            actualWidth = shiftToIdealDistances(calculateIdealDistances(targetWidth));\n            iterations--;\n        }\n        this.justifyWidth = justifyWidth;\n        return this.evaluate();\n    }\n    evaluate() {\n        const contexts = this.tickContexts;\n        const justifyWidth = this.justifyWidth;\n        this.contextGaps = { total: 0, gaps: [] };\n        contexts.list.forEach((tick, index) => {\n            if (index === 0)\n                return;\n            const prevTick = contexts.list[index - 1];\n            const prevContext = contexts.map[prevTick];\n            const context = contexts.map[tick];\n            const prevMetrics = prevContext.getMetrics();\n            const currMetrics = context.getMetrics();\n            const insideRightEdge = prevContext.getX() + prevMetrics.notePx + prevMetrics.totalRightPx;\n            const insideLeftEdge = context.getX() - currMetrics.totalLeftPx;\n            const gap = insideLeftEdge - insideRightEdge;\n            this.contextGaps.total += gap;\n            this.contextGaps.gaps.push({ x1: insideRightEdge, x2: insideLeftEdge });\n            context.getFormatterMetrics().freedom.left = gap;\n            prevContext.getFormatterMetrics().freedom.right = gap;\n        });\n        this.durationStats = {};\n        const durationStats = this.durationStats;\n        function updateStats(duration, space) {\n            const stats = durationStats[duration];\n            if (stats === undefined) {\n                durationStats[duration] = { mean: space, count: 1, total: space };\n            }\n            else {\n                stats.count += 1;\n                stats.total += space;\n                stats.mean = stats.total / stats.count;\n            }\n        }\n        this.voices.forEach((voice) => {\n            voice.getTickables().forEach((note, i, notes) => {\n                const duration = note.getTicks().clone().simplify().toString();\n                const metrics = note.getMetrics();\n                const formatterMetrics = note.getFormatterMetrics();\n                const leftNoteEdge = note.getX() + metrics.notePx + metrics.modRightPx + metrics.rightDisplacedHeadPx;\n                let space = 0;\n                if (i < notes.length - 1) {\n                    const rightNote = notes[i + 1];\n                    const rightMetrics = rightNote.getMetrics();\n                    const rightNoteEdge = rightNote.getX() - rightMetrics.modLeftPx - rightMetrics.leftDisplacedHeadPx;\n                    space = rightNoteEdge - leftNoteEdge;\n                    formatterMetrics.space.used = rightNote.getX() - note.getX();\n                    rightNote.getFormatterMetrics().freedom.left = space;\n                }\n                else {\n                    space = justifyWidth - leftNoteEdge;\n                    formatterMetrics.space.used = justifyWidth - note.getX();\n                }\n                formatterMetrics.freedom.right = space;\n                updateStats(duration, formatterMetrics.space.used);\n            });\n        });\n        let totalDeviation = 0;\n        this.voices.forEach((voice) => {\n            voice.getTickables().forEach((note) => {\n                const duration = note.getTicks().clone().simplify().toString();\n                const metrics = note.getFormatterMetrics();\n                metrics.space.mean = durationStats[duration].mean;\n                metrics.duration = duration;\n                metrics.iterations += 1;\n                metrics.space.deviation = metrics.space.used - metrics.space.mean;\n                totalDeviation += Math.pow(metrics.space.deviation, 2);\n            });\n        });\n        this.totalCost = Math.sqrt(totalDeviation);\n        this.lossHistory.push(this.totalCost);\n        return this.totalCost;\n    }\n    tune(options) {\n        var _a;\n        const contexts = this.tickContexts;\n        if (!contexts) {\n            return 0;\n        }\n        const alpha = (_a = options === null || options === void 0 ? void 0 : options.alpha) !== null && _a !== void 0 ? _a : 0.5;\n        let shift = 0;\n        this.totalShift = 0;\n        contexts.list.forEach((tick, index, list) => {\n            const context = contexts.map[tick];\n            const prevContext = index > 0 ? contexts.map[list[index - 1]] : undefined;\n            const nextContext = index < list.length - 1 ? contexts.map[list[index + 1]] : undefined;\n            context.move(shift, prevContext, nextContext);\n            const cost = -context.getDeviationCost();\n            if (cost > 0) {\n                shift = -Math.min(context.getFormatterMetrics().freedom.right, Math.abs(cost));\n            }\n            else if (cost < 0) {\n                if (nextContext) {\n                    shift = Math.min(nextContext.getFormatterMetrics().freedom.right, Math.abs(cost));\n                }\n                else {\n                    shift = 0;\n                }\n            }\n            shift *= alpha;\n            this.totalShift += shift;\n        });\n        return this.evaluate();\n    }\n    postFormat() {\n        this.modifierContexts.forEach((modifierContexts) => {\n            modifierContexts.array.forEach((mc) => mc.postFormat());\n        });\n        this.tickContexts.list.forEach((tick) => {\n            this.tickContexts.map[tick].postFormat();\n        });\n        return this;\n    }\n    joinVoices(voices) {\n        this.createModifierContexts(voices);\n        this.hasMinTotalWidth = false;\n        return this;\n    }\n    format(voices, justifyWidth, options) {\n        const opts = Object.assign({ alignRests: false }, options);\n        this.voices = voices;\n        const softmaxFactor = this.formatterOptions.softmaxFactor;\n        if (softmaxFactor) {\n            this.voices.forEach((v) => v.setSoftmaxFactor(softmaxFactor));\n        }\n        this.alignRests(voices, opts.alignRests);\n        this.createTickContexts(voices);\n        this.preFormat(justifyWidth, opts.context, voices, opts.stave);\n        if (opts.stave)\n            this.postFormat();\n        return this;\n    }\n    formatToStave(voices, stave, optionsParam) {\n        const options = Object.assign({ context: stave.getContext() }, optionsParam);\n        const justifyWidth = stave.getNoteEndX() - stave.getNoteStartX() - Stave.defaultPadding;\n        L('Formatting voices to width: ', justifyWidth);\n        return this.format(voices, justifyWidth, options);\n    }\n    getTickContext(tick) {\n        var _a;\n        return (_a = this.tickContexts) === null || _a === void 0 ? void 0 : _a.map[tick];\n    }\n}\nFormatter.DEBUG = false;\n","import { StemmableNote } from './stemmablenote.js';\nimport { isAnnotation } from './typeguard.js';\nimport { RuntimeError } from './util.js';\nconst ERROR_MSG = 'Ghost note must have valid initialization data to identify duration.';\nexport class GhostNote extends StemmableNote {\n    static get CATEGORY() {\n        return \"GhostNote\";\n    }\n    constructor(parameter) {\n        if (!parameter) {\n            throw new RuntimeError('BadArguments', ERROR_MSG);\n        }\n        let noteStruct;\n        if (typeof parameter === 'string') {\n            noteStruct = { duration: parameter };\n        }\n        else if (typeof parameter === 'object') {\n            noteStruct = parameter;\n        }\n        else {\n            throw new RuntimeError('BadArguments', ERROR_MSG);\n        }\n        super(noteStruct);\n        this.setWidth(0);\n    }\n    isRest() {\n        return true;\n    }\n    setStave(stave) {\n        super.setStave(stave);\n        return this;\n    }\n    addToModifierContext(mc) {\n        return this;\n    }\n    preFormat() {\n        this.preFormatted = true;\n        return this;\n    }\n    draw() {\n        this.setRendered();\n        for (let i = 0; i < this.modifiers.length; ++i) {\n            const modifier = this.modifiers[i];\n            if (isAnnotation(modifier)) {\n                modifier.setContext(this.getContext());\n                modifier.drawWithStyle();\n            }\n        }\n    }\n}\n","import { Note } from './note.js';\nexport class GlyphNote extends Note {\n    static get CATEGORY() {\n        return \"GlyphNote\";\n    }\n    constructor(glyph, noteStruct, options) {\n        super(noteStruct);\n        this.options = Object.assign({ ignoreTicks: false, line: 2 }, options);\n        this.ignoreTicks = this.options.ignoreTicks;\n        this.setGlyph(glyph);\n    }\n    setGlyph(glyph) {\n        this.text = glyph;\n        return this;\n    }\n    preFormat() {\n        if (!this.preFormatted && this.modifierContext) {\n            this.modifierContext.preFormat();\n        }\n        this.preFormatted = true;\n        return this;\n    }\n    drawModifiers() {\n        const ctx = this.checkContext();\n        for (let i = 0; i < this.modifiers.length; i++) {\n            const modifier = this.modifiers[i];\n            modifier.setContext(ctx);\n            modifier.drawWithStyle();\n        }\n    }\n    draw() {\n        const stave = this.checkStave();\n        const ctx = stave.checkContext();\n        this.setRendered();\n        ctx.openGroup('glyphNote', this.getAttribute('id'));\n        this.x = this.isCenterAligned() ? this.getAbsoluteX() - this.getWidth() / 2 : this.getAbsoluteX();\n        this.y = stave.getYForLine(this.options.line);\n        this.renderText(ctx, 0, 0);\n        this.drawModifiers();\n        ctx.closeGroup();\n    }\n}\n","import { StaveNote } from './stavenote.js';\nimport { Stem } from './stem.js';\nimport { Tables } from './tables.js';\nimport { RuntimeError } from './util.js';\nexport class GraceNote extends StaveNote {\n    static get CATEGORY() {\n        return \"GraceNote\";\n    }\n    static get LEDGER_LINE_OFFSET() {\n        return 2;\n    }\n    constructor(noteStruct) {\n        super(Object.assign({ strokePx: GraceNote.LEDGER_LINE_OFFSET }, noteStruct));\n        this.slash = noteStruct.slash || false;\n        this.slur = true;\n        this.buildNoteHeads();\n        this.width = 3;\n    }\n    getStemExtension() {\n        if (this.stemExtensionOverride) {\n            return this.stemExtensionOverride;\n        }\n        let ret = super.getStemExtension();\n        ret = Stem.HEIGHT * this.getFontScale() - Stem.HEIGHT + ret;\n        return ret;\n    }\n    draw() {\n        super.draw();\n        this.setRendered();\n        const stem = this.stem;\n        if (this.slash && stem) {\n            const scale = this.getFontScale();\n            let slashBBox = undefined;\n            const beam = this.beam;\n            if (beam) {\n                if (!beam.postFormatted) {\n                    beam.postFormat();\n                }\n                slashBBox = this.calcBeamedNotesSlashBBox(8 * scale, 8 * scale, {\n                    stem: 6 * scale,\n                    beam: 5 * scale,\n                });\n            }\n            else {\n                const stemDirection = this.getStemDirection();\n                const noteHeadBounds = this.getNoteHeadBounds();\n                const noteHeadWidth = this.noteHeads[0].getWidth();\n                const x = stemDirection === Stem.DOWN ? this.getAbsoluteX() : this.getAbsoluteX() + noteHeadWidth;\n                const defaultOffsetY = (Tables.STEM_HEIGHT * scale) / 2;\n                const y = stemDirection === Stem.DOWN ? noteHeadBounds.yBottom + defaultOffsetY : noteHeadBounds.yTop - defaultOffsetY;\n                if (stemDirection === Stem.DOWN) {\n                    slashBBox = {\n                        x1: x - noteHeadWidth,\n                        y1: y - noteHeadWidth,\n                        x2: x + noteHeadWidth,\n                        y2: y + noteHeadWidth,\n                    };\n                }\n                else {\n                    slashBBox = {\n                        x1: x - noteHeadWidth,\n                        y1: y + noteHeadWidth,\n                        x2: x + noteHeadWidth,\n                        y2: y - noteHeadWidth,\n                    };\n                }\n            }\n            const ctx = this.checkContext();\n            ctx.setLineWidth(1 * scale);\n            ctx.beginPath();\n            ctx.moveTo(slashBBox.x1, slashBBox.y1);\n            ctx.lineTo(slashBBox.x2, slashBBox.y2);\n            ctx.closePath();\n            ctx.stroke();\n        }\n    }\n    calcBeamedNotesSlashBBox(slashStemOffset, slashBeamOffset, protrusions) {\n        const beam = this.beam;\n        if (!beam)\n            throw new RuntimeError('NoBeam', \"Can't calculate without a beam.\");\n        const beamSlope = beam.slope;\n        const isBeamEndNote = beam.notes[beam.notes.length - 1] === this;\n        const scaleX = isBeamEndNote ? -1 : 1;\n        const beamAngle = Math.atan(beamSlope * scaleX);\n        const iPointOnBeam = {\n            dx: Math.cos(beamAngle) * slashBeamOffset,\n            dy: Math.sin(beamAngle) * slashBeamOffset,\n        };\n        slashStemOffset *= this.getStemDirection();\n        const slashAngle = Math.atan((iPointOnBeam.dy - slashStemOffset) / iPointOnBeam.dx);\n        const protrusionStemDeltaX = Math.cos(slashAngle) * protrusions.stem * scaleX;\n        const protrusionStemDeltaY = Math.sin(slashAngle) * protrusions.stem;\n        const protrusionBeamDeltaX = Math.cos(slashAngle) * protrusions.beam * scaleX;\n        const protrusionBeamDeltaY = Math.sin(slashAngle) * protrusions.beam;\n        const stemX = this.getStemX();\n        const stem0X = beam.notes[0].getStemX();\n        const stemY = beam.getBeamYToDraw() + (stemX - stem0X) * beamSlope;\n        const ret = {\n            x1: stemX - protrusionStemDeltaX,\n            y1: stemY + slashStemOffset - protrusionStemDeltaY,\n            x2: stemX + iPointOnBeam.dx * scaleX + protrusionBeamDeltaX,\n            y2: stemY + iPointOnBeam.dy + protrusionBeamDeltaY,\n        };\n        return ret;\n    }\n}\n","import { KeySignature } from './keysignature.js';\nimport { Note } from './note.js';\nexport class KeySigNote extends Note {\n    static get CATEGORY() {\n        return \"KeySigNote\";\n    }\n    constructor(keySpec, cancelKeySpec, alterKeySpec) {\n        super({ duration: 'b' });\n        this.keySignature = new KeySignature(keySpec, cancelKeySpec, alterKeySpec);\n        this.ignoreTicks = true;\n    }\n    addToModifierContext(mc) {\n        return this;\n    }\n    preFormat() {\n        this.preFormatted = true;\n        this.keySignature.setStave(this.checkStave());\n        this.setWidth(this.keySignature.getWidth());\n        return this;\n    }\n    draw() {\n        const ctx = this.checkStave().checkContext();\n        this.setRendered();\n        this.keySignature.setX(this.getAbsoluteX());\n        this.keySignature.setContext(ctx);\n        this.keySignature.drawWithStyle();\n    }\n}\n","import { Element } from './element.js';\nimport { Glyphs } from './glyphs.js';\nimport { Metrics } from './metrics.js';\nimport { StaveModifierPosition } from './stavemodifier.js';\nimport { Tables } from './tables.js';\nimport { isBarline } from './typeguard.js';\nimport { defined, RuntimeError } from './util.js';\nexport class MultiMeasureRest extends Element {\n    static get CATEGORY() {\n        return \"MultiMeasureRest\";\n    }\n    constructor(numberOfMeasures, options) {\n        var _a;\n        super();\n        this.xs = { left: NaN, right: NaN };\n        this.hasPaddingLeft = false;\n        this.hasPaddingRight = false;\n        this.hasLineThickness = false;\n        this.hasSymbolSpacing = false;\n        const fontSize = (_a = options.numberGlyphPoint) !== null && _a !== void 0 ? _a : Metrics.get('MultiMeasureRest.fontSize');\n        this.fontInfo.size = fontSize;\n        this.numberOfMeasures = numberOfMeasures;\n        this.text = '';\n        const t = `${this.numberOfMeasures}`;\n        for (const digit of t) {\n            this.text += String.fromCodePoint(0xe080 + Number(digit));\n        }\n        this.hasPaddingLeft = typeof options.paddingLeft === 'number';\n        this.hasPaddingRight = typeof options.paddingRight === 'number';\n        this.hasLineThickness = typeof options.lineThickness === 'number';\n        this.hasSymbolSpacing = typeof options.symbolSpacing === 'number';\n        this.renderOptions = Object.assign({ useSymbols: false, showNumber: true, numberLine: -0.5, numberGlyphPoint: fontSize, line: 2, spacingBetweenLinesPx: Tables.STAVE_LINE_DISTANCE, serifThickness: 2, semibreveRestGlyphScale: Metrics.get('fontSize'), paddingLeft: 0, paddingRight: 0, lineThickness: 5, symbolSpacing: 0 }, options);\n    }\n    getXs() {\n        return this.xs;\n    }\n    setStave(stave) {\n        this.stave = stave;\n        return this;\n    }\n    getStave() {\n        return this.stave;\n    }\n    checkStave() {\n        return defined(this.stave, 'NoStave', 'No stave attached to instance.');\n    }\n    drawLine(stave, ctx, left, right) {\n        const options = this.renderOptions;\n        const y = stave.getYForLine(options.line);\n        const padding = (right - left) * 0.1;\n        left += padding;\n        right -= padding;\n        let txt = '\\ue4ef';\n        const el = new Element();\n        el.setText(txt);\n        const elWidth = el.getWidth();\n        if (!elWidth) {\n            throw new RuntimeError('Cannot drawLine if width is 0');\n        }\n        for (let i = 1; (i + 2) * elWidth + left <= right; i++) {\n            txt += '\\ue4f0';\n        }\n        txt += '\\ue4f1';\n        el.setText(txt);\n        el.renderText(ctx, left + (right - left) * 0.5 - el.getWidth() * 0.5, y);\n    }\n    drawSymbols(stave, ctx, left, right) {\n        const n4 = Math.floor(this.numberOfMeasures / 4);\n        const n = this.numberOfMeasures % 4;\n        const n2 = Math.floor(n / 2);\n        const n1 = n % 2;\n        const options = this.renderOptions;\n        const elMiddle = new Element();\n        let txt = '';\n        for (let i = 0; i < n4; ++i) {\n            txt += Glyphs.restLonga + ' ';\n        }\n        for (let i = 0; i < n2; ++i) {\n            txt += Glyphs.restDoubleWhole + ' ';\n        }\n        elMiddle.setText(txt);\n        const elTop = new Element();\n        txt = '';\n        for (let i = 0; i < n1; ++i) {\n            txt += Glyphs.restWhole + ' ';\n        }\n        elTop.setText(txt);\n        const width = elMiddle.getWidth() + elTop.getWidth();\n        let x = left + (right - left) * 0.5 - width * 0.5;\n        const line = options.line;\n        const yTop = stave.getYForLine(line - 1);\n        const yMiddle = stave.getYForLine(line);\n        elMiddle.renderText(ctx, x, yMiddle);\n        x += elMiddle.getWidth();\n        elTop.renderText(ctx, x, yTop);\n        x += elTop.getWidth();\n    }\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        const stave = this.checkStave();\n        let left = stave.getNoteStartX();\n        let right = stave.getNoteEndX();\n        const begModifiers = stave.getModifiers(StaveModifierPosition.BEGIN);\n        if (begModifiers.length === 1 && isBarline(begModifiers[0])) {\n            left -= begModifiers[0].getWidth();\n        }\n        const options = this.renderOptions;\n        if (this.hasPaddingLeft) {\n            left = stave.getX() + options.paddingLeft;\n        }\n        if (this.hasPaddingRight) {\n            right = stave.getX() + stave.getWidth() - options.paddingRight;\n        }\n        this.xs.left = left;\n        this.xs.right = right;\n        if (options.useSymbols) {\n            this.drawSymbols(stave, ctx, left, right);\n        }\n        else {\n            this.drawLine(stave, ctx, left, right);\n        }\n        if (options.showNumber) {\n            this.renderText(ctx, left + (right - left) * 0.5 - this.width * 0.5, stave.getYForLine(options.numberLine) - this.height * 0.5);\n        }\n    }\n}\n","import { Element } from './element.js';\nimport { Glyphs } from './glyphs.js';\nimport { Metrics } from './metrics.js';\nimport { log, RuntimeError } from './util.js';\nfunction L(...args) {\n    if (PedalMarking.DEBUG)\n        log('VexFlow.PedalMarking', args);\n}\nexport class PedalMarking extends Element {\n    static get CATEGORY() {\n        return \"PedalMarking\";\n    }\n    static createSustain(notes) {\n        const pedal = new PedalMarking(notes);\n        return pedal;\n    }\n    static createSostenuto(notes) {\n        const pedal = new PedalMarking(notes);\n        pedal.setType(PedalMarking.type.MIXED);\n        pedal.setCustomText('Sost. Ped.');\n        return pedal;\n    }\n    static createUnaCorda(notes) {\n        const pedal = new PedalMarking(notes);\n        pedal.setType(PedalMarking.type.TEXT);\n        pedal.setCustomText('una corda', 'tre corda');\n        return pedal;\n    }\n    constructor(notes) {\n        super();\n        this.notes = notes;\n        this.type = PedalMarking.type.TEXT;\n        this.line = 0;\n        this.depressText = PedalMarking.GLYPHS.pedalDepress;\n        this.releaseText = PedalMarking.GLYPHS.pedalRelease;\n        this.renderOptions = {\n            bracketHeight: 10,\n            textMarginRight: 6,\n            bracketLineWidth: 1,\n            color: 'black',\n        };\n    }\n    setType(type) {\n        type = typeof type === 'string' ? PedalMarking.typeString[type] : type;\n        if (type >= PedalMarking.type.TEXT && type <= PedalMarking.type.MIXED) {\n            this.type = type;\n        }\n        return this;\n    }\n    setCustomText(depress, release) {\n        this.depressText = depress || '';\n        this.releaseText = release || '';\n        this.setFont(Metrics.getFontInfo('PedalMarking.text'));\n        return this;\n    }\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    drawBracketed() {\n        const ctx = this.checkContext();\n        let isPedalDepressed = false;\n        let prevX;\n        let prevY;\n        let textWidth = 0;\n        this.notes.forEach((note, index, notes) => {\n            var _a, _b, _c, _d;\n            isPedalDepressed = !isPedalDepressed;\n            const x = note.getAbsoluteX();\n            const y = note.checkStave().getYForBottomText(this.line + 3);\n            if (x < prevX) {\n                throw new RuntimeError('InvalidConfiguration', 'The notes provided must be in order of ascending x positions');\n            }\n            const nextNoteIsSame = notes[index + 1] === note;\n            const prevNoteIsSame = notes[index - 1] === note;\n            let xShift = 0;\n            if (isPedalDepressed) {\n                xShift = prevNoteIsSame ? 5 : 0;\n                if (this.type === PedalMarking.type.MIXED && !prevNoteIsSame) {\n                    textWidth = ctx.measureText(this.depressText).width;\n                    ctx.fillText(this.depressText, x, y);\n                    xShift = textWidth + this.renderOptions.textMarginRight;\n                }\n                else {\n                    ctx.beginPath();\n                    ctx.moveTo(x, y - this.renderOptions.bracketHeight);\n                    ctx.lineTo(x + xShift, y);\n                    ctx.stroke();\n                    ctx.closePath();\n                }\n            }\n            else {\n                const noteNdx = note.getVoice().getTickables().indexOf(note);\n                const voiceNotes = note.getVoice().getTickables().length;\n                const noteEndX = noteNdx + 1 < voiceNotes\n                    ?\n                        note.getVoice().getTickables()[noteNdx + 1].getAbsoluteX()\n                    :\n                        ((_b = (_a = note.getStave()) === null || _a === void 0 ? void 0 : _a.getX()) !== null && _b !== void 0 ? _b : 0) + ((_d = (_c = note.getStave()) === null || _c === void 0 ? void 0 : _c.getWidth()) !== null && _d !== void 0 ? _d : 0);\n                ctx.beginPath();\n                ctx.moveTo(prevX, prevY);\n                ctx.lineTo(nextNoteIsSame ? x - 5 : noteEndX - 5, y);\n                ctx.lineTo(nextNoteIsSame ? x : noteEndX - 5, y - this.renderOptions.bracketHeight);\n                ctx.stroke();\n                ctx.closePath();\n            }\n            prevX = x + xShift;\n            prevY = y;\n        });\n    }\n    drawText() {\n        const ctx = this.checkContext();\n        let isPedalDepressed = false;\n        let textWidth = 0;\n        this.notes.forEach((note) => {\n            var _a, _b, _c, _d;\n            isPedalDepressed = !isPedalDepressed;\n            const stave = note.checkStave();\n            const x = note.getAbsoluteX();\n            const y = stave.getYForBottomText(this.line + 3);\n            if (isPedalDepressed) {\n                textWidth = ctx.measureText(this.depressText).width;\n                ctx.fillText(this.depressText, x, y);\n            }\n            else {\n                const noteNdx = note.getVoice().getTickables().indexOf(note);\n                const voiceNotes = note.getVoice().getTickables().length;\n                const noteEndX = noteNdx + 1 < voiceNotes\n                    ?\n                        note.getVoice().getTickables()[noteNdx + 1].getAbsoluteX()\n                    :\n                        ((_b = (_a = note.getStave()) === null || _a === void 0 ? void 0 : _a.getX()) !== null && _b !== void 0 ? _b : 0) + ((_d = (_c = note.getStave()) === null || _c === void 0 ? void 0 : _c.getWidth()) !== null && _d !== void 0 ? _d : 0);\n                textWidth = ctx.measureText(this.releaseText).width;\n                ctx.fillText(this.releaseText, noteEndX - textWidth, y);\n            }\n        });\n    }\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        ctx.setStrokeStyle(this.renderOptions.color);\n        ctx.setFillStyle(this.renderOptions.color);\n        ctx.setFont(this.font);\n        L('Rendering Pedal Marking');\n        if (this.type === PedalMarking.type.BRACKET || this.type === PedalMarking.type.MIXED) {\n            ctx.setLineWidth(this.renderOptions.bracketLineWidth);\n            this.drawBracketed();\n        }\n        else if (this.type === PedalMarking.type.TEXT) {\n            this.drawText();\n        }\n    }\n}\nPedalMarking.DEBUG = false;\nPedalMarking.GLYPHS = {\n    pedalDepress: Glyphs.keyboardPedalPed,\n    pedalRelease: Glyphs.keyboardPedalUp,\n};\nPedalMarking.type = {\n    TEXT: 1,\n    BRACKET: 2,\n    MIXED: 3,\n};\nPedalMarking.typeString = {\n    text: PedalMarking.type.TEXT,\n    bracket: PedalMarking.type.BRACKET,\n    mixed: PedalMarking.type.MIXED,\n};\n","import { GlyphNote } from './glyphnote.js';\nimport { Glyphs } from './glyphs.js';\nconst CODES = {\n    '1': Glyphs.repeat1Bar,\n    '2': Glyphs.repeat2Bars,\n    '4': Glyphs.repeat4Bars,\n    slash: Glyphs.repeatBarSlash,\n};\nexport class RepeatNote extends GlyphNote {\n    static get CATEGORY() {\n        return \"RepeatNote\";\n    }\n    constructor(type, noteStruct, options) {\n        const glyphCode = CODES[type] || '\\uE500';\n        super(glyphCode, Object.assign({ duration: 'q', alignCenter: type !== 'slash' }, noteStruct), options);\n    }\n}\n","import { Element } from './element.js';\nimport { Tables } from './tables.js';\nimport { TextJustification } from './textnote.js';\nimport { RuntimeError } from './util.js';\nfunction drawArrowHead(ctx, x0, y0, x1, y1, x2, y2) {\n    ctx.beginPath();\n    ctx.moveTo(x0, y0);\n    ctx.lineTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.lineTo(x0, y0);\n    ctx.closePath();\n    ctx.fill();\n}\nexport class StaveLine extends Element {\n    static get CATEGORY() {\n        return \"StaveLine\";\n    }\n    constructor(notes) {\n        super();\n        this.setNotes(notes);\n        this.text = '';\n        this.renderOptions = {\n            paddingLeft: 4,\n            paddingRight: 3,\n            lineWidth: 1,\n            lineDash: undefined,\n            roundedEnd: true,\n            color: undefined,\n            drawStartArrow: false,\n            drawEndArrow: false,\n            arrowheadLength: 10,\n            arrowheadAngle: Math.PI / 8,\n            textPositionVertical: StaveLine.TextVerticalPosition.TOP,\n            textJustification: StaveLine.TextJustification.CENTER,\n        };\n    }\n    setText(text) {\n        this.text = text;\n        return this;\n    }\n    setNotes(notes) {\n        if (!notes.firstNote && !notes.lastNote) {\n            throw new RuntimeError('BadArguments', 'Notes needs to have either firstNote or lastNote set.');\n        }\n        if (!notes.firstIndexes)\n            notes.firstIndexes = [0];\n        if (!notes.lastIndexes)\n            notes.lastIndexes = [0];\n        if (notes.firstIndexes.length !== notes.lastIndexes.length) {\n            throw new RuntimeError('BadArguments', 'Connected notes must have same number of indexes.');\n        }\n        this.notes = notes;\n        this.firstNote = notes.firstNote;\n        this.firstIndexes = notes.firstIndexes;\n        this.lastNote = notes.lastNote;\n        this.lastIndexes = notes.lastIndexes;\n        return this;\n    }\n    applyLineStyle() {\n        const ctx = this.checkContext();\n        const renderOptions = this.renderOptions;\n        if (renderOptions.lineDash) {\n            ctx.setLineDash(renderOptions.lineDash);\n        }\n        if (renderOptions.lineWidth) {\n            ctx.setLineWidth(renderOptions.lineWidth);\n        }\n        if (renderOptions.roundedEnd) {\n            ctx.setLineCap('round');\n        }\n        else {\n            ctx.setLineCap('square');\n        }\n    }\n    drawArrowLine(ctx, pt1, pt2) {\n        const bothArrows = this.renderOptions.drawStartArrow && this.renderOptions.drawEndArrow;\n        const x1 = pt1.x;\n        const y1 = pt1.y;\n        const x2 = pt2.x;\n        const y2 = pt2.y;\n        const distance = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n        const ratio = (distance - this.renderOptions.arrowheadLength / 3) / distance;\n        let endX;\n        let endY;\n        let startX;\n        let startY;\n        if (this.renderOptions.drawEndArrow || bothArrows) {\n            endX = Math.round(x1 + (x2 - x1) * ratio);\n            endY = Math.round(y1 + (y2 - y1) * ratio);\n        }\n        else {\n            endX = x2;\n            endY = y2;\n        }\n        if (this.renderOptions.drawStartArrow || bothArrows) {\n            startX = x1 + (x2 - x1) * (1 - ratio);\n            startY = y1 + (y2 - y1) * (1 - ratio);\n        }\n        else {\n            startX = x1;\n            startY = y1;\n        }\n        if (this.renderOptions.color) {\n            ctx.setStrokeStyle(this.renderOptions.color);\n            ctx.setFillStyle(this.renderOptions.color);\n        }\n        ctx.beginPath();\n        ctx.moveTo(startX, startY);\n        ctx.lineTo(endX, endY);\n        ctx.stroke();\n        ctx.closePath();\n        const lineAngle = Math.atan2(y2 - y1, x2 - x1);\n        const h = Math.abs(this.renderOptions.arrowheadLength / Math.cos(this.renderOptions.arrowheadAngle));\n        let angle1;\n        let angle2;\n        let topX;\n        let topY;\n        let bottomX;\n        let bottomY;\n        if (this.renderOptions.drawEndArrow || bothArrows) {\n            angle1 = lineAngle + Math.PI + this.renderOptions.arrowheadAngle;\n            topX = x2 + Math.cos(angle1) * h;\n            topY = y2 + Math.sin(angle1) * h;\n            angle2 = lineAngle + Math.PI - this.renderOptions.arrowheadAngle;\n            bottomX = x2 + Math.cos(angle2) * h;\n            bottomY = y2 + Math.sin(angle2) * h;\n            drawArrowHead(ctx, topX, topY, x2, y2, bottomX, bottomY);\n        }\n        if (this.renderOptions.drawStartArrow || bothArrows) {\n            angle1 = lineAngle + this.renderOptions.arrowheadAngle;\n            topX = x1 + Math.cos(angle1) * h;\n            topY = y1 + Math.sin(angle1) * h;\n            angle2 = lineAngle - this.renderOptions.arrowheadAngle;\n            bottomX = x1 + Math.cos(angle2) * h;\n            bottomY = y1 + Math.sin(angle2) * h;\n            drawArrowHead(ctx, topX, topY, x1, y1, bottomX, bottomY);\n        }\n    }\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        const firstNote = this.firstNote;\n        const lastNote = this.lastNote;\n        const renderOptions = this.renderOptions;\n        this.applyLineStyle();\n        let startPosition = { x: 0, y: 0 };\n        let endPosition = { x: 0, y: 0 };\n        this.firstIndexes.forEach((firstIndex, i) => {\n            const lastIndex = this.lastIndexes[i];\n            startPosition = firstNote.getModifierStartXY(2, firstIndex);\n            endPosition = lastNote.getModifierStartXY(1, lastIndex);\n            const upwardsSlope = startPosition.y > endPosition.y;\n            startPosition.x += firstNote.getMetrics().modRightPx + renderOptions.paddingLeft;\n            endPosition.x -= lastNote.getMetrics().modLeftPx + renderOptions.paddingRight;\n            const noteheadWidth = firstNote.getGlyphWidth();\n            const firstDisplaced = firstNote.getKeyProps()[firstIndex].displaced;\n            if (firstDisplaced && firstNote.getStemDirection() === 1) {\n                startPosition.x += noteheadWidth + renderOptions.paddingLeft;\n            }\n            const lastDisplaced = lastNote.getKeyProps()[lastIndex].displaced;\n            if (lastDisplaced && lastNote.getStemDirection() === -1) {\n                endPosition.x -= noteheadWidth + renderOptions.paddingRight;\n            }\n            startPosition.y += upwardsSlope ? -3 : 1;\n            endPosition.y += upwardsSlope ? 2 : 0;\n            this.drawArrowLine(ctx, startPosition, endPosition);\n        });\n        const textWidth = this.width;\n        const justification = renderOptions.textJustification;\n        let x = 0;\n        if (justification === StaveLine.TextJustification.LEFT) {\n            x = startPosition.x;\n        }\n        else if (justification === StaveLine.TextJustification.CENTER) {\n            const deltaX = endPosition.x - startPosition.x;\n            const centerX = deltaX / 2 + startPosition.x;\n            x = centerX - textWidth / 2;\n        }\n        else if (justification === StaveLine.TextJustification.RIGHT) {\n            x = endPosition.x - textWidth;\n        }\n        let y = 0;\n        const verticalPosition = renderOptions.textPositionVertical;\n        if (verticalPosition === StaveLine.TextVerticalPosition.TOP) {\n            y = firstNote.checkStave().getYForTopText();\n        }\n        else if (verticalPosition === StaveLine.TextVerticalPosition.BOTTOM) {\n            y = firstNote.checkStave().getYForBottomText(Tables.TEXT_HEIGHT_OFFSET_HACK);\n        }\n        const color = renderOptions.color;\n        this.applyStyle(ctx, { fillStyle: color, strokeStyle: color });\n        this.renderText(ctx, x, y);\n    }\n}\nStaveLine.TextVerticalPosition = {\n    TOP: 1,\n    BOTTOM: 2,\n};\nStaveLine.TextJustification = TextJustification;\n","import { BoundingBox } from './boundingbox.js';\nimport { Element } from './element.js';\nimport { Formatter } from './formatter.js';\nimport { Note } from './note.js';\nimport { Stave } from './stave.js';\nimport { RuntimeError } from './util.js';\nexport class System extends Element {\n    static get CATEGORY() {\n        return \"System\";\n    }\n    constructor(params = {}) {\n        super();\n        this.setOptions(params);\n        this.partStaves = [];\n        this.partStaveInfos = [];\n        this.partVoices = [];\n    }\n    setOptions(options = {}) {\n        if (!options.factory) {\n            throw new RuntimeError('NoFactory', 'System.setOptions(options) requires a factory.');\n        }\n        this.factory = options.factory;\n        this.options = Object.assign(Object.assign({ factory: this.factory, x: 10, y: 10, width: 500, spaceBetweenStaves: 12, autoWidth: false, noJustification: false, debugFormatter: false, formatIterations: 0, noPadding: false }, options), { details: Object.assign({ alpha: 0.5 }, options.details), formatOptions: Object.assign({}, options.formatOptions) });\n        if (this.options.noJustification === false && typeof options.width === 'undefined') {\n            this.options.autoWidth = true;\n        }\n    }\n    getX() {\n        return this.options.x;\n    }\n    setX(x) {\n        this.options.x = x;\n        this.partStaves.forEach((s) => {\n            s.setX(x);\n        });\n        return this;\n    }\n    getY() {\n        return this.options.y;\n    }\n    setY(y) {\n        this.options.y = y;\n        this.partStaves.forEach((s) => {\n            s.setY(y);\n        });\n        return this;\n    }\n    getStaves() {\n        return this.partStaves;\n    }\n    getVoices() {\n        return this.partVoices;\n    }\n    setContext(context) {\n        super.setContext(context);\n        this.factory.setContext(context);\n        return this;\n    }\n    addConnector(type = 'double') {\n        this.connector = this.factory.StaveConnector({\n            topStave: this.partStaves[0],\n            bottomStave: this.partStaves[this.partStaves.length - 1],\n            type,\n        });\n        return this.connector;\n    }\n    addStave(params) {\n        var _a;\n        const staveOptions = Object.assign({ leftBar: false }, params.options);\n        const stave = (_a = params.stave) !== null && _a !== void 0 ? _a : this.factory.Stave({ x: this.options.x, y: this.options.y, width: this.options.width, options: staveOptions });\n        const p = Object.assign(Object.assign({ spaceAbove: 0, spaceBelow: 0, debugNoteMetrics: false, noJustification: false }, params), { options: staveOptions });\n        const ctx = this.getContext();\n        p.voices.forEach((voice) => {\n            voice\n                .setContext(ctx)\n                .setStave(stave)\n                .getTickables()\n                .forEach((tickable) => tickable.setStave(stave));\n            this.partVoices.push(voice);\n        });\n        this.partStaves.push(stave);\n        this.partStaveInfos.push(p);\n        return stave;\n    }\n    addVoices(voices) {\n        const ctx = this.getContext();\n        voices.forEach((voice) => {\n            voice.setContext(ctx);\n            this.partVoices.push(voice);\n        });\n    }\n    format() {\n        const optionsDetails = this.options.details;\n        let justifyWidth = 0;\n        const formatter = new Formatter(optionsDetails);\n        this.formatter = formatter;\n        let y = this.options.y;\n        let startX = 0;\n        const debugNoteMetricsYs = [];\n        this.partStaves.forEach((part, index) => {\n            y = y + part.space(this.partStaveInfos[index].spaceAbove);\n            part.setY(y);\n            y = y + part.space(this.partStaveInfos[index].spaceBelow);\n            y = y + part.space(this.options.spaceBetweenStaves);\n            if (this.partStaveInfos[index].debugNoteMetrics) {\n                debugNoteMetricsYs.push({ y, stave: part });\n                y += 15;\n            }\n            startX = Math.max(startX, part.getNoteStartX());\n        });\n        this.partVoices.forEach((voice) => {\n            voice.getTickables().forEach((tickable) => {\n                const stave = tickable.getStave();\n                if (stave)\n                    tickable.setStave(stave);\n            });\n        });\n        formatter.joinVoices(this.partVoices);\n        this.partStaves.forEach((part) => part.setNoteStartX(startX));\n        if (this.options.autoWidth && this.partVoices.length > 0) {\n            justifyWidth = formatter.preCalculateMinTotalWidth(this.partVoices);\n            this.options.width = justifyWidth + Stave.rightPadding + (startX - this.options.x);\n            this.partStaves.forEach((part) => {\n                part.setWidth(this.options.width);\n            });\n        }\n        else {\n            justifyWidth = this.options.noPadding\n                ? this.options.width - (startX - this.options.x)\n                : this.options.width - (startX - this.options.x) - Stave.defaultPadding;\n        }\n        if (this.partVoices.length > 0) {\n            formatter.format(this.partVoices, this.options.noJustification ? 0 : justifyWidth, this.options.formatOptions);\n        }\n        formatter.postFormat();\n        for (let i = 0; i < this.options.formatIterations; i++) {\n            formatter.tune(optionsDetails);\n        }\n        this.startX = startX;\n        this.debugNoteMetricsYs = debugNoteMetricsYs;\n        this.lastY = y;\n        Stave.formatBegModifiers(this.partStaves);\n    }\n    getBoundingBox() {\n        var _a;\n        return new BoundingBox(this.options.x, this.options.y, this.options.width, ((_a = this.lastY) !== null && _a !== void 0 ? _a : 0) - this.options.y);\n    }\n    draw() {\n        const ctx = this.checkContext();\n        if (!this.formatter || !this.startX || !this.lastY || !this.debugNoteMetricsYs) {\n            throw new RuntimeError('NoFormatter', 'format() must be called before draw()');\n        }\n        this.setRendered();\n        if (this.options.debugFormatter) {\n            Formatter.plotDebugging(ctx, this.formatter, this.startX, this.options.y, this.lastY);\n        }\n        this.debugNoteMetricsYs.forEach((d) => {\n            this.partVoices.forEach((voice) => {\n                voice.getTickables().forEach((tickable) => {\n                    if (tickable.getStave() === d.stave)\n                        Note.plotMetrics(ctx, tickable, d.y);\n                });\n            });\n        });\n    }\n}\n","import { Element } from './element.js';\nimport { Glyphs } from './glyphs.js';\nimport { Modifier } from './modifier.js';\nimport { Note } from './note.js';\nimport { Stem } from './stem.js';\nimport { StemmableNote } from './stemmablenote.js';\nimport { isDot } from './typeguard.js';\nimport { defined, RuntimeError } from './util.js';\nfunction getUnusedStringGroups(numLines, stringsUsed) {\n    const stemThrough = [];\n    let group = [];\n    for (let string = 1; string <= numLines; string++) {\n        const isUsed = stringsUsed.indexOf(string) > -1;\n        if (!isUsed) {\n            group.push(string);\n        }\n        else {\n            stemThrough.push(group);\n            group = [];\n        }\n    }\n    if (group.length > 0)\n        stemThrough.push(group);\n    return stemThrough;\n}\nfunction getPartialStemLines(stemY, unusedStrings, stave, stemDirection) {\n    const upStem = stemDirection !== 1;\n    const downStem = stemDirection !== -1;\n    const lineSpacing = stave.getSpacingBetweenLines();\n    const totalLines = stave.getNumLines();\n    const stemLines = [];\n    unusedStrings.forEach((strings) => {\n        const containsLastString = strings.indexOf(totalLines) > -1;\n        const containsFirstString = strings.indexOf(1) > -1;\n        if ((upStem && containsFirstString) || (downStem && containsLastString)) {\n            return;\n        }\n        if (strings.length === 1) {\n            strings.push(strings[0]);\n        }\n        const lineYs = [];\n        strings.forEach((string, index, strings) => {\n            const isTopBound = string === 1;\n            const isBottomBound = string === totalLines;\n            let y = stave.getYForLine(string - 1);\n            if (index === 0 && !isTopBound) {\n                y -= lineSpacing / 2 - 1;\n            }\n            else if (index === strings.length - 1 && !isBottomBound) {\n                y += lineSpacing / 2 - 1;\n            }\n            lineYs.push(y);\n            if (stemDirection === 1 && isTopBound) {\n                lineYs.push(stemY - 2);\n            }\n            else if (stemDirection === -1 && isBottomBound) {\n                lineYs.push(stemY + 2);\n            }\n        });\n        stemLines.push(lineYs.sort((a, b) => a - b));\n    });\n    return stemLines;\n}\nexport class TabNote extends StemmableNote {\n    static get CATEGORY() {\n        return \"TabNote\";\n    }\n    constructor(noteStruct, drawStem = false) {\n        super(noteStruct);\n        this.fretElement = [];\n        this.greatestString = () => {\n            return this.positions.map((x) => x.str).reduce((a, b) => (a > b ? a : b));\n        };\n        this.leastString = () => {\n            return this.positions.map((x) => x.str).reduce((a, b) => (a < b ? a : b));\n        };\n        this.ghost = false;\n        this.positions = noteStruct.positions || [];\n        this.renderOptions = Object.assign(Object.assign({}, this.renderOptions), { drawStem, drawDots: drawStem, drawStemThroughStave: false, yShift: 0 });\n        this.glyphProps = Note.getGlyphProps(this.duration, this.noteType);\n        defined(this.glyphProps, 'BadArguments', `No glyph found for duration '${this.duration}' and type '${this.noteType}'`);\n        this.buildStem();\n        if (noteStruct.stemDirection) {\n            this.setStemDirection(noteStruct.stemDirection);\n        }\n        else {\n            this.setStemDirection(Stem.UP);\n        }\n        this.ghost = false;\n        this.updateWidth();\n    }\n    reset() {\n        super.reset();\n        if (this.stave)\n            this.setStave(this.stave);\n        return this;\n    }\n    setGhost(ghost) {\n        this.ghost = ghost;\n        this.updateWidth();\n        return this;\n    }\n    hasStem() {\n        if (this.renderOptions.drawStem)\n            return true;\n        return false;\n    }\n    getStemExtension() {\n        if (this.stemExtensionOverride !== undefined) {\n            return this.stemExtensionOverride;\n        }\n        return this.flag.getHeight() > Stem.HEIGHT ? this.flag.getHeight() - Stem.HEIGHT : 0;\n    }\n    static tabToElement(fret) {\n        let el;\n        if (fret.toUpperCase() === 'X') {\n            el = new Element('TabNote');\n            el.setText(Glyphs.accidentalDoubleSharp);\n        }\n        else {\n            el = new Element('TabNote.text');\n            el.setText(fret);\n            el.setYShift(el.getHeight() / 2);\n        }\n        return el;\n    }\n    updateWidth() {\n        this.fretElement = [];\n        this.width = 0;\n        for (let i = 0; i < this.positions.length; ++i) {\n            let fret = this.positions[i].fret;\n            if (this.ghost)\n                fret = '(' + fret + ')';\n            const el = TabNote.tabToElement(fret.toString());\n            this.fretElement.push(el);\n            this.width = Math.max(el.getWidth(), this.width);\n        }\n    }\n    setStave(stave) {\n        super.setStave(stave);\n        const ctx = stave.getContext();\n        this.setContext(ctx);\n        const ys = this.positions.map(({ str: line }) => stave.getYForLine(Number(line) - 1));\n        this.setYs(ys);\n        if (this.stem) {\n            this.stem.setYBounds(this.getStemY(), this.getStemY());\n        }\n        return this;\n    }\n    getPositions() {\n        return this.positions;\n    }\n    getModifierStartXY(position, index) {\n        if (!this.preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n        }\n        if (this.ys.length === 0) {\n            throw new RuntimeError('NoYValues', 'No Y-Values calculated for this note.');\n        }\n        let x = 0;\n        if (position === Modifier.Position.LEFT) {\n            x = -1 * 2;\n        }\n        else if (position === Modifier.Position.RIGHT) {\n            x = this.width + 2;\n        }\n        else if (position === Modifier.Position.BELOW || position === Modifier.Position.ABOVE) {\n            const noteGlyphWidth = this.width;\n            x = noteGlyphWidth / 2;\n        }\n        return {\n            x: this.getAbsoluteX() + x,\n            y: this.ys[index],\n        };\n    }\n    getLineForRest() {\n        return Number(this.positions[0].str);\n    }\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        if (this.modifierContext)\n            this.modifierContext.preFormat();\n        this.preFormatted = true;\n    }\n    getStemX() {\n        return this.getCenterGlyphX();\n    }\n    getStemY() {\n        const numLines = this.checkStave().getNumLines();\n        const stemUpLine = -0.5;\n        const stemDownLine = numLines - 0.5;\n        const stemStartLine = Stem.UP === this.stemDirection ? stemUpLine : stemDownLine;\n        return this.checkStave().getYForLine(stemStartLine);\n    }\n    getStemExtents() {\n        return this.checkStem().getExtents();\n    }\n    drawFlag() {\n        const { beam, glyphProps, renderOptions: { drawStem }, } = this;\n        const context = this.checkContext();\n        const shouldDrawFlag = beam === undefined && drawStem;\n        if (glyphProps.codeFlagUp && shouldDrawFlag) {\n            const flagX = this.getStemX();\n            const flagY = this.getStemDirection() === Stem.DOWN\n                ?\n                    this.getStemY() - this.checkStem().getHeight() - this.getStemExtension()\n                :\n                    this.getStemY() - this.checkStem().getHeight() + this.getStemExtension();\n            this.flag.setContext(context).setX(flagX).setY(flagY).drawWithStyle();\n        }\n    }\n    drawModifiers() {\n        this.modifiers.forEach((modifier) => {\n            if (isDot(modifier) && !this.renderOptions.drawDots) {\n                return;\n            }\n            modifier.setContext(this.getContext());\n            modifier.drawWithStyle();\n        });\n    }\n    drawStemThrough() {\n        const stemX = this.getStemX();\n        const stemY = this.getStemY();\n        const ctx = this.checkContext();\n        const drawStem = this.renderOptions.drawStem;\n        const stemThrough = this.renderOptions.drawStemThroughStave;\n        if (drawStem && stemThrough) {\n            const numLines = this.checkStave().getNumLines();\n            const stringsUsed = this.positions.map((position) => Number(position.str));\n            const unusedStrings = getUnusedStringGroups(numLines, stringsUsed);\n            const stemLines = getPartialStemLines(stemY, unusedStrings, this.checkStave(), this.getStemDirection());\n            ctx.setLineWidth(Stem.WIDTH);\n            stemLines.forEach((bounds) => {\n                if (bounds.length === 0)\n                    return;\n                ctx.beginPath();\n                ctx.moveTo(stemX, bounds[0]);\n                ctx.lineTo(stemX, bounds[bounds.length - 1]);\n                ctx.stroke();\n                ctx.closePath();\n            });\n        }\n    }\n    drawPositions() {\n        const ctx = this.checkContext();\n        const x = this.getAbsoluteX();\n        const ys = this.ys;\n        for (let i = 0; i < this.positions.length; ++i) {\n            const y = ys[i] + this.renderOptions.yShift;\n            const el = this.fretElement[i];\n            const tabX = x - el.getWidth() / 2;\n            ctx.clearRect(tabX - 2, y - 3, el.getWidth() + 4, 6);\n            el.renderText(ctx, tabX, y);\n        }\n    }\n    draw() {\n        const ctx = this.checkContext();\n        if (this.ys.length === 0) {\n            throw new RuntimeError('NoYValues', \"Can't draw note without Y values.\");\n        }\n        this.setRendered();\n        const renderStem = this.beam === undefined && this.renderOptions.drawStem;\n        ctx.openGroup('tabnote', this.getAttribute('id'));\n        this.drawPositions();\n        this.drawStemThrough();\n        if (this.stem && renderStem) {\n            const stemX = this.getStemX();\n            this.stem.setNoteHeadXBounds(stemX, stemX);\n            this.stem.setContext(ctx).drawWithStyle();\n        }\n        this.drawFlag();\n        this.drawModifiers();\n        ctx.closeGroup();\n    }\n}\n","import { Stave } from './stave.js';\nexport class TabStave extends Stave {\n    static get CATEGORY() {\n        return \"TabStave\";\n    }\n    constructor(x, y, width, options) {\n        const tabOptions = Object.assign({ spacingBetweenLinesPx: 13, numLines: 6, topTextPosition: 1 }, options);\n        super(x, y, width, tabOptions);\n    }\n    getYForGlyphs() {\n        return this.getYForLine(2.5);\n    }\n    addTabGlyph() {\n        this.addClef('tab');\n        return this;\n    }\n}\n","import { Element } from './element.js';\nimport { Font } from './font.js';\nimport { Renderer } from './renderer.js';\nimport { Tables } from './tables.js';\nimport { log, RuntimeError } from './util.js';\nfunction L(...args) {\n    if (TextBracket.DEBUG)\n        log('VexFlow.TextBracket', args);\n}\nexport var TextBracketPosition;\n(function (TextBracketPosition) {\n    TextBracketPosition[TextBracketPosition[\"TOP\"] = 1] = \"TOP\";\n    TextBracketPosition[TextBracketPosition[\"BOTTOM\"] = -1] = \"BOTTOM\";\n})(TextBracketPosition || (TextBracketPosition = {}));\nexport class TextBracket extends Element {\n    static get CATEGORY() {\n        return \"TextBracket\";\n    }\n    static get Position() {\n        return TextBracketPosition;\n    }\n    static get PositionString() {\n        return {\n            top: TextBracketPosition.TOP,\n            bottom: TextBracketPosition.BOTTOM,\n        };\n    }\n    constructor({ start, stop, text = '', superscript = '', position = TextBracketPosition.TOP }) {\n        super();\n        this.start = start;\n        this.stop = stop;\n        this.textElement = new Element('TextBracket');\n        this.textElement.setText(text);\n        this.superscriptElement = new Element('TextBracket');\n        this.superscriptElement.setText(superscript);\n        const smallerFontSize = Font.scaleSize(this.fontInfo.size, 0.714286);\n        this.superscriptElement.setFontSize(smallerFontSize);\n        this.position = typeof position === 'string' ? TextBracket.PositionString[position] : position;\n        this.line = 1;\n        this.renderOptions = {\n            dashed: true,\n            dash: [5],\n            color: 'black',\n            lineWidth: 1,\n            showBracket: true,\n            bracketHeight: 8,\n            underlineSuperscript: true,\n        };\n    }\n    applyStyle(ctx) {\n        this.textElement.setFont(this.fontInfo);\n        const { family, size, weight, style } = this.fontInfo;\n        const smallerFontSize = Font.scaleSize(size, 0.714286);\n        this.superscriptElement.setFont(family, smallerFontSize, weight, style);\n        const options = this.renderOptions;\n        ctx.setStrokeStyle(options.color);\n        ctx.setFillStyle(options.color);\n        ctx.setLineWidth(options.lineWidth);\n        return this;\n    }\n    setDashed(dashed, dash) {\n        this.renderOptions.dashed = dashed;\n        if (dash)\n            this.renderOptions.dash = dash;\n        return this;\n    }\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        let y = 0;\n        switch (this.position) {\n            case TextBracketPosition.TOP:\n                y = this.start.checkStave().getYForTopText(this.line);\n                break;\n            case TextBracketPosition.BOTTOM:\n                y = this.start.checkStave().getYForBottomText(this.line + Tables.TEXT_HEIGHT_OFFSET_HACK);\n                break;\n            default:\n                throw new RuntimeError('InvalidPosition', `The position ${this.position} is invalid.`);\n        }\n        const start = { x: this.start.getAbsoluteX(), y };\n        const stop = { x: this.stop.getAbsoluteX(), y };\n        L('Rendering TextBracket: start:', start, 'stop:', stop, 'y:', y);\n        const bracketHeight = this.renderOptions.bracketHeight * this.position;\n        this.textElement.renderText(ctx, start.x, start.y);\n        const mainWidth = this.textElement.getWidth();\n        const mainHeight = this.textElement.getHeight();\n        const superY = start.y - mainHeight / 2.5;\n        this.superscriptElement.renderText(ctx, start.x + mainWidth + 1, superY);\n        const superWidth = this.superscriptElement.getWidth();\n        const superHeight = this.superscriptElement.getHeight();\n        let startX = start.x;\n        let lineY = superY;\n        const endX = stop.x + this.stop.getGlyphWidth();\n        if (this.position === TextBracketPosition.TOP) {\n            startX += mainWidth + superWidth + 5;\n            lineY -= superHeight / 2.7;\n        }\n        else if (this.position === TextBracketPosition.BOTTOM) {\n            lineY += superHeight / 2.7;\n            startX += mainWidth + 2;\n            if (!this.renderOptions.underlineSuperscript) {\n                startX += superWidth;\n            }\n        }\n        if (this.renderOptions.dashed) {\n            Renderer.drawDashedLine(ctx, startX, lineY, endX, lineY, this.renderOptions.dash);\n            if (this.renderOptions.showBracket) {\n                Renderer.drawDashedLine(ctx, endX, lineY + 1 * this.position, endX, lineY + bracketHeight, this.renderOptions.dash);\n            }\n        }\n        else {\n            ctx.beginPath();\n            ctx.moveTo(startX, lineY);\n            ctx.lineTo(endX, lineY);\n            if (this.renderOptions.showBracket) {\n                ctx.lineTo(endX, lineY + bracketHeight);\n            }\n            ctx.stroke();\n            ctx.closePath();\n        }\n    }\n}\nTextBracket.DEBUG = false;\n","import { Glyphs } from './glyphs.js';\nimport { Note } from './note.js';\nimport { log, RuntimeError } from './util.js';\nfunction L(...args) {\n    if (TextDynamics.DEBUG)\n        log('VexFlow.TextDynamics', args);\n}\nexport class TextDynamics extends Note {\n    static get CATEGORY() {\n        return \"TextDynamics\";\n    }\n    static get GLYPHS() {\n        return {\n            f: Glyphs.dynamicForte,\n            p: Glyphs.dynamicPiano,\n            m: Glyphs.dynamicMezzo,\n            s: Glyphs.dynamicSforzando,\n            z: Glyphs.dynamicZ,\n            r: Glyphs.dynamicRinforzando,\n        };\n    }\n    constructor(noteStruct) {\n        var _a, _b;\n        super(noteStruct);\n        this.sequence = ((_a = noteStruct.text) !== null && _a !== void 0 ? _a : '').toLowerCase();\n        this.line = (_b = noteStruct.line) !== null && _b !== void 0 ? _b : 0;\n        this.text = '';\n        L('New Dynamics Text: ', this.sequence);\n    }\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    preFormat() {\n        this.text = '';\n        this.sequence.split('').forEach((letter) => {\n            const glyph = TextDynamics.GLYPHS[letter];\n            if (!glyph)\n                throw new RuntimeError('Invalid dynamics character: ' + letter);\n            this.text += glyph;\n        });\n        this.preFormatted = true;\n        return this;\n    }\n    draw() {\n        this.setRendered();\n        const x = this.getAbsoluteX();\n        const y = this.checkStave().getYForLine(this.line + -3);\n        L('Rendering Dynamics: ', this.sequence);\n        this.renderText(this.checkContext(), x, y);\n    }\n}\nTextDynamics.DEBUG = false;\n","import { Note } from './note.js';\nimport { TimeSignature } from './timesignature.js';\nexport class TimeSigNote extends Note {\n    static get CATEGORY() {\n        return \"TimeSigNote\";\n    }\n    constructor(timeSpec, customPadding) {\n        super({ duration: 'b' });\n        this.timeSig = new TimeSignature(timeSpec, customPadding);\n        this.setWidth(this.timeSig.getWidth());\n        this.ignoreTicks = true;\n    }\n    addToModifierContext(mc) {\n        return this;\n    }\n    preFormat() {\n        this.preFormatted = true;\n        return this;\n    }\n    draw() {\n        const stave = this.checkStave();\n        const ctx = this.checkContext();\n        this.setRendered();\n        ctx.openGroup('timesignote', this.getAttribute('id'));\n        this.timeSig.drawAt(ctx, stave, this.getAbsoluteX());\n        ctx.closeGroup();\n    }\n}\n","import { Element } from './element.js';\nimport { Formatter } from './formatter.js';\nimport { Glyphs } from './glyphs.js';\nimport { Metrics } from './metrics.js';\nimport { Stem } from './stem.js';\nimport { Tables } from './tables.js';\nimport { RuntimeError } from './util.js';\nexport class Tuplet extends Element {\n    static get CATEGORY() {\n        return \"Tuplet\";\n    }\n    static get LOCATION_TOP() {\n        return 1;\n    }\n    static get LOCATION_BOTTOM() {\n        return -1;\n    }\n    static get NESTING_OFFSET() {\n        return 15;\n    }\n    constructor(notes, options = {}) {\n        super();\n        if (!notes || !notes.length) {\n            throw new RuntimeError('BadArguments', 'No notes provided for tuplet.');\n        }\n        this.notes = notes;\n        const numNotes = options.numNotes !== undefined ? options.numNotes : notes.length;\n        const notesOccupied = options.notesOccupied || 2;\n        const bracketed = options.bracketed !== undefined ? options.bracketed : notes.some((note) => !note.hasBeam());\n        const ratioed = options.ratioed !== undefined ? options.ratioed : Math.abs(notesOccupied - numNotes) > 1;\n        const location = options.location || Tuplet.LOCATION_TOP;\n        const yOffset = options.yOffset || Metrics.get('Tuplet.yOffset');\n        const textYOffset = options.textYOffset || Metrics.get('Tuplet.textYOffset');\n        this.options = {\n            bracketed,\n            location,\n            notesOccupied,\n            numNotes,\n            ratioed,\n            yOffset,\n            textYOffset,\n        };\n        this.textElement = new Element('Tuplet');\n        this.setTupletLocation(location || Tuplet.LOCATION_TOP);\n        Formatter.AlignRestsToNotes(notes, true, true);\n        this.resolveGlyphs();\n        this.attach();\n    }\n    attach() {\n        for (let i = 0; i < this.notes.length; i++) {\n            const note = this.notes[i];\n            note.setTuplet(this);\n        }\n    }\n    detach() {\n        for (let i = 0; i < this.notes.length; i++) {\n            const note = this.notes[i];\n            note.resetTuplet(this);\n        }\n    }\n    setBracketed(bracketed) {\n        this.options.bracketed = bracketed;\n        return this;\n    }\n    setRatioed(ratioed) {\n        this.options.ratioed = ratioed;\n        return this;\n    }\n    setTupletLocation(location) {\n        if (location !== Tuplet.LOCATION_TOP && location !== Tuplet.LOCATION_BOTTOM) {\n            console.warn(`Invalid tuplet location [${location}]. Using Tuplet.LOCATION_TOP.`);\n            location = Tuplet.LOCATION_TOP;\n        }\n        this.options.location = location;\n        return this;\n    }\n    getNotes() {\n        return this.notes;\n    }\n    getNoteCount() {\n        return this.options.numNotes;\n    }\n    getNotesOccupied() {\n        return this.options.notesOccupied;\n    }\n    setNotesOccupied(notes) {\n        this.detach();\n        this.options.notesOccupied = notes;\n        this.resolveGlyphs();\n        this.attach();\n    }\n    resolveGlyphs() {\n        let numerator = '';\n        let denominator = '';\n        let n = this.options.numNotes;\n        while (n >= 1) {\n            numerator = String.fromCharCode(0xe880 + (n % 10)) + numerator;\n            n = Math.floor(n / 10);\n        }\n        if (this.options.ratioed) {\n            n = this.options.notesOccupied;\n            while (n >= 1) {\n                denominator = String.fromCharCode(0xe880 + (n % 10)) + denominator;\n                n = Math.floor(n / 10);\n            }\n            denominator = Glyphs.tupletColon + denominator;\n        }\n        this.textElement.setText(numerator + denominator);\n    }\n    getNestedTupletCount() {\n        const { location } = this.options;\n        const firstNote = this.notes[0];\n        let maxTupletCount = countTuplets(firstNote, location);\n        let minTupletCount = countTuplets(firstNote, location);\n        function countTuplets(note, location) {\n            return note.getTupletStack().filter((tuplet) => tuplet.options.location === location).length;\n        }\n        this.notes.forEach((note) => {\n            const tupletCount = countTuplets(note, location);\n            maxTupletCount = tupletCount > maxTupletCount ? tupletCount : maxTupletCount;\n            minTupletCount = tupletCount < minTupletCount ? tupletCount : minTupletCount;\n        });\n        return maxTupletCount - minTupletCount;\n    }\n    getYPosition() {\n        var _a;\n        const nestedTupletYOffset = this.getNestedTupletCount() * Tuplet.NESTING_OFFSET * -this.options.location;\n        const yOffset = (_a = this.options.yOffset) !== null && _a !== void 0 ? _a : 0;\n        const firstNote = this.notes[0];\n        let yPosition;\n        if (this.options.location === Tuplet.LOCATION_TOP) {\n            yPosition = firstNote.checkStave().getYForLine(0) - 1.5 * Tables.STAVE_LINE_DISTANCE;\n            for (let i = 0; i < this.notes.length; ++i) {\n                const note = this.notes[i];\n                let modLines = 0;\n                const mc = note.getModifierContext();\n                if (mc) {\n                    modLines = Math.max(modLines, mc.getState().topTextLine);\n                }\n                const modY = note.getYForTopText(modLines) - 2 * Tables.STAVE_LINE_DISTANCE;\n                if (note.hasStem() || note.isRest()) {\n                    const topY = note.getStemDirection() === Stem.UP\n                        ? note.getStemExtents().topY - Tables.STAVE_LINE_DISTANCE\n                        : note.getStemExtents().baseY - 2 * Tables.STAVE_LINE_DISTANCE;\n                    yPosition = Math.min(topY, yPosition);\n                    if (modLines > 0) {\n                        yPosition = Math.min(modY, yPosition);\n                    }\n                }\n            }\n        }\n        else {\n            let lineCheck = 4;\n            this.notes.forEach((nn) => {\n                const mc = nn.getModifierContext();\n                if (mc) {\n                    lineCheck = Math.max(lineCheck, mc.getState().textLine + 1);\n                }\n            });\n            yPosition = firstNote.checkStave().getYForLine(lineCheck) + 2 * Tables.STAVE_LINE_DISTANCE;\n            for (let i = 0; i < this.notes.length; ++i) {\n                if (this.notes[i].hasStem() || this.notes[i].isRest()) {\n                    const bottomY = this.notes[i].getStemDirection() === Stem.UP\n                        ? this.notes[i].getStemExtents().baseY + 2 * Tables.STAVE_LINE_DISTANCE\n                        : this.notes[i].getStemExtents().topY + Tables.STAVE_LINE_DISTANCE;\n                    if (bottomY > yPosition) {\n                        yPosition = bottomY;\n                    }\n                }\n            }\n        }\n        return yPosition + nestedTupletYOffset + yOffset;\n    }\n    draw() {\n        const { location, bracketed, textYOffset } = this.options;\n        const ctx = this.checkContext();\n        let xPos = 0;\n        let yPos = 0;\n        const firstNote = this.notes[0];\n        const lastNote = this.notes[this.notes.length - 1];\n        if (!bracketed) {\n            xPos = firstNote.getStemX();\n            this.width = lastNote.getStemX() - xPos;\n        }\n        else {\n            xPos = firstNote.getTieLeftX() - 5;\n            this.width = lastNote.getTieRightX() - xPos + 5;\n        }\n        yPos = this.getYPosition();\n        const notationCenterX = xPos + this.width / 2;\n        const notationStartX = notationCenterX - this.textElement.getWidth() / 2;\n        ctx.openGroup('tuplet', this.getAttribute('id'));\n        if (bracketed) {\n            const lineWidth = this.width / 2 - this.textElement.getWidth() / 2 - 5;\n            if (lineWidth > 0) {\n                ctx.fillRect(xPos, yPos, lineWidth, 1);\n                ctx.fillRect(xPos + this.width / 2 + this.textElement.getWidth() / 2 + 5, yPos, lineWidth, 1);\n                ctx.fillRect(xPos, yPos + (location === Tuplet.LOCATION_BOTTOM ? 1 : 0), 1, location * 10);\n                ctx.fillRect(xPos + this.width, yPos + (location === Tuplet.LOCATION_BOTTOM ? 1 : 0), 1, location * 10);\n            }\n        }\n        this.textElement.renderText(ctx, notationStartX, yPos + this.textElement.getHeight() / 2 + (location === Tuplet.LOCATION_TOP ? -1 : 1) * textYOffset);\n        const bb = this.getBoundingBox();\n        ctx.pointerRect(bb.getX(), bb.getY(), bb.getW(), bb.getH());\n        ctx.closeGroup();\n        this.setRendered();\n    }\n}\n","import { Element } from './element.js';\nimport { log } from './util.js';\nimport { Vibrato } from './vibrato.js';\nfunction L(...args) {\n    if (VibratoBracket.DEBUG)\n        log('VexFlow.VibratoBracket', args);\n}\nexport class VibratoBracket extends Element {\n    static get CATEGORY() {\n        return \"VibratoBracket\";\n    }\n    constructor(bracketData) {\n        super();\n        this.vibrato = new Vibrato();\n        if (bracketData.start)\n            this.start = bracketData.start;\n        if (bracketData.stop)\n            this.stop = bracketData.stop;\n        this.line = 1;\n    }\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    setVibratoCode(code) {\n        this.vibrato.setVibratoCode(code);\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        const y = (this.start && this.start.checkStave().getYForTopText(this.line)) ||\n            (this.stop && this.stop.checkStave().getYForTopText(this.line)) ||\n            0;\n        const startX = (this.start && this.start.getAbsoluteX()) || (this.stop && this.stop.checkStave().getTieStartX()) || 0;\n        const stopX = (this.stop && this.stop.getAbsoluteX() - this.stop.getWidth() - 5) ||\n            (this.start && this.start.checkStave().getTieEndX() - 10) ||\n            0;\n        this.vibrato.setVibratoWidth(stopX - startX);\n        L('Rendering VibratoBracket: startX:', startX, 'stopX:', stopX, 'y:', y);\n        this.vibrato.renderText(ctx, startX, y);\n    }\n}\nVibratoBracket.DEBUG = false;\n","import { Accidental } from './accidental.js';\nimport { Annotation, AnnotationHorizontalJustify, AnnotationVerticalJustify } from './annotation.js';\nimport { Articulation } from './articulation.js';\nimport { BarNote } from './barnote.js';\nimport { Beam } from './beam.js';\nimport { ChordSymbol } from './chordsymbol.js';\nimport { ClefNote } from './clefnote.js';\nimport { Curve } from './curve.js';\nimport { EasyScore } from './easyscore.js';\nimport { Formatter } from './formatter.js';\nimport { FretHandFinger } from './frethandfinger.js';\nimport { GhostNote } from './ghostnote.js';\nimport { GlyphNote } from './glyphnote.js';\nimport { GraceNote } from './gracenote.js';\nimport { GraceNoteGroup } from './gracenotegroup.js';\nimport { KeySigNote } from './keysignote.js';\nimport { ModifierContext } from './modifiercontext.js';\nimport { MultiMeasureRest } from './multimeasurerest.js';\nimport { NoteSubGroup } from './notesubgroup.js';\nimport { Ornament } from './ornament.js';\nimport { PedalMarking } from './pedalmarking.js';\nimport { Renderer } from './renderer.js';\nimport { RepeatNote } from './repeatnote.js';\nimport { Stave } from './stave.js';\nimport { StaveConnector } from './staveconnector.js';\nimport { StaveLine } from './staveline.js';\nimport { StaveNote } from './stavenote.js';\nimport { StaveTie } from './stavetie.js';\nimport { StringNumber } from './stringnumber.js';\nimport { System } from './system.js';\nimport { TabNote } from './tabnote.js';\nimport { TabStave } from './tabstave.js';\nimport { TextBracket } from './textbracket.js';\nimport { TextDynamics } from './textdynamics.js';\nimport { TextNote } from './textnote.js';\nimport { TickContext } from './tickcontext.js';\nimport { TimeSigNote } from './timesignote.js';\nimport { Tuplet } from './tuplet.js';\nimport { defined, log, RuntimeError } from './util.js';\nimport { VibratoBracket } from './vibratobracket.js';\nimport { Voice } from './voice.js';\nimport { isHTMLCanvas } from './web.js';\nfunction L(...args) {\n    if (Factory.DEBUG)\n        log('VexFlow.Factory', args);\n}\nexport class Factory {\n    static newFromElementId(elementId, width = 500, height = 200) {\n        return new Factory({ renderer: { elementId, width, height } });\n    }\n    constructor(options = {}) {\n        L('New factory: ', options);\n        this.options = {\n            stave: {\n                space: 10,\n            },\n            renderer: {\n                elementId: '',\n                width: 500,\n                height: 200,\n                background: '#FFF',\n            },\n        };\n        this.setOptions(options);\n    }\n    reset() {\n        this.renderQ = [];\n        this.systems = [];\n        this.staves = [];\n        this.voices = [];\n        this.stave = undefined;\n    }\n    setOptions(options) {\n        this.options = Object.assign(Object.assign({}, this.options), options);\n        this.initRenderer();\n        this.reset();\n    }\n    initRenderer() {\n        const { elementId, width, height, background } = this.options.renderer;\n        if (elementId === null) {\n            return;\n        }\n        if (elementId === '') {\n            L(this);\n            throw new RuntimeError('renderer.elementId not set in FactoryOptions');\n        }\n        let backend = this.options.renderer.backend;\n        if (backend === undefined) {\n            const elem = document.getElementById(elementId);\n            if (isHTMLCanvas(elem)) {\n                backend = Renderer.Backends.CANVAS;\n            }\n            else {\n                backend = Renderer.Backends.SVG;\n            }\n        }\n        this.context = Renderer.buildContext(elementId, backend, width, height, background);\n    }\n    getContext() {\n        return this.context;\n    }\n    setContext(context) {\n        this.context = context;\n        return this;\n    }\n    getStave() {\n        return this.stave;\n    }\n    getVoices() {\n        return this.voices;\n    }\n    Stave(params) {\n        const staveSpace = this.options.stave.space;\n        const p = Object.assign({ x: 0, y: 0, width: this.options.renderer.width - staveSpace * 1.0, options: { spacingBetweenLinesPx: staveSpace * 1.0 } }, params);\n        const stave = new Stave(p.x, p.y, p.width, p.options);\n        this.staves.push(stave);\n        stave.setContext(this.context);\n        this.stave = stave;\n        return stave;\n    }\n    TabStave(params) {\n        const staveSpace = this.options.stave.space;\n        const p = Object.assign({ x: 0, y: 0, width: this.options.renderer.width - staveSpace * 1.0, options: { spacingBetweenLinesPx: staveSpace * 1.3 } }, params);\n        const stave = new TabStave(p.x, p.y, p.width, p.options);\n        this.staves.push(stave);\n        stave.setContext(this.context);\n        this.stave = stave;\n        return stave;\n    }\n    StaveNote(noteStruct) {\n        const note = new StaveNote(noteStruct);\n        if (this.stave)\n            note.setStave(this.stave);\n        note.setContext(this.context);\n        this.renderQ.push(note);\n        return note;\n    }\n    GlyphNote(glyph, noteStruct, options) {\n        const note = new GlyphNote(glyph, noteStruct, options);\n        if (this.stave)\n            note.setStave(this.stave);\n        note.setContext(this.context);\n        this.renderQ.push(note);\n        return note;\n    }\n    RepeatNote(type, noteStruct, options) {\n        const note = new RepeatNote(type, noteStruct, options);\n        if (this.stave)\n            note.setStave(this.stave);\n        note.setContext(this.context);\n        this.renderQ.push(note);\n        return note;\n    }\n    GhostNote(noteStruct) {\n        const ghostNote = new GhostNote(noteStruct);\n        if (this.stave)\n            ghostNote.setStave(this.stave);\n        ghostNote.setContext(this.context);\n        this.renderQ.push(ghostNote);\n        return ghostNote;\n    }\n    TextNote(noteStruct) {\n        const textNote = new TextNote(noteStruct);\n        if (this.stave)\n            textNote.setStave(this.stave);\n        textNote.setContext(this.context);\n        this.renderQ.push(textNote);\n        return textNote;\n    }\n    BarNote(params = {}) {\n        const barNote = new BarNote(params.type);\n        if (this.stave)\n            barNote.setStave(this.stave);\n        barNote.setContext(this.context);\n        this.renderQ.push(barNote);\n        return barNote;\n    }\n    ClefNote(params) {\n        const p = Object.assign({ type: 'treble', options: {\n                size: 'default',\n                annotation: undefined,\n            } }, params);\n        const clefNote = new ClefNote(p.type, p.options.size, p.options.annotation);\n        if (this.stave)\n            clefNote.setStave(this.stave);\n        clefNote.setContext(this.context);\n        this.renderQ.push(clefNote);\n        return clefNote;\n    }\n    TimeSigNote(params) {\n        const p = Object.assign({ time: '4/4' }, params);\n        const timeSigNote = new TimeSigNote(p.time);\n        if (this.stave)\n            timeSigNote.setStave(this.stave);\n        timeSigNote.setContext(this.context);\n        this.renderQ.push(timeSigNote);\n        return timeSigNote;\n    }\n    KeySigNote(params) {\n        const keySigNote = new KeySigNote(params.key, params.cancelKey, params.alterKey);\n        if (this.stave)\n            keySigNote.setStave(this.stave);\n        keySigNote.setContext(this.context);\n        this.renderQ.push(keySigNote);\n        return keySigNote;\n    }\n    TabNote(noteStruct) {\n        const note = new TabNote(noteStruct);\n        if (this.stave)\n            note.setStave(this.stave);\n        note.setContext(this.context);\n        this.renderQ.push(note);\n        return note;\n    }\n    GraceNote(noteStruct) {\n        const note = new GraceNote(noteStruct);\n        if (this.stave)\n            note.setStave(this.stave);\n        note.setContext(this.context);\n        return note;\n    }\n    GraceNoteGroup(params) {\n        const group = new GraceNoteGroup(params.notes, params.slur);\n        group.setContext(this.context);\n        return group;\n    }\n    Accidental(params) {\n        const accid = new Accidental(params.type);\n        accid.setContext(this.context);\n        return accid;\n    }\n    Annotation(params) {\n        const p = Object.assign({ text: 'p', hJustify: AnnotationHorizontalJustify.CENTER, vJustify: AnnotationVerticalJustify.BOTTOM }, params);\n        const annotation = new Annotation(p.text);\n        annotation.setJustification(p.hJustify);\n        annotation.setVerticalJustification(p.vJustify);\n        annotation.setFont(p.font);\n        annotation.setContext(this.context);\n        return annotation;\n    }\n    ChordSymbol(params) {\n        const p = Object.assign({ vJustify: 'top', hJustify: 'center' }, params);\n        const chordSymbol = new ChordSymbol();\n        chordSymbol.setHorizontal(p.hJustify);\n        chordSymbol.setVertical(p.vJustify);\n        if (typeof p.fontFamily === 'string' && typeof p.fontSize === 'number') {\n            if (typeof p.fontWeight === 'string')\n                chordSymbol.setFont(p.fontFamily, p.fontSize, p.fontWeight);\n            else\n                chordSymbol.setFont(p.fontFamily, p.fontSize, '');\n        }\n        else if (typeof p.fontSize === 'number') {\n            chordSymbol.setFontSize(p.fontSize);\n        }\n        chordSymbol.setContext(this.context);\n        return chordSymbol;\n    }\n    Articulation(params) {\n        var _a;\n        const articulation = new Articulation((_a = params === null || params === void 0 ? void 0 : params.type) !== null && _a !== void 0 ? _a : 'a.');\n        if ((params === null || params === void 0 ? void 0 : params.position) !== undefined)\n            articulation.setPosition(params.position);\n        if ((params === null || params === void 0 ? void 0 : params.betweenLines) !== undefined)\n            articulation.setBetweenLines(params.betweenLines);\n        articulation.setContext(this.context);\n        return articulation;\n    }\n    Ornament(type, params) {\n        const options = Object.assign({ type, accidental: '' }, params);\n        const ornament = new Ornament(type);\n        if ((params === null || params === void 0 ? void 0 : params.position) !== undefined) {\n            ornament.setPosition(params.position);\n        }\n        if (options.upperAccidental) {\n            ornament.setUpperAccidental(options.upperAccidental);\n        }\n        if (options.lowerAccidental) {\n            ornament.setLowerAccidental(options.lowerAccidental);\n        }\n        if (typeof options.delayed !== 'undefined') {\n            ornament.setDelayed(options.delayed);\n        }\n        ornament.setContext(this.context);\n        return ornament;\n    }\n    TextDynamics(params) {\n        const p = Object.assign({ text: 'p', duration: 'q', dots: 0, line: 0 }, params);\n        const text = new TextDynamics({\n            text: p.text,\n            line: p.line,\n            duration: p.duration,\n            dots: p.dots,\n        });\n        if (this.stave)\n            text.setStave(this.stave);\n        text.setContext(this.context);\n        this.renderQ.push(text);\n        return text;\n    }\n    Fingering(params) {\n        const p = Object.assign({ number: '0', position: 'left' }, params);\n        const fingering = new FretHandFinger(p.number);\n        fingering.setPosition(p.position);\n        fingering.setContext(this.context);\n        return fingering;\n    }\n    StringNumber(params, drawCircle = true) {\n        const stringNumber = new StringNumber(params.number);\n        stringNumber.setPosition(params.position);\n        stringNumber.setContext(this.context);\n        stringNumber.setDrawCircle(drawCircle);\n        return stringNumber;\n    }\n    TickContext() {\n        return new TickContext();\n    }\n    ModifierContext() {\n        return new ModifierContext();\n    }\n    MultiMeasureRest(params) {\n        const numMeasures = defined(params.numberOfMeasures, 'NoNumberOfMeasures');\n        const multiMeasureRest = new MultiMeasureRest(numMeasures, params);\n        multiMeasureRest.setContext(this.context);\n        this.renderQ.push(multiMeasureRest);\n        return multiMeasureRest;\n    }\n    Voice(params) {\n        const p = Object.assign({ time: '4/4' }, params);\n        const voice = new Voice(p.time);\n        this.voices.push(voice);\n        return voice;\n    }\n    StaveConnector(params) {\n        const connector = new StaveConnector(params.topStave, params.bottomStave);\n        connector.setType(params.type).setContext(this.context);\n        this.renderQ.push(connector);\n        return connector;\n    }\n    Formatter(options) {\n        return new Formatter(options);\n    }\n    Tuplet(params) {\n        const p = Object.assign({ notes: [], options: {} }, params);\n        const tuplet = new Tuplet(p.notes, p.options).setContext(this.context);\n        this.renderQ.push(tuplet);\n        return tuplet;\n    }\n    Beam(params) {\n        var _a, _b, _c, _d, _e;\n        const beam = new Beam(params.notes, (_a = params.options) === null || _a === void 0 ? void 0 : _a.autoStem).setContext(this.context);\n        beam.breakSecondaryAt((_c = (_b = params.options) === null || _b === void 0 ? void 0 : _b.secondaryBeamBreaks) !== null && _c !== void 0 ? _c : []);\n        if ((_d = params.options) === null || _d === void 0 ? void 0 : _d.partialBeamDirections) {\n            Object.entries((_e = params.options) === null || _e === void 0 ? void 0 : _e.partialBeamDirections).forEach(([noteIndex, direction]) => {\n                beam.setPartialBeamSideAt(Number(noteIndex), direction);\n            });\n        }\n        this.renderQ.push(beam);\n        return beam;\n    }\n    Curve(params) {\n        const curve = new Curve(params.from, params.to, params.options).setContext(this.context);\n        this.renderQ.push(curve);\n        return curve;\n    }\n    StaveTie(params) {\n        var _a;\n        const tie = new StaveTie({\n            firstNote: params.from,\n            lastNote: params.to,\n            firstIndexes: params.firstIndexes,\n            lastIndexes: params.lastIndexes,\n        }, params.text);\n        if ((_a = params.options) === null || _a === void 0 ? void 0 : _a.direction)\n            tie.setDirection(params.options.direction);\n        tie.setContext(this.context);\n        this.renderQ.push(tie);\n        return tie;\n    }\n    StaveLine(params) {\n        var _a, _b;\n        const line = new StaveLine({\n            firstNote: params.from,\n            lastNote: params.to,\n            firstIndexes: params.firstIndexes,\n            lastIndexes: params.lastIndexes,\n        });\n        if ((_a = params.options) === null || _a === void 0 ? void 0 : _a.text)\n            line.setText(params.options.text);\n        if ((_b = params.options) === null || _b === void 0 ? void 0 : _b.font)\n            line.setFont(params.options.font);\n        line.setContext(this.context);\n        this.renderQ.push(line);\n        return line;\n    }\n    VibratoBracket(params) {\n        const vibratoBracket = new VibratoBracket({\n            start: params.from,\n            stop: params.to,\n        });\n        if (params.options.line)\n            vibratoBracket.setLine(params.options.line);\n        if (params.options.code)\n            vibratoBracket.setVibratoCode(params.options.code);\n        vibratoBracket.setContext(this.context);\n        this.renderQ.push(vibratoBracket);\n        return vibratoBracket;\n    }\n    TextBracket(params) {\n        const textBracket = new TextBracket({\n            start: params.from,\n            stop: params.to,\n            text: params.text,\n            superscript: params.options.superscript,\n            position: params.options.position,\n        });\n        if (params.options.line)\n            textBracket.setLine(params.options.line);\n        if (params.options.font)\n            textBracket.setFont(params.options.font);\n        textBracket.setContext(this.context);\n        this.renderQ.push(textBracket);\n        return textBracket;\n    }\n    System(params = {}) {\n        params.factory = this;\n        const system = new System(params).setContext(this.context);\n        this.systems.push(system);\n        return system;\n    }\n    EasyScore(options = {}) {\n        options.factory = this;\n        return new EasyScore(options);\n    }\n    PedalMarking(params) {\n        const p = Object.assign({ notes: [], options: {\n                style: 'mixed',\n            } }, params);\n        const pedal = new PedalMarking(p.notes);\n        pedal.setType(PedalMarking.typeString[p.options.style]);\n        pedal.setContext(this.context);\n        this.renderQ.push(pedal);\n        return pedal;\n    }\n    NoteSubGroup(params) {\n        const p = Object.assign({ notes: [] }, params);\n        const group = new NoteSubGroup(p.notes);\n        group.setContext(this.context);\n        return group;\n    }\n    draw() {\n        const ctx = this.context;\n        this.systems.forEach((s) => s.setContext(ctx).format());\n        this.staves.forEach((s) => s.setContext(ctx).drawWithStyle());\n        this.voices.forEach((v) => v.setContext(ctx).drawWithStyle());\n        this.renderQ.forEach((e) => {\n            if (!e.isRendered())\n                e.setContext(ctx).drawWithStyle();\n        });\n        this.systems.forEach((s) => s.setContext(ctx).drawWithStyle());\n        this.reset();\n    }\n}\nFactory.DEBUG = false;\n","import { Element } from './element.js';\nimport { Modifier } from './modifier.js';\nimport { RuntimeError } from './util.js';\nexport class StaveHairpin extends Element {\n    static get CATEGORY() {\n        return \"StaveHairpin\";\n    }\n    static FormatByTicksAndDraw(ctx, formatter, notes, type, position, options) {\n        var _a, _b;\n        const ppt = formatter.pixelsPerTick;\n        if (ppt === null) {\n            throw new RuntimeError('BadArguments', 'A valid Formatter must be provide to draw offsets by ticks.');\n        }\n        const leftShiftPx = ppt * ((_a = options.leftShiftTicks) !== null && _a !== void 0 ? _a : 0);\n        const rightShiftPx = ppt * ((_b = options.rightShiftTicks) !== null && _b !== void 0 ? _b : 0);\n        const hairpinOptions = {\n            height: options.height,\n            yShift: options.yShift,\n            leftShiftPx,\n            rightShiftPx,\n            rightShiftTicks: 0,\n            leftShiftTicks: 0,\n        };\n        new StaveHairpin({\n            firstNote: notes.firstNote,\n            lastNote: notes.lastNote,\n        }, type)\n            .setContext(ctx)\n            .setRenderOptions(hairpinOptions)\n            .setPosition(position)\n            .drawWithStyle();\n    }\n    constructor(notes, type) {\n        super();\n        this.setNotes(notes);\n        this.hairpin = type;\n        this.position = Modifier.Position.BELOW;\n        this.renderOptions = {\n            height: 10,\n            yShift: 0,\n            leftShiftPx: 0,\n            rightShiftPx: 0,\n            rightShiftTicks: 0,\n            leftShiftTicks: 0,\n        };\n    }\n    setPosition(position) {\n        if (position === Modifier.Position.ABOVE || position === Modifier.Position.BELOW) {\n            this.position = position;\n        }\n        return this;\n    }\n    setRenderOptions(options) {\n        this.renderOptions = options;\n        return this;\n    }\n    setNotes(notes) {\n        if (!notes.firstNote && !notes.lastNote) {\n            throw new RuntimeError('BadArguments', 'Hairpin needs to have either firstNote or lastNote set.');\n        }\n        this.notes = notes;\n        this.firstNote = notes.firstNote;\n        this.lastNote = notes.lastNote;\n        return this;\n    }\n    renderHairpin(params) {\n        const ctx = this.checkContext();\n        let dis = this.renderOptions.yShift + 20;\n        let yShift = params.firstY;\n        if (this.position === Modifier.Position.ABOVE) {\n            dis = -dis + 30;\n            yShift = params.firstY - params.staffHeight;\n        }\n        const leftShiftPx = this.renderOptions.leftShiftPx;\n        const rightShiftPx = this.renderOptions.rightShiftPx;\n        ctx.beginPath();\n        switch (this.hairpin) {\n            case StaveHairpin.type.CRESC:\n                ctx.moveTo(params.lastX + rightShiftPx, yShift + dis);\n                ctx.lineTo(params.firstX + leftShiftPx, yShift + this.renderOptions.height / 2 + dis);\n                ctx.lineTo(params.lastX + rightShiftPx, yShift + this.renderOptions.height + dis);\n                break;\n            case StaveHairpin.type.DECRESC:\n                ctx.moveTo(params.firstX + leftShiftPx, yShift + dis);\n                ctx.lineTo(params.lastX + rightShiftPx, yShift + this.renderOptions.height / 2 + dis);\n                ctx.lineTo(params.firstX + leftShiftPx, yShift + this.renderOptions.height + dis);\n                break;\n            default:\n                break;\n        }\n        ctx.stroke();\n        ctx.closePath();\n    }\n    draw() {\n        this.checkContext();\n        this.setRendered();\n        const firstNote = this.firstNote;\n        const lastNote = this.lastNote;\n        if (!firstNote || !lastNote)\n            throw new RuntimeError('NoNote', 'Notes required to draw');\n        const start = firstNote.getModifierStartXY(this.position, 0);\n        const end = lastNote.getModifierStartXY(this.position, 0);\n        this.renderHairpin({\n            firstX: start.x,\n            lastX: end.x,\n            firstY: firstNote.checkStave().getY() + firstNote.checkStave().getHeight(),\n            lastY: lastNote.checkStave().getY() + lastNote.checkStave().getHeight(),\n            staffHeight: firstNote.checkStave().getHeight(),\n        });\n    }\n}\nStaveHairpin.type = {\n    CRESC: 1,\n    DECRESC: 2,\n};\n","import { TabTie } from './tabtie.js';\nimport { RuntimeError } from './util.js';\nexport class TabSlide extends TabTie {\n    static get CATEGORY() {\n        return \"TabSlide\";\n    }\n    static get SLIDE_UP() {\n        return 1;\n    }\n    static get SLIDE_DOWN() {\n        return -1;\n    }\n    static createSlideUp(notes) {\n        return new TabSlide(notes, TabSlide.SLIDE_UP);\n    }\n    static createSlideDown(notes) {\n        return new TabSlide(notes, TabSlide.SLIDE_DOWN);\n    }\n    constructor(notes, direction) {\n        super(notes, 'sl.');\n        if (!direction) {\n            let firstFret = notes.firstNote.getPositions()[0].fret;\n            if (typeof firstFret === 'string') {\n                firstFret = parseInt(firstFret, 10);\n            }\n            let lastFret = notes.lastNote.getPositions()[0].fret;\n            if (typeof lastFret === 'string') {\n                lastFret = parseInt(lastFret, 10);\n            }\n            if (isNaN(firstFret) || isNaN(lastFret)) {\n                direction = TabSlide.SLIDE_UP;\n            }\n            else {\n                direction = firstFret > lastFret ? TabSlide.SLIDE_DOWN : TabSlide.SLIDE_UP;\n            }\n        }\n        this.direction = direction;\n        this.renderOptions.cp1 = 11;\n        this.renderOptions.cp2 = 14;\n        this.renderOptions.yShift = 0.5;\n    }\n    renderTie(params) {\n        if (params.firstYs.length === 0 || params.lastYs.length === 0) {\n            throw new RuntimeError('BadArguments', 'No Y-values to render');\n        }\n        const ctx = this.checkContext();\n        const firstX = params.firstX;\n        const firstYs = params.firstYs;\n        const lastX = params.lastX;\n        const direction = params.direction;\n        if (direction !== TabSlide.SLIDE_UP && direction !== TabSlide.SLIDE_DOWN) {\n            throw new RuntimeError('BadSlide', 'Invalid slide direction');\n        }\n        const firstIndexes = this.notes.firstIndexes;\n        for (let i = 0; i < firstIndexes.length; ++i) {\n            const slideY = firstYs[firstIndexes[i]] + this.renderOptions.yShift;\n            if (isNaN(slideY)) {\n                throw new RuntimeError('BadArguments', 'Bad indexes for slide rendering.');\n            }\n            ctx.beginPath();\n            ctx.moveTo(firstX, slideY + 3 * direction);\n            ctx.lineTo(lastX, slideY - 3 * direction);\n            ctx.closePath();\n            ctx.stroke();\n        }\n        this.setRendered();\n    }\n}\n","import { Tables } from './tables.js';\nimport { RuntimeError } from './util.js';\nexport class Tuning {\n    static get names() {\n        return {\n            standard: 'E/5,B/4,G/4,D/4,A/3,E/3',\n            dagdad: 'D/5,A/4,G/4,D/4,A/3,D/3',\n            dropd: 'E/5,B/4,G/4,D/4,A/3,D/3',\n            eb: 'Eb/5,Bb/4,Gb/4,Db/4,Ab/3,Db/3',\n            standardBanjo: 'D/5,B/4,G/4,D/4,G/5',\n        };\n    }\n    constructor(tuningString = 'E/5,B/4,G/4,D/4,A/3,E/3,B/2,E/2') {\n        this.tuningValues = [];\n        this.setTuning(tuningString);\n    }\n    noteToInteger(noteString) {\n        var _a;\n        return (_a = Tables.keyProperties(noteString).intValue) !== null && _a !== void 0 ? _a : -1;\n    }\n    setTuning(tuningString) {\n        if (Tuning.names[tuningString]) {\n            tuningString = Tuning.names[tuningString];\n        }\n        this.tuningValues = [];\n        const keys = tuningString.split(/\\s*,\\s*/);\n        if (keys.length === 0) {\n            throw new RuntimeError('BadArguments', `Invalid tuning string: ${tuningString}`);\n        }\n        for (let i = 0; i < keys.length; ++i) {\n            this.tuningValues[i] = this.noteToInteger(keys[i]);\n        }\n    }\n    getValueForString(stringNum) {\n        const s = Number(stringNum);\n        if (s < 1 || s > this.tuningValues.length) {\n            throw new RuntimeError('BadArguments', `String number must be between 1 and ${this.tuningValues.length}:${stringNum}`);\n        }\n        return this.tuningValues[s - 1];\n    }\n    getValueForFret(fretNum, stringNum) {\n        const stringValue = this.getValueForString(stringNum);\n        const f = Number(fretNum);\n        if (f < 0) {\n            throw new RuntimeError('BadArguments', `Fret number must be 0 or higher: ${fretNum}`);\n        }\n        return stringValue + f;\n    }\n    getNoteForFret(fretNum, stringNum) {\n        const noteValue = this.getValueForFret(fretNum, stringNum);\n        const octave = Math.floor(noteValue / 12);\n        const value = noteValue % 12;\n        return `${Tables.integerToNote(value)}/${octave}`;\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Accidental } from './accidental.js';\nimport { Annotation, AnnotationHorizontalJustify, AnnotationVerticalJustify } from './annotation.js';\nimport { Articulation } from './articulation.js';\nimport { BarNote } from './barnote.js';\nimport { Beam } from './beam.js';\nimport { Bend } from './bend.js';\nimport { BoundingBox } from './boundingbox.js';\nimport { CanvasContext } from './canvascontext.js';\nimport { ChordSymbol, ChordSymbolHorizontalJustify, ChordSymbolVerticalJustify, SymbolModifiers } from './chordsymbol.js';\nimport { Clef } from './clef.js';\nimport { ClefNote } from './clefnote.js';\nimport { Crescendo } from './crescendo.js';\nimport { Curve, CurvePosition } from './curve.js';\nimport { Dot } from './dot.js';\nimport { EasyScore } from './easyscore.js';\nimport { Element } from './element.js';\nimport { Factory } from './factory.js';\nimport { Font, FontStyle, FontWeight } from './font.js';\nimport { Formatter } from './formatter.js';\nimport { Fraction } from './fraction.js';\nimport { FretHandFinger } from './frethandfinger.js';\nimport { GhostNote } from './ghostnote.js';\nimport { GlyphNote } from './glyphnote.js';\nimport { Glyphs } from './glyphs.js';\nimport { GraceNote } from './gracenote.js';\nimport { GraceNoteGroup } from './gracenotegroup.js';\nimport { GraceTabNote } from './gracetabnote.js';\nimport { KeyManager } from './keymanager.js';\nimport { KeySignature } from './keysignature.js';\nimport { KeySigNote } from './keysignote.js';\nimport { Metrics, MetricsDefaults } from './metrics.js';\nimport { Modifier, ModifierPosition } from './modifier.js';\nimport { ModifierContext } from './modifiercontext.js';\nimport { MultiMeasureRest } from './multimeasurerest.js';\nimport { Music } from './music.js';\nimport { Note } from './note.js';\nimport { NoteHead } from './notehead.js';\nimport { NoteSubGroup } from './notesubgroup.js';\nimport { Ornament } from './ornament.js';\nimport { Parenthesis } from './parenthesis.js';\nimport { Parser } from './parser.js';\nimport { PedalMarking } from './pedalmarking.js';\nimport { Registry } from './registry.js';\nimport { RenderContext } from './rendercontext.js';\nimport { Renderer, RendererBackends, RendererLineEndType } from './renderer.js';\nimport { RepeatNote } from './repeatnote.js';\nimport { Stave } from './stave.js';\nimport { Barline, BarlineType } from './stavebarline.js';\nimport { StaveConnector } from './staveconnector.js';\nimport { StaveHairpin } from './stavehairpin.js';\nimport { StaveLine } from './staveline.js';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier.js';\nimport { StaveNote } from './stavenote.js';\nimport { Repetition } from './staverepetition.js';\nimport { StaveTempo } from './stavetempo.js';\nimport { StaveText } from './stavetext.js';\nimport { StaveTie } from './stavetie.js';\nimport { Volta, VoltaType } from './stavevolta.js';\nimport { Stem } from './stem.js';\nimport { StringNumber } from './stringnumber.js';\nimport { Stroke } from './strokes.js';\nimport { SVGContext } from './svgcontext.js';\nimport { System } from './system.js';\nimport { Tables } from './tables.js';\nimport { TabNote } from './tabnote.js';\nimport { TabSlide } from './tabslide.js';\nimport { TabStave } from './tabstave.js';\nimport { TabTie } from './tabtie.js';\nimport { TextBracket, TextBracketPosition } from './textbracket.js';\nimport { TextDynamics } from './textdynamics.js';\nimport { TextJustification, TextNote } from './textnote.js';\nimport { TickContext } from './tickcontext.js';\nimport { TimeSignature } from './timesignature.js';\nimport { TimeSigNote } from './timesignote.js';\nimport { Tremolo } from './tremolo.js';\nimport { Tuning } from './tuning.js';\nimport { Tuplet } from './tuplet.js';\nimport { RuntimeError } from './util.js';\nimport { DATE, ID, VERSION } from './version.js';\nimport { Vibrato } from './vibrato.js';\nimport { VibratoBracket } from './vibratobracket.js';\nimport { Voice, VoiceMode } from './voice.js';\nexport class VexFlow {\n    static loadFonts(...fontNames) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!fontNames) {\n                fontNames = Object.keys(Font.FILES);\n            }\n            const fontLoadPromises = [];\n            for (const fontName of fontNames) {\n                fontLoadPromises.push(Font.load(fontName));\n            }\n            yield Promise.all(fontLoadPromises);\n        });\n    }\n    static setFonts(...fontNames) {\n        MetricsDefaults.fontFamily = fontNames.join(',');\n        Metrics.clear();\n    }\n    static getFonts() {\n        return Metrics.get('fontFamily').split(',');\n    }\n    static get RENDER_PRECISION_PLACES() {\n        return Tables.RENDER_PRECISION_PLACES;\n    }\n    static set RENDER_PRECISION_PLACES(precision) {\n        Tables.RENDER_PRECISION_PLACES = precision;\n    }\n    static get SOFTMAX_FACTOR() {\n        return Tables.SOFTMAX_FACTOR;\n    }\n    static set SOFTMAX_FACTOR(factor) {\n        Tables.SOFTMAX_FACTOR = factor;\n    }\n    static get UNISON() {\n        return Tables.UNISON;\n    }\n    static set UNISON(unison) {\n        Tables.UNISON = unison;\n    }\n    static get NOTATION_FONT_SCALE() {\n        return Tables.NOTATION_FONT_SCALE;\n    }\n    static set NOTATION_FONT_SCALE(value) {\n        Tables.NOTATION_FONT_SCALE = value;\n    }\n    static get TABLATURE_FONT_SCALE() {\n        return Tables.TABLATURE_FONT_SCALE;\n    }\n    static set TABLATURE_FONT_SCALE(value) {\n        Tables.TABLATURE_FONT_SCALE = value;\n    }\n    static get RESOLUTION() {\n        return Tables.RESOLUTION;\n    }\n    static set RESOLUTION(value) {\n        Tables.RESOLUTION = value;\n    }\n    static get SLASH_NOTEHEAD_WIDTH() {\n        return Tables.SLASH_NOTEHEAD_WIDTH;\n    }\n    static set SLASH_NOTEHEAD_WIDTH(value) {\n        Tables.SLASH_NOTEHEAD_WIDTH = value;\n    }\n    static get STAVE_LINE_DISTANCE() {\n        return Tables.STAVE_LINE_DISTANCE;\n    }\n    static set STAVE_LINE_DISTANCE(value) {\n        Tables.STAVE_LINE_DISTANCE = value;\n    }\n    static get STAVE_LINE_THICKNESS() {\n        return MetricsDefaults.Stave.lineWidth;\n    }\n    static set STAVE_LINE_THICKNESS(value) {\n        MetricsDefaults.Stave.lineWidth = value;\n        MetricsDefaults.TabStave.lineWidth = value;\n        Metrics.clear('Stave');\n        Metrics.clear('TabStave');\n    }\n    static get STEM_HEIGHT() {\n        return Tables.STEM_HEIGHT;\n    }\n    static set STEM_HEIGHT(value) {\n        Tables.STEM_HEIGHT = value;\n    }\n    static get STEM_WIDTH() {\n        return Tables.STEM_WIDTH;\n    }\n    static set STEM_WIDTH(value) {\n        Tables.STEM_WIDTH = value;\n    }\n    static get TIME4_4() {\n        return Tables.TIME4_4;\n    }\n    static get unicode() {\n        return Tables.unicode;\n    }\n    static keySignature(spec) {\n        return Tables.keySignature(spec);\n    }\n    static hasKeySignature(spec) {\n        return Tables.hasKeySignature(spec);\n    }\n    static getKeySignatures() {\n        return Tables.getKeySignatures();\n    }\n    static clefProperties(clef) {\n        return Tables.clefProperties(clef);\n    }\n    static keyProperties(key, clef, params) {\n        return Tables.keyProperties(key, clef, params);\n    }\n    static durationToTicks(duration) {\n        return Tables.durationToTicks(duration);\n    }\n}\nVexFlow.BUILD = {\n    VERSION: VERSION,\n    ID: ID,\n    DATE: DATE,\n    INFO: '',\n};\nVexFlow.Accidental = Accidental;\nVexFlow.Annotation = Annotation;\nVexFlow.Articulation = Articulation;\nVexFlow.Barline = Barline;\nVexFlow.BarNote = BarNote;\nVexFlow.Beam = Beam;\nVexFlow.Bend = Bend;\nVexFlow.BoundingBox = BoundingBox;\nVexFlow.CanvasContext = CanvasContext;\nVexFlow.ChordSymbol = ChordSymbol;\nVexFlow.Clef = Clef;\nVexFlow.ClefNote = ClefNote;\nVexFlow.Crescendo = Crescendo;\nVexFlow.Curve = Curve;\nVexFlow.Dot = Dot;\nVexFlow.EasyScore = EasyScore;\nVexFlow.Element = Element;\nVexFlow.Factory = Factory;\nVexFlow.Font = Font;\nVexFlow.Formatter = Formatter;\nVexFlow.Fraction = Fraction;\nVexFlow.FretHandFinger = FretHandFinger;\nVexFlow.GhostNote = GhostNote;\nVexFlow.GlyphNote = GlyphNote;\nVexFlow.GraceNote = GraceNote;\nVexFlow.GraceNoteGroup = GraceNoteGroup;\nVexFlow.GraceTabNote = GraceTabNote;\nVexFlow.KeyManager = KeyManager;\nVexFlow.KeySignature = KeySignature;\nVexFlow.KeySigNote = KeySigNote;\nVexFlow.Modifier = Modifier;\nVexFlow.ModifierContext = ModifierContext;\nVexFlow.MultiMeasureRest = MultiMeasureRest;\nVexFlow.Music = Music;\nVexFlow.Note = Note;\nVexFlow.NoteHead = NoteHead;\nVexFlow.NoteSubGroup = NoteSubGroup;\nVexFlow.Ornament = Ornament;\nVexFlow.Parenthesis = Parenthesis;\nVexFlow.Parser = Parser;\nVexFlow.PedalMarking = PedalMarking;\nVexFlow.Registry = Registry;\nVexFlow.RenderContext = RenderContext;\nVexFlow.Renderer = Renderer;\nVexFlow.RepeatNote = RepeatNote;\nVexFlow.Repetition = Repetition;\nVexFlow.Stave = Stave;\nVexFlow.StaveConnector = StaveConnector;\nVexFlow.StaveHairpin = StaveHairpin;\nVexFlow.StaveLine = StaveLine;\nVexFlow.StaveModifier = StaveModifier;\nVexFlow.StaveNote = StaveNote;\nVexFlow.StaveTempo = StaveTempo;\nVexFlow.StaveText = StaveText;\nVexFlow.StaveTie = StaveTie;\nVexFlow.Stem = Stem;\nVexFlow.StringNumber = StringNumber;\nVexFlow.Stroke = Stroke;\nVexFlow.SVGContext = SVGContext;\nVexFlow.System = System;\nVexFlow.TabNote = TabNote;\nVexFlow.TabSlide = TabSlide;\nVexFlow.TabStave = TabStave;\nVexFlow.TabTie = TabTie;\nVexFlow.TextBracket = TextBracket;\nVexFlow.TextDynamics = TextDynamics;\nVexFlow.TextNote = TextNote;\nVexFlow.TickContext = TickContext;\nVexFlow.TimeSignature = TimeSignature;\nVexFlow.TimeSigNote = TimeSigNote;\nVexFlow.Tremolo = Tremolo;\nVexFlow.Tuning = Tuning;\nVexFlow.Tuplet = Tuplet;\nVexFlow.Vibrato = Vibrato;\nVexFlow.VibratoBracket = VibratoBracket;\nVexFlow.Voice = Voice;\nVexFlow.Volta = Volta;\nVexFlow.RuntimeError = RuntimeError;\nVexFlow.Test = undefined;\nVexFlow.AnnotationHorizontalJustify = AnnotationHorizontalJustify;\nVexFlow.AnnotationVerticalJustify = AnnotationVerticalJustify;\nVexFlow.ChordSymbolHorizontalJustify = ChordSymbolHorizontalJustify;\nVexFlow.ChordSymbolVerticalJustify = ChordSymbolVerticalJustify;\nVexFlow.SymbolModifiers = SymbolModifiers;\nVexFlow.CurvePosition = CurvePosition;\nVexFlow.FontWeight = FontWeight;\nVexFlow.FontStyle = FontStyle;\nVexFlow.Glyphs = Glyphs;\nVexFlow.ModifierPosition = ModifierPosition;\nVexFlow.RendererBackends = RendererBackends;\nVexFlow.RendererLineEndType = RendererLineEndType;\nVexFlow.BarlineType = BarlineType;\nVexFlow.StaveModifierPosition = StaveModifierPosition;\nVexFlow.VoltaType = VoltaType;\nVexFlow.TextBracketPosition = TextBracketPosition;\nVexFlow.TextJustification = TextJustification;\nVexFlow.VoiceMode = VoiceMode;\n","export const VERSION = '5.0.0';\nexport const ID = '0ca6f889545c33cce851b420c24945f6eb685aeb';\nexport const DATE = '2025-03-05T17:05:43.991Z';","import { TabNote } from './tabnote.js';\nexport class GraceTabNote extends TabNote {\n    static get CATEGORY() {\n        return \"GraceTabNote\";\n    }\n    constructor(noteStruct) {\n        super(noteStruct, false);\n        this.renderOptions = Object.assign(Object.assign({}, this.renderOptions), { yShift: 0.3 });\n        this.updateWidth();\n    }\n}\n","import { Music } from './music.js';\nimport { RuntimeError } from './util.js';\nexport class KeyManager {\n    constructor(key) {\n        this.music = new Music();\n        this.setKey(key);\n    }\n    setKey(key) {\n        this.key = key;\n        this.reset();\n        return this;\n    }\n    getKey() {\n        return this.key;\n    }\n    reset() {\n        this.keyParts = this.music.getKeyParts(this.key);\n        this.keyString = this.keyParts.root;\n        if (this.keyParts.accidental)\n            this.keyString += this.keyParts.accidental;\n        const isSupportedType = Music.scaleTypes[this.keyParts.type];\n        if (!isSupportedType) {\n            throw new RuntimeError('BadArguments', `Unsupported key type: ${this.key}`);\n        }\n        this.scale = this.music.getScaleTones(this.music.getNoteValue(this.keyString), Music.scaleTypes[this.keyParts.type]);\n        this.scaleMap = {};\n        this.scaleMapByValue = {};\n        this.originalScaleMapByValue = {};\n        const noteLocation = Music.rootIndexes[this.keyParts.root];\n        for (let i = 0; i < Music.roots.length; ++i) {\n            const index = (noteLocation + i) % Music.roots.length;\n            const rootName = Music.roots[index];\n            const noteName = this.music.getRelativeNoteName(rootName, this.scale[i]);\n            this.scaleMap[rootName] = noteName;\n            this.scaleMapByValue[this.scale[i]] = noteName;\n            this.originalScaleMapByValue[this.scale[i]] = noteName;\n        }\n        return this;\n    }\n    getAccidental(key) {\n        const root = this.music.getKeyParts(key).root;\n        const parts = this.music.getNoteParts(this.scaleMap[root]);\n        return {\n            note: this.scaleMap[root],\n            accidental: parts.accidental,\n        };\n    }\n    selectNote(note) {\n        note = note.toLowerCase();\n        const parts = this.music.getNoteParts(note);\n        const scaleNote = this.scaleMap[parts.root];\n        const modparts = this.music.getNoteParts(scaleNote);\n        if (scaleNote === note) {\n            return {\n                note: scaleNote,\n                accidental: parts.accidental,\n                change: false,\n            };\n        }\n        const valueNote = this.scaleMapByValue[this.music.getNoteValue(note)];\n        if (valueNote !== undefined) {\n            return {\n                note: valueNote,\n                accidental: this.music.getNoteParts(valueNote).accidental,\n                change: false,\n            };\n        }\n        const originalValueNote = this.originalScaleMapByValue[this.music.getNoteValue(note)];\n        if (originalValueNote !== undefined) {\n            this.scaleMap[modparts.root] = originalValueNote;\n            delete this.scaleMapByValue[this.music.getNoteValue(scaleNote)];\n            this.scaleMapByValue[this.music.getNoteValue(note)] = originalValueNote;\n            return {\n                note: originalValueNote,\n                accidental: this.music.getNoteParts(originalValueNote).accidental,\n                change: true,\n            };\n        }\n        if (modparts.root === note) {\n            delete this.scaleMapByValue[this.music.getNoteValue(this.scaleMap[parts.root])];\n            this.scaleMapByValue[this.music.getNoteValue(modparts.root)] = modparts.root;\n            this.scaleMap[modparts.root] = modparts.root;\n            return {\n                note: modparts.root,\n                accidental: undefined,\n                change: true,\n            };\n        }\n        delete this.scaleMapByValue[this.music.getNoteValue(this.scaleMap[parts.root])];\n        this.scaleMapByValue[this.music.getNoteValue(note)] = note;\n        delete this.scaleMap[modparts.root];\n        this.scaleMap[modparts.root] = note;\n        return {\n            note,\n            accidental: parts.accidental,\n            change: true,\n        };\n    }\n}\n","import { Glyphs } from './glyphs.js';\nimport { Metrics } from './metrics.js';\nimport { Modifier } from './modifier.js';\nimport { Stem } from './stem.js';\nexport class Tremolo extends Modifier {\n    static get CATEGORY() {\n        return \"Tremolo\";\n    }\n    constructor(num) {\n        super();\n        this.num = num;\n        this.position = Modifier.Position.CENTER;\n        this.text = Glyphs.tremolo1;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const stemDirection = note.getStemDirection();\n        const scale = note.getFontScale();\n        const ySpacing = Metrics.get(`Tremolo.spacing`) * stemDirection * scale;\n        const x = note.getAbsoluteX() + (stemDirection === Stem.UP ? note.getGlyphWidth() - Stem.WIDTH / 2 : Stem.WIDTH / 2);\n        let y = note.getStemExtents().topY + (this.num <= 3 ? ySpacing : 0);\n        this.fontInfo.size = Metrics.get(`Tremolo.fontSize`) * scale;\n        for (let i = 0; i < this.num; ++i) {\n            this.renderText(ctx, x, y);\n            y += ySpacing;\n        }\n    }\n}\n","export const Academico = 'data:font/woff2;charset=utf-8;base64,';\n","import { VexFlow } from '../src/vexflow.js';\nimport { Font } from '../src/font.js';\nimport { Academico } from '../src/fonts/academico.js';\nimport { AcademicoBold } from '../src/fonts/academicobold.js';\nimport { Bravura } from '../src/fonts/bravura.js';\nimport { Gonville } from '../src/fonts/gonville.js';\nimport { Petaluma } from '../src/fonts/petaluma.js';\nimport { PetalumaScript } from '../src/fonts/petalumascript.js';\nconst block = { display: 'block' };\nconst swap = { display: 'swap' };\nconst swapBold = { display: 'swap', weight: 'bold' };\nconst fontBravura = Font.load('Bravura', Bravura, block);\nconst fontAcademico = Font.load('Academico', Academico, swap);\nconst fontAcademicoBold = Font.load('Academico', AcademicoBold, swapBold);\nconst fontGonville = Font.load('Gonville', Gonville, block);\nconst fontPetaluma = Font.load('Petaluma', Petaluma, block);\nconst fontPetalumaScript = Font.load('Petaluma Script', PetalumaScript, swap);\nconst fontLoadPromises = [\n    fontBravura,\n    fontAcademico,\n    fontAcademicoBold,\n    fontGonville,\n    fontPetaluma,\n    fontPetalumaScript,\n];\nVexFlow.BUILD.INFO = 'vexflow';\nVexFlow.setFonts('Bravura', 'Academico');\nPromise.allSettled(fontLoadPromises).then(() => {\n});\nexport * from '../src/index.js';\nexport default VexFlow;\n","export const Bravura = 'data:font/woff2;charset=utf-8;base64,';\n","export const AcademicoBold = 'data:font/woff2;charset=utf-8;base64,';\n","export const Gonville = 'data:font/woff2;charset=utf-8;base64,';\n","export const Petaluma = 'data:font/woff2;charset=utf-8;base64,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';\n","export const PetalumaScript = 'data:font/woff2;charset=utf-8;base64,';\n","import { Factory, StaveNote, Accidental, Voice, Formatter, Annotation, Barline } from 'vexflow';\nimport { CONST } from \"../data/CONST.js\"; // Import CONST for MIDI_NOTE_TO_KEY\n\nexport class SheetMusicRender {\n    constructor(containerId) {\n        this.containerId = containerId;\n        this.vf = null;\n        this.context = null;\n        this.stave = null;\n    }\n\n    init() {\n        const container = document.getElementById(this.containerId);\n        if (!container) {\n            console.error(`Sheet music container #${this.containerId} not found.`);\n            return;\n        }\n        // Clear previous content if any\n        container.innerHTML = '';\n\n        // Create VexFlow Factory\n        this.vf = new Factory({\n            renderer: { \n                elementId: this.containerId, \n                width: container.offsetWidth, \n                height: 200 // Initial height, adjust as needed\n            }\n        });\n        this.context = this.vf.getContext();\n\n        // Basic stave setup (example)\n        this.stave = this.vf.Stave(10, 40, container.offsetWidth - 20); // x, y, width\n        this.stave.addClef(\"treble\").addTimeSignature(\"4/4\");\n        this.stave.setEndBarType(Barline.type.SINGLE); // Use imported Barline\n        this.stave.setContext(this.context).draw();\n\n        console.log(\"VexFlow initialized for sheet music.\");\n    }\n\n    render(songData, currentTime, bpm, timeSignature) {\n        if (!this.vf || !songData || currentTime === undefined) {\n            return; \n        }\n\n        this.context.clear(); \n        this.stave.draw();\n\n        // --- Basic Note Conversion (Pitch AND Duration) ---\n        const notesToDraw = [];\n        const currentTimeMillis = currentTime * 1000;\n        const timeWindowStart = currentTime - 0.5; // Look slightly behind\n        const timeWindowEnd = currentTime + 4; // Look ahead a few seconds\n\n        const notesInWindow = songData.getNotes(timeWindowStart, timeWindowEnd) || [];\n        // Alternative if getNotesInTimeWindow doesn't exist:\n        // Iterate through songData.notesBySeconds or songData.getNoteSequence()\n\n        console.log(`[SheetMusic] Time: ${currentTime.toFixed(2)}, Notes in Window: ${notesInWindow.length}`); // DEBUG LOG\n\n        notesInWindow.forEach(note => {\n            const key = this.midiNoteToVexflowKey(note.noteNumber);\n            if (key) {\n                let vexDuration = 'q'; // Declare outside the try block with a default\n                try {\n                    vexDuration = this.midiDurationToVexflowDuration(note.duration, bpm, timeSignature);\n                    const isPlaying = currentTimeMillis >= note.timestamp && currentTimeMillis < note.offTime;\n\n                    const vfNote = this.vf.StaveNote({\n                        keys: [key],\n                        duration: vexDuration\n                    });\n\n                    // Add accidental if needed\n                    if (key.includes(\"#\") || key.includes(\"b\")) {\n                        const accidentalType = key.includes(\"#\") ? \"#\" : \"b\";\n                        vfNote.addAccidental(0, this.vf.Accidental({ type: accidentalType }));\n                    }\n\n                    // Add Note Name Annotation\n                    const noteNameOnly = this.midiNoteToVexflowKey(note.noteNumber)?.split('/')[0]?.replace(/[0-9]/g, '').toUpperCase();\n                    if (noteNameOnly) {\n                         // Explicitly create annotation via factory\n                         const annotation = this.vf.Annotation({ text: noteNameOnly, vJustify: 'below' });\n                         vfNote.addModifier(annotation, 0);\n                    }\n\n                    // Highlight if playing\n                    if (isPlaying) {\n                        vfNote.setStyle({ fillStyle: \"red\", strokeStyle: \"red\" }); // Example highlight style\n                    }\n\n                    notesToDraw.push(vfNote);\n                } catch (e) {\n                    console.warn(\"VexFlow error creating note:\", key, vexDuration, e);\n                }\n            }\n        });\n\n        console.log(`[SheetMusic] Notes to Draw: ${notesToDraw.length}`); // DEBUG LOG\n\n        // --- Format and Draw --- \n        if (notesToDraw.length > 0) {\n             try {\n                // Attempt to format and draw - might fail if durations don't fit measure\n                // Use time signature from song data\n                const beats = timeSignature.numerator || 4;\n                const beatValue = timeSignature.denominator || 4;\n                const voice = this.vf.Voice({ num_beats: beats, beat_value: beatValue });\n                voice.setStrict(false); // Allow potentially overflowing measures for now\n                voice.addTickables(notesToDraw);\n                \n                // Create a formatter and format the notes\n                const formatter = this.vf.Formatter();\n                formatter.joinVoices([voice]).format([voice], this.stave.width - 50); // Adjust width as needed\n\n                // Draw the voice\n                voice.draw(this.context, this.stave);\n            } catch(e) {\n                console.error(\"VexFlow formatting/drawing error:\", e)\n                // Clear notes if formatting fails badly\n                this.context.clear(); \n                this.stave.draw();\n            }\n        }\n        // --- End Note Conversion ---\n    }\n\n    // New helper function to convert milliseconds to VexFlow duration string\n    midiDurationToVexflowDuration(durationMillis, bpm, timeSignature) {\n        if (!bpm || bpm <= 0) bpm = 120; // Default BPM if invalid\n        const beatsPerMinute = bpm;\n        const quarterNoteMillis = (60 * 1000) / beatsPerMinute;\n\n        // Calculate duration in terms of quarter notes\n        const durationInQuarterNotes = durationMillis / quarterNoteMillis;\n\n        // Find the closest VexFlow duration (simplistic approach)\n        // Based on powers of 2 relative to a whole note (4 quarter notes)\n        // TODO: This needs refinement for dotted notes, ties, triplets etc.\n        const durations = {\n            'w': 4, // Whole\n            'h': 2, // Half\n            'q': 1, // Quarter\n            '8': 0.5, // 8th\n            '16': 0.25, // 16th\n            '32': 0.125 // 32nd\n        };\n\n        let closestDurationCode = 'q'; // Default to quarter\n        let minDiff = Infinity;\n\n        for (const code in durations) {\n            const diff = Math.abs(durations[code] - durationInQuarterNotes);\n            if (diff < minDiff) {\n                minDiff = diff;\n                closestDurationCode = code;\n            }\n        }\n        // Basic dot check (if duration is ~1.5x a standard duration)\n        const standardDurationValue = durations[closestDurationCode];\n        if (Math.abs(durationInQuarterNotes - standardDurationValue * 1.5) < standardDurationValue * 0.25) { \n            return closestDurationCode + 'd'; // Add 'd' for dotted\n        }\n\n\n        return closestDurationCode;\n    }\n\n    // Helper function to convert MIDI note number to VexFlow key string\n    midiNoteToVexflowKey(noteNumber) {\n        if (!CONST || !CONST.MIDI_NOTE_TO_KEY) {\n            console.error(\"CONST.MIDI_NOTE_TO_KEY is not defined!\");\n            return null;\n        }\n        // Add the + 21 offset back (as determined necessary earlier)\n        const keyData = CONST.MIDI_NOTE_TO_KEY[noteNumber + 21]; \n        if (!keyData) return null;\n\n        const noteName = keyData.slice(0, -1); // e.g., \"C#\", \"D\", \"Eb\"\n        const octave = keyData.slice(-1);\n\n        // Convert to VexFlow format (e.g., \"c#/4\", \"d/4\", \"eb/4\")\n        let vexKey = noteName.toLowerCase() + \"/\" + octave;\n        return vexKey;\n    }\n\n    resize(width) {\n        if(this.vf) {\n            console.log(\"Resizing sheet music container.\");\n            // Re-initialize to handle resize correctly for now\n            this.init(); \n        }\n    }\n} ","import { DomHelper } from \"../ui/DomHelper.js\"\nimport { PianoRender } from \"./PianoRender.js\"\nimport { DebugRender } from \"./DebugRender.js\"\nimport { OverlayRender } from \"./OverlayRender.js\"\nimport { NoteRender } from \"./NoteRender.js\"\nimport { SustainRender } from \"./SustainRenderer.js\"\nimport { MarkerRenderer } from \"./MarkerRenderer.js\"\nimport { RenderDimensions } from \"./RenderDimensions.js\"\nimport { BackgroundRender } from \"./BackgroundRender.js\"\nimport { MeasureLinesRender } from \"./MeasureLinesRender.js\"\nimport { ProgressBarRender } from \"./ProgressBarRender.js\"\nimport { getSetting, setSettingCallback } from \"../settings/Settings.js\"\nimport { isBlack } from \"../Util.js\"\nimport { getTrackColor, isTrackDrawn } from \"../player/Tracks.js\"\nimport { getPlayerState } from \"../player/Player.js\"\nimport { InSongTextRenderer } from \"./InSongTextRenderer.js\"\nimport { SheetMusicRender } from \"./SheetMusicRender.js\"\n\nconst DEBUG = true\n\nconst DEFAULT_LOOK_BACK_TIME = 4\nconst LOOK_AHEAD_TIME = 10\n\nconst PROGRESS_BAR_CANVAS_HEIGHT = 20\n\n/**\n * Class that handles all rendering\n */\nexport class Render {\n\tconstructor() {\n\t\tthis.renderDimensions = new RenderDimensions()\n\t\tthis.renderDimensions.registerResizeCallback(this.onResize.bind(this))\n\n\t\tsetSettingCallback(\"particleBlur\", this.setCtxBlur.bind(this))\n\n\t\tthis.setupCanvases()\n\n\t\tthis.pianoRender = new PianoRender(this.renderDimensions)\n\t\tthis.sheetMusicRender = new SheetMusicRender(\"sheetMusicContainer\")\n\n\t\tthis.overlayRender = new OverlayRender(this.ctx, this.renderDimensions)\n\t\t// this.addStartingOverlayMessage()\n\n\t\tthis.debugRender = new DebugRender(DEBUG, this.ctx, this.renderDimensions)\n\t\tthis.noteRender = new NoteRender(\n\t\t\tthis.ctx,\n\t\t\tthis.ctxForeground,\n\t\t\tthis.renderDimensions,\n\t\t\tthis.pianoRender\n\t\t)\n\t\tthis.sustainRender = new SustainRender(this.ctx, this.renderDimensions)\n\t\tthis.markerRender = new MarkerRenderer(this.ctx, this.renderDimensions)\n\t\tthis.inSongTextRender = new InSongTextRenderer(\n\t\t\tthis.ctx,\n\t\t\tthis.renderDimensions\n\t\t)\n\n\t\tthis.measureLinesRender = new MeasureLinesRender(\n\t\t\tthis.ctx,\n\t\t\tthis.renderDimensions\n\t\t)\n\n\t\tthis.progressBarRender = new ProgressBarRender(\n\t\t\tthis.progressBarCtx,\n\t\t\tthis.renderDimensions\n\t\t)\n\n\t\tthis.backgroundRender = new BackgroundRender(\n\t\t\tthis.ctxBG,\n\t\t\tthis.renderDimensions\n\t\t)\n\n\t\tthis.mouseX = 0\n\t\tthis.mouseY = 0\n\n\t\tthis.playerState = getPlayerState()\n\n\t\tthis.showKeyNamesOnPianoWhite = getSetting(\"showKeyNamesOnPianoWhite\")\n\t\tthis.showKeyNamesOnPianoBlack = getSetting(\"showKeyNamesOnPianoBlack\")\n\n\t\tthis.sheetMusicRender.init()\n\t}\n\n\tsetCtxBlur() {\n\t\tlet blurPx = parseInt(getSetting(\"particleBlur\"))\n\t\tif (blurPx == 0) {\n\t\t\tthis.ctxForeground.filter = \"none\"\n\t\t} else {\n\t\t\tthis.ctxForeground.filter = \"blur(\" + blurPx + \"px)\"\n\t\t}\n\t}\n\tsetPianoInputListeners(onNoteOn, onNoteOff) {\n\t\tthis.pianoRender.setPianoInputListeners(onNoteOn, onNoteOff)\n\t}\n\n\t/**\n\t * Main rendering function\n\t */\n\trender(playerState) {\n\t\tthis.playerState = playerState\n\t\tthis.ctx.clearRect(\n\t\t\t0,\n\t\t\t0,\n\t\t\tthis.renderDimensions.windowWidth,\n\t\t\tthis.renderDimensions.windowHeight\n\t\t)\n\t\tthis.ctxForeground.clearRect(\n\t\t\t0,\n\t\t\t0,\n\t\t\tthis.renderDimensions.windowWidth,\n\t\t\tthis.renderDimensions.windowHeight\n\t\t)\n\n\t\tthis.pianoRender.clearPlayedKeysCanvases()\n\t\tif (\n\t\t\tthis.showKeyNamesOnPianoWhite != getSetting(\"showKeyNamesOnPianoWhite\") ||\n\t\t\tthis.showKeyNamesOnPianoBlack != getSetting(\"showKeyNamesOnPianoBlack\")\n\t\t) {\n\t\t\tthis.showKeyNamesOnPianoWhite = getSetting(\"showKeyNamesOnPianoWhite\")\n\t\t\tthis.showKeyNamesOnPianoBlack = getSetting(\"showKeyNamesOnPianoBlack\")\n\t\t\tthis.pianoRender.resize()\n\t\t}\n\n\t\tif (\n\t\t\tthis.renderDimensions.pianoPositionY !=\n\t\t\tparseInt(getSetting(\"pianoPosition\"))\n\t\t) {\n\t\t\tthis.renderDimensions.pianoPositionY = parseInt(\n\t\t\t\tgetSetting(\"pianoPosition\")\n\t\t\t)\n\t\t\tthis.pianoRender.repositionCanvases()\n\t\t}\n\t\tthis.backgroundRender.renderIfColorsChanged()\n\n\t\tlet renderInfosByTrackMap = this.getRenderInfoByTrackMap(playerState)\n\t\tlet inputActiveRenderInfos = this.getInputActiveRenderInfos(playerState)\n\t\tlet inputPlayedRenderInfos = this.getInputPlayedRenderInfos(playerState)\n\t\tconst time = this.getRenderTime(playerState)\n\t\tconst end = playerState.end\n\t\tif (!playerState.loading && playerState.song) {\n\t\t\tconst measureLines = playerState.song\n\t\t\t\t? playerState.song.getMeasureLines()\n\t\t\t\t: []\n\n\t\t\tthis.progressBarRender.render(time, end, playerState.song.markers)\n\t\t\tthis.measureLinesRender.render(time, measureLines)\n\t\t\tthis.sustainRender.render(\n\t\t\t\ttime,\n\t\t\t\tplayerState.song.sustainsBySecond,\n\t\t\t\tplayerState.song.sustainPeriods\n\t\t\t)\n\n\t\t\tthis.noteRender.render(\n\t\t\t\ttime,\n\t\t\t\trenderInfosByTrackMap,\n\t\t\t\tinputActiveRenderInfos,\n\t\t\t\tinputPlayedRenderInfos\n\t\t\t)\n\t\t\tthis.markerRender.render(time, playerState.song.markers)\n\t\t\tthis.inSongTextRender.render(time, playerState.song.markers)\n\n\t\t\tconst sheetMusicTime = Math.max(0, time);\n\t\t\t// Get current BPM and time signature\n\t\t\tconst bpm = playerState.song.getBPM(sheetMusicTime * 1000); // getBPM expects milliseconds\n\t\t\tconst timeSignature = playerState.song.timeSignature || { numerator: 4, denominator: 4 }; // Default if undefined\n\t\t\tthis.sheetMusicRender.render(playerState.song, sheetMusicTime, bpm, timeSignature);\n\t\t}\n\n\t\tthis.overlayRender.render()\n\n\t\tthis.debugRender.render(\n\t\t\trenderInfosByTrackMap,\n\t\t\tthis.mouseX,\n\t\t\tthis.mouseY,\n\t\t\tthis.renderDimensions.menuHeight\n\t\t)\n\n\t\tif (getSetting(\"showBPM\")) {\n\t\t\tthis.drawBPM(playerState)\n\t\t}\n\t}\n\t/**\n\t * Returns current time adjusted for the render-offset from the settings\n\t * @param {Object} playerState\n\t */\n\tgetRenderTime(playerState) {\n\t\treturn playerState.time + getSetting(\"renderOffset\") / 1000\n\t}\n\tgetRenderInfoByTrackMap(playerState) {\n\t\tlet renderInfoByTrackMap = {}\n\t\tif (playerState)\n\t\t\tif (playerState.song) {\n\t\t\t\tplayerState.song.activeTracks.forEach((track, trackIndex) => {\n\t\t\t\t\tif (isTrackDrawn(trackIndex)) {\n\t\t\t\t\t\trenderInfoByTrackMap[trackIndex] = { black: [], white: [] }\n\n\t\t\t\t\t\tlet time = this.getRenderTime(playerState)\n\t\t\t\t\t\tlet firstSecondShown = Math.floor(\n\t\t\t\t\t\t\ttime - this.renderDimensions.getSecondsDisplayedAfter() - 4\n\t\t\t\t\t\t)\n\t\t\t\t\t\tlet lastSecondShown = Math.ceil(\n\t\t\t\t\t\t\ttime + this.renderDimensions.getSecondsDisplayedBefore()\n\t\t\t\t\t\t)\n\n\t\t\t\t\t\tfor (let i = firstSecondShown; i < lastSecondShown; i++) {\n\t\t\t\t\t\t\tif (track.notesBySeconds[i]) {\n\t\t\t\t\t\t\t\ttrack.notesBySeconds[i]\n\t\t\t\t\t\t\t\t\t// .filter(note => note.instrument != \"percussion\")\n\t\t\t\t\t\t\t\t\t.map(note => this.getNoteRenderInfo(note, time))\n\t\t\t\t\t\t\t\t\t.forEach(renderInfo =>\n\t\t\t\t\t\t\t\t\t\trenderInfo.isBlack\n\t\t\t\t\t\t\t\t\t\t\t? renderInfoByTrackMap[trackIndex].black.push(renderInfo)\n\t\t\t\t\t\t\t\t\t\t\t: renderInfoByTrackMap[trackIndex].white.push(renderInfo)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\treturn renderInfoByTrackMap\n\t}\n\tgetInputActiveRenderInfos(playerState) {\n\t\tlet inputRenderInfos = []\n\t\tfor (let key in playerState.inputActiveNotes) {\n\t\t\tlet activeInputNote = playerState.inputActiveNotes[key]\n\t\t\tinputRenderInfos.push(\n\t\t\t\tthis.getNoteRenderInfo(\n\t\t\t\t\t{\n\t\t\t\t\t\ttimestamp: activeInputNote.timestamp,\n\t\t\t\t\t\tnoteNumber: activeInputNote.noteNumber,\n\t\t\t\t\t\toffTime: playerState.ctxTime * 1000 + 0,\n\t\t\t\t\t\tduration: playerState.ctxTime * 1000 - activeInputNote.timestamp,\n\t\t\t\t\t\tvelocity: 127,\n\t\t\t\t\t\tfillStyle: getSetting(\"inputNoteColor\")\n\t\t\t\t\t},\n\t\t\t\t\tplayerState.ctxTime\n\t\t\t\t)\n\t\t\t)\n\t\t}\n\t\treturn inputRenderInfos\n\t}\n\tgetInputPlayedRenderInfos(playerState) {\n\t\tlet inputRenderInfos = []\n\t\tfor (let key in playerState.inputPlayedNotes) {\n\t\t\tlet playedInputNote = playerState.inputPlayedNotes[key]\n\t\t\tinputRenderInfos.push(\n\t\t\t\tthis.getNoteRenderInfo(\n\t\t\t\t\t{\n\t\t\t\t\t\ttimestamp: playedInputNote.timestamp,\n\t\t\t\t\t\tnoteNumber: playedInputNote.noteNumber,\n\t\t\t\t\t\toffTime: playedInputNote.offTime,\n\t\t\t\t\t\tduration: playerState.ctxTime * 1000 - playedInputNote.timestamp,\n\t\t\t\t\t\tvelocity: 127,\n\t\t\t\t\t\tfillStyle: getSetting(\"inputNoteColor\")\n\t\t\t\t\t},\n\t\t\t\t\tplayerState.ctxTime\n\t\t\t\t)\n\t\t\t)\n\t\t}\n\t\treturn inputRenderInfos\n\t}\n\tgetNoteRenderInfo(note, time) {\n\t\ttime *= 1000\n\t\tlet noteDims = this.renderDimensions.getNoteDimensions(\n\t\t\tnote.noteNumber,\n\t\t\ttime,\n\t\t\tnote.timestamp,\n\t\t\tnote.offTime,\n\t\t\tnote.sustainOffTime\n\t\t)\n\t\tlet isOn = note.timestamp < time && note.offTime > time ? 1 : 0\n\t\tlet elapsedTime = Math.max(0, time - note.timestamp)\n\t\tlet noteDoneRatio = elapsedTime / note.duration\n\n\t\tlet isKeyBlack = isBlack(note.noteNumber)\n\t\t//TODO Clean up. Right now it returns more info than necessary to use in DebugRender..\n\t\treturn {\n\t\t\tnoteNumber: note.noteNumber,\n\t\t\ttimestamp: note.timestamp,\n\t\t\toffTime: note.offTime,\n\t\t\tduration: note.duration,\n\t\t\tinstrument: note.instrument,\n\t\t\ttrack: note.track,\n\t\t\tchannel: note.channel,\n\t\t\tfillStyle: note.fillStyle\n\t\t\t\t? note.fillStyle\n\t\t\t\t: isKeyBlack\n\t\t\t\t? getTrackColor(note.track).black\n\t\t\t\t: getTrackColor(note.track).white,\n\t\t\tcurrentTime: time,\n\t\t\tisBlack: isKeyBlack,\n\t\t\tnoteDims: noteDims,\n\t\t\tisOn: isOn,\n\t\t\tnoteDoneRatio: noteDoneRatio,\n\t\t\trad: noteDims.rad,\n\t\t\tx: noteDims.x + 1,\n\t\t\ty: noteDims.y,\n\t\t\tw: noteDims.w - 2,\n\t\t\th: noteDims.h,\n\t\t\tsustainH: noteDims.sustainH,\n\t\t\tsustainY: noteDims.sustainY,\n\t\t\tvelocity: note.velocity,\n\t\t\tnoteId: note.id\n\t\t}\n\t}\n\n\tdrawBPM(playerState) {\n\t\tthis.ctx.font = \"20px Arial black\"\n\t\tthis.ctx.fillStyle = \"rgba(255,255,255,0.8)\"\n\t\tthis.ctx.textBaseline = \"top\"\n\t\tthis.ctx.fillText(\n\t\t\tMath.round(playerState.bpm) + \" BPM\",\n\t\t\t20,\n\t\t\tthis.renderDimensions.menuHeight + PROGRESS_BAR_CANVAS_HEIGHT + 12\n\t\t)\n\t}\n\n\taddStartingOverlayMessage() {\n\t\tthis.overlayRender.addOverlay(\"MIDiano\", 150)\n\t\tthis.overlayRender.addOverlay(\"A Javascript MIDI-Player\", 150)\n\t\tthis.overlayRender.addOverlay(\n\t\t\t\"Example song by Bernd Krueger from piano-midi.de\",\n\t\t\t150\n\t\t)\n\t}\n\n\t/**\n\t *\n\t */\n\tsetupCanvases() {\n\t\tDomHelper.setCanvasSize(\n\t\t\tthis.getBgCanvas(),\n\t\t\tthis.renderDimensions.windowWidth,\n\t\t\tthis.renderDimensions.windowHeight\n\t\t)\n\n\t\tDomHelper.setCanvasSize(\n\t\t\tthis.getMainCanvas(),\n\t\t\tthis.renderDimensions.windowWidth,\n\t\t\tthis.renderDimensions.windowHeight\n\t\t)\n\n\t\tDomHelper.setCanvasSize(\n\t\t\tthis.getProgressBarCanvas(),\n\t\t\tthis.renderDimensions.windowWidth,\n\t\t\t20\n\t\t)\n\n\t\tDomHelper.setCanvasSize(\n\t\t\tthis.getForegroundCanvas(),\n\t\t\tthis.renderDimensions.windowWidth,\n\t\t\tthis.renderDimensions.windowHeight\n\t\t)\n\t\tthis.setCtxBlur()\n\t}\n\tgetBgCanvas() {\n\t\tif (!this.cnvBG) {\n\t\t\tthis.cnvBG = DomHelper.createCanvas(\n\t\t\t\tthis.renderDimensions.windowWidth,\n\t\t\t\tthis.renderDimensions.windowHeight,\n\t\t\t\t{\n\t\t\t\t\tbackgroundColor: \"black\",\n\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\ttop: \"0px\",\n\t\t\t\t\tleft: \"0px\"\n\t\t\t\t}\n\t\t\t)\n\t\t\tdocument.body.appendChild(this.cnvBG)\n\t\t\tthis.ctxBG = this.cnvBG.getContext(\"2d\")\n\t\t}\n\t\treturn this.cnvBG\n\t}\n\tgetMainCanvas() {\n\t\tif (!this.cnv) {\n\t\t\tthis.cnv = DomHelper.createCanvas(\n\t\t\t\tthis.renderDimensions.windowWidth,\n\t\t\t\tthis.renderDimensions.windowHeight,\n\t\t\t\t{\n\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\ttop: \"0px\",\n\t\t\t\t\tleft: \"0px\"\n\t\t\t\t}\n\t\t\t)\n\t\t\tdocument.body.appendChild(this.cnv)\n\t\t\tthis.ctx = this.cnv.getContext(\"2d\")\n\t\t}\n\t\treturn this.cnv\n\t}\n\tgetForegroundCanvas() {\n\t\tif (!this.cnvForeground) {\n\t\t\tthis.cnvForeground = DomHelper.createCanvas(\n\t\t\t\tthis.renderDimensions.windowWidth,\n\t\t\t\tthis.renderDimensions.windowHeight,\n\t\t\t\t{\n\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\ttop: \"0px\",\n\t\t\t\t\tleft: \"0px\"\n\t\t\t\t}\n\t\t\t)\n\t\t\tthis.cnvForeground.style.pointerEvents = \"none\"\n\t\t\tthis.cnvForeground.style.zIndex = \"101\"\n\t\t\tdocument.body.appendChild(this.cnvForeground)\n\t\t\tthis.ctxForeground = this.cnvForeground.getContext(\"2d\")\n\t\t}\n\t\treturn this.cnvForeground\n\t}\n\n\tgetProgressBarCanvas() {\n\t\tif (!this.progressBarCanvas) {\n\t\t\tthis.progressBarCanvas = DomHelper.createCanvas(\n\t\t\t\tthis.renderDimensions.windowWidth,\n\t\t\t\tPROGRESS_BAR_CANVAS_HEIGHT,\n\t\t\t\t{}\n\t\t\t)\n\t\t\tthis.progressBarCanvas.id = \"progressBarCanvas\"\n\t\t\tdocument.body.appendChild(this.progressBarCanvas)\n\t\t\tthis.progressBarCtx = this.progressBarCanvas.getContext(\"2d\")\n\t\t}\n\t\treturn this.progressBarCanvas\n\t}\n\n\tisNoteDrawn(note, tracks) {\n\t\treturn !tracks[note.track] || !tracks[note.track].draw\n\t}\n\n\tisOnMainCanvas(position) {\n\t\treturn (\n\t\t\t(position.x > this.renderDimensions.menuHeight &&\n\t\t\t\tposition.y < this.renderDimensions.getAbsolutePianoPosition()) ||\n\t\t\tposition.y >\n\t\t\t\tthis.renderDimensions.getAbsolutePianoPosition() +\n\t\t\t\t\tthis.renderDimensions.whiteKeyHeight\n\t\t)\n\t}\n\tsetMouseCoords(x, y) {\n\t\tthis.mouseX = x\n\t\tthis.mouseY = y\n\t}\n\tgetTimeFromHeight(height) {\n\t\treturn (\n\t\t\t(height * this.renderDimensions.getNoteToHeightConst()) /\n\t\t\t(this.renderDimensions.windowHeight -\n\t\t\t\tthis.renderDimensions.whiteKeyHeight) /\n\t\t\t1000\n\t\t)\n\t}\n\tonMenuHeightChanged(menuHeight) {\n\t\tthis.renderDimensions.menuHeight = menuHeight\n\t\tthis.pianoRender.repositionCanvases()\n\t\tthis.getProgressBarCanvas().style.top = menuHeight + \"px\"\n\t\tthis.noteRender.setMenuHeight(menuHeight)\n\t}\n\n\tonResize() {\n\t\tthis.setupCanvases()\n\t\tthis.pianoRender.resize()\n\t\tthis.sheetMusicRender.resize(this.renderDimensions.windowWidth)\n\t}\n}\n","import { getPlayer } from \"../player/Player.js\"\nimport { DomHelper } from \"./DomHelper.js\"\n\nexport class ZoomUI {\n\tconstructor() {}\n\tgetContentDiv(render) {\n\t\tlet cont = DomHelper.createDivWithClass(\"zoomGroup btn-group\")\n\t\t//zoomIn\n\t\tcont.appendChild(\n\t\t\tDomHelper.createGlyphiconButton(\"zoomInButton\", \"zoom-in\", () =>\n\t\t\t\trender.renderDimensions.zoomIn()\n\t\t\t)\n\t\t)\n\n\t\t//zoomOut\n\t\tcont.appendChild(\n\t\t\tDomHelper.createGlyphiconButton(\"zoomOutButton\", \"zoom-out\", () =>\n\t\t\t\trender.renderDimensions.zoomOut()\n\t\t\t)\n\t\t)\n\t\t//moveLeft\n\t\tcont.appendChild(\n\t\t\tDomHelper.createGlyphiconButton(\"moveViewLeftButton\", \"arrow-left\", () =>\n\t\t\t\trender.renderDimensions.moveViewLeft()\n\t\t\t)\n\t\t)\n\n\t\t//moveRight\n\t\tcont.appendChild(\n\t\t\tDomHelper.createGlyphiconButton(\"moveViewLeftButton\", \"arrow-right\", () =>\n\t\t\t\trender.renderDimensions.moveViewRight()\n\t\t\t)\n\t\t)\n\t\tconst fitSongButton = DomHelper.createTextButton(\n\t\t\t\"fitSongButton\",\n\t\t\t\"Fit Song\",\n\t\t\t() => render.renderDimensions.fitSong(getPlayer().song.getNoteRange())\n\t\t)\n\t\tfitSongButton.style.float = \"none\"\n\t\t//FitSong\n\t\tcont.appendChild(fitSongButton)\n\t\t//ShowAll\n\t\tcont.appendChild(\n\t\t\tDomHelper.createTextButton(\"showAllButton\", \"Show All\", () =>\n\t\t\t\trender.renderDimensions.showAll()\n\t\t\t)\n\t\t)\n\t\treturn cont\n\t}\n}\n","export class ElementHighlight {\n\tconstructor(element, time) {\n\t\ttime = time || 1500\n\n\t\telement.classList.add(\"highlighted\")\n\t\twindow.setTimeout(() => {\n\t\t\telement.classList.remove(\"highlighted\")\n\t\t}, time)\n\t}\n}\n","import { DomHelper } from \"./DomHelper.js\"\nimport {\n\tgetTrack,\n\tgetTrackColor,\n\tgetTracks,\n\tsetTrackColor\n} from \"../player/Tracks.js\"\nimport { getPlayer } from \"../player/Player.js\"\nimport { SettingUI } from \"./SettingUI.js\"\nimport { ElementHighlight } from \"./ElementHighlight.js\"\nimport { Notification } from \"./Notification.js\"\nimport { getMidiHandler } from \"../MidiInputHandler.js\"\n\n/**\n *  Handles creation of the Track-Divs that give control over volume, diplay, color...\n *\n *  Directly changes values in the track objects\n */\n\nexport const createTrackDivs = () => {\n\treturn Object.keys(getTracks()).map(trackId => createTrackDiv(trackId))\n}\n\nexport const createTrackDiv = trackId => {\n\tconst trackObj = getTrack(trackId)\n\tlet volumeSlider,\n\t\tmuteButton,\n\t\thideButton,\n\t\ttrackName,\n\t\tinstrumentName,\n\t\trequireToPlayAlongButton,\n\t\tclickableTitleDiv\n\n\tlet trackDiv = DomHelper.createDivWithIdAndClass(\n\t\t\"trackDiv\" + trackId,\n\t\t\"innerMenuContDiv settingGroupContainer\",\n\t\t{\n\t\t\tborderLeft: \"5px solid \" + getTrackColor(trackId).white\n\t\t}\n\t)\n\n\tclickableTitleDiv = DomHelper.createDivWithClass(\"clickableTitle\")\n\tlet collapsed = instrumentName == \"percussion\" ? true : false\n\n\tlet glyph = DomHelper.getGlyphicon(collapsed ? \"plus\" : \"minus\")\n\tglyph.classList.add(\"collapserGlyphSpan\")\n\tclickableTitleDiv.appendChild(glyph)\n\n\tif (collapsed) {\n\t\ttrackDiv.classList.add(\"collapsed\")\n\t}\n\tclickableTitleDiv.onclick = () => {\n\t\tif (collapsed) {\n\t\t\tcollapsed = false\n\t\t\ttrackDiv.classList.remove(\"collapsed\")\n\t\t\tDomHelper.replaceGlyph(clickableTitleDiv, \"plus\", \"minus\")\n\t\t} else {\n\t\t\tcollapsed = true\n\t\t\ttrackDiv.classList.add(\"collapsed\")\n\t\t\tDomHelper.replaceGlyph(clickableTitleDiv, \"minus\", \"plus\")\n\t\t}\n\t}\n\n\t//Name\n\ttrackName = DomHelper.createDivWithIdAndClass(\n\t\t\"trackName\" + trackId,\n\t\t\"trackName\"\n\t)\n\ttrackName.innerHTML = trackObj.name || \"Track \" + trackId\n\n\t//Instrument\n\tlet currentInstrument = getPlayer().getCurrentTrackInstrument(trackObj.index)\n\tinstrumentName = DomHelper.createDivWithIdAndClass(\n\t\t\"instrumentName\" + trackObj.index,\n\t\t\"instrumentName\"\n\t)\n\tinstrumentName.innerHTML = currentInstrument\n\n\twindow.setInterval(\n\t\t() =>\n\t\t\t(instrumentName.innerHTML = getPlayer().getCurrentTrackInstrument(\n\t\t\t\ttrackObj.index\n\t\t\t)),\n\t\t2000\n\t)\n\n\tlet btnGrp = DomHelper.createButtonGroup(false)\n\n\t//Track Volume\n\tvolumeSlider = SettingUI.createSettingDiv({\n\t\ttype: \"slider\",\n\t\tlabel: \"Volume \",\n\t\tvalue: trackObj.volume,\n\t\tmin: 0,\n\t\tmax: 200,\n\t\tstep: 1,\n\t\tonChange: value => {\n\t\t\tif (trackObj.volume == 0 && value != 0) {\n\t\t\t\tmuteButton.querySelector(\"input\").checked = false\n\t\t\t} else if (trackObj.volume != 0 && value == 0) {\n\t\t\t\tmuteButton.querySelector(\"input\").checked = true\n\t\t\t}\n\t\t\ttrackObj.volume = parseInt(value)\n\t\t}\n\t})\n\t// DomHelper.createSliderWithLabel(\n\t// \t\"volume\" + trackId,\n\t// \t\"Volume\",\n\t// \ttrackObj.volume,\n\t// \t0,\n\t// \t200,\n\t// \t1,\n\t// \tev => {\n\t// \t\ttrackObj.volume = parseInt(ev.target.value)\n\t// \t}\n\t// )\n\n\t//Hide Track\n\thideButton = SettingUI.createSettingDiv({\n\t\ttype: \"checkbox\",\n\t\tlabel: \"Show track\",\n\t\tvalue: trackObj.draw,\n\t\tonChange: () => {\n\t\t\tif (trackObj.draw) {\n\t\t\t\ttrackObj.draw = false\n\t\t\t} else {\n\t\t\t\ttrackObj.draw = true\n\t\t\t}\n\t\t}\n\t})\n\n\t//Mute Track\n\tmuteButton = SettingUI.createSettingDiv({\n\t\ttype: \"checkbox\",\n\t\tlabel: \"Mute track\",\n\t\tvalue: trackObj.volume == 0,\n\t\tonChange: () => {\n\t\t\tlet volumeSliderInput = volumeSlider.querySelector(\"input\")\n\t\t\tlet volumeSliderLabel = volumeSlider.querySelector(\".sliderVal\")\n\t\t\tif (trackObj.volume == 0) {\n\t\t\t\tlet volume = trackObj.volumeAtMute || 100\n\t\t\t\ttrackObj.volume = volume\n\t\t\t\tvolumeSliderInput.value = volume\n\t\t\t\ttrackObj.volumeAtMute = 0\n\t\t\t\tvolumeSliderLabel.innerHTML = volume\n\t\t\t} else {\n\t\t\t\ttrackObj.volumeAtMute = trackObj.volume\n\t\t\t\ttrackObj.volume = 0\n\t\t\t\tvolumeSliderInput.value = 0\n\t\t\t\tvolumeSliderLabel.innerHTML = 0\n\t\t\t}\n\t\t}\n\t})\n\n\t//Require Track to play along\n\trequireToPlayAlongButton = SettingUI.createSettingDiv({\n\t\ttype: \"checkbox\",\n\t\tlabel: \"Require playalong\",\n\t\tvalue: trackObj.requiredToPlay,\n\t\tisChecked: () => trackObj.requiredToPlay,\n\t\tonChange: () => {\n\t\t\tconsole.log(trackObj.requiredToPlay)\n\t\t\tif (!trackObj.requiredToPlay) {\n\t\t\t\tif (!getMidiHandler().isInputActive()) {\n\t\t\t\t\tNotification.create(\n\t\t\t\t\t\t\"You have to choose a Midi Input Device to play along.\",\n\t\t\t\t\t\t5000\n\t\t\t\t\t)\n\t\t\t\t\tnew ElementHighlight(document.querySelector(\"#midiInput\"))\n\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\ttrackObj.requiredToPlay = true\n\t\t\t} else {\n\t\t\t\ttrackObj.requiredToPlay = false\n\t\t\t}\n\t\t}\n\t})\n\n\tlet colorPickerWhite = SettingUI.createColorSettingDiv({\n\t\ttype: \"color\",\n\t\tlabel: \"White note color\",\n\t\tvalue: getTrackColor(trackId).white,\n\t\tonChange: colorString => {\n\t\t\ttrackDiv.style.borderLeft = \"5px solid \" + colorString\n\t\t\tsetTrackColor(trackId, \"white\", colorString)\n\t\t}\n\t})\n\tlet colorPickerBlack = SettingUI.createColorSettingDiv({\n\t\ttype: \"color\",\n\t\tlabel: \"Black note color\",\n\t\tvalue: getTrackColor(trackId).black,\n\t\tonChange: colorString => setTrackColor(trackId, \"black\", colorString)\n\t})\n\n\tDomHelper.appendChildren(btnGrp, [\n\t\thideButton,\n\t\tmuteButton,\n\t\tDomHelper.getDivider(),\n\t\trequireToPlayAlongButton,\n\t\tDomHelper.getDivider(),\n\t\tcolorPickerWhite,\n\t\tcolorPickerBlack\n\t])\n\n\tDomHelper.appendChildren(clickableTitleDiv, [trackName, instrumentName])\n\tDomHelper.appendChildren(trackDiv, [\n\t\tclickableTitleDiv,\n\t\tDomHelper.getDivider(),\n\t\tvolumeSlider,\n\t\tbtnGrp\n\t])\n\n\treturn trackDiv\n}\n","import { getLoader } from \"../ui/Loader.js\"\n\nexport class FileLoader {\n\tstatic async loadSongFromURL(url, callback) {\n\t\tconst loader = getLoader(); // Get loader instance\n\t\tloader.startLoad(); // Show loader\n\t\tloader.setLoadMessage(`Loading Song: ${url.split('/').pop()}`); // Set message (using filename)\n\n\t\ttry {\n\t\t\tconst response = await fetch(url, {\n\t\t\t\tmethod: \"GET\"\n\t\t\t});\n\n\t\t\tif (!response.ok) { // Check for HTTP errors\n\t\t\t\tthrow new Error(`HTTP error! status: ${response.status}`);\n\t\t\t}\n\n\t\t\tconst blob = await response.blob();\n\t\t\tconst reader = new FileReader();\n\n\t\t\treader.onload = function (theFile) {\n\t\t\t\tcallback(reader.result, url, () => {}); // Call the original callback\n\t\t\t\tloader.stopLoad(); // Hide loader after callback is done\n\t\t\t};\n\n\t\t\treader.onerror = function (error) { // Handle FileReader errors\n\t\t\t\tconsole.error(\"FileReader error:\", error);\n\t\t\t\tloader.setLoadMessage(\"Error reading file.\");\n\t\t\t\t// Optionally keep loader visible or stop with error message\n\t\t\t\tsetTimeout(() => loader.stopLoad(), 2000); // Hide after delay\n\t\t\t};\n\n\t\t\treader.readAsDataURL(blob);\n\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Error loading song from URL:\", error);\n\t\t\tloader.setLoadMessage(\"Error loading song.\");\n\t\t\t// Optionally keep loader visible or stop with error message\n\t\t\tsetTimeout(() => loader.stopLoad(), 2000); // Hide after delay\n\t\t}\n\t}\n}\n","import { FileLoader } from \"../player/FileLoader.js\"\nimport { getCurrentSong, getPlayer } from \"../player/Player.js\"\nimport { replaceAllString } from \"../Util.js\"\nimport { DomHelper } from \"./DomHelper.js\"\nimport { getLoader } from \"./Loader.js\"\n\nexport class SongUI {\n\tconstructor() {\n\t\tthis.songDivs = {}\n\t\tthis.wrapper = DomHelper.createDiv()\n\t}\n\tgetDivContent() {\n\t\treturn this.wrapper\n\t}\n\tsetExampleSongs(jsonSongs) {\n\t\tjsonSongs.forEach(exampleSongJson => {\n\t\t\tlet songDivObj = createUnloadedSongDiv(exampleSongJson)\n\t\t\tthis.songDivs[exampleSongJson.fileName] = songDivObj\n\t\t\tthis.wrapper.appendChild(songDivObj.wrapper)\n\t\t})\n\t}\n\tnewSongCallback(song) {\n\t\tif (!this.songDivs.hasOwnProperty(song.fileName)) {\n\t\t\tlet songDivObj = createLoadedSongDiv(song)\n\t\t\tthis.songDivs[song.fileName] = songDivObj\n\t\t\tthis.wrapper.appendChild(songDivObj.wrapper)\n\t\t} else {\n\t\t\tthis.replaceNowLoadedSongDiv(song)\n\t\t}\n\t\tDomHelper.removeClassFromElementsSelector(\".songButton\", \"selected\")\n\t\tDomHelper.addClassToElement(\"selected\", song.div)\n\t}\n\treplaceNowLoadedSongDiv(song) {\n\t\tsong.div = this.songDivs[song.fileName].button\n\t\tsong.div.onclick = () => loadedButtonClickCallback(song)\n\t}\n}\nfunction createUnloadedSongDiv(songJson) {\n\tlet wrapper = DomHelper.createDivWithIdAndClass(\n\t\t\"songWrap\" + replaceAllString(songJson.fileName, \" \", \"_\"),\n\t\t\"innerMenuContDiv\"\n\t)\n\tlet button = createUnloadedSongButton(songJson)\n\n\twrapper.appendChild(button)\n\n\treturn {\n\t\twrapper: wrapper,\n\t\tname: songJson.name,\n\t\tbutton: button\n\t}\n}\n\nfunction createLoadedSongDiv(song) {\n\tlet wrapper = DomHelper.createDivWithIdAndClass(\n\t\t\"songWrap\" + replaceAllString(song.fileName, \" \", \"_\"),\n\t\t\"innerMenuContDiv\"\n\t)\n\tlet button = createLoadedSongButton(song)\n\tsong.div = button\n\twrapper.appendChild(song.div)\n\n\treturn {\n\t\twrapper: wrapper,\n\t\tname: song.name,\n\t\tbutton: button\n\t}\n}\nfunction createUnloadedSongButton(songJson) {\n\tlet but = DomHelper.createTextButton(\n\t\t\"song\" + replaceAllString(songJson.fileName, \" \", \"_\"),\n\t\tsongJson.name,\n\t\t() => {\n\t\t\tgetLoader().setLoadMessage(\"Downloading Song\")\n\t\t\tFileLoader.loadSongFromURL(songJson.url, respone => {\n\t\t\t\tgetPlayer().loadSong(respone, songJson.fileName, songJson.name)\n\t\t\t})\n\t\t}\n\t)\n\tbut.classList.add(\"songButton\")\n\treturn but\n}\nfunction createLoadedSongButton(song) {\n\tlet but = DomHelper.createTextButton(\n\t\t\"song\" + replaceAllString(song.fileName, \" \", \"_\"),\n\t\tsong.name,\n\t\t() => loadedButtonClickCallback(song)\n\t)\n\tbut.classList.add(\"songButton\")\n\treturn but\n}\n\nfunction loadedButtonClickCallback(song) {\n\tlet currentSong = getCurrentSong()\n\tif (currentSong != song) {\n\t\tDomHelper.removeClassFromElementsSelector(\".songButton\", \"selected\")\n\t\tDomHelper.addClassToElement(\"selected\", song.div)\n\t\tgetPlayer().setSong(song)\n\t}\n}\n","import { DomHelper } from \"./DomHelper.js\"\nimport { getSettingsDiv } from \"../settings/Settings.js\"\nimport { ZoomUI } from \"./ZoomUI.js\"\nimport { createTrackDivs } from \"./TrackUI.js\"\nimport { getCurrentSong, getPlayer } from \"../player/Player.js\"\nimport { SongUI } from \"./SongUI.js\"\nimport { getMidiHandler } from \"../MidiInputHandler.js\"\n/**\n * Contains all initiation, appending and manipulation of DOM-elements.\n * Callback-bindings for some events are created in  the constructor\n */\nexport class UI {\n\tconstructor(render, isMobile) {\n\t\tthis.isMobile = window.matchMedia(\n\t\t\t\"only screen and (max-width: 1600px)\"\n\t\t).matches\n\n\t\tthis.songUI = new SongUI()\n\t\t//add callbacks to the player\n\t\tgetPlayer().newSongCallbacks.push(this.newSongCallback.bind(this))\n\n\t\tdocument.body.addEventListener(\"mousemove\", this.mouseMoved.bind(this))\n\n\t\tthis.createControlMenu()\n\n\t\tthis.menuHeight = 200\n\n\t\tdocument\n\t\t\t.querySelectorAll(\".innerMenuDiv\")\n\t\t\t.forEach(\n\t\t\t\tel =>\n\t\t\t\t\t(el.style.height =\n\t\t\t\t\t\t\"calc(100% - \" + (this.getNavBar().clientHeight + 24) + \"px)\")\n\t\t\t)\n\n\t\tdocument.body.appendChild(new ZoomUI().getContentDiv(render))\n\t}\n\n\tsetExampleSongs(exampleSongsJson) {\n\t\tthis.songUI.setExampleSongs(exampleSongsJson)\n\t}\n\n\tfireInitialListeners() {\n\t\tthis.onMenuHeightChange(this.getNavBar().clientHeight)\n\t\twindow.setTimeout(\n\t\t\t() => this.onMenuHeightChange(this.getNavBar().clientHeight),\n\t\t\t500\n\t\t)\n\t}\n\n\tmouseMoved() {\n\t\tthis.getMinimizeButton().style.opacity = 1\n\t\tif (!this.fadingOutMinimizeButton) {\n\t\t\tthis.fadingOutMinimizeButton = true\n\t\t\twindow.setTimeout(() => {\n\t\t\t\tthis.getMinimizeButton().style.opacity = 0\n\t\t\t\tthis.fadingOutMinimizeButton = false\n\t\t\t}, 1000)\n\t\t}\n\t}\n\tcreateControlMenu() {\n\t\tlet topGroupsContainer = DomHelper.createDivWithClass(\"container\")\n\n\t\tlet fileGrp = this.getFileButtonGroup()\n\t\tlet songSpeedGrp = this.getSpeedButtonGroup()\n\t\tlet songControlGrp = this.getSongControlButtonGroup()\n\t\tlet volumeGrp = this.getVolumneButtonGroup()\n\t\tlet settingsGrpRight = this.getSettingsButtonGroup()\n\t\tlet trackGrp = this.getTracksButtonGroup()\n\n\t\tDomHelper.addClassToElements(\"align-middle\", [\n\t\t\tfileGrp,\n\t\t\tsongSpeedGrp,\n\t\t\tsongControlGrp,\n\t\t\tvolumeGrp,\n\t\t\ttrackGrp\n\t\t])\n\n\t\tlet leftTop = DomHelper.createElementWithClass(\"topContainer\")\n\t\tlet middleTop = DomHelper.createElementWithClass(\"topContainer\")\n\t\tlet rightTop = DomHelper.createElementWithClass(\"topContainer\")\n\n\t\tDomHelper.appendChildren(leftTop, [fileGrp, trackGrp])\n\t\tDomHelper.appendChildren(middleTop, [songControlGrp])\n\t\tDomHelper.appendChildren(rightTop, [\n\t\t\tsongSpeedGrp,\n\t\t\tvolumeGrp,\n\t\t\tsettingsGrpRight\n\t\t])\n\n\t\tDomHelper.appendChildren(topGroupsContainer, [leftTop, middleTop, rightTop])\n\t\tthis.getNavBar().appendChild(topGroupsContainer)\n\n\t\tlet minimizeButton = this.getMinimizeButton()\n\n\t\tlet innerMenuDivsContainer = DomHelper.createElementWithClass(\n\t\t\t\"innerMenuDivsContainer\"\n\t\t)\n\t\tDomHelper.appendChildren(innerMenuDivsContainer, [\n\t\t\tthis.getTrackMenuDiv(),\n\t\t\tthis.getLoadedSongsDiv(),\n\t\t\tthis.getSettingsDiv()\n\t\t])\n\n\t\tdocument.body.appendChild(minimizeButton)\n\t\tdocument.body.appendChild(this.getNavBar())\n\t\tdocument.body.appendChild(innerMenuDivsContainer)\n\n\t\tthis.createFileDragArea()\n\t}\n\n\tgetMinimizeButton() {\n\t\tif (!this.minimizeButton) {\n\t\t\tthis.minimizeButton = DomHelper.createGlyphiconButton(\n\t\t\t\t\"minimizeMenu\",\n\t\t\t\t\"chevron-up\",\n\t\t\t\t() => {\n\t\t\t\t\tif (!this.navMinimized) {\n\t\t\t\t\t\tthis.getNavBar().style.marginTop =\n\t\t\t\t\t\t\t\"-\" + this.getNavBar().clientHeight + \"px\"\n\t\t\t\t\t\tthis.navMinimized = true\n\t\t\t\t\t\tthis.minimizeButton\n\t\t\t\t\t\t\t.querySelector(\"span\")\n\t\t\t\t\t\t\t.classList.remove(\"glyphicon-chevron-up\")\n\t\t\t\t\t\tthis.minimizeButton\n\t\t\t\t\t\t\t.querySelector(\"span\")\n\t\t\t\t\t\t\t.classList.add(\"glyphicon-chevron-down\")\n\t\t\t\t\t\tthis.onMenuHeightChange(0)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.getNavBar().style.marginTop = \"0px\"\n\t\t\t\t\t\tthis.navMinimized = false\n\n\t\t\t\t\t\tthis.minimizeButton\n\t\t\t\t\t\t\t.querySelector(\"span\")\n\t\t\t\t\t\t\t.classList.add(\"glyphicon-chevron-up\")\n\t\t\t\t\t\tthis.minimizeButton\n\t\t\t\t\t\t\t.querySelector(\"span\")\n\t\t\t\t\t\t\t.classList.remove(\"glyphicon-chevron-down\")\n\t\t\t\t\t\tthis.onMenuHeightChange(this.getNavBar().clientHeight)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t)\n\t\t\tthis.minimizeButton.style.padding = \"0px\"\n\t\t\tthis.minimizeButton.style.fontSize = \"0.5em\"\n\t\t}\n\t\tlet navbarHeight = this.navMinimized ? 0 : this.getNavBar().clientHeight\n\t\tthis.minimizeButton.style.top = navbarHeight + 23 + \"px\"\n\t\treturn this.minimizeButton\n\t}\n\n\tgetSettingsButtonGroup() {\n\t\tlet settingsGrpRight = DomHelper.createButtonGroup(true)\n\t\tDomHelper.appendChildren(settingsGrpRight, [\n\t\t\tthis.getFullscreenButton(),\n\t\t\tthis.getSettingsButton()\n\t\t])\n\t\treturn settingsGrpRight\n\t}\n\tsetOnMenuHeightChange(func) {\n\t\tthis.onMenuHeightChange = func\n\t}\n\n\tgetTracksButtonGroup() {\n\t\tlet trackGrp = DomHelper.createButtonGroup(true)\n\t\tDomHelper.appendChildren(trackGrp, [\n\t\t\tthis.getTracksButton(),\n\t\t\tthis.getMidiSetupButton()\n\t\t\t// this.getChannelsButton()\n\t\t])\n\t\treturn trackGrp\n\t}\n\n\tgetVolumneButtonGroup() {\n\t\tlet volumeGrp = DomHelper.createButtonGroup(true)\n\t\tDomHelper.appendChildren(volumeGrp, [\n\t\t\tthis.getMainVolumeSlider().container,\n\t\t\tthis.getMuteButton()\n\t\t])\n\t\treturn volumeGrp\n\t}\n\n\tgetSongControlButtonGroup() {\n\t\tlet songControlGrp = DomHelper.createButtonGroup(false)\n\t\tDomHelper.appendChildren(songControlGrp, [\n\t\t\tthis.getPlayButton(),\n\t\t\tthis.getPauseButton(),\n\t\t\tthis.getStopButton()\n\t\t])\n\t\treturn songControlGrp\n\t}\n\n\tgetSpeedButtonGroup() {\n\t\tlet songSpeedGrp = DomHelper.createButtonGroup(true)\n\t\tDomHelper.appendChildren(songSpeedGrp, [this.getSpeedDiv()])\n\t\treturn songSpeedGrp\n\t}\n\n\tgetFileButtonGroup() {\n\t\tlet fileGrp = DomHelper.createButtonGroup(true)\n\t\tDomHelper.appendChildren(fileGrp, [\n\t\t\tthis.getLoadSongButton(),\n\t\t\tthis.getLoadedSongsButton()\n\t\t])\n\t\treturn fileGrp\n\t}\n\n\tgetNavBar() {\n\t\tif (!this.navBar) {\n\t\t\tthis.navBar = DomHelper.createElement(\n\t\t\t\t\"nav\",\n\t\t\t\t{},\n\t\t\t\t{\n\t\t\t\t\tclassName: \"navbar navbar-wrapper\"\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t\treturn this.navBar\n\t}\n\tgetSettingsButton() {\n\t\tif (!this.settingsButton) {\n\t\t\tthis.settingsButton = DomHelper.createGlyphiconButton(\n\t\t\t\t\"settingsButton\",\n\t\t\t\t\"cog\",\n\t\t\t\t() => {\n\t\t\t\t\tif (this.settingsShown) {\n\t\t\t\t\t\tthis.hideSettings()\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.showSettings()\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t\treturn this.settingsButton\n\t}\n\thideDiv(div) {\n\t\tdiv.classList.add(\"hidden\")\n\t\tdiv.classList.remove(\"unhidden\")\n\t}\n\tshowDiv(div) {\n\t\tdiv.classList.remove(\"hidden\")\n\t\tdiv.classList.add(\"unhidden\")\n\t}\n\thideSettings() {\n\t\tconsole.log(\"hideSettings() called\"); // DEBUG LOG\n\t\tDomHelper.removeClass(\"selected\", this.getSettingsButton())\n\t\tthis.settingsShown = false\n\t\tthis.hideDiv(this.getSettingsDiv())\n\t}\n\tshowSettings() {\n\t\tthis.hideAllDialogs()\n\t\tDomHelper.addClassToElement(\"selected\", this.getSettingsButton())\n\t\tthis.settingsShown = true\n\t\tthis.showDiv(this.getSettingsDiv())\n\t}\n\tgetSettingsDiv() {\n\t\tif (!this.settingsDiv) {\n\t\t\tthis.settingsDiv = DomHelper.createElementWithIdAndClass(\n\t\t\t\t\"settingsDiv\",\n\t\t\t\t\"innerMenuDiv hidden\"\n\t\t\t);\n\t\t\tthis.settingsDiv.appendChild(this.getSettingsContent());\n\n\t\t\t// --- Create and Add Close Button ---\n\t\t\tconst closeButton = DomHelper.createElement(\"button\", {\n\t\t\t\tclassName: \"panel-close-button\",\n\t\t\t\tinnerHTML: \"&times;\", // 'X' symbol\n\t\t\t\ttitle: \"Close Settings\"\n\t\t\t});\n\t\t\tcloseButton.addEventListener(\"click\", () => {\n\t\t\t\tconsole.log(\"Close button clicked!\"); // DEBUG LOG\n\t\t\t\tthis.hideSettings();\n\t\t\t});\n\t\t\tthis.settingsDiv.appendChild(closeButton);\n\t\t\t// --- End Close Button ---\n\t\t}\n\t\treturn this.settingsDiv;\n\t}\n\tgetSettingsContent() {\n\t\treturn getSettingsDiv()\n\t}\n\tgetFullscreenButton() {\n\t\tif (!this.fullscreenButton) {\n\t\t\tthis.fullscreen = false\n\t\t\tlet clickFullscreen = () => {\n\t\t\t\tif (!this.fullscreen) {\n\t\t\t\t\tdocument.body.requestFullscreen()\n\t\t\t\t} else {\n\t\t\t\t\tdocument.exitFullscreen()\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.fullscreenButton = DomHelper.createGlyphiconButton(\n\t\t\t\t\"fullscreenButton\",\n\t\t\t\t\"fullscreen\",\n\t\t\t\tclickFullscreen.bind(this)\n\t\t\t)\n\t\t\tlet fullscreenSwitch = () => (this.fullscreen = !this.fullscreen)\n\t\t\tdocument.body.onfullscreenchange = fullscreenSwitch.bind(this)\n\t\t}\n\t\treturn this.fullscreenButton\n\t}\n\tgetLoadSongButton() {\n\t\tif (!this.loadSongButton) {\n\t\t\tthis.loadSongButton = DomHelper.createFileInput(\n\t\t\t\t\"Upload Midi\",\n\t\t\t\tthis.handleFileSelect.bind(this)\n\t\t\t)\n\t\t\tDomHelper.addClassToElement(\"floatSpanLeft\", this.loadSongButton)\n\t\t}\n\t\treturn this.loadSongButton\n\t}\n\tgetLoadedSongsButton() {\n\t\tif (!this.loadedSongsButton) {\n\t\t\tthis.loadedSongsButton = DomHelper.createGlyphiconTextButton(\n\t\t\t\t\"mute\",\n\t\t\t\t\"music\",\n\t\t\t\t\"Loaded Songs\",\n\t\t\t\tev => {\n\t\t\t\t\tif (this.loadedSongsShown) {\n\t\t\t\t\t\tthis.hideLoadedSongsDiv()\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.showLoadedSongsDiv()\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t\treturn this.loadedSongsButton\n\t}\n\tshowLoadedSongsDiv() {\n\t\tthis.hideAllDialogs()\n\t\tDomHelper.addClassToElement(\"selected\", this.loadedSongsButton)\n\t\tthis.loadedSongsShown = true\n\t\tthis.showDiv(this.getLoadedSongsDiv())\n\t}\n\n\thideLoadedSongsDiv() {\n\t\tDomHelper.removeClass(\"selected\", this.loadedSongsButton)\n\t\tthis.loadedSongsShown = false\n\t\tthis.hideDiv(this.getLoadedSongsDiv())\n\t}\n\n\tgetLoadedSongsDiv() {\n\t\tif (!this.loadedSongsDiv) {\n\t\t\tthis.loadedSongsDiv = DomHelper.createDivWithClass(\"innerMenuDiv\")\n\t\t\tthis.loadedSongsDiv.appendChild(this.songUI.getDivContent())\n\t\t\tthis.hideDiv(this.loadedSongsDiv)\n\t\t}\n\t\treturn this.loadedSongsDiv\n\t}\n\n\tcreateFileDragArea() {\n\t\tlet dragArea = DomHelper.createElement(\n\t\t\t\"div\",\n\t\t\t{\n\t\t\t\tposition: \"absolute\",\n\t\t\t\ttop: 0,\n\t\t\t\tleft: 0,\n\t\t\t\twidth: \"100%\",\n\t\t\t\theight: \"100%\",\n\t\t\t\tzIndex: 10000,\n\t\t\t\tvisibility: \"hidden\",\n\t\t\t\topacity: \"0\",\n\t\t\t\tbackgroundColor: \"rgba(0,0,0,0.2)\",\n\t\t\t\ttransition: \"all 0.2s ease-out\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tdraggable: \"true\"\n\t\t\t}\n\t\t)\n\n\t\tlet dragAreaText = DomHelper.createDivWithClass(\n\t\t\t\"centeredBigText\",\n\t\t\t{\n\t\t\t\tmarginTop: \"25%\",\n\t\t\t\tfontSize: \"35px\",\n\t\t\t\tcolor: \"rgba(225,225,225,0.8)\"\n\t\t\t},\n\t\t\t{ innerHTML: \"Drop Midi File anywhere!\" }\n\t\t)\n\t\tdragArea.appendChild(dragAreaText)\n\n\t\tdragArea.ondrop = ev => {\n\t\t\tdragArea.style.backgroundColor = \"rgba(0,0,0,0)\"\n\t\t\tthis.handleDragDropFileSelect(ev)\n\t\t}\n\t\tlet lastTarget\n\t\twindow.ondragenter = ev => {\n\t\t\tev.preventDefault()\n\t\t\tlastTarget = ev.target\n\t\t\tdragArea.style.visibility = \"\"\n\t\t\tdragArea.style.opacity = \"1\"\n\t\t}\n\t\twindow.ondragleave = ev => {\n\t\t\tif (ev.target === lastTarget || ev.target === document) {\n\t\t\t\tdragArea.style.visibility = \"hidden\"\n\t\t\t\tdragArea.style.opacity = \"0\"\n\t\t\t}\n\t\t}\n\t\twindow.ondragover = ev => ev.preventDefault()\n\t\twindow.ondrop = ev => {\n\t\t\tev.preventDefault()\n\t\t\tdragArea.style.visibility = \"hidden\"\n\t\t\tdragArea.style.opacity = \"0\"\n\t\t\tthis.handleDragDropFileSelect(ev)\n\t\t}\n\t\tdocument.body.appendChild(dragArea)\n\t}\n\thandleDragOverFile(ev) {\n\t\tthis.createFileDragArea().style\n\t}\n\thandleDragDropFileSelect(ev) {\n\t\tif (ev.dataTransfer.items) {\n\t\t\t// Use DataTransferItemList interface to access the file(s)\n\t\t\tif (ev.dataTransfer.items.length > 0) {\n\t\t\t\tif (ev.dataTransfer.items[0].kind === \"file\") {\n\t\t\t\t\tvar file = ev.dataTransfer.items[0].getAsFile()\n\t\t\t\t\tthis.readFile(file)\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t// Use DataTransfer interface to access the file(s)\n\t\t\tif (ev.dataTransfer.files.length > 0) {\n\t\t\t\tvar file = ev.dataTransfer.files[0]\n\t\t\t\tthis.readFile(file)\n\t\t\t}\n\t\t}\n\t}\n\thandleFileSelect(evt) {\n\t\tvar files = evt.target.files\n\t\tfor (var i = 0, f; (f = files[i]); i++) {\n\t\t\tthis.readFile(f)\n\t\t}\n\t}\n\treadFile(file) {\n\t\tlet reader = new FileReader()\n\t\tlet fileName = file.name\n\t\treader.onload = function (theFile) {\n\t\t\tgetPlayer().loadSong(reader.result, fileName)\n\t\t}.bind(this)\n\t\treader.readAsDataURL(file)\n\t}\n\n\tgetSpeedDiv() {\n\t\tif (!this.speedDiv) {\n\t\t\tthis.speedDiv = DomHelper.createDivWithClass(\n\t\t\t\t\"btn-group btn-group-vertical\"\n\t\t\t)\n\t\t\tthis.speedDiv.appendChild(this.getSpeedUpButton())\n\t\t\tthis.speedDiv.appendChild(this.getSpeedDisplayField())\n\t\t\tthis.speedDiv.appendChild(this.getSpeedDownButton())\n\t\t}\n\t\treturn this.speedDiv\n\t}\n\tgetSpeedUpButton() {\n\t\tif (!this.speedUpButton) {\n\t\t\tthis.speedUpButton = DomHelper.createGlyphiconButton(\n\t\t\t\t\"speedUp\",\n\t\t\t\t\"triangle-top\",\n\t\t\t\tev => {\n\t\t\t\t\tgetPlayer().increaseSpeed(0.05)\n\t\t\t\t\tthis.updateSpeed()\n\t\t\t\t}\n\t\t\t)\n\t\t\tthis.speedUpButton.className += \" btn-xs forcedThinButton\"\n\t\t}\n\t\treturn this.speedUpButton\n\t}\n\tupdateSpeed() {\n\t\tthis.getSpeedDisplayField().value =\n\t\t\tMath.round(getPlayer().playbackSpeed * 100) + \"%\"\n\t}\n\tgetSpeedDisplayField() {\n\t\tif (!this.speedDisplay) {\n\t\t\tthis.speedDisplay = DomHelper.createTextInput(\n\t\t\t\tev => {\n\t\t\t\t\tlet newVal = Math.max(1, Math.min(1000, parseInt(ev.target.value)))\n\t\t\t\t\tif (!isNaN(newVal)) {\n\t\t\t\t\t\tev.target.value = newVal + \"%\"\n\t\t\t\t\t\tgetPlayer().playbackSpeed = newVal / 100\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfloat: \"none\",\n\t\t\t\t\ttextAlign: \"center\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tvalue: Math.floor(getPlayer().playbackSpeed * 100) + \"%\",\n\t\t\t\t\tclassName: \"forcedThinButton\",\n\t\t\t\t\ttype: \"text\"\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t\treturn this.speedDisplay\n\t}\n\tgetSpeedDownButton() {\n\t\tif (!this.speedDownButton) {\n\t\t\tthis.speedDownButton = DomHelper.createGlyphiconButton(\n\t\t\t\t\"speedUp\",\n\t\t\t\t\"triangle-bottom\",\n\t\t\t\tev => {\n\t\t\t\t\tgetPlayer().increaseSpeed(-0.05)\n\t\t\t\t\tthis.updateSpeed()\n\t\t\t\t}\n\t\t\t)\n\t\t\tthis.speedDownButton.className += \" btn-xs forcedThinButton\"\n\t\t}\n\t\treturn this.speedDownButton\n\t}\n\tgetTracksButton() {\n\t\tif (!this.tracksButton) {\n\t\t\tthis.tracksButton = DomHelper.createGlyphiconTextButton(\n\t\t\t\t\"tracks\",\n\t\t\t\t\"align-justify\",\n\t\t\t\t\"Tracks\",\n\t\t\t\tev => {\n\t\t\t\t\tif (this.tracksShown) {\n\t\t\t\t\t\tthis.hideTracks()\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.showTracks()\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t)\n\t\t\tDomHelper.addClassToElement(\"floatSpanLeft\", this.tracksButton)\n\t\t}\n\t\treturn this.tracksButton\n\t}\n\thideTracks() {\n\t\tDomHelper.removeClass(\"selected\", this.tracksButton)\n\t\tthis.tracksShown = false\n\t\tthis.hideDiv(this.getTrackMenuDiv())\n\t}\n\n\tshowTracks() {\n\t\tthis.hideAllDialogs()\n\t\tDomHelper.addClassToElement(\"selected\", this.tracksButton)\n\t\tthis.tracksShown = true\n\t\t//instrument of a track could theoretically change during the song.\n\t\tdocument\n\t\t\t.querySelectorAll(\".instrumentName\")\n\t\t\t.forEach(\n\t\t\t\tel =>\n\t\t\t\t\t(el.innerHTML = getPlayer().getCurrentTrackInstrument(\n\t\t\t\t\t\tel.id.split(\"instrumentName\")[1]\n\t\t\t\t\t))\n\t\t\t)\n\t\tthis.showDiv(this.getTrackMenuDiv())\n\t}\n\n\tgetMidiSetupButton() {\n\t\tif (!this.midiSetupButton) {\n\t\t\tthis.midiSetupButton = DomHelper.createGlyphiconTextButton(\n\t\t\t\t\"midiSetup\",\n\t\t\t\t\"tower\",\n\t\t\t\t\"Midi-Setup\",\n\t\t\t\tev => {\n\t\t\t\t\tif (this.midiSetupDialogShown) {\n\t\t\t\t\t\tthis.hideMidiSetupDialog()\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.showMidiSetupDialog()\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t)\n\t\t\tDomHelper.addClassToElement(\"floatSpanLeft\", this.midiSetupButton)\n\t\t}\n\t\treturn this.midiSetupButton\n\t}\n\thideMidiSetupDialog() {\n\t\tDomHelper.removeClass(\"selected\", this.midiSetupButton)\n\t\tthis.midiSetupDialogShown = false\n\t\tthis.hideDiv(this.getMidiSetupDialog())\n\t}\n\n\tshowMidiSetupDialog() {\n\t\tthis.hideAllDialogs()\n\t\tDomHelper.addClassToElement(\"selected\", this.midiSetupButton)\n\t\tthis.midiSetupDialogShown = true\n\n\t\tthis.showDiv(this.getMidiSetupDialog())\n\t}\n\tgetChannelsButton() {\n\t\tif (!this.channelsButton) {\n\t\t\tlet channelMenuDiv = this.getChannelMenuDiv()\n\t\t\tthis.channelsButton = DomHelper.createGlyphiconTextButton(\n\t\t\t\t\"channels\",\n\t\t\t\t\"align-justify\",\n\t\t\t\t\"Channels\",\n\t\t\t\tev => {\n\t\t\t\t\tif (this.channelsShown) {\n\t\t\t\t\t\tthis.hideChannels(channelMenuDiv)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.showChannels(channelMenuDiv)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t)\n\t\t\tDomHelper.addClassToElement(\"floatSpanLeft\", this.channelsButton)\n\n\t\t\t//Todo. decide what channel info to show...\n\t\t\tthis.channelsButton.style.opacity = 0\n\t\t}\n\t\treturn this.channelsButton\n\t}\n\tgetChannelMenuDiv() {\n\t\tif (!this.channelMenuDiv) {\n\t\t\tthis.channelMenuDiv = DomHelper.createDivWithId(\"trackContainerDiv\")\n\t\t\tthis.channelMenuDiv.style.display = \"none\"\n\t\t\tthis.channelMenuDiv.style.top = this.getNavBar().style.height\n\t\t\tdocument.body.appendChild(this.channelMenuDiv)\n\t\t}\n\t\treturn this.channelMenuDiv\n\t}\n\tshowChannels(channelMenuDiv) {\n\t\tif (this.tracksShown) {\n\t\t\tthis.hideTracks()\n\t\t}\n\t\tDomHelper.addClassToElement(\"selected\", this.tracksButton)\n\t\tthis.channelsShown = true\n\t\tchannelMenuDiv.style.display = \"block\"\n\t}\n\n\thideChannels(channelMenuDiv) {\n\t\tDomHelper.removeClass(\"selected\", this.tracksButton)\n\t\tthis.channelsShown = false\n\t\tchannelMenuDiv.style.display = \"none\"\n\t}\n\thideAllDialogs() {\n\t\t// this.hideChannels()\n\t\tthis.hideMidiSetupDialog()\n\t\tthis.hideSettings()\n\t\tthis.hideLoadedSongsDiv()\n\t\tthis.hideTracks()\n\t\tthis.hideLoadedSongsDiv()\n\t}\n\n\tgetMainVolumeSlider() {\n\t\tif (!this.mainVolumeSlider) {\n\t\t\tthis.mainVolumeSlider = DomHelper.createSliderWithLabel(\n\t\t\t\t\"volumeMain\",\n\t\t\t\t\"Master Volume\",\n\t\t\t\tgetPlayer().volume,\n\t\t\t\t0,\n\t\t\t\t100,\n\t\t\t\t1,\n\t\t\t\tev => {\n\t\t\t\t\tif (getPlayer().volume == 0 && parseInt(ev.target.value) != 0) {\n\t\t\t\t\t\tDomHelper.replaceGlyph(\n\t\t\t\t\t\t\tthis.getMuteButton(),\n\t\t\t\t\t\t\t\"volume-off\",\n\t\t\t\t\t\t\t\"volume-up\"\n\t\t\t\t\t\t)\n\t\t\t\t\t\t//this.getMuteButton().firstChild.className = this.muteButton.firstChild.className.replace('volume-off', 'volume-up')\n\t\t\t\t\t}\n\t\t\t\t\tgetPlayer().volume = parseInt(ev.target.value)\n\t\t\t\t\tif (getPlayer().volume <= 0) {\n\t\t\t\t\t\tDomHelper.replaceGlyph(\n\t\t\t\t\t\t\tthis.getMuteButton(),\n\t\t\t\t\t\t\t\"volume-up\",\n\t\t\t\t\t\t\t\"volume-off\"\n\t\t\t\t\t\t)\n\t\t\t\t\t} else if (this.getMuteButton().innerHTML == \"Unmute\") {\n\t\t\t\t\t\tDomHelper.replaceGlyph(\n\t\t\t\t\t\t\tthis.getMuteButton(),\n\t\t\t\t\t\t\t\"volume-off\",\n\t\t\t\t\t\t\t\"volume-up\"\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t\treturn this.mainVolumeSlider\n\t}\n\tgetMuteButton() {\n\t\tif (!this.muteButton) {\n\t\t\tthis.muteButton = DomHelper.createGlyphiconButton(\n\t\t\t\t\"mute\",\n\t\t\t\t\"volume-up\",\n\t\t\t\tev => {\n\t\t\t\t\tif (getPlayer().muted) {\n\t\t\t\t\t\tgetPlayer().muted = false\n\t\t\t\t\t\tif (!isNaN(getPlayer().mutedAtVolume)) {\n\t\t\t\t\t\t\tif (getPlayer().mutedAtVolume == 0) {\n\t\t\t\t\t\t\t\tgetPlayer().mutedAtVolume = 100\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.getMainVolumeSlider().slider.value = getPlayer().mutedAtVolume\n\t\t\t\t\t\t\tgetPlayer().volume = getPlayer().mutedAtVolume\n\t\t\t\t\t\t}\n\t\t\t\t\t\tDomHelper.replaceGlyph(this.muteButton, \"volume-off\", \"volume-up\")\n\t\t\t\t\t} else {\n\t\t\t\t\t\tgetPlayer().mutedAtVolume = getPlayer().volume\n\t\t\t\t\t\tgetPlayer().muted = true\n\t\t\t\t\t\tgetPlayer().volume = 0\n\t\t\t\t\t\tthis.getMainVolumeSlider().slider.value = 0\n\t\t\t\t\t\tDomHelper.replaceGlyph(this.muteButton, \"volume-up\", \"volume-off\")\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t\treturn this.muteButton\n\t}\n\tgetPlayButton() {\n\t\tif (!this.playButton) {\n\t\t\tthis.playButton = DomHelper.createGlyphiconButton(\n\t\t\t\t\"play\",\n\t\t\t\t\"play\",\n\t\t\t\tthis.clickPlay.bind(this)\n\t\t\t)\n\t\t\tDomHelper.addClassToElement(\"btn-lg\", this.playButton)\n\t\t}\n\t\treturn this.playButton\n\t}\n\tclickPlay(ev) {\n\t\tif (getPlayer().song) {\n\t\t\tDomHelper.removeClass(\"selected\", this.getPauseButton())\n\t\t\tgetPlayer().startPlay()\n\t\t\tDomHelper.addClassToElement(\"selected\", this.playButton)\n\t\t}\n\t}\n\tgetPauseButton() {\n\t\tif (!this.pauseButton) {\n\t\t\tthis.pauseButton = DomHelper.createGlyphiconButton(\n\t\t\t\t\"pause\",\n\t\t\t\t\"pause\",\n\t\t\t\tthis.clickPause.bind(this)\n\t\t\t)\n\t\t\tDomHelper.addClassToElement(\"btn-lg\", this.pauseButton)\n\t\t}\n\t\treturn this.pauseButton\n\t}\n\tclickPause(ev) {\n\t\tgetPlayer().pause()\n\t\tDomHelper.removeClass(\"selected\", this.getPlayButton())\n\n\t\tDomHelper.addClassToElement(\"selected\", this.pauseButton)\n\t}\n\n\tgetStopButton() {\n\t\tif (!this.stopButton) {\n\t\t\tthis.stopButton = DomHelper.createGlyphiconButton(\n\t\t\t\t\"stop\",\n\t\t\t\t\"stop\",\n\t\t\t\tthis.clickStop.bind(this)\n\t\t\t)\n\n\t\t\tDomHelper.addClassToElement(\"btn-lg\", this.stopButton)\n\t\t}\n\t\treturn this.stopButton\n\t}\n\tclickStop(ev) {\n\t\tgetPlayer().stop()\n\t\tDomHelper.removeClass(\"selected\", this.getPlayButton())\n\t\tDomHelper.removeClass(\"selected\", this.getPauseButton())\n\t}\n\tresetTrackMenuDiv() {\n\t\tlet menuDiv = this.getTrackMenuDiv()\n\t\tmenuDiv.innerHTML = \"\"\n\t\tDomHelper.appendChildren(menuDiv, createTrackDivs())\n\t}\n\tnewSongCallback() {\n\t\tthis.resetTrackMenuDiv()\n\t\tthis.clickStop()\n\t\tthis.songUI.newSongCallback(getCurrentSong())\n\t}\n\n\tgetMidiSetupDialog() {\n\t\tif (!this.midiSetupDialog) {\n\t\t\tthis.midiSetupDialog = DomHelper.createDivWithIdAndClass(\n\t\t\t\t\"midiSetupDialog\",\n\t\t\t\t\"centeredMenuDiv\"\n\t\t\t)\n\t\t\tthis.hideDiv(this.midiSetupDialog)\n\t\t\tdocument.body.appendChild(this.midiSetupDialog)\n\n\t\t\tlet text = DomHelper.createDivWithClass(\n\t\t\t\t\"centeredBigText\",\n\t\t\t\t{ marginTop: \"25px\" },\n\t\t\t\t{ innerHTML: \"Choose Midi device:\" }\n\t\t\t)\n\t\t\tthis.midiSetupDialog.appendChild(text)\n\n\t\t\tthis.inputDevicesDiv = DomHelper.createDivWithClass(\"halfContainer\")\n\t\t\tthis.outputDevicesDiv = DomHelper.createDivWithClass(\"halfContainer\")\n\t\t\tthis.midiSetupDialog.appendChild(this.inputDevicesDiv)\n\t\t\tthis.midiSetupDialog.appendChild(this.outputDevicesDiv)\n\t\t}\n\t\tlet inputDevices = getMidiHandler().getAvailableInputDevices()\n\t\tif (inputDevices.length == 0) {\n\t\t\tthis.inputDevicesDiv.innerHTML = \"No MIDI input-devices found.\"\n\t\t} else {\n\t\t\tthis.inputDevicesDiv.innerHTML = \"\"\n\t\t\tlet inputTitle = DomHelper.createElementWithClass(\"row\", \"span\")\n\t\t\tinputTitle.innerHTML = \"Input: \"\n\t\t\tthis.inputDevicesDiv.appendChild(inputTitle)\n\t\t\tinputDevices.forEach(device => {\n\t\t\t\tthis.inputDevicesDiv.appendChild(this.createDeviceDiv(device))\n\t\t\t})\n\t\t}\n\n\t\tlet outputDevices = getMidiHandler().getAvailableOutputDevices()\n\t\tif (outputDevices.length == 0) {\n\t\t\tthis.outputDevicesDiv.innerHTML = \"No MIDI output-devices found.\"\n\t\t} else {\n\t\t\tthis.outputDevicesDiv.innerHTML = \"\"\n\t\t\tlet outputTitle = DomHelper.createDivWithClass(\"row\")\n\t\t\toutputTitle.innerHTML = \"Output: \"\n\t\t\tthis.outputDevicesDiv.appendChild(outputTitle)\n\t\t\toutputDevices.forEach(device => {\n\t\t\t\tthis.outputDevicesDiv.appendChild(this.createOutputDeviceDiv(device))\n\t\t\t})\n\t\t}\n\t\tthis.midiSetupDialog.style.marginTop =\n\t\t\tthis.getNavBar().clientHeight + 25 + \"px\"\n\t\treturn this.midiSetupDialog\n\t}\n\tcreateDeviceDiv(device) {\n\t\tlet deviceDiv = DomHelper.createTextButton(\n\t\t\t\"midiInDeviceDiv\" + device.id,\n\t\t\tdevice.name,\n\t\t\t() => {\n\t\t\t\tif (deviceDiv.classList.contains(\"selected\")) {\n\t\t\t\t\tDomHelper.removeClass(\"selected\", deviceDiv)\n\t\t\t\t\tgetMidiHandler().clearInput(device)\n\t\t\t\t} else {\n\t\t\t\t\tDomHelper.addClassToElement(\"selected\", deviceDiv)\n\t\t\t\t\tgetMidiHandler().addInput(device)\n\t\t\t\t}\n\t\t\t}\n\t\t)\n\t\tif (getMidiHandler().isDeviceActive(device)) {\n\t\t\tDomHelper.addClassToElement(\"selected\", deviceDiv)\n\t\t}\n\n\t\treturn deviceDiv\n\t}\n\tcreateOutputDeviceDiv(device) {\n\t\tlet deviceDiv = DomHelper.createTextButton(\n\t\t\t\"midiOutDeviceDiv\" + device.id,\n\t\t\tdevice.name,\n\t\t\t() => {\n\t\t\t\tif (deviceDiv.classList.contains(\"selected\")) {\n\t\t\t\t\tDomHelper.removeClass(\"selected\", deviceDiv)\n\t\t\t\t\tgetMidiHandler().clearOutput(device)\n\t\t\t\t} else {\n\t\t\t\t\tDomHelper.addClassToElement(\"selected\", deviceDiv)\n\t\t\t\t\tgetMidiHandler().addOutput(device)\n\t\t\t\t}\n\t\t\t}\n\t\t)\n\t\tif (getMidiHandler().isOutputDeviceActive(device)) {\n\t\t\tdocument\n\t\t\t\t.querySelectorAll(\".midiOutDeviceDiv\")\n\t\t\t\t.forEach(el =>\n\t\t\t\t\tel.classList.contains(\"selected\")\n\t\t\t\t\t\t? el.classList.remove(\"selected\")\n\t\t\t\t\t\t: null\n\t\t\t\t)\n\t\t\tDomHelper.addClassToElement(\"selected\", deviceDiv)\n\t\t}\n\t\tdeviceDiv.classList.add(\"midiOutDeviceDiv\")\n\n\t\treturn deviceDiv\n\t}\n\tgetTrackMenuDiv() {\n\t\tif (!this.trackMenuDiv) {\n\t\t\tthis.trackMenuDiv = DomHelper.createDivWithIdAndClass(\n\t\t\t\t\"trackContainerDiv\",\n\t\t\t\t\"innerMenuDiv\"\n\t\t\t)\n\t\t\tthis.hideDiv(this.trackMenuDiv)\n\t\t}\n\t\treturn this.trackMenuDiv\n\t}\n}\n","import { getPlayer } from \"./player/Player.js\"\nimport { getSetting } from \"./settings/Settings.js\"\n\nexport class InputListeners {\n\tconstructor(ui, render) {\n\t\tthis.grabSpeed = []\n\t\tthis.delay = false\n\n\t\tthis.addMouseAndTouchListeners(render, ui)\n\n\t\tdocument.body.addEventListener(\"wheel\", this.onWheel())\n\n\t\tthis.addProgressBarMouseListeners(render)\n\n\t\twindow.addEventListener(\"keydown\", this.onKeyDown(ui))\n\n\t\tui.setOnMenuHeightChange(val => render.onMenuHeightChanged(val))\n\n\t\tui.fireInitialListeners()\n\n\t\tlet player = getPlayer()\n\t\trender.setPianoInputListeners(\n\t\t\tplayer.addInputNoteOn.bind(player),\n\t\t\tplayer.addInputNoteOff.bind(player)\n\t\t)\n\t}\n\n\taddMouseAndTouchListeners(render, ui) {\n\t\twindow.addEventListener(\"mouseup\", ev => this.onMouseUp(ev, render))\n\t\tdocument.body.addEventListener(\n\t\t\t\"mousedown\",\n\t\t\tev => this.onMouseDown(ev, render),\n\t\t\t{ passive: false }\n\t\t)\n\t\tdocument.body.addEventListener(\n\t\t\t\"mousemove\",\n\t\t\tev => this.onMouseMove(ev, render, ui),\n\t\t\t{ passive: false }\n\t\t)\n\t\twindow.addEventListener(\"touchend\", ev => this.onMouseUp(ev, render), {\n\t\t\tpassive: false\n\t\t})\n\t\tdocument.body.addEventListener(\n\t\t\t\"touchstart\",\n\t\t\tev => this.onMouseDown(ev, render),\n\t\t\t{ passive: false }\n\t\t)\n\t\tdocument.body.addEventListener(\n\t\t\t\"touchmove\",\n\t\t\tev => this.onMouseMove(ev, render, ui),\n\t\t\t{ passive: false }\n\t\t)\n\t}\n\n\taddProgressBarMouseListeners(render) {\n\t\trender\n\t\t\t.getProgressBarCanvas()\n\t\t\t.addEventListener(\"mousemove\", this.onMouseMoveProgressCanvas(render))\n\t\trender\n\t\t\t.getProgressBarCanvas()\n\t\t\t.addEventListener(\"mousedown\", this.onMouseDownProgressCanvas(render))\n\t}\n\n\tonWheel() {\n\t\treturn event => {\n\t\t\tif (event.target != document.body) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif (this.delay) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\tthis.delay = true\n\n\t\t\tlet alreadyScrolling = getPlayer().scrolling != 0\n\n\t\t\t//Because Firefox does not set .wheelDelta\n\t\t\tlet wheelDelta = event.wheelDelta ? event.wheelDelta : -1 * event.deltaY\n\n\t\t\tlet evDel =\n\t\t\t\t((wheelDelta + 1) / (Math.abs(wheelDelta) + 1)) *\n\t\t\t\tMath.min(500, Math.abs(wheelDelta))\n\n\t\t\tvar wheel = (evDel / Math.abs(evDel)) * 500\n\n\t\t\tgetPlayer().scrolling -= 0.001 * wheel\n\t\t\tif (!alreadyScrolling) {\n\t\t\t\tgetPlayer().handleScroll()\n\t\t\t}\n\t\t\tthis.delay = false\n\t\t}\n\t}\n\n\tonKeyDown(ui) {\n\t\treturn e => {\n\t\t\tif (!getPlayer().isFreeplay) {\n\t\t\t\tif (e.code == \"Space\") {\n\t\t\t\t\te.preventDefault()\n\t\t\t\t\tif (!getPlayer().paused) {\n\t\t\t\t\t\tui.clickPause(e)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tui.clickPlay(e)\n\t\t\t\t\t}\n\t\t\t\t} else if (e.code == \"ArrowUp\") {\n\t\t\t\t\tgetPlayer().increaseSpeed(0.05)\n\t\t\t\t\tui.getSpeedDisplayField().value =\n\t\t\t\t\t\tMath.floor(getPlayer().playbackSpeed * 100) + \"%\"\n\t\t\t\t} else if (e.code == \"ArrowDown\") {\n\t\t\t\t\tgetPlayer().increaseSpeed(-0.05)\n\t\t\t\t\tui.getSpeedDisplayField().value =\n\t\t\t\t\t\tMath.floor(getPlayer().playbackSpeed * 100) + \"%\"\n\t\t\t\t} else if (e.code == \"ArrowLeft\") {\n\t\t\t\t\tgetPlayer().setTime(getPlayer().getTime() - 5)\n\t\t\t\t} else if (e.code == \"ArrowRight\") {\n\t\t\t\t\tgetPlayer().setTime(getPlayer().getTime() + 5)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tonMouseDownProgressCanvas(render) {\n\t\treturn ev => {\n\t\t\tev.preventDefault()\n\t\t\tif (ev.target == render.getProgressBarCanvas()) {\n\t\t\t\tthis.grabbedProgressBar = true\n\t\t\t\tgetPlayer().wasPaused = getPlayer().paused\n\t\t\t\tgetPlayer().pause()\n\t\t\t\tlet newTime =\n\t\t\t\t\t(ev.clientX / render.renderDimensions.windowWidth) *\n\t\t\t\t\t(getPlayer().song.getEnd() / 1000)\n\n\t\t\t\tgetPlayer().setTime(newTime)\n\t\t\t}\n\t\t}\n\t}\n\n\tonMouseMoveProgressCanvas(render) {\n\t\treturn ev => {\n\t\t\tif (this.grabbedProgressBar && getPlayer().song) {\n\t\t\t\tlet newTime =\n\t\t\t\t\t(ev.clientX / render.renderDimensions.windowWidth) *\n\t\t\t\t\t(getPlayer().song.getEnd() / 1000)\n\t\t\t\tgetPlayer().setTime(newTime)\n\t\t\t}\n\t\t}\n\t}\n\n\tonMouseMove(ev, render, ui) {\n\t\tlet pos = this.getXYFromMouseEvent(ev)\n\t\tif (this.grabbedProgressBar && getPlayer().song) {\n\t\t\tlet newTime =\n\t\t\t\t(ev.clientX / render.renderDimensions.windowWidth) *\n\t\t\t\t(getPlayer().song.getEnd() / 1000)\n\t\t\tgetPlayer().setTime(newTime)\n\t\t\treturn\n\t\t}\n\n\t\tif (this.grabbedMainCanvas && getPlayer().song) {\n\t\t\tif (this.lastYGrabbed) {\n\t\t\t\tlet alreadyScrolling = getPlayer().scrolling != 0\n\t\t\t\tlet yChange =\n\t\t\t\t\t(getSetting(\"reverseNoteDirection\") ? -1 : 1) *\n\t\t\t\t\t(this.lastYGrabbed - pos.y)\n\t\t\t\tif (!alreadyScrolling) {\n\t\t\t\t\tgetPlayer().setTime(\n\t\t\t\t\t\tgetPlayer().getTime() - render.getTimeFromHeight(yChange)\n\t\t\t\t\t)\n\t\t\t\t\tthis.grabSpeed.push(yChange)\n\t\t\t\t\tif (this.grabSpeed.length > 3) {\n\t\t\t\t\t\tthis.grabSpeed.splice(0, 1)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.lastYGrabbed = pos.y\n\t\t}\n\n\t\trender.setMouseCoords(ev.clientX, ev.clientY)\n\n\t\tui.mouseMoved()\n\t}\n\n\tonMouseDown(ev, render) {\n\t\tlet pos = this.getXYFromMouseEvent(ev)\n\t\tif (\n\t\t\tev.target == document.body &&\n\t\t\trender.isOnMainCanvas(pos) &&\n\t\t\t!this.grabbedProgressBar\n\t\t) {\n\t\t\tgetPlayer().wasPaused = getPlayer().paused\n\t\t\tev.preventDefault()\n\t\t\tthis.grabbedMainCanvas = true\n\t\t\tgetPlayer().pause()\n\t\t}\n\t}\n\n\tonMouseUp(ev, render) {\n\t\tlet pos = this.getXYFromMouseEvent(ev)\n\t\tif (ev.target == document.body && render.isOnMainCanvas(pos)) {\n\t\t\tev.preventDefault()\n\t\t}\n\t\tif (this.grabSpeed.length) {\n\t\t\tgetPlayer().scrolling = this.grabSpeed[this.grabSpeed.length - 1] / 50\n\t\t\tgetPlayer().handleScroll()\n\t\t\tthis.grabSpeed = []\n\t\t}\n\t\tif (this.grabbedProgressBar || this.grabbedMainCanvas) {\n\t\t\tif (!getPlayer().wasPaused) {\n\t\t\t\tgetPlayer().resume()\n\t\t\t}\n\t\t}\n\t\tthis.grabbedProgressBar = false\n\t\tthis.grabbedMainCanvas = false\n\t\tthis.lastYGrabbed = false\n\t}\n\n\tgetXYFromMouseEvent(ev) {\n\t\tif (ev.clientX == undefined) {\n\t\t\tif (ev.touches.length) {\n\t\t\t\treturn {\n\t\t\t\t\tx: ev.touches[ev.touches.length - 1].clientX,\n\t\t\t\t\ty: ev.touches[ev.touches.length - 1].clientY\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn { x: -1, y: -1 }\n\t\t\t}\n\t\t}\n\t\treturn { x: ev.clientX, y: ev.clientY }\n\t}\n}\n","// Import CSS files for Webpack to bundle\nimport '../css/bootstrap.min.css';\nimport '../css/bootstrap-theme.min.css';\nimport '../css/nano.min.css'; // pickr theme\nimport '../css/Interface.css';\nimport '../css/Inputs.css';\nimport '../css/Settings.css';\n\nimport { Render } from \"./Rendering/Render.js\"\nimport { UI } from \"./ui/UI.js\"\nimport { InputListeners } from \"./InputListeners.js\"\nimport { getPlayer, getPlayerState } from \"./player/Player.js\"\nimport { loadJson } from \"./Util.js\"\nimport { FileLoader } from \"./player/FileLoader.js\"\n\n/**\n *\n *\n * TODOs:\n *\n * UI:\n * - Accessability\n * - Mobile\n * - Load from URL / circumvent CORS.. Extension?\n * - channel menu\n * - added song info to \"loaded songs\"\n * - fix the minimize button\n * - Fix fullscreen on mobile\n *\n * Audio\n * - Figure out how to handle different ADSR envelopes / release times for instruments\n * - implement control messages for\n * \t\t- sostenuto pedal\n * \t\t\t- only keys that are pressed while pedal is hit are sustained\n * \t\t- soft pedal\n * \t\t\t- how does that affect sound?\n * - implement pitch shift\n * - settings for playalong:\n * \t\t- accuracy needed\n * \t\t- different modes\n *\n * MISC\n * - add starting songs from piano-midi\n * - make instrument choosable for tracks\n * - Metronome\n * - Update readme - new screenshot, install/ run instructions\n * - Choose License\n * -\n * -\n *\n *\n *\n * bugs:\n * - Fix iOS\n * - too long notes disappear too soon\n */\nlet ui\nlet loading\nlet listeners\n\nwindow.onload = async function () {\n\tawait init()\n\tloading = true\n\n\t//\tloadSongFromURL(\"http://www.piano-midi.de/midis/brahms/brahms_opus1_1_format0.mid\")\n}\n\nasync function init() {\n\trender = new Render()\n\tui = new UI(render)\n\tlisteners = new InputListeners(ui, render)\n\trenderLoop()\n\n\tloadStartingSong()\n\n\tloadJson(\"./js/data/exampleSongs.json\", json =>\n\t\tui.setExampleSongs(JSON.parse(json))\n\t)\n}\n\nlet render\nfunction renderLoop() {\n\trender.render(getPlayerState())\n\twindow.requestAnimationFrame(renderLoop)\n}\nasync function loadStartingSong() {\n\t// const domain = window.location.href // Comment out domain check\n\t// let url = \"https://midiano.com/mz_331_3.mid?raw=true\" // Comment out original URL\n\t// if (domain.split(\"github\").length > 1) { // Comment out github check\n\t// \turl = \"https://Bewelge.github.io/MIDIano/mz_331_3.mid?raw=true\" // Comment out github URL\n\t// }\n\n\tlet url = \"sample.mid\"; // Set URL to the local file\n\n\tFileLoader.loadSongFromURL(url, (response, fileName) =>\n\t\tgetPlayer().loadSong(response, fileName, \"Sample MIDI File\") // Update song title\n\t) // Local: \"../mz_331_3.mid\")\n}\n"],"names":["___CSS_LOADER_URL_IMPORT_0___","URL","___CSS_LOADER_URL_IMPORT_1___","___CSS_LOADER_URL_IMPORT_2___","___CSS_LOADER_URL_IMPORT_3___","___CSS_LOADER_URL_IMPORT_4___","___CSS_LOADER_EXPORT___","___CSS_LOADER_URL_REPLACEMENT_0___","___CSS_LOADER_URL_REPLACEMENT_1___","hash","___CSS_LOADER_URL_REPLACEMENT_2___","___CSS_LOADER_URL_REPLACEMENT_3___","___CSS_LOADER_URL_REPLACEMENT_4___","___CSS_LOADER_URL_REPLACEMENT_5___","push","module","id","exports","styleElement","nonce","setAttribute","stylesInDOM","getIndexByIdentifier","identifier","result","i","length","modulesToDom","list","options","idCountMap","identifiers","item","base","count","concat","indexByIdentifier","obj","css","media","sourceMap","supports","layer","references","updater","addElementStyle","byIndex","splice","api","domAPI","update","newObj","remove","lastIdentifiers","newList","index","newLastIdentifiers","_i","_index","styleSheet","cssText","firstChild","removeChild","appendChild","document","createTextNode","cssWithMappingToString","toString","this","map","content","needLayer","join","modules","dedupe","undefined","alreadyImportedModules","k","_k","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","url","String","__esModule","default","test","slice","needQuotes","replace","element","createElement","setAttributes","attributes","insert","memo","style","target","styleTarget","querySelector","window","HTMLIFrameElement","contentDocument","head","e","getTarget","Error","insertStyleElement","styleTagTransform","apply","parentNode","removeStyleElement","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","m","n","getter","d","a","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","Function","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","p","b","baseURI","self","href","nc","locals","formatTime","seconds","showMilis","Math","max","date","Date","timeStrLength","timeStr","toISOString","substr","console","error","isBlack","noteNumber","replaceAllString","text","replaceThis","withThat","RegExp","iOS","includes","navigator","platform","userAgent","DomHelper","createCanvas","width","height","styles","createSpinner","createDivWithIdAndClass","setCanvasSize","cnv","replaceGlyph","oldIcon","newIcon","children","forEach","childNode","classList","contains","className","removeClass","removeClassFromElementsSelector","selector","querySelectorAll","el","createSliderWithLabel","label","val","min","step","onChange","cont","labelDiv","innerHTML","slider","createSlider","container","createSliderWithLabelAndField","displayDiv","ev","value","createGlyphiconButton","glyph","onClick","bt","createButton","getGlyphicon","createGlyphiconTextButton","createDiv","createDivWithId","createDivWithClass","createElementWithId","tag","createElementWithClass","createElementWithIdAndClass","name","oninput","type","createTextInput","onchange","createCheckbox","isChecked","checkbox","checked","for","addEventListener","click","addClassToElements","elements","addClassToElement","add","createFlexContainer","addToFlexContainer","appendChildren","parent","child","createButtonGroup","vertical","justifyContent","role","createFileInput","callback","customFile","inp","display","getDivider","onclick","getButtonSelectLine","createTextButton","keys","attr","createInputSelect","title","items","selectBox","selectTag","option","createColorPickerGlyphiconText","startColor","pickrEl","pickrElCont","glyphBut","show","Pickr","create","theme","useAsButton","components","hue","preview","opacity","interaction","input","getGlyphEl","on","setColor","color","colorString","toRGBA","createColorPickerText","colorButtonContainer","colorButton","colorPicker","defaultRepresentation","backgroundColor","hide","getColor","TRACK_COLORS","white","black","INSTRUMENTS","BY_ID","instrument","number","category","KEY_TO_NOTE","A0","Bb0","B0","C1","Db1","D1","Eb1","E1","F1","Gb1","G1","Ab1","A1","Bb1","B1","C2","Db2","D2","Eb2","E2","F2","Gb2","G2","Ab2","A2","Bb2","B2","C3","Db3","D3","Eb3","E3","F3","Gb3","G3","Ab3","A3","Bb3","B3","C4","Db4","D4","Eb4","E4","F4","Gb4","G4","Ab4","A4","Bb4","B4","C5","Db5","D5","Eb5","E5","F5","Gb5","G5","Ab5","A5","Bb5","B5","C6","Db6","D6","Eb6","E6","F6","Gb6","G6","Ab6","A6","Bb6","B6","C7","Db7","D7","Eb7","E7","F7","Gb7","G7","Ab7","A7","Bb7","B7","C8","MIDI_NOTE_TO_KEY","getDefaultSettings","copy","tab","defaultSettings","setting","settingCopy","attribute","General","setSetting","abs","parseInt","getSetting","Video","Sustain","Particles","Background","Audio","newVal","bind","SettingUI","constructor","tabs","activeTab","mainDiv","getSettingsDiv","settings","getTabDiv","getContentDiv","tabIds","tabId","tabButton","createTabButton","tabName","butEl","settingEl","createSettingTabContentDiv","settingGroups","groupId","createSettingGroupDiv","getResetButton","resetSettingsToDefault","categoryName","settingsList","collapsed","createSettingDiv","createListSettingDiv","createCheckboxSettingDiv","createSliderSettingDiv","createColorSettingDiv","parseFloat","SAVE_PATH_ROOT","ui","savedSettings","localStorage","storedObj","getItem","parse","getGlobalSavedSettings","settingsById","categoryId","settingsUi","setSettingValue","settingId","globalSettings","settingCallbacks","saveObj","getSettingObject","setItem","saveCurrentSettings","setSettingCallback","parentElement","PianoRender","renderDimensions","registerResizeCallback","resize","clickCallback","blackKeyImg","Image","onload","positionY","resizeCanvases","drawPiano","ctxWhite","ctxBlack","setPianoInputListeners","onNoteOn","onNoteOff","setClickCallback","getAllCanvases","getPianoCanvasWhite","getPlayedKeysWhite","getPianoCanvasBlack","getPlayedKeysBlack","canvas","windowWidth","whiteKeyHeight","blackKeyHeight","repositionCanvases","top","getAbsolutePianoPosition","drawActiveInputKey","dim","getKeyDimensions","isKeyBlack","ctx","playedKeysCtxBlack","playedKeysCtxWhite","drawBlackKey","drawWhiteKey","drawActiveKey","renderInfo","fillStyle","clearPlayedKeysCanvases","clearRect","fillRect","drawWhiteKeys","drawWhiteKeyNames","drawBlackKeys","drawBlackKeyNames","minNoteNumber","maxNoteNumber","dims","fontSize","whiteKeyWidth","font","textAlign","textBaseline","txt","getDisplayKey","measureText","fillText","x","w","y","blackKeyWidth","ceil","platePadding","plateW","plateH","plateX","plateY","beginPath","moveTo","lineTo","arcTo","closePath","fill","h","borderRadius","strokeStyle","lineWidth","stroke","getKeyGradient","keyGradient","createLinearGradient","addColorStop","getWhiteKeyPath","radius","strokeWhiteKey","floor","drawBlackKeySvg","drawImage","noShadow","strokeBlackKey","radiusBottom","getBlackKeyPath","radiusTop","pianoCanvasWhite","position","left","zIndex","body","getContext","playedKeysCanvasWhite","pianoCanvasBlack","boxShadow","playedKeysCanvasBlack","onPianoMousedown","onPianoMouseup","onPianoMousemove","onPianoMouseleave","getCanvasPosFromMouseEvent","keyUnderMouse","getKeyAtPos","currentKeyUnderMouse","isMouseDown","clearCurrentKeyUnderMouse","clickedKey","canvHt","clientX","clientY","windowHeight","DebugRender","active","noteInfoBoxesToDraw","fpsFilterStrength","frameTime","lastTimestamp","performance","now","addNote","note","render","renderInfos","mouseX","mouseY","menuHeight","thisTimestamp","timePassed","toFixed","renderNoteDebugInfo","amountOfNotesDrawn","trackIndex","filter","isMouseInRenderInfo","drawNoteInfoBox","c","lines","midiNoteNumber","timestamp","offTime","duration","velocity","track","channel","l","OverlayRender","overlays","addOverlay","message","totalDuration","overlay","globalAlpha","setAlphaForOverlay","wd","ratio","NoteParticleRender","particles","Map","createParticles","amnt","random","rndX","motX","motY","lifeTime","createParticle","has","set","updateParticles","particleArray","particle","updateParticle","clearDeadParticles","delete","renderParticle","rad","arc","PI","PianoParticleRender","noteRenderinfo","isWhite","keyDims","keyColor","wdRatio","NoteRender","ctxForeground","pianoRender","lastActiveNotes","noteParticleRender","pianoParticleRender","time","renderInfoByTrackMap","inputActiveNotes","inputPlayedNotes","drawSustainedNotes","activeNotesByTrackMap","getActiveNotesByTrackMap","renderActiveNotesEffects","drawNotes","currentActiveNotes","renderActivePianoKeys","createNoteParticles","drawInputNotes","notesRenderInfoBlack","notesRenderInfoWhite","drawSustainedNote","sustainH","sustainY","rect","getActiveNotes","activeNotesBlack","isOn","activeNotes","renderActiveNoteEffect","noteDoneRatio","wOffset","pow","doNotePath","incomingWhiteNotes","incomingBlackNotes","playedWhiteNotes","playedBlackNotes","getIncomingAndPlayedNotes","drawIncomingNotes","drawPlayedNotes","rectAbovePiano","rectBelowPiano","save","clip","drawNoteAfter","strokeActiveAndOthers","restore","drawNoteBefore","noteInfo","createNoteParticle","drawNote","noteName","getDisplayNoteName","avgColorVal","getAverageColorValue","textX","textY","noteRenderInfo","noteId","strokeNote","overWriteParams","isRounded","tl","tr","br","bl","defaultRadius","side","quadraticCurveTo","drawRoundRect","colWhite","colBlack","getAlphaFromY","setMenuHeight","CONST","startsWith","parts","match","warn","SustainRender","lookBackTime","lookAheadTime","sustainPeriodFillStyle","sustainOnStrokeStyle","sustainOffStrokeStyle","sustainOnOffFont","sustainsBySecond","sustainPeriods","renderSustainOnOffs","renderSustainPeriods","getSecondsDisplayedAfter","getSecondsDisplayedBefore","lookUpTime","sustain","getYForTime","firstSecondShown","lastSecondShown","period","start","end","yStart","yEnd","MarkerRenderer","markers","marker","txtWd","MAX_NOTE_NUMBER","RenderDimensions","resizeCallbacks","numberOfWhiteKeysShown","innerWidth","innerHeight","keyDimensions","computeKeyDimensions","func","pianoPositionY","isNoteBlack","getKeyX","pianoSettingsRatio","getWhiteKeyNumber","noteToHeightConst","getNoteToHeightConst","getNoteDimensions","currentTime","noteStartTime","noteEndTime","sustainOffTime","dur","hCorrection","minNoteHeight","reversed","showSustainedNotes","endTime","isNaN","endRatio","getMilisecondsDisplayedAfter","tmpH","tmpSustainH","pianoPos","showAll","setZoom","fitSong","range","zoomIn","zoomOut","moveViewLeft","moveViewRight","numOfWhiteKeysInRange","BackgroundRender","renderIfColorsChanged","col1","col2","col3","pianoPosition","bgHeight","bgY","whiteKey","MeasureLinesRender","measureLines","currentSecond","tempoLine","ht","ProgressBarRender","progressPercent","isShowingAMarker","xPos","theTracks","isAnyTrackPlayalong","trackId","requiredToPlay","getTrackColor","setTrackColor","colorId","MidiLoader","loadFile","response","fetch","ok","arrayBuffer","Uint8Array","Parser","headerChunk","readChunk","header","format","readUInt16","numTracks","timeDivision","framesPerSecond","ticksPerFrame","ticksPerBeat","parseHeader","tracks","eof","trackChunk","parseTrack","midiData","temporalData","setTemporal","parseMidi","parser","events","event","readEvent","lastEventTypeByte","deltaTime","readVarInt","eventTypeByte","readUInt8","param1","running","eventType","byte9","amount","controllerType","programNumber","readBytes","meta","metatypeByte","readString","port","microsecondsPerBeat","readUInt24","hourByte","frameRate","hour","sec","frame","subFrame","numerator","denominator","metronome","thirtyseconds","readInt8","scale","buffer","bufferLen","pos","u","readInt16","readInt24","readUInt32","bytes","fromCharCode","midiObj","trackStates","beatsPerMinute","totTime","bpms","generatedBeats","beatsBySecond","channels","pitchBend","volume","volumeControl","mute","mono","omni","solo","getDefaultChannels","t","nextEventIndex","ticksToNextEvent","midiEvent","getNextEvent","nextEventTrack","nextEvent","ticksToEvent","processNext","newBPM","beatsToGenerate","secondsToGenerate","temporalDelta","beatTime","beatSecond","channelVolume","bpm","Song","fileName","timeSignature","keySignarture","speed","notesBySeconds","controlEvents","otherTracks","activeTracks","microSecondsPerBeat","idCounter","processEvents","log","getStart","getNoteSequence","getEnd","noteSequence","sort","lastNote","getOffset","smpteOffset","getMeasureLines","setMeasureLines","thirtySeconds","beatsPerMeasure","skippedBeats","second","beat","setSustainPeriods","getMicrosecondsPerBeat","getBPM","getNotes","from","to","secondStart","secondEnd","notes","getAllInstruments","instruments","programs","program","isFinite","midiTrack","newTrack","tempoChanges","distributeEvents","setNoteOffTimestamps","setNoteSustainTimestamps","setNotesBySecond","keySignature","notesSequence","getNoteRange","seq","currentSustains","sustainOnTime","sustainDuration","findOffNote","onNote","offVelocity","buffers","getBufferForNote","soundfontName","noteKey","hasBuffer","getLoader","loaderSingleton","startLoad","getLoadingDiv","getLoadingText","loading","loadAnimation","stopLoad","currentText","requestAnimationFrame","setLoadMessage","msg","loadingText","loadingDiv","spinner","SoundfontLoader","loadInstrument","baseUrl","then","statusText","scr","language","newData","catch","loadInstruments","Promise","all","getBuffers","createBuffers","unsortedBuffers","noteBuffer","promises","MIDI","base64Buffer","getBase64Buffer","getNoteBuffer","promise","resolve","reject","decodeAudioData","decodedBuffer","str","split","Base64Binary","decodeArrayBuffer","TIME_CONST","GainNodeController","context","createGainNode","gainNode","createGain","gain","setTargetAtTime","setAttackAndDecay","gainValue","adsrValues","endOfAttackTime","attack","sustainValue","endOfDecayTime","decay","linearRampToValueAtTime","setReleaseGainNode","release","endAt","isSustained","getAdsrValues","releasePedal","releaseKey","AudioNote","source","createBufferSource","connectSource","connect","getGainNode","destination","gainNodeController","suspend","stop","play","endSourceAt","createCompleteAudioNote","currentSongTime","playbackSpeed","isPlayalong","audioNote","getNoteGain","contextTimes","isPlayAlong","delayUntilNote","delayCorrection","getPlayalongDelayCorrection","sustainOff","getContextTimesForNote","ctxTimes","gainNodeGen","maxGainLevel","getAdsrAdjustedForDuration","createCompleteGainNode","AudioPlayer","AudioContext","webkitAudioContext","audioNotes","loadMetronomeSounds","getContextTime","isRunning","state","resume","stopAllSources","createContinuousNote","wasSuspended","createContinuousGainNode","createContinuousAudioNote","noteOffContinuous","playCompleteNote","playBeat","newMeasure","ctxTime","metronomSound1","metronomSound2","switchSoundfont","currentSong","loadInstrumentsForSong","loadBuffers","audioPl","request","XMLHttpRequest","open","responseType","undecodedAudio","send","request2","instrumentsOfSong","neededInstruments","theMidiHandler","noMidiMessage","init","requestMIDIAccess","onMIDIInit","onMIDIReject","alert","getAvailableInputDevices","Array","midiAccess","inputs","values","getAvailableOutputDevices","outputs","setNoteOnCallback","noteOnCallback","addInput","device","onmidimessage","MIDIMessageEventHandler","clearInput","addOutput","activeOutput","clearOutput","clearInputs","isDeviceActive","isOutputDeviceActive","midi","setNoteOffCallback","noteOffCallback","err","getActiveMidiOutput","isOutputActive","isInputActive","devices","playNote","noteOffVelocity","delayOn","delayOff","noteOnEvent","noteOffEvent","midiOutNoteOff","getMidiHandler","Notification","notifEl","setTimeout","thePlayer","audioPlayer","addInputNoteOn","addInputNoteOff","startDelay","lastTime","progress","paused","playing","scrolling","loadedSongs","Set","muted","mutedAtVolume","inputInstrument","lastMicNote","newSongCallbacks","playTick","getState","getTime","song","addNewSongCallback","wasPaused","pause","nowTime","getTimeWithScrollOffset","scrollOffset","getTimeWithoutScrollOffset","setTime","resetNoteSequence","increaseSpeed","round","getChannel","getCurrentTrackInstrument","noteSeq","nextNote","loadSong","theSong","midiFile","setSong","v","draw","setupTracks","startPlay","handleScroll","stacksize","newScrollOffset","oldTime","newTime","currentContextTime","delta","addMicInputNotes","clearOldPlayedInputNotes","requestNextTick","oldProgress","isSongEnded","playMetronomeBeats","isNextNoteReached","toRemove","isInputKeyPressed","shift","playedBeats","getCurrentSong","beatTimestamp","currentMicNote","wasUsed","lookahead","pauseTime","getNoteVolume","activeNoteObj","getPlayer","getPlayerState","InSongTextRenderer","RuntimeError","code","super","globalObject","global","defined","block","args","line","midLine","prefix","normalizeAngle","sumArray","arr","reduce","Fraction","CATEGORY","GCD","Number","LCM","LCMM","simplify","gcd","param2","otherNumerator","otherDenominator","getNumeratorAndDenominator","lcm","subtract","multiply","divide","equals","compare","fractionA","fractionB","greaterThan","greaterThanEquals","lessThan","lessThanEquals","clone","other","quotient","remainder","makeAbs","toSimplifiedString","toMixedString","s","q","f","Metrics","clear","cacheFont","cacheStyle","getFontInfo","family","size","weight","structuredClone","getStyle","lineDash","shadowBlur","shadowColor","defaultValue","_a","keyParts","lastKeyPart","pop","curr","MetricsDefaults","retVal","keyPart","fontFamily","fontScale","fontWeight","fontStyle","Accidental","cautionary","grace","noteheadAccidentalPadding","leftPadding","accidentalSpacing","Annotation","Bend","ChordSymbol","spacing","subscriptOffset","superscriptOffset","superSubRatio","FretHandFinger","GraceNote","GraceTabNote","NoteHead","minPadding","PedalMarking","Repetition","offsetX","offsetY","coda","segno","Stave","padding","endPaddingMax","endPaddingMin","unalignedNotePadding","StaveConnector","StaveLine","StaveSection","StaveTempo","StaveText","StaveTie","Stem","StringNumber","verticalPadding","stemPadding","rightPadding","Stroke","TabNote","TabSlide","TabStave","TabTie","TextBracket","TextNote","Tremolo","Tuplet","yOffset","textYOffset","Volta","BoundingBox","that","getX","getY","getW","getH","setX","setY","setW","setH","move","mergeWith","boundingBox","newX","newY","newW","newH","FontWeight","FontStyle","fontParser","Font","convertSizeToPixelValue","scaleToPxFrom","pt","unit","toLowerCase","convertSizeToPointValue","validate","fromCSSString","NORMAL","cssFontShorthand","toCSSString","fontInfo","st","trim","wt","sz","scaleSize","scaleFactor","isBold","parsedWeight","isItalic","ITALIC","load","fontName","descriptors","thisArg","_arguments","generator","FontFace","files","FILES","HOST_URL","fontFace","fontFaceLoadPromise","fontFaceSet","fonts","P","fulfilled","next","rejected","done","getURLForFont","px","em","in","mm","cm","Academico","Bravura","Edwin","Gonville","Gootville","Leipzig","Leland","MuseJazz","Nepomuk","Petaluma","Sebastian","Index","class","Registry","getDefaultRegistry","defaultRegistry","enableDefaultRegistry","registry","disableDefaultRegistry","setIndexValue","elem","updateIndex","oldValue","getElementById","getAttribute","register","onRegister","_b","getElementsByAttribute","indexAttr","indexAttrVal","getElementsByType","getElementsByClass","onUpdate","info","Element","newID","ID","setTextMeasurementCanvas","txtCanvas","getTextMeasurementCanvas","OffscreenCanvas","_text","metricsValid","_textMetrics","fontBoundingBoxAscent","fontBoundingBoxDescent","actualBoundingBoxAscent","actualBoundingBoxDescent","actualBoundingBoxLeft","actualBoundingBoxRight","alphabeticBaseline","emHeightAscent","emHeightDescent","hangingBaseline","ideographicBaseline","_height","_width","xShift","yShift","attrs","rendered","_fontInfo","addChild","getCategory","setStyle","setGroupStyle","applyStyle","setShadowColor","setShadowBlur","setFillStyle","setStrokeStyle","setLineWidth","setLineDash","drawWithStyle","checkContext","hasClass","indexOf","addClass","isRendered","setRendered","getAttributes","getSVGElement","suffix","oldID","getBoundingBox","textMetrics","setContext","setFont","defaultTextFont","fontIsObject","fontIsString","sizeWeightStyleAreUndefined","assign","getFont","setFontSize","getFontSize","getFontScale","fontSizeInPoints","fontSizeInPixels","getWidth","setWidth","setYShift","getYShift","setXShift","getXShift","setText","getText","renderText","yPos","measureWidth","getTextMetrics","getHeight","setOriginX","bbox","setOriginY","setOrigin","ModifierPosition","Glyphs","Modifier","Position","PositionString","center","CENTER","above","ABOVE","below","BELOW","LEFT","right","RIGHT","textLine","spacingFromNextModifier","reset","getNote","checkAttachedNote","setNote","getIndex","checkIndex","setIndex","getModifierContext","modifierContext","checkModifierContext","setModifierContext","getPosition","setPosition","setTextLine","setSpacingFromNextModifier","getSpacingFromNextModifier","alignSubNotesWithNote","subNotes","tickContext","getTickContext","metrics","getMetrics","stave","getStave","subNoteXOffset","modLeftPx","modRightPx","subNote","subTickContext","setStave","setXOffset","Music","NUM_TONES","canonicalNotes","roots","rootValues","rootIndexes","diatonicIntervals","diatonicAccidentals","unison","accidental","m2","M2","m3","M3","p4","dim5","p5","m6","M6","b7","M7","octave","intervals","b2","min2","S","H","maj2","T","W","b3","min3","maj3","b5","aug4","b6","aug5","maj6","m7","min7","dom7","maj7","scales","major","minor","ionian","dorian","phyrgian","lydian","mixolydian","aeolian","locrian","scaleTypes","M","accidentals","noteValues","rootIndex","intVal","cn","cb","cbb","dn","db","dbb","en","eb","ebb","fn","fb","fbb","gn","gb","gbb","an","ab","abb","bn","bb","bbb","isValidNoteValue","isValidIntervalValue","interval","getNoteParts","noteString","exec","root","getKeyParts","keyString","getNoteValue","getIntervalValue","intervalString","getCanonicalNoteName","noteValue","getCanonicalIntervalName","intervalValue","getRelativeNoteValue","direction","sum","getRelativeNoteName","rootValue","multiplier","reverseInterval","relativeNoteName","getScaleTones","tones","getIntervalBetween","note1","note2","difference","createScaleMap","keySigParts","scaleName","keySigString","noteLocation","scaleMap","rootName","durations","RESOLUTION","durationAliases","keySignatures","C","num","Am","F","Dm","Bb","Gm","Eb","Cm","Ab","Fm","Db","Bbm","Gb","Ebm","Cb","Abm","G","Em","D","Bm","A","E","B","clefs","treble","lineShift","bass","tenor","alto","soprano","percussion","subbass","french","notesInfo","CN","CB","CBB","DN","DB","DBB","EN","EB","EBB","FN","FB","FBB","GN","GB","GBB","AN","AB","ABB","BN","BB","BBB","R","X","accidentalSharp","accidentalDoubleSharp","accidentalFlat","accidentalDoubleFlat","accidentalNatural","accidentalParensLeft","accidentalParensRight","accidentalThreeQuarterTonesFlatZimmermann","accidentalQuarterToneFlatStein","accidentalThreeQuarterTonesSharpStein","accidentalQuarterToneSharpStein","accidentalKucukMucennebSharp","bs","accidentalBakiyeFlat","bss","accidentalBuyukMucennebFlat","accidentalSori","accidentalKoron","bbs","accidentalBuyukMucennebSharp","ashs","afhf","articulations","augmentationDot","betweenLines","av","aboveCode","articStaccatissimoAbove","belowCode","articStaccatissimoBelow","articAccentAbove","articAccentBelow","articTenutoAbove","articTenutoBelow","articMarcatoAbove","articMarcatoBelow","pluckedLeftHandPizzicato","ao","pluckedSnapPizzicatoAbove","pluckedSnapPizzicatoBelow","ah","stringsHarmonic","fermataAbove","fermataBelow","fermataShortAbove","fermataShortBelow","fermataLongAbove","fermataLongBelow","fermataVeryLongAbove","fermataVeryLongBelow","stringsUpBow","am","stringsDownBow","pictChokeCymbal","ornaments","mordent","ornamentShortTrill","mordentInverted","ornamentMordent","turn","ornamentTurn","turnInverted","ornamentTurnSlash","ornamentTrill","upprall","ornamentPrecompSlideTrillDAnglebert","downprall","ornamentPrecompDoubleCadenceUpperPrefix","prallup","ornamentPrecompTrillSuffixDandrieu","pralldown","ornamentPrecompTrillLowerSuffix","upmordent","ornamentPrecompSlideTrillBach","downmordent","ornamentPrecompDoubleCadenceUpperPrefixTurn","lineprall","ornamentPrecompAppoggTrill","prallprall","ornamentTremblement","scoop","brassScoop","doit","brassDoitMedium","fall","brassFallLipShort","doitLong","brassLiftMedium","fallLong","brassFallRoughMedium","bend","brassBend","plungerClosed","brassMuteClosed","plungerOpen","brassMuteOpen","flip","brassFlip","jazzTurn","brassJazzTurn","smear","brassSmear","Tables","clefProperties","clef","keyProperties","keyOctaveGlyph","params","octaveShift","sanitizeDuration","pieces","intValue","glyphName","codeNoteHead","displaced","integerToNote","integer","textWidth","articulationCodes","artic","accidentalCodes","ornamentCodes","ornament","spec","keySpec","accList","getKeySignatures","hasKeySignature","durationNumber","durationToFraction","durationToNumber","durationToTicks","ticks","noteheadDiamondWhole","noteheadDiamondHalf","noteheadDiamondBlack","noteheadTriangleUpWhole","noteheadTriangleUpHalf","noteheadTriangleUpBlack","noteheadXWhole","noteheadXHalf","noteheadXBlack","noteheadCircleX","noteheadSquareWhite","noteheadSquareBlack","noteheadMoonBlack","noteheadTriangleLeftBlack","noteheadTriangleRightBlack","noteheadBlack","noteheadTriangleRoundDownBlack","noteheadDiamondDoubleWhole","noteheadXDoubleWhole","noteheadCircleXDoubleWhole","noteheadCircleXWhole","noteheadCircleXHalf","noteheadCircledDoubleWhole","noteheadCircledWhole","noteheadCircledHalf","noteheadCircledBlack","noteheadDoubleWholeSquare","noteheadTriangleUpDoubleWhole","noteheadTriangleDownDoubleWhole","noteheadTriangleDownWhole","noteheadTriangleDownHalf","noteheadTriangleDownBlack","noteheadSlashedDoubleWhole1","noteheadSlashedWhole1","noteheadSlashedHalf1","noteheadSlashedBlack1","noteheadSlashedDoubleWhole2","noteheadSlashedWhole2","noteheadSlashedHalf2","noteheadSlashedBlack2","restDoubleWhole","restWhole","restHalf","restQuarter","rest8th","rest16th","rest32nd","rest64th","rest128th","noteheadSlashWhiteDoubleWhole","noteheadSlashWhiteWhole","noteheadSlashWhiteHalf","noteheadSlashVerticalEnds","noteheadDoubleWhole","noteheadWhole","noteheadHalf","null","isCategory","checkAncestors","constructorFcn","getPrototypeOf","UNISON","SOFTMAX_FACTOR","STEM_WIDTH","STEM_HEIGHT","STAVE_LINE_THICKNESS","RENDER_PRECISION_PLACES","durationCodes","stem","beamCount","stemBeamExtension","codeFlagUp","flag8thUp","flag16thUp","flag32ndUp","flag64thUp","flag128thUp","NOTATION_FONT_SCALE","TABLATURE_FONT_SCALE","SLASH_NOTEHEAD_WIDTH","STAVE_LINE_DISTANCE","TEXT_HEIGHT_OFFSET_HACK","accidentalColumnsTable","secondOnBottom","spacedOutTetrachord","spacedOutPentachord","verySpacedOutPentachord","spacedOutHexachord","verySpacedOutHexachord","unicode","sharp","flat","natural","triangle","degrees","circle","validTypes","r","ci","cx","sf","sb","sq","tu","td","TIME4_4","numBeats","beatValue","resolution","isBarline","isGraceNote","isNote","isStaveNote","isStemmableNote","isTabNote","L","DEBUG","leftShift","additionalPadding","accidentalLinePositionsAndSpaceNeeds","prevNote","extraXSpaceNeededForLeftDisplacedNotehead","props","getKeyProps","getLeftDisplacedHeadPx","lineSpace","getSpacingBetweenLines","getYForLine","accLine","extraXSpaceNeeded","spacingBetweenStaveLines","staveLineAccidentalLayoutMetrics","maxExtraXSpaceNeeded","accidentalLinePositionAndSpaceNeeds","accidentalType","priorLineMetric","currentLineMetric","flatLine","dblSharpLine","numAcc","column","totalColumns","noFurtherConflicts","groupStart","groupEnd","checkCollision","getGroupLine","getGroupLines","indexes","lineDifference","indexA","indexB","notColliding","indexPairs","every","line1","line2","groupLength","groupMember","endCase","patternLength","collisionDetected","columnWidths","columnXOffsets","totalShift","accCount","lastAccOnLine","clearance","clearanceRequired","collision","applyAccidentals","voices","tickPositions","tickNoteMap","voice","tickPosition","getTickables","shouldIgnoreTicks","notesAtPosition","getTicks","music","scaleMapKey","tickPos","tickables","modifiedPitches","processNote","isRest","staveNote","keyIndex","accidentalString","pitch","sameAccidental","previouslyModified","getModifiers","modifier","addModifier","getGraceNotes","setAsCautionary","getModifierStartXY","UP","DOWN","WIDTH","HEIGHT","_c","_d","_e","_f","_g","stemUpYOffset","stemDownYOffset","stemUpYBaseOffset","stemDownYBaseOffset","xBegin","xEnd","yTop","yBottom","stemExtension","stemDirection","isStemlet","stemletHeight","renderHeightAdjustment","setOptions","setNoteHeadXBounds","setDirection","setExtension","ext","getExtension","setYBounds","getExtents","isStemUp","ys","stemHeight","innerMostNoteheadY","outerMostNoteheadY","topY","baseY","setVisibility","isVisible","setStemlet","adjustHeightForFlag","adjustHeightForBeam","stemX","stemY","yBaseOffset","stemletYOffset","openGroup","closeGroup","AnnotationHorizontalJustify","AnnotationVerticalJustify","minAnnotationPadding","annotations","leftWidth","rightWidth","maxLeftGlyphWidth","maxRightGlyphWidth","annotation","verticalSpaceNeeded","glyphWidth","getGlyphWidth","horizontalJustification","hasStem","getStemDirection","renderOptions","drawStem","getStem","getNoteType","getNumLines","verticalJustification","VerticalJustify","TOP","noteLine","getLineNumber","leastString","topTextLine","BOTTOM","greatestString","curBottom","rightOverlap","rightShift","leftOverlap","setVerticalJustification","just","VerticalJustifyString","getJustification","setJustification","HorizontalJustifyString","textHeight","getStemX","stemExt","checkStave","checkStem","getYs","yt","getYForTopText","getYForBottomText","getTopLineTopY","extents","getStemExtents","HorizontalJustify","centerStem","CENTER_STEM","bottom","roundToNearestHalf","mathFn","isWithinLines","getRoundingFunction","isStaveOrGraceNote","getTopY","stemTipY","stemBaseY","getBottomY","getInitialOffset","isOnStemTip","Articulation","maxGlyphWidth","getIncrement","articulation","increment","curTop","maxWidth","articWidth","overlap","easyScoreHook","builder","articNameToCode","staccato","tenuto","accent","articString","getFactory","heightShift","codePointAt","setBetweenLines","canSitBetweenLines","staffSpace","isTab","shouldSitOutsideStaff","initialOffset","INITIAL_OFFSET","offsetDirection","articLine","snappedLine","snapLineToStaff","RenderContext","Tickable","_preFormatted","_postFormatted","intrinsicTicks","tickMultiplier","modifiers","tupletStack","alignCenter","centerXShift","ignoreTicks","formatterMetrics","freedom","iterations","space","used","mean","deviation","setIgnoreTicks","flag","checkTickContext","getFormatterMetrics","getCenterXShift","isCenterAligned","setCenterXShift","setCenterAlignment","getVoice","setVoice","getTuplet","tuplet","getTupletStack","resetTuplet","noteCount","notesOccupied","getNoteCount","getNotesOccupied","applyTickMultiplier","setTuplet","addToModifierContext","mc","addMember","setTickContext","tc","preFormat","preFormatted","postFormat","postFormatted","getIntrinsicTicks","setIntrinsicTicks","getTickMultiplier","setDuration","getAbsoluteX","Note","getGlyphProps","codeHead","plotMetrics","xStart","leftDisplacedHeadPx","xPre1","xAbs","xPost1","notePx","xPost2","rightDisplacedHeadPx","xFreedomRight","xWidth","x1","x2","yy","drawDot","spaceDeviation","parseDuration","durationString","dots","parseNoteStruct","noteStruct","durationProps","customTypes","currentTicks","parsedNoteStruct","keyProps","noteType","durationOverride","glyphProps","customGlyphs","annotationSpacing","strokePx","getPlayNote","setPlayNote","addStroke","setYs","getRightDisplacedHeadPx","setLeftDisplacedHeadPx","setRightDisplacedHeadPx","isTopNote","getLineForRest","getDuration","isDotted","getModifiersByType","getBeam","beam","checkBeam","hasBeam","setBeam","signature","getRightParenthesisPx","getLeftParenthesisPx","getFirstDotPx","parentheses","getMembers","glyphPx","getNoteStartX","getTieRightX","tieStartX","getTieLeftX","tieEndX","getKeys","StaveModifierPosition","BarlineType","StaveModifier","getPadding","setPadding","setLayoutMetrics","layoutMetrics","getLayoutMetrics","Barline","typeString","single","SINGLE","double","DOUBLE","END","repeatBegin","REPEAT_BEGIN","repeatEnd","REPEAT_END","repeatBoth","REPEAT_BOTH","none","NONE","thickness","TYPE","widths","paddings","layoutMetricsMap","xMin","xMax","paddingLeft","paddingRight","BEGIN","setType","getType","drawVerticalBar","drawVerticalEndBar","drawRepeatBar","doubleBar","staveCtx","botY","getBottomLineBottomY","begin","dotX","dotRadius","dotY","BarNote","barline","calculateStemDirection","lineSum","keyProp","BEAM_LEFT","BEAM_BOTH","Beam","_stemDirection","getDefaultBeamGroups","timeSig","groups","group","beatTotal","applyAndGetBeams","generateBeams","config","tickGroups","unprocessedNotes","currentTickGroup","noteGroups","currentGroup","nextTickGroup","nextGroup","currentGroupTotalTicks","unprocessedNote","ticksPerGroup","totalTicks","getTotalTicks","unbeamable","createGroups","sanitizedGroups","tempGroup","isFirstOrLast","breaksOnEachRest","beamRests","breaksOnFirstOrLastRest","beamMiddleOnly","breakOnStemChange","maintainStemDirections","prevDirection","isUnbeamableDuration","sanitizeGroups","findFirstNote","setStemDirection","applyStemDirection","beamedNoteGroups","beamable","allTuplets","uniqueTuplets","noteTuplet","getTuplets","beams","showStemlets","secondaryBreaks","secondaryBreakTicks","flatBeams","flatBeamOffset","setTupletLocation","bracketed","setBracketed","autoStem","slope","forcedPartialDirections","_ticks","stemWeight","_beamCount","getBeamCount","breakOnIndexes","beamWidth","maxSlope","minSlope","slopeIterations","slopeCost","stemletExtension","partialBeamLength","minFlatBeamOffset","breakSecondaryAt","setPartialBeamSideAt","noteIndex","unsetPartialBeamSideAt","getSlopeY","firstX","firstY","calculateSlope","firstNote","initialSlope","firstStemTipY","firstStemX","getStemSlope","minCost","MAX_VALUE","bestSlope","totalStemExtension","yShiftTemp","adjustedStemTipY","diff","idealSlope","cost","calculateFlatSlope","total","extremeY","extremeBeamCount","currentExtreme","offset","extremeTest","newOffset","getBeamYToDraw","beamY","applyStemExtensions","beamedStemTipY","preBeamExtension","beamExtension","crossStemExtension","totalBeamWidth","lookupBeamDirection","prevTick","tick","nextTick","forcedBeamDirection","lookupDuration","prevNoteGetsBeam","nextNoteGetsBeam","noteGetsBeam","getBeamLines","tickOfDuration","beamStarted","beamLines","currentBeam","previousShouldBreak","tickTally","shouldBreak","beamAlone","beamDirection","lastBeam","drawStems","drawBeamLines","validBeamDurations","beamThickness","j","beamLine","startBeamX","startBeamY","lastBeamX","lastBeamY","bends","lastWidth","stringPos","setStyleLine","styleLine","getStyleLine","phrase","tap","bendWidth","releaseWidth","updateWidth","setTap","getTextHeight","totalWidth","additionalWidth","drawWidth","lowestY","bendHeight","annotationY","renderBend","cpX","cpY","renderRelease","renderArrowHead","yBase","renderX","lastBend","lastBendDrawWidth","lastDrawnWidth","isHTMLCanvas","HTMLCanvasElement","toDataURL","CanvasContext","CANVAS_BROWSER_SIZE_LIMIT","sanitizeCanvasDims","limit","stack","context2D","curTransfrom","getTransform","cls","openRotation","angleDegrees","translate","rotate","closeRotation","setTransform","setBackgroundFillStyle","blur","sqrt","setLineCap","capType","lineCap","dash","devicePixelRatio","dpr","pointerRect","bezierCurveTo","cp1x","cp1y","cp2x","cp2y","cpx","cpy","startAngle","endAngle","counterclockwise","ChordSymbolBlock","symbolModifier","vAlign","isSuperscript","SymbolModifiers","SUPERSCRIPT","isSubscript","SUBSCRIPT","ChordSymbolHorizontalJustify","ChordSymbolVerticalJustify","CurvePosition","spacingBetweenBlocks","symbols","symbol","lineSpaces","symbolBlocks","sup","sub","prev","getVertical","getReportWidth","getHorizontal","horizontal","reportWidth","setReportWidth","getSymbolBlock","symbolBlock","smallerFontSize","addSymbolBlock","parameters","addText","addTextSuperscript","addTextSubscript","addGlyphSuperscript","glyphs","addGlyph","addGlyphOrText","char","addLine","setVertical","vj","setHorizontal","hj","stemBase","diminished","csymDiminished","halfDiminished","csymHalfDiminished","csymAugmented","augmented","majorSeventh","csymMajorSeventh","csymMinor","leftParen","rightParen","leftBracket","csymBracketLeftTall","rightBracket","csymBracketRightTall","leftParenTall","rightParenTall","csymDiagonalArrangementSlash","over","csymAccidentalSharp","csymAccidentalFlat","symbolModifiers","Clef","types","gClef","fClef","cClef","unpitchedPercussionClef1","sixStringTabClef","gClef8va","fClef8va","gClef8vb","fClef8vb","getPoint","ClefNote","getClef","TickContext","getNextContext","tContext","contexts","tContexts","tickID","currentTick","maxTicks","maxTickable","minTicks","minTickable","xBase","xOffset","tickablesByVoice","totalLeftPx","totalRightPx","getTickID","getXBase","setXBase","getXOffset","getMaxTicks","getMinTicks","getMaxTickable","getMinTickable","getTickableForVoice","voiceIndex","getTickablesByVoice","getCenterAlignedTickables","tickable","getCurrentTick","setCurrentTick","addTickable","getDeviationCost","getAverageDeviationCost","Crescendo","extendLeft","extendRight","decrescendo","setLine","setHeight","setDecrescendo","decresc","nextContext","beginX","endX","halfHeight","reverse","renderHairpin","Curve","nearHead","NEAR_HEAD","nearTop","NEAR_TOP","positionEnd","invert","cps","openingDirection","setNotes","isPartial","renderCurve","lastX","lastY","cp0x","cp0y","controlPointSpacing","metric","endMetric","getTieStartX","getTieEndX","Dot","getDots","buildAndAttach","dot","dotList","maxShiftMap","dotShift","lastLine","prevDottedSpace","halfShiftY","dotShiftY","setDotShiftY","forceFlagRight","nums","numsList","shiftLeft","shiftRight","shiftL","shiftR","numShiftL","numShiftR","xWidthL","xWidthR","numShift","numWidth","fingerings","fingeringString","Fingering","fingering","finger","setFretHandFinger","getFretHandFinger","setOffsetX","setOffsetY","flattenMatches","matchedString","results","grammar","errorPos","expect","matchFail","returnPos","matchSuccess","matchToken","token","noSpace","regexp","success","incrementPos","expectOne","rule","maybe","allMatches","oneMatch","localPos","or","gotOne","numMatches","expectOneOrMore","more","expectZeroOrMore","ruleFunc","oneOrMore","zeroOrMore","matches","run","EasyScore","EasyScoreGrammar","LINE","PIECE","PIECES","EOL","CHORDORNOTE","PARAMS","commitPiece","COMMA","DURATION","DOTS","OPTS","CHORD","SINGLENOTE","LPAREN","NOTES","RPAREN","addChord","NOTE","NOTENAME","ACCIDENTAL","OCTAVE","addSingleNote","MICROTONES","ACCIDENTALS","DOT","setNoteDots","SLASH","MAYBESLASH","TYPES","setNoteType","DURATIONS","setNoteDuration","LBRACKET","KEYVAL","KEYVALS","RBRACKET","KEY","EQUALS","VAL","addNoteOption","SVAL","DVAL","Piece","chord","Builder","factory","commitHooks","rollingDuration","resetPiece","getElements","addCommitHook","commitHook","piece","accid","standardAccidentals","notePiece","GhostNote","StaveNote","setId","commaSeparatedRegex","setClass","defaults","throwOnError","Voice","addTickables","customGlyph","ledger","customGlyphCode","slashed","isDisplaced","getLine","displacementStemAdjustment","getYForNote","drawModifiers","Flag","StemmableNote","setStem","buildStem","buildFlag","hasFlag","flagCode","fromCodePoint","getBaseCustomNoteHeadGlyphProps","getStemLength","getStemExtension","getStemMinimumLength","frac","beamIsUndefined","getCenterGlyphX","flagHeight","stemExtensionOverride","setStemLength","stemOptions","shiftRestVertical","rest","dir","maxLine","minLine","setKeyLine","getKeyLine","LEDGER_LINE_OFFSET","minNoteheadPadding","notesList","sortedKeyProps","minL","stemMax","stemMin","maxL","_noteHeads","isrest","voiceShift","getVoiceShiftWidth","noteU","noteM","noteL","voiceXShift","lineSpacing","lineDiff","noteUHead","noteLHead","centerRest","ledgerLineStyle","useDefaultHeadX","calculateKeyProps","noteHeadStyles","noteHead","buildNoteHeads","noteHeadStyle","calcNoteDisplacements","noteProps","notehead","calculateOptimalStemDirection","getNoteHeadBounds","noteStemHeight","bbFlag","resultLine","thisLine","isChord","setNoteDisplaced","getRightShift","restLine","isInnerNoteIndex","restShift","setStemStyle","getStemStyle","setLedgerLineStyle","getLedgerLineStyle","setFlagStyle","getFlagStyle","noteHeads","setKeyStyle","noteHeadPadding","shouldDrawFlag","nonDisplacedX","displacedX","highestDisplacedLine","lowestDisplacedLine","highestLine","lowestLine","highestNonDisplacedLine","lowestNonDisplacedLine","getNoteHeadBeginX","getNoteHeadEndX","drawLedgerLines","doubleWidth","minX","drawLedgerLine","normal","ledgerWidth","getDefaultLedgerLineStyle","noteheadParam","hasNoBeam","drawFlag","flagX","flagY","drawNoteHeads","superStemExtension","midLineDistance","linesOverOctaveFromMidLine","spacingBetweenLines","shouldRenderStem","cp1","cp2","shortTieCutoff","cp1Short","cp2Short","textShiftX","firstXShift","lastXShift","tieSpacing","getDirection","firstIndexes","lastIndexes","renderTie","firstYs","lastYs","topControlPointY","bottomControlPointY","renderTieText","centerX","getFirstX","getLastX","getFirstYs","getLastYs","synchronizeIndexes","createHammeron","createPulloff","VoiceMode","Mode","voiceTime","resolutionMultiplier","mode","STRICT","ticksUsed","largestTickWidth","softmaxFactor","smallestTickCount","getTicksUsed","getLargestTickWidth","getSmallestTickCount","getMode","setMode","getResolutionMultiplier","getActualResolution","setStrict","strict","SOFT","isComplete","FULL","setSoftmaxFactor","factor","expTicksUsed","reCalculateExpTicksUsed","softmax","tickValue","exp","GraceNoteGroup","gracenoteGroups","groupList","gracenoteGroup","isStavenote","formatWidth","groupShift","graceNotes","showSlur","slur","slurYShift","formatter","Formatter","joinVoices","getMinTotalWidth","beamNotes","graceNote","TieClass","NoteSubGroup","Ornament","numLines","ornamentNoteTransition","ornamentAttack","ornamentAlignWithNoteHead","ornamentRelease","ornamentLeft","ornamentRight","ornamentYShift","ornamentArticulation","delayed","accidentalLowerPadding","accidentalUpperPadding","adjustForStemDirection","setDelayed","setUpperAccidental","accidentalUpper","setLowerAccidental","accidentalLower","glyphX","glyphY","delayXShift","startX","charCodeAt","Parenthesis","parenthesis","ATTRIBUTES_TO_IGNORE","path","TWO_PI","SVGContext","precision","backgroundFillStyle","fontCSSString","svg","pen","NaN","defaultFontAttributes","scaleX","scaleY","groupAttributes","applyAttributes","stateStack","svgElementType","createElementNS","visibleWidth","visibleHeight","setViewBox","viewBoxOrMinX","minY","viewBoxString","attrNamesToIgnore","nodeName","attrName","setAttributeNS","lastChild","rectangle","y1","y2","x0","cos","y0","sin","tmpStartTest","tmpEndTest","large","sweep","getShadowStyle","measureTextElement","textContent","savedState","fontAttributes","RendererBackends","RendererLineEndType","TextJustification","VoltaType","Renderer","buildContext","elementId","backend","background","renderer","lastContext","getCanvasContext","Backends","CANVAS","getSVGContext","SVG","drawDashedLine","fromX","fromY","toX","toY","dashPattern","dx","dy","angle","atan2","idx","dashLength","nx","ny","arg0","arg1","maybeElement","willReadFrequently","HTMLDivElement","isHTMLDiv","LineEndType","extraXSpaceForDisplacedNotehead","glyphLine","numXShift","stringNumber","stemOffset","dashed","leg","drawCircle","setLineEndType","setStringNumber","setLastNote","setDashed","setDrawCircle","len","pattern","strokes","strokeList","string","getPositions","strokeShift","allVoices","addEndNote","noteEnd","yPositions","arrow","arrowY","Type","BRUSH_DOWN","ROLL_DOWN","RASGUEADO_DOWN","arrowheadBlackUp","BRUSH_UP","ROLL_UP","RASGUEADO_UP","arrowheadBlackDown","ARPEGGIO_DIRECTIONLESS","lineGlyph","wiggleArpeggiatoDown","wiggleArpeggiatoUp","Vibrato","vibratos","vibrato","setVibratoWidth","myWidth","setVibratoCode","vx","vy","ModifierContext","members","formatted","member","getLeftShift","KeySignature","cancelKeySpec","alterKeySpec","setKeySig","paddingForced","convertToGlyph","acc","nextAcc","extraWidth","prevGlyph","isNatural","yShiftDiff","el1","el2","cancelKey","convertToCancelAccList","cancelAccList","differentTypes","naturals","cancelled","addToStave","calculateDimensions","convertAccLines","customLines","alterKey","convertToAlterAccList","firstAccidentalType","getEndClef","symbolType","setShiftX","setShiftY","getModifierXShift","CODA_RIGHT","drawCodaFixed","CODA_LEFT","drawSymbolText","SEGNO_LEFT","drawSegnoFixed","SEGNO_RIGHT","DC","DC_AL_CODA","DC_AL_FINE","DS","DS_AL_CODA","DS_AL_FINE","FINE","TO_CODA","drawCoda","getVerticalBarWidth","section","drawRect","setDrawRect","headroom","tempo","shiftY","durationToCode","metNoteDoubleWholeSquare","long","metNoteDoubleWhole","breve","metNoteWhole","whole","metNoteHalfUp","half","metNoteQuarterUp","quarter","metNote8thUp","eighth","metNote16thUp","metNote32ndUp","metNote64thUp","metNote128thUp","metNote256thUp","metNote512thUp","metNote1024thUp","setTempo","shiftX","duration2","dots2","elText","metAugmentationDot","GLYPHS","mordentUpper","mordentLower","dynamicForte","dynamicPiano","dynamicMezzo","dynamicSforzando","z","dynamicZ","pedalOpen","keyboardPedalPed","pedalClose","keyboardPedalUp","caesuraStraight","caesura","caesuraCurved","breath","breathMarkComma","breathMarkTick","superscript","subscript","smooth","justification","Justification","getBottomLineY","vertHeight","BEGIN_END","TimeSignature","timeSpec","customPadding","validateArgs","isNumeric","topStartX","botStartX","topText","botText","topLine","bottomLine","setTimeSig","getTimeSigCode","smallSig","timeSigCommon","timeSigCutCommon","timeSigPlusSmall","timeSigPlus","timeSigMinus","timeSigParensLeftSmall","timeSigParensLeft","timeSigParensRightSmall","timeSigParensRight","makeTimeSignatureGlyph","topDigits","botDigits","topWidth","botWidth","assertIsValidTimeSig","getTimeSpec","getIsNumeric","setIsNumeric","drawAt","SORT_ORDER_BEG_MODIFIERS","SORT_ORDER_END_MODIFIERS","defaultPadding","measure","endClef","verticalBarWidth","leftBar","rightBar","spacingBetweenLinesPx","spaceAboveStaffLn","spaceBelowStaffLn","topTextPosition","bottomTextPosition","lineConfig","bounds","defaultLedgerLineStyle","resetLines","addEndModifier","setDefaultLedgerLineStyle","visible","setNoteStartX","getNoteEndX","setNumLines","mod","setMeasure","getMeasure","begBarline","setRepetitionType","setVoltaType","setSection","staveSection","setStaveText","getLineForY","getYForGlyphs","setBegBarType","setEndBarType","setClef","clefSpec","addClef","setEndClef","setKeySignature","addKeySignature","setEndKeySignature","setTimeSignature","timeSignatures","addTimeSignature","setEndTimeSignature","addEndClef","addEndTimeSignature","addTrebleGlyph","noPosition","noCategory","sortByCategory","order","temp","endBarline","begModifiers","endModifiers","lastBarlineIdx","lineWidthCorrection","getConfigForLines","setConfigForLine","lineNumber","setConfigForLines","linesConfiguration","formatBegModifiers","staves","adjustCategoryStartX","minStartX","adjustX","allModifiers","bAdjust","maxX","drawBoldDoubleLine","topX","BOLD_DOUBLE_LEFT","BOLD_DOUBLE_RIGHT","variableWidth","topStave","bottomStave","texts","newType","textElement","SINGLE_RIGHT","THIN_DOUBLE","attachmentHeight","SINGLE_LEFT","BRACE","x3","y3","cpx1","cpy1","cpx2","cpy2","cpx3","cpy3","cpx4","cpy4","cpx5","cpy5","cpx6","cpy6","cpx7","cpy7","cpx8","cpy8","BRACKET","bracketTop","bracketBottom","getRestLineForNextNoteGroup","currRestLine","currNoteIndex","nextRestLine","singleRight","singleLeft","brace","bracket","boldDoubleLeft","boldDoubleRight","thinDouble","SimpleFormat","paddingBetween","accumulator","plotDebugging","stavePadding","contextGaps","gaps","gap","totalCost","FormatAndDraw","autoBeam","alignRests","formatToStave","FormatAndDrawTab","tabstave","tabnotes","opts","notevoice","tabvoice","AlignRestsToNotes","alignAllNotes","alignTuplets","currTickable","prevTickable","formatterOptions","globalSoftmax","maxIterations","justifyWidth","durationStats","minTotalWidth","hasMinTotalWidth","tickContexts","array","modifierContexts","lossHistory","preCalculateMinTotalWidth","unalignedPadding","unalignedCtxCount","wsum","dsum","createTickContexts","contextList","contextMap","wavg","wvar","ll","wpads","davg","dvar","dpads","padmax","unalignedPad","createModifierContexts","tickToContextMap","integerTicks","staveTickToContextMap","newContext","tickList","addToContext","createContexts","contextArray","getTickContexts","renderingContext","voicesParam","evaluate","firstContext","calculateIdealDistances","adjustedJustifyWidth","backTickable","prevContext","backVoices","matchingVoices","maxNegativeShiftPx","Infinity","expectedDistance","thisTickable","insideLeftEdge","backMetrics","insideRightEdge","fromTickable","fromTickablePx","shiftToIdealDistances","idealDistances","spaceAccum","contextX","ideal","errorPx","negativeShiftPx","configMinPadding","configMaxPadding","targetWidth","distances","actualWidth","minDistance","mdCalc","di","calcMinDistance","paddingMaxCalc","curTargetWidth","lastTickablePadding","lastTickable","tickWidth","paddingMax","paddingMin","prevMetrics","currMetrics","leftNoteEdge","rightNote","rightMetrics","stats","updateStats","totalDeviation","tune","alpha","optionsParam","ERROR_MSG","parameter","GlyphNote","setGlyph","slash","ret","slashBBox","calcBeamedNotesSlashBBox","noteHeadBounds","noteHeadWidth","defaultOffsetY","slashStemOffset","slashBeamOffset","protrusions","beamSlope","beamAngle","atan","iPointOnBeam","slashAngle","protrusionStemDeltaX","protrusionStemDeltaY","protrusionBeamDeltaX","protrusionBeamDeltaY","stem0X","KeySigNote","MultiMeasureRest","numberOfMeasures","xs","hasPaddingLeft","hasPaddingRight","hasLineThickness","hasSymbolSpacing","numberGlyphPoint","digit","lineThickness","symbolSpacing","useSymbols","showNumber","numberLine","serifThickness","semibreveRestGlyphScale","getXs","drawLine","elWidth","drawSymbols","n4","n2","n1","elMiddle","restLonga","elTop","yMiddle","createSustain","createSostenuto","pedal","MIXED","setCustomText","createUnaCorda","TEXT","depressText","pedalDepress","releaseText","pedalRelease","bracketHeight","textMarginRight","bracketLineWidth","depress","drawBracketed","prevX","prevY","isPedalDepressed","nextNoteIsSame","prevNoteIsSame","noteNdx","noteEndX","drawText","mixed","CODES","repeat1Bar","repeat2Bars","repeat4Bars","repeatBarSlash","RepeatNote","drawArrowHead","roundedEnd","drawStartArrow","drawEndArrow","arrowheadLength","arrowheadAngle","textPositionVertical","TextVerticalPosition","textJustification","applyLineStyle","drawArrowLine","pt1","pt2","bothArrows","distance","endY","startY","lineAngle","angle1","angle2","bottomX","bottomY","startPosition","endPosition","firstIndex","lastIndex","upwardsSlope","noteheadWidth","verticalPosition","System","partStaves","partStaveInfos","partVoices","spaceBetweenStaves","autoWidth","noJustification","debugFormatter","formatIterations","noPadding","details","formatOptions","getStaves","getVoices","addConnector","connector","addStave","staveOptions","spaceAbove","spaceBelow","debugNoteMetrics","addVoices","optionsDetails","debugNoteMetricsYs","part","fretElement","positions","ghost","drawDots","drawStemThroughStave","setGhost","tabToElement","fret","getStemY","stemDownLine","stemStartLine","drawStemThrough","stemThrough","unusedStrings","stringsUsed","getUnusedStringGroups","stemLines","upStem","downStem","totalLines","strings","containsLastString","containsFirstString","lineYs","isTopBound","isBottomBound","getPartialStemLines","drawPositions","tabX","renderStem","addTabGlyph","TextBracketPosition","superscriptElement","showBracket","underlineSuperscript","mainWidth","mainHeight","superY","superWidth","superHeight","lineY","TextDynamics","dynamicRinforzando","sequence","letter","TimeSigNote","LOCATION_TOP","LOCATION_BOTTOM","NESTING_OFFSET","numNotes","some","ratioed","resolveGlyphs","attach","detach","setRatioed","setNotesOccupied","tupletColon","getNestedTupletCount","maxTupletCount","countTuplets","minTupletCount","tupletCount","getYPosition","nestedTupletYOffset","yPosition","modLines","modY","lineCheck","nn","notationStartX","VibratoBracket","bracketData","stopX","Factory","newFromElementId","renderQ","systems","initRenderer","staveSpace","ghostNote","textNote","barNote","clefNote","timeSigNote","keySigNote","hJustify","vJustify","chordSymbol","upperAccidental","lowerAccidental","numMeasures","multiMeasureRest","secondaryBeamBreaks","partialBeamDirections","entries","curve","tie","vibratoBracket","textBracket","system","StaveHairpin","FormatByTicksAndDraw","ppt","pixelsPerTick","leftShiftPx","leftShiftTicks","rightShiftPx","rightShiftTicks","hairpinOptions","setRenderOptions","hairpin","dis","staffHeight","CRESC","DECRESC","SLIDE_UP","SLIDE_DOWN","createSlideUp","createSlideDown","firstFret","lastFret","slideY","Tuning","names","standard","dagdad","dropd","standardBanjo","tuningString","tuningValues","setTuning","noteToInteger","getValueForString","stringNum","getValueForFret","fretNum","stringValue","getNoteForFret","loadFonts","fontNames","fontLoadPromises","setFonts","getFonts","BUILD","VERSION","DATE","INFO","KeyManager","setKey","getKey","scaleMapByValue","originalScaleMapByValue","getAccidental","selectNote","scaleNote","modparts","change","valueNote","originalValueNote","tremolo1","ySpacing","Test","swap","allSettled","SheetMusicRender","containerId","vf","offsetWidth","songData","notesToDraw","currentTimeMillis","timeWindowStart","timeWindowEnd","notesInWindow","midiNoteToVexflowKey","vexDuration","midiDurationToVexflowDuration","isPlaying","vfNote","addAccidental","noteNameOnly","beats","num_beats","beat_value","durationMillis","durationInQuarterNotes","closestDurationCode","minDiff","standardDurationValue","keyData","Render","onResize","setCtxBlur","setupCanvases","sheetMusicRender","overlayRender","debugRender","noteRender","sustainRender","markerRender","inSongTextRender","measureLinesRender","progressBarRender","progressBarCtx","backgroundRender","ctxBG","playerState","showKeyNamesOnPianoWhite","showKeyNamesOnPianoBlack","blurPx","renderInfosByTrackMap","getRenderInfoByTrackMap","inputActiveRenderInfos","getInputActiveRenderInfos","inputPlayedRenderInfos","getInputPlayedRenderInfos","getRenderTime","sheetMusicTime","drawBPM","getNoteRenderInfo","inputRenderInfos","activeInputNote","playedInputNote","noteDims","addStartingOverlayMessage","getBgCanvas","getMainCanvas","getProgressBarCanvas","getForegroundCanvas","cnvBG","cnvForeground","pointerEvents","progressBarCanvas","isNoteDrawn","isOnMainCanvas","setMouseCoords","getTimeFromHeight","onMenuHeightChanged","ZoomUI","fitSongButton","float","ElementHighlight","createTrackDiv","trackObj","getTrack","volumeSlider","muteButton","hideButton","trackName","instrumentName","requireToPlayAlongButton","clickableTitleDiv","trackDiv","borderLeft","currentInstrument","setInterval","btnGrp","volumeSliderInput","volumeSliderLabel","volumeAtMute","colorPickerWhite","colorPickerBlack","FileLoader","loadSongFromURL","loader","method","status","blob","reader","FileReader","theFile","onerror","readAsDataURL","SongUI","songDivs","wrapper","getDivContent","setExampleSongs","jsonSongs","exampleSongJson","songDivObj","songJson","button","but","respone","createUnloadedSongButton","createUnloadedSongDiv","newSongCallback","replaceNowLoadedSongDiv","loadedButtonClickCallback","createLoadedSongButton","div","createLoadedSongDiv","UI","isMobile","matchMedia","songUI","mouseMoved","createControlMenu","getNavBar","clientHeight","exampleSongsJson","fireInitialListeners","onMenuHeightChange","getMinimizeButton","fadingOutMinimizeButton","topGroupsContainer","fileGrp","getFileButtonGroup","songSpeedGrp","getSpeedButtonGroup","songControlGrp","getSongControlButtonGroup","volumeGrp","getVolumneButtonGroup","settingsGrpRight","getSettingsButtonGroup","trackGrp","getTracksButtonGroup","leftTop","middleTop","rightTop","minimizeButton","innerMenuDivsContainer","getTrackMenuDiv","getLoadedSongsDiv","createFileDragArea","navMinimized","marginTop","navbarHeight","getFullscreenButton","getSettingsButton","setOnMenuHeightChange","getTracksButton","getMidiSetupButton","getMainVolumeSlider","getMuteButton","getPlayButton","getPauseButton","getStopButton","getSpeedDiv","getLoadSongButton","getLoadedSongsButton","navBar","settingsButton","settingsShown","hideSettings","showSettings","hideDiv","showDiv","hideAllDialogs","settingsDiv","getSettingsContent","closeButton","fullscreenButton","fullscreen","clickFullscreen","exitFullscreen","requestFullscreen","fullscreenSwitch","onfullscreenchange","loadSongButton","handleFileSelect","loadedSongsButton","loadedSongsShown","hideLoadedSongsDiv","showLoadedSongsDiv","loadedSongsDiv","lastTarget","dragArea","visibility","transition","draggable","dragAreaText","ondrop","handleDragDropFileSelect","ondragenter","preventDefault","ondragleave","ondragover","handleDragOverFile","dataTransfer","kind","file","getAsFile","readFile","evt","speedDiv","getSpeedUpButton","getSpeedDisplayField","getSpeedDownButton","speedUpButton","updateSpeed","speedDisplay","speedDownButton","tracksButton","tracksShown","hideTracks","showTracks","midiSetupButton","midiSetupDialogShown","hideMidiSetupDialog","showMidiSetupDialog","getMidiSetupDialog","getChannelsButton","channelsButton","channelMenuDiv","getChannelMenuDiv","channelsShown","hideChannels","showChannels","mainVolumeSlider","playButton","clickPlay","pauseButton","clickPause","stopButton","clickStop","resetTrackMenuDiv","menuDiv","midiSetupDialog","inputDevicesDiv","outputDevicesDiv","inputDevices","inputTitle","createDeviceDiv","outputDevices","outputTitle","createOutputDeviceDiv","deviceDiv","trackMenuDiv","InputListeners","grabSpeed","delay","addMouseAndTouchListeners","onWheel","addProgressBarMouseListeners","onKeyDown","player","onMouseUp","onMouseDown","passive","onMouseMove","onMouseMoveProgressCanvas","onMouseDownProgressCanvas","alreadyScrolling","wheelDelta","deltaY","evDel","wheel","isFreeplay","grabbedProgressBar","getXYFromMouseEvent","grabbedMainCanvas","lastYGrabbed","yChange","touches","listeners","renderLoop","async","loadStartingSong","overrideMimeType","onreadystatechange","json","readyState","responseText","loadJson"],"sourceRoot":""}